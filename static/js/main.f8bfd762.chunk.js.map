{"version":3,"sources":["components/app/collections.js","components/app/reducer.js","components/app/initstate.js","hooks/useDebounce.js","components/app/context.js","components/earth/wwwxx/www-overrides/SurfaceShape.js","components/earth/wwwxx/www-overrides/DrawContext.js","components/earth/wwwxx/framebuffer/FramebufferTexture.js","components/earth/wwwxx/framebuffer/Framebuffer.js","components/earth/wwwxx/www-overrides/SurfaceShapeTileBuilder.js","components/earth/wwwxx/www-overrides/SurfaceShapeTile.js","components/earth/wwwxx/www-overrides/TiledImageLayer.js","components/earth/wwwxx/textured/libtess.js","components/earth/wwwxx/textured/ScreenColorProgram.js","components/earth/wwwxx/textured/ScreenTextureProgram.js","components/earth/wwwxx/textured/TexturedSurfaceShape.js","components/earth/wwwxx/textured/TexturedSurfacePolygon.js","components/earth/wwwxx/www-overrides/GeoJSONParser.js","components/earth/wwwxx/WorldWindow.js","components/earth/wwwxx/layer/starfield/SunPosition.js","components/earth/wwwxx/layer/starfield/Celestial.js","components/earth/wwwxx/layer/starfield/StarFieldProgram.js","components/earth/wwwxx/layer/starfield/StarFieldLayer.js","components/earth/satConfig.js","components/earth/wwwxx/collada/ColladaScene.js","components/earth/satelliteLayers.js","components/earth/wwwxx/shapes/satellites/Model.js","components/earth/wwwxx/layer/SatelliteModelLayer.js","components/earth/orbitLayers.js","components/earth/wwwxx/shapes/Orbits.js","components/earth/OrbitLayer.js","components/earth/layerConfig.js","components/earth/useEww.js","components/logpanel/LogPanel.js","components/earth/FluidWorldWindowController.js","components/earth/LookAtWidget.js","components/viewproductcontrol/ViewProductControl.js","components/earth/FilterProductControl.js","components/earth/Earth.js","components/controlpanel/ControlPanel.js","components/infopanel/InfoPanel.js","components/mood/Mood.js","components/share/Share.js","components/datasetselector/DatasetSelector.js","components/mapselector/MapSelector.js","containers/ColorSelectorContainer.js","components/optionsselector/OptionsSelector.js","components/collectionlabel/CollectionLabel.js","components/altitudelabel/AltitudeLabel.js","components/searchlabel/SearchLabel.js","components/geoname/GeoName.js","components/datemanager/components/datelabel/DateLabel.js","hooks/useHandleDoubleTap.js","components/datemanager/components/datecontroller/DateController.js","components/datemanager/components/datecontroller/useClock.js","components/datemanager/components/dateselector/DateSelectorScale.js","components/datemanager/components/dateselector/DateSelector.js","components/datemanager/DateManager.js","containers/DateManagerContainer.js","components/searchmanager/dhusToGeojson.js","components/searchmanager/eocatToGeojson.js","components/searchmanager/PRIPToGeojson.js","components/searchmanager/useDatahub.js","components/searchmanager/SearchManager.js","containers/SearchManagerContainer.js","components/productinfo/ProductInfo.js","components/app/App.js","index.js"],"names":["collections","code","satellites","templateUrl","name","logo","type","startIndexOrigin","dateOff","areaOff","windowSize","reducer","state","action","console","log","mapSettings","names","starfield","atmosphere","background","overlay","projection","value","dataset","satelliteList","datasetSatelliteList","constellation","dem","quicklooks","altitude","productOn","pointSearchMaxAltitude","searchMode","resultDesc","resultdesc","geojson","results","tics","clearResultsTrigger","Math","random","totalResults","totalLoaded","closestItem","filter","browseMode","searching","selectedProduct","goToDate","timeRange","getTime","addQuicklookWMSTrigger","length","indexOf","newfilter","attribute","userProperties","earthObservation","acquisitionInformation","acquisitionParameter","relativePassNumber","_sector","goToPos","lat","centroidLatitude","lon","centroidLongitude","alt","searchDate","animated","appColor","viewDate","searchPoint","zoomScale","position","clon","clat","credentials","user","pass","leftHanded","init_date","Date","defaultstate","active","resetStartDateTrigger","moveToClosestItemTrigger","firstItemDate","lastItemDate","useDebounce","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","AppContext","React","createContext","istate","eoi_state","JSON","parse","window","localStorage","getItem","paramindex","location","href","urlparam","substring","history","replaceState","document","title","split","param","JSONCrush","uncrush","decodeURIComponent","initmapsettings","initstate","AppProvider","children","useReducer","dispatch","debouncedstate","setItem","stringify","getsavedstate","Provider","AbstractError","WorldWind","Angle","Location","Logger","NotYetImplementedError","PickedObject","PolygonSplitter","Renderable","Sector","ShapeAttributes","Vec3","MemoryCache","BoundingBox","SurfaceShape","attributes","call","this","_displayName","_attributes","_highlightAttributes","_highlighted","_enabled","_pathType","GREAT_CIRCLE","_maximumNumEdgeIntervals","DEFAULT_NUM_EDGE_INTERVALS","_polarThrottle","DEFAULT_POLAR_THROTTLE","pickDelegate","_sectors","_locations","_boundaries","_interiorGeometry","_outlineGeometry","_isInteriorInhibited","stateKeyInvalid","_attributesStateKey","boundariesArePrepared","layer","pickColor","contours","containsPole","crossesAntiMeridian","expirationInterval","shapeDataCache","currentData","prototype","Object","create","defineProperties","stateKey","get","currentAttributesStateKey","_stateKey","computeStateKey","displayName","set","highlightAttributes","highlighted","enabled","pathType","resetBoundaries","maximumNumEdgeIntervals","polarThrottle","sector","staticStateKey","shape","minLatitude","maxLatitude","minLongitude","maxLongitude","area","globe","terrainConformant","logMessage","LEVEL_SEVERE","computeBoundaries","intersectsFrustum","dc","extent","pickingMode","pickFrustum","frustumInModelCoordinates","isShapeDataCurrent","shapeData","verticalExaggeration","expiryTime","now","createShapeDataObject","resetExpiration","establishCurrentData","entryForKey","globeStateKey","putEntry","isExpired","render","currentLayer","prepareBoundaries","computeExtent","surfaceShapeTileBuilder","insertSurfaceShape","interpolateLocations","locations","prev","idx","len","first","next","isNextFirst","isPrevFirst","countFirst","isInterpolated","latitude","longitude","interpolateEdge","push","start","end","dt","distanceRadians","greatCircleDistance","steps","round","PI","t","throttledStep","interpolateAlongPath","cosLat","cos","DEGREES_TO_RADIANS","weight","newBoundaries","formatBoundaries","normalizeAngles","interpolateBoundaries","contoursInfo","doesCross","splitContours","prepareGeometry","prepareSectors","clear","boundaries","i","polygon","j","lenP","point","normalizedDegreesLongitude","normalizedDegreesLatitude","contour","slice","computeSectors","boxPoints","computeBoundingPoints","setToVec3Points","boxCorners","box","corners","getCorners","computeShiftedLocations","oldLocation","newLocation","newLocations","result","newPos","Position","oldPoint","computePointFromLocation","newPoint","is2D","delta","subtract","add","computePositionFromPoint","delta_lat","delta_long","max","min","new_lat","new_long","determineSectors","sectorsOverAntiMeridian","sectorsNotOverAntiMeridian","polygons","sectors","setToBoundingSector","extremes","greatCircleArcExtremeLocations","eastSector","westSector","lenS","union","interiorPolygons","outlinePolygons","poleIndex","lenC","iMap","pole","poles","NONE","outlineForPole","outlineForSplit","outlinePolygon","pCount","k","intersection","forPole","iCount","resetPickColor","renderToTexture","ctx2D","xScale","yScale","dx","dy","drawInterior","drawOutline","outlineWidth","uniquePickColor","toHexString","draw","fillStyle","interiorColor","toRGBAString","fill","lineWidth","strokeStyle","outlineColor","stroke","po","clone","resolvePick","beginPath","x","y","moveTo","lineTo","DrawContext","pickableObject","userObject","deepPicking","regionPicking","addPickedObject","color","readPickColor","pickPoint","equals","FramebufferTexture","textureId","width","height","imageWidth","imageHeight","size","originalImageWidth","originalImageHeight","creationTime","currentGlContext","bindTexture","TEXTURE_2D","frameStatistics","incrementTextureLoadCount","gl","deleteTexture","Framebuffer","framebufferId","texture","createTexture","framebufferTexture2D","FRAMEBUFFER","COLOR_ATTACHMENT0","createFramebuffer","bindFramebuffer","viewport","clearColor","COLOR_BUFFER_BIT","fbo","canvas","texParameteri","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","texImage2D","RGBA","UNSIGNED_BYTE","ArgumentError","SurfaceShapeTileBuilder","fboCacheKey","buildTiles","surfaceShapes","assembleTiles","__fboBound__","getFbo","unbind","currentFramebuffer","splice","surfaceShapeTiles","clearShapes","addTile","tile","pickSequence","needsUpdate","bind","tileWidth","tileHeight","updateTexture","doRender","savedTiles","savedTopLevelTiles","topLevelTiles","doDeepPickingRender","surfaceTileRenderer","renderTiles","idxTile","lenTiles","idxShape","lenShapes","idxPick","lenPicks","deepPickShapes","objectsAtPickPoint","objects","resolvablePickObjects","setShapes","gpuResourceCache","resourceForKey","putResource","__frameStart__","SurfaceShapeTile","deltaLongitude","deltaLatitude","xOffset","yOffset","asRenderedSurfaceShapeStateKeys","attachTexture","surfaceShapeStateKeys","gpuCacheKey","getCacheKey","TiledImageLayer","retrieveTileImage","suppressRedraw","pendingRequests","MAX_REQUESTS","currentRetrievals","imagePath","some","absentResourceList","isResourceAbsent","resourceUrlForTile","retrievalImageFormat","shift","fetchMoreImages","currentTilesInvalid","before","pendingTile","isTileVisible","url","cache","fetchImage","err","image","removeFromCurrentRetrievals","markResourceAbsent","unmarkResourceAbsent","e","createEvent","initEvent","REDRAW_EVENT_TYPE","dispatchEvent","cb","Image","onload","onerror","Error","crossOrigin","webkit","AndroidApp","src","doRender_","terrain","lasTtMVP","navigatorState","modelviewProjection","lastGlobeStateKey","currentTiles","opacity","surfaceOpacity","incrementImageTileCount","inCurrentFrame","cleanCache","libtess","condition","opt_message","DEBUG","GLU_TESS_WINDING_ODD","GLU_TESS_WINDING_NONZERO","GLU_TESS_WINDING_POSITIVE","GLU_TESS_WINDING_NEGATIVE","GLU_TESS_WINDING_ABS_GEQ_TWO","GL_LINE_LOOP","GL_TRIANGLES","GL_TRIANGLE_STRIP","GL_TRIANGLE_FAN","GLU_TESS_MISSING_BEGIN_POLYGON","GLU_TESS_MISSING_END_POLYGON","GLU_TESS_MISSING_BEGIN_CONTOUR","GLU_TESS_MISSING_END_CONTOUR","GLU_TESS_COORD_TOO_LARGE","GLU_TESS_NEED_COMBINE_CALLBACK","GLU_TESS_BEGIN","GLU_TESS_VERTEX","GLU_TESS_END","GLU_TESS_ERROR","GLU_TESS_EDGE_FLAG","GLU_TESS_COMBINE","GLU_TESS_BEGIN_DATA","GLU_TESS_VERTEX_DATA","GLU_TESS_END_DATA","GLU_TESS_ERROR_DATA","GLU_TESS_EDGE_FLAG_DATA","GLU_TESS_COMBINE_DATA","GLU_TESS_MESH","GLU_TESS_TOLERANCE","GLU_TESS_WINDING_RULE","GLU_TESS_BOUNDARY_ONLY","GLU_INVALID_ENUM","GLU_INVALID_VALUE","geom","vertEq","u","v","s","vertLeq","edgeEval","w","gapL","gapR","edgeSign","transLeq","transEval","transSign","edgeGoesLeft","dst","org","edgeGoesRight","vertL1dist","abs","vertCCW","interpolate_","a","b","edgeIntersect","o1","d1","o2","d2","z1","z2","tmp","mesh","makeEdge","makeEdgePair_","eHead","makeVertex_","vHead","sym","makeFace_","fHead","meshSplice","eOrg","eDst","joiningLoops","joiningVertices","killVertex_","lFace","killFace_","splice_","anEdge","deleteEdge","eDel","eDelSym","rFace","oNext","oPrev","killEdge_","addEdgeVertex","eNew","eNewSym","lNext","splitEdge","winding","connect","zapFace","fZap","eStart","eNext","eSym","fPrev","fNext","meshUnion","mesh1","mesh2","f1","v1","e1","f2","v2","e2","deleteMesh","GluHalfEdge","ePrev","aONext","bONext","eOrig","vNext","vPrev","vNew","GluVertex","fNew","GluFace","inside","vDel","newOrg","fDel","newLFace","normal","S_UNIT_X_","S_UNIT_Y_","projectPolygon","tess","computedNormal","norm","computeNormal_","sUnit","tUnit","longAxis_","TRUE_PROJECT","normalize_","dot_","coords","checkOrientation_","sqrt","maxVal","GLU_TESS_MAX_COORD","minVal","maxVert","minVert","c","index","maxLen2","tNorm","tLen2","f","renderMesh","flagEdges","beginOrBeginDataCalled","edgeState","callBeginOrBeginData","primitiveType","newState","callEdgeFlagOrEdgeFlagData","callVertexOrVertexData","data","callEndOrEndData","renderBoundary","sweep","SENTINEL_COORD_","TOLERANCE_NONZERO_","computeInterior","fatalError","removeDegenerateEdges_","initPriorityQ_","initEdgeDict_","pq","extractMin","minimum","spliceMergeVertices_","sweepEvent_","minRegion","dict","getMin","getKey","event","eUp","doneEdgeDict_","donePriorityQ_","removeDegenerateFaces_","checkMesh","addWinding_","eSrc","edgeLeq_","reg1","reg2","deleteRegion_","reg","fixUpperEdge","activeRegion","deleteNode","nodeUp","fixUpperEdge_","newEdge","topLeftRegion_","regionAbove","regionBelow","topRightRegion_","addRegionBelow_","regAbove","eNewUp","regNew","ActiveRegion","insertBefore","isWindingInside_","n","windingRule","computeWinding_","windingNumber","finishRegion_","finishLeftRegions_","regFirst","regLast","regPrev","lPrev","addRightEdges_","regUp","eFirst","eLast","eTopLeft","cleanUp","firstTime","rPrev","dirty","checkForRightSplice_","walkDirtyRegions_","callCombine_","isect","weights","needed","callCombineOrCombineData","callErrorOrErrorData","errorType","vertexWeights_","weightIndex","t1","t2","i0","i1","getIntersectData_","orgUp","dstUp","orgLo","dstLo","regLo","eLo","remove","pqHandle","checkForLeftSplice_","checkForIntersect_","orgMin","insert","connectRightVertex_","eBottomLeft","degenerate","connectLeftDegenerate_","vEvent","eTopRight","connectLeftVertex_","search","dNext","addSentinel_","sentinel","Dict","eLNext","PriorityQ","init","deleteQ","tessmono","tessellateMonoRegion_","face","up","tempHalfEdge","lo","tessellateInterior","discardExterior","setWindingNumber","keepOnlyBoundary","frame","leq","head_","DictNode","frame_","leq_","deleteDict_","node","key","newNode","getMax","opt_key","opt_nextNode","opt_prevNode","getSuccessor","getPredecessor","CachedVertex","GluTesselator","tessState_","T_DORMANT","lastEdge_","callError_","relTolerance","GLU_TESS_DEFAULT_TOLERANCE","boundaryOnly","callBegin_","callEdgeFlag_","callVertex_","callEnd_","callMesh_","callBeginData_","callEdgeFlagData_","callVertexData_","callEndData_","callErrorData_","callCombineData_","polygonData_","emptyCache","cacheCount","Array","TESS_MAX_CACHE","T_IN_POLYGON","T_IN_CONTOUR","gluDeleteTess","requireState_","gluTessProperty","which","gluEnum","gluGetTessProperty","gluTessNormal","z","gluTessCallback","opt_fn","fn","gluTessVertex","tooLarge","clamped","emptyCache_","cacheVertex_","addVertex_","gluTessBeginPolygon","gluTessBeginContour","gluTessEndContour","gluTessEndPolygon","makeDormant_","gotoState_","GluMesh","flag","interpData","undefined","errno","opt_nextFace","opt_prevFace","opt_nextEdge","dPrev","rNext","eHeadSym","opt_nextVertex","opt_prevVertex","PQHandleElem","realloc","oldArray","newArray","PQNode","handle","keys_","PQKeyRealloc_","INIT_SIZE_","order_","size_","max_","initialized_","heap_","PriorityQHeap","deleteHeap","keys","comparator","sort","r","keyNew","curr","keyLessThan_","keyX","keyY","keyGreaterThan_","sortMin","isEmpty","heapMin","isEmpty_","nodes_","handles_","freeList_","floatDown_","free","floatUp_","h","hMin","hCurr","child","hChild","parent","hParent","ScreenColorProgram","resolutionLocation","uniformLocation","colorLocation","localCache","resolution","g","uniform2f","cacheColor","red","green","blue","alpha","uniform4f","GpuProgram","ScreenTextureProgram","texUnitLocation","textureUnit","unit","uniform1i","TEXTURE0","Texture","WGS84_SEMI_MAJOR_AXIS","TexturedSurfaceShape","_image","_imageUUID","_interiorVboCacheKey","_outlineVboCacheKey","_contoursPrepered","_contoursInfo","_id","nextId","img","interiorGeometry","mapGeometry","wo","windingOrder_all","points","pop","renderColor","anglesMap","topLeftIndex","uvs","computeUvs","tessGeom","tessellate_p1","tessIndices","px","py","iboData","Uint16Array","floor","vboData","Float32Array","renderTexture","tessellate","tessTris","program","findAndBindProgram","loadResolution","enableVertexAttribArray","loadColor","RADIANS_TO_DEGREES","bindInteriorVbo","vertexAttribPointer","FLOAT","frontFace","CW","drawArrays","TRIANGLES","CCW","loadTextureUnit","imageTextureKey","error","imageTexture","bindInteriorIbo","valuesPerVertex","drawElements","UNSIGNED_SHORT","disableVertexAttribArray","locations1","side","uv","nextSide","sideStart","sideEnd","jIndex","sideDistance","distance","map","reduce","acc","vboUsage","STATIC_DRAW","generateCacheKey","bindVbo","cacheKey","vbo","vboEntry","entries","vboSize","BYTES_PER_ELEMENT","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","bufferSubData","iboUsage","_interiorIboCacheKey","bindIbo","ibo","iboSize","ELEMENT_ARRAY_BUFFER","tesselator","triangles","prim","newCoords","tris","vertex","pos","bbox","minX","Number","MAX_SAFE_INTEGER","maxX","MIN_SAFE_INTEGER","minY","maxY","angles","prevX","prevY","currentX","currentY","nextX","nextY","angle","atan2","p0","el","p1","p2","p3","findWhichCorners","findIndex","userProps","identifier","id","cornerLocations","c0","c1","newCorners","corner","reindexCorners","isEqualPoints","getBbox","getSlope","list","sum","p1x","p1y","_nextId","TexturedSurfacePolygon","isArray","removeDuplicateLocations","isPrepared","removeDuplicateLocationsFromContour","loc","loc2","GeoJSONParser","GeoJSONConstants","RenderableLayer","addRenderablesForPolygon","geometry","properties","configuration","shapeConfigurationCallback","crs","isCRSSupported","pBoundaries","boundariesIndex","coordinates","positions","positionIndex","reprojectedCoordinate","getReprojectedIfRequired","addRenderable","load","parserCompletionCallback","_parserCompletionCallback","_shapeConfigurationCallback","_layer","dataSourceType","dataSource","obj","tryParseJSONString","requestUrl","addRenderablesForMultiPolygon","polygonsIndex","ArcBallCamera","BasicWorldWindowController","EarthElevationModel","FrameStatistics","Frustum","Globe","GoToAnimator","Globe2D","Line","GpuResourceCache","Matrix","LookAtNavigator","Navigator","PickedObjectList","Rectangle","Vec2","Terrain","WWMath","WorldWindow","canvasElem","elevationModel","controllerConstructor","cameraConstructor","WebGLRenderingContext","HTMLCanvasElement","getElementById","preventDefaultListener","preventDefault","drawContext","eventListeners","redrawRequested","redrawRequestId","scratchModelview","fromIdentity","scratchProjection","hasStencilBuffer","getContextAttributes","stencil","depthBits","getParameter","DEPTH_BITS","drawingBufferWidth","drawingBufferHeight","layers","navigator","subsurfaceMode","goToAnimator","_redrawCallbacks","_orderedRenderingFilters","thisWindow","declutter","pixelScale","addEventListener","handleRedrawEvent","handleContextLost","handleContextRestored","animationFrameLoop","getBoundingClientRect","xc","left","clientLeft","yc","top","clientTop","listener","thisWorldWindow","entry","listeners","callback","worldWindow","removeEventListener","isContextLost","resize","resetDrawContext","pickRay","rayThroughScreenPoint","drawFrame","pickTerrainOnly","rectangle","pickRectangle","glAttrs","antialias","getContext","LEVEL_INFO","statusMessage","contextLost","cancelAnimationFrame","contextRestored","redraw","redrawIfNeeded","requestAnimationFrame","previousRedrawTimestamp","timestamp","callRedrawCallbacks","BEFORE_REDRAW","toString","AFTER_REDRAW","clientWidth","clientHeight","modelview","camera","createViewMatrix","setToIdentity","globeRadius","equatorialRadius","polarRadius","eyePoint","extractEyePoint","eyePos","eyeHorizon","horizonDistanceForGlobeRadius","atmosphereHorizon","farDistance","nearDistance","perspectiveNearDistanceForFarDistance","distanceToSurface","elevationAtLocation","maxNearDistance","perspectiveNearDistance","setToPerspectiveProjection","projectionInv","invertMatrix","nbl","ntr","fbl","ftr","multiplyByMatrix","nrRectWidth","fabs","frRectWidth","nrDistance","frustumWidthScale","frustumWidthOffset","pixelSizeFactor","pixelSizeOffset","computeViewingTransform","pixelMetrics","computePixelMetrics","setToMultiply","modelviewInv","invertOrthonormalMatrix","modelviewNormalTransform","setToTransposeOfMatrix","upper3By3","modelviewTranspose","fromProjectionMatrix","transformByMatrix","normalize","offset","reset","screenCreditController","computeDrawContext","update","beginFrame","continuous","do2DContiguousRepaint","doNormalRepaint","endFrame","createTerrain","clearFrame","deferOrderedRendering","makePickFrustum","doPick","doDraw","redrawSurface","drawScreenRenderables","createTerrain2DContiguous","pick2DContiguous","draw2DContiguous","resolveTerrainPick","resolveRegionPick","resolveTopPick","enable","BLEND","CULL_FACE","DEPTH_TEST","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","depthFunc","LEQUAL","makePickFramebuffer","pickFramebuffer","disable","ZERO","LESS","bindProgram","DEPTH_BUFFER_BIT","renderShapes","STENCIL_TEST","drawLayers","drawSurfaceRenderables","STENCIL_BUFFER_BIT","stencilFunc","ALWAYS","stencilOp","REPLACE","drawOrderedRenderables","EQUAL","KEEP","pick","tessellator","setTerrainTileCount","surfaceGeometry","terrainLeft","terrainCenter","terrainRight","makeCurrent","accumulateOrderedRenderables","beginTime","layerRenderingTime","indexOfLayer","sr","reverseSurfaceRenderables","popSurfaceRenderable","renderSurface","LEVEL_WARNING","message","or","sortOrderedRenderables","orderedRenderingMode","popOrderedRenderable","renderOrdered","orderedRenderingTime","nextScreenRenderable","pickedObjects","topObject","terrainObject","isTerrain","isOnTop","uniquePickColors","readPickColors","toByteString","stage","completionCallback","goTo","groupId","declutterables","orderedRenderables","orderedRenderable","declutterGroup","rects","declutterable","screenBounds","intersectsRectangles","targetVisibility","screenPoint","nearPoint","farPoint","modelviewProjectionInv","unProject","origin","direction","SunPosition","getAsGeographicLocation","date","celestialLocation","getAsCelestialLocation","celestialToGeographic","numDays","computeJulianDate","meanLongitude","normalizeAngle360","meanAnomaly","eclipticLongitude","sin","eclipticLongitudeRad","obliquityOfTheEcliptic","declination","asin","rightAscension","atan","tan","GMST","GHA","year","getUTCFullYear","month","getUTCMonth","day","getUTCDate","dayFraction","getUTCHours","getUTCMinutes","getUTCSeconds","A","trunc","B","degrees","Celestial","SUN","MERCURY","VENUS","MARS","JUPITER","SATURN","URANUS","NEPTUNE","getCelestialLocation","orbitalElements","d","computeSun","computeMercury","computeVenus","computeMars","computeJupiter","computeSaturn","computeUranus","computeNeptune","computePosition","N","M","E","aa","E1","xv","yv","xh","yh","zh","lon_corr","lonecl","latecl","getLonSun","lonsun","rsun","xg","yg","zg","ecl","xe","ye","ze","ra","dec","Color","StarFieldProgram","FRAG_MODE_MIX_COLOR","FRAG_MODE_TEXTURE","FRAG_MODE_COLOR","vertexPointLocation","attributeLocation","mvpMatrixLocation","numDaysLocation","magnitudeRangeLocation","textureUnitLocation","fragModeLocation","localState","mvpMatrix","magnitudeRange","fragMode","matrix","forceLoad","loadUniformMatrix","copy","uniform1f","minMag","maxMag","mode","loadUniformColor","Layer","StarFieldLayer","starDataSource","pickEnabled","sunSize","showSun","_starDataSource","baseUrl","_sunImageSource","_matrix","_starsPositionsVboCacheKey","_numStars","_starData","_minMagnitude","MAX_VALUE","_maxMagnitude","MIN_VALUE","_loadStarted","_minScale","_scale","pow","_sunPositionsCacheKey","_sunBufferView","_MAX_GL_POINT_SIZE","showPlanets","jupiterSize","planets","_planetsBufferView","_cacheKeys","sunPosition","planetPositions","starPositions","invalidateStarData","haveResources","beginRendering","endRendering","loadResources","sunTexture","planetTextures","every","planet","fetchStarData","retrieveTexture","forEach","depthMask","loadCommonUniforms","renderStars","renderSun","renderPlanets","currentProgram","mvp","multiplyByScale","loadModelviewProjection","julianDate","time","loadNumDays","vboId","createStarsGeometry","incrementVboLoadCount","loadMagnitudeRange","loadFragMode","POINTS","ALIASED_POINT_SIZE_RANGE","_planetsPositionsVboCacheKey","DYNAMIC_DRAW","textureSrc","sunCelestialLocation","self","xhr","XMLHttpRequest","status","response","sendRedrawRequest","statusText","ontimeout","open","send","indexes","parseStarsMetadata","metadata","raIndex","decIndex","magIndex","starInfo","magnitude","pointSize","starMetaInfo","satConfig","shortName","satIndex","swathTypes","swathColors","colorFromKmlHex","swatModes","tleLineOne","tleLineTwo","hasModel","filePath","rotations","headingAxis","headingAdd","headingMultiply","preRotations","scale","translations","ignoreLocalTransforms","launchDate","retirementDate","groundPosition","BasicTextureProgram","ColladaScene","sceneData","_position","_nodes","_meshes","_materials","_images","_upAxis","_dirPath","_xRotation","_yRotation","_zRotation","preX","preY","preZ","_xTranslation","_yTranslation","_zTranslation","_altitudeMode","ABSOLUTE","_localTransforms","_useTexturePaths","_nodesToHide","_hideNodes","_placePoint","_transformationMatrix","_mvpMatrix","_normalTransformMatrix","_normalMatrix","_texCoordMatrix","setToUnitYFlip","_entities","_activeTexture","_tmpVector","_tmpColor","_vboCacheKey","_iboCacheKey","setSceneData","constructor","nodes","meshes","materials","images","upAxis","dirPath","xRotation","yRotation","zRotation","xTranslation","yTranslation","zTranslation","placePoint","altitudeMode","transformationMatrix","normalMatrix","localTransforms","useTexturePaths","nodesToHide","hideNodes","root","up_axis","flattenModel","nodesLen","flattenNode","va","imageKey","vb","meshKey","buffers","bufLen","materialBuf","material","symbol","materialKey","textures","diffuse","mapId","reflective","orderedScene","frustum","lastFrameTime","makeOrderedRenderable","containsPoint","addOrderedRenderable","surfacePointForMode","eyeDistance","distanceTo","drawOrderedScene","beginDrawing","endDrawing","iboId","setupBuffers","computeTransformationMatrix","mustRenderNode","sizeOfFloat32","sizeOfUint16","sizeOfUint32","Uint32Array","is32BitIndices","numIndices","numVertices","indexedRendering","indices","vertices","normals","vertexOffset","uvOffset","normalOffset","uIntExt","indexSize","indexBufferSize","getExtension","indexOffset","entity","nodeWorldMatrix","worldMatrix","nodeNormalMatrix","hasLighting","applyColor","path","filename","textureCacheKey","wrapMode","isClamp","REPEAT","loadTextureEnabled","loadModulateColor","loadApplyLighting","applyMatrix","indexOffsetBytes","UNSIGNED_INT","techniqueType","loadOpacity","hasTexture","multiplyMatrix","loadModelviewInverse","loadTextureMatrix","multiplyByLocalCoordinateTransform","multiplyByRotation","multiplyByTranslation","computeNormalMatrix","extractRotationAngles","nodeId","satend","Model","model","satellite","_satellite","satelliteModel","_model","modelData","satShortName","jsonData","hasOwnProperty","eVertices","eNormals","eUvs","eIndices","info","EoUtils","WorldWindX","DEFAULT_MODEL_OPTIONS","SatelliteModelLayer","options","satelliteOptions","_satelliteOptions","_rerenderMap","Tle","heading","onLayerChanged","removeAllRenderables","doRerender","satrec","computeSatrec","getOrbitPosition","setPosition","alignWithOrbit","currentPosition","nextPosition","headingRad","headingAngleRadians","rad2deg","satKey","satName","layerKey","rerenderer","wwx","satelliteLayers","satstart","setUTCFullYear","fetch","then","json","satelliteData","setModel","setTle","WordWindX","Path","Orbits","startTime","endTime","orbitPoints","_satrec","_orbitPoints","_trail","trail","trailAttributes","_currentEndTime","_previousEndTime","_currentStartTime","_previousStartTime","populate","satelliteRecord","preventPopulate","preventUpdate","force","startDate","previousStartTime","previousTime","changeStart","endDate","previousEndTime","changeEnd","timeWindow","tick","positionsToReplace","ceil","getOrbitPositionWithPositionalData","numSubSegments","OrbitLayer","satRec","isFinite","_beforeCurrentOrbit","_afterCurrentOrbit","currentTime","selectTime","setSatRec","setTime","removeRenderable","wwwx","orbitLayers","bgLayers","service","layerNames","numLevels","format","FULL_SPHERE","levelZeroDelta","ovLayers","useEww","TRAIL_QUICKLOOKWMS","ProductTrail","useRef","QLTrail","ProductHead","eww","ewwstate","setEwwState","bg","ov","modelOn","satList","atm","star","na","ge","qu","qw","proj","s2lut","lastepoch","toggleAtmosphere","bool","la","getLayerByName","current","toggleModel","enableSatelliteLayers","enableOrbitLayers","toggleStarfield","ls","toggleNames","sortLayers","toggleBg","bgindex","toggleOv","ovindex","toggleDem","ElevationModel","addCoverage","TiledElevationCoverage","coverageSector","minElevation","maxElevation","urlBuilder","WcsTileUrlBuilder","toggleProjection","supportedProjections","nbproj","ProjectionWgs84","ProjectionEquirectangular","ProjectionMercator","ProjectionPolarEquidistant","zIndex","addQuicklookWMS","renderable","layername","wmsConfigQL","removeQuicklookWMS","qllayer","WmsLayer","toJSON","timerange","maxActiveAltitude","addLayer","removeLayer","getIndexOfRenderable","renderables","epoch","satlist","l","includes","getTics","newtics","filtered","acquisitionStartTime","filterRenderable","test","enableRenderables","head","closestrenderableindex","lastdistance","controller","flipImage","srcBase64","createElement","ctx","transform","drawImage","toDataURL","getS2LUT","ok","text","templut","lut","extract","footprint","getPolygonbyS2tile","coordlist","coord","multiboundaries","createQL","quicklookLayer","createImage","Promise","resolve","reject","base64src","imageOfQuickLook","abortcontroller","AbortController","toUTCString","signal","headers","btoa","blob","objectURL","URL","createObjectURL","quicklook","revokeObjectURL","addQuicklooks","abortsignal","add1Quicklook","quicklookUrl","productInformation","highestlat","closestrenderable","closestRenderable","travelTime","range","applyLimits","setGlobeStates","wwd","lookAtLocation","al","vp","bl","tr","view","pickTerrain","canvasCoordinates","getViewPolygon","vpp","toFixed","viewpolygon","viewpoint","removeAllCoverages","redrawCallbacks","starFieldLayer","atmosphereLayer","AtmosphereLayer","initMap","removeGeojson","addGeojson","productlayer","acq","acquisitionStopTime","setProductTimeRange","placemarkAttributes","PlacemarkAttributes","imageScale","imageColor","labelAttributes","Offset","OFFSET_FRACTION","isPointType","isMultiPointType","isLineStringType","isMultiLineStringType","isPolygonType","isMultiPolygonType","toggleGeojson","lp","getRenderables","pickList","pickedItems","parentLayer","toggleQuicklookWMS","ql","removeQuicklooks","abort","addQuicklook","prodlayer","abortAddQuicklooks","abortController","toggleQuicklooks","setFilter","northUp","headingIncrement","runOperation","setMode","setColor","colorFromHex","products","LogPanel","FluidWorldWindowController","memo","world","onSimpleClick","controllerRef","lastTap","doubleTap","longclickdetected","button","clicktimeout","dragtimeout","gesturestartposition","dragenabled","rotationmode","pinchmode","debugtext","useSpring","api","bind2","useDrag","div","style","className","useGesture","onDrag","xy","vxvy","previous","down","initial","movement","velocity","tap","scrolling","touches","pinching","positionAtPickPoint","timeStamp","handleSimpleClick","handleLongClick","zoomspring","stop","pinchzoomspring","pinchrotatespring","pinchtiltspring","handlepan2d","handlepan3d","handlezoom","handletilt","onDragend","onWheel","wheeling","clientX","clientY","onPinchStart","panspring","pinchzoomrotatespring","onPinch","da","vdva","elapsedTime","lastY","handlepinch","onPinchEnd","domTarget","drag","useTouch","pinch","eventOptions","passive","handlepinchtilt","handlezoomrotate","pinchtiltvalue","sub","immediate","config","mass","tension","friction","onChange","tiltfactor","tilt","pinchzoomrotatevalue","zenabler","tenabler","molasses","rangefactor","moveZoom","pinchzoomvalue","pinchrotatevalue","tiltvalue","tiltspring","dorotation","to","tiltoffset","headingoffset","panvalue","enabler","correction","lookatxy","nextlookatxy","currentposition","nextposition","currentpoint","nextpoint","computePointFromPosition","viewMatrix","ray","extractForwardVector","intersectsLine","params","extractViewingParameters","roll","onRest","positionAtPickPoint2","rotationVector","rotationAngle","computeRotationVectorAndAngle","rotateShpere","refposition","amount","lookatAltitude","lookAtPosition","interpolateGreatCircle","intersectpoint","pickedObject","pickedPosition","vec1","vec2","MeasurerUtils","angleBetweenVectors","cross","scratchRay","nav","clamp","ref","LookAtWidget","display","icon","focusIcon","ViewProductControl","useContext","handleClick","useCallback","stopPropagation","outlineRemoveRedEye","onClick","FilterProductControl","setfilter","outlineFilterAlt","baselineFilterAlt","Earth","debouncedclosestItem","useKey","selection","pageX","pageY","ControlPanel","props","setOpen","mask","setMask","panelcontrol","mr","onDragStart","onDragEnd","bottom","baselinePalette","InfoPanel","Mood","mood","setmood","defmood","setdefmood","Share","newloc","savedstate","encodeURIComponent","crush","share","outlineIosShare","DatasetSelector","coll","MapSelector","draggable","ColorSelectorContainer","documentElement","setProperty","OptionsSelector","checked","flexgrow","CollectionLabel","AltitudeLabel","SearchLabel","GeoName","DateLabel","highlight","handleLabelClick","dateFormat","toUpperCase","useHandleDoubleTap","tapCallback","doubleTapCallback","setLasttap","handleTap","DateController","startdate","onDateChange","onStateChange","lefthanded","initdate","setDate","speed","setSpeed","playing","setplaying","step","refreshrate","ldate","intervalRef","timeoutRef","setInterval","clearInterval","forceDate","newdate","togglePause","increaseSpeed","decreaseSpeed","useClock","roundPause","roundPlayArrow","roundFastRewind","roundFastForward","DateSelectorScale","zoomfactor","resulttics","timescale","setTimescale","izoom","idate","itics","scaleText","_start","_zoom","_resulttics","font","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","clearRect","innerWidth","innerHeight","monthcode","pad","number","str","lefthand","classname","hour","minute","lastday","lastmonth","lastyear","lasthour","lastminute","lastticslength","labeloffset","offsetHeight","refdate","class","label","lastticpos","ticpos","fillText","offsetWidth","item","handleResize","fontSize","DateSelector","resetToStartDateTrigger","gotoscalezoom","onFinalDateChange","onStepChange","MAXZOOM","MINZOOM","DEFZOOM","lastZoom","setZoomfactor","selector","scaledate","setScaledate","isActive","setStep","stepLabel","setStepLabel","lastTapdate","startingdate","discreetdate","posy_wheel","setyOnWheel","zoom","springzoom","springtest","ctrlKey","shiftKey","precision","newzoom","nbstep","setUTCMonth","detectDoubleTap","handleZoom","adate","xy2","sety2","moveToDate","fromtime","deltaoffset","from","duration","DateManager","resetstartdatetrigger","selectorStartdate","setselectorStartdate","labeldate","setLabelDate","scalezoom","setscalezoom","dateLabelHighlight","setDateLabelHighlight","handleSelectorDateChange","handleSelectorFinalDateChange","handleControllerDateChange","handleSelectorStepChange","DateManagerContainer","settics","setstartdate","handleFinalDate","finaldate","handleDateChanged","handleStateChange","dhusToGeojson","gmlToWkt","gmlfootprint","coordarray","replaceAll","wkt","mapFromHubOpenSearch","reshuffle","array","content","hubItem","assign","int","double","sizeInBytes","sizeArray","parseFloat","wellknown","updated","ingestiondate","uuid","beginposition","endposition","downloadUrl","link","parentIdentifier","platform","platformShortName","platformname","platformSerialIdentifier","platformserialidentifier","sensor","instrument","instrumentshortname","operationalMode","sensoroperationalmode","parseInt","relativeorbitnumber","orbitNumber","orbitnumber","startTimeFromAscendingNode","stopTimeFromAscendingNode","orbitDirection","orbitdirection","productType","producttype","tileid","features","feed","startIndex","itemsPerPage","eocatToGeojson","downloadurl","quicklookurl","EarthObservation","metaDataProperty","EarthObservationMetaData","procedure","EarthObservationEquipment","Platform","Instrument","Sensor","phenomenonTime","TimePeriod","beginPosition","endPosition","acquisitionParameters","Acquisition","PRIPToGeojson","it","Footprint","Id","PublicationDate","Name","ContentDate","Start","End","ContentLength","useDatahub","geojsonResults","setGeojsonResults","loading","setLoading","setStatus","getcollection","fetchURL","coll_type","newurl","replace","paging","totalresults","startindex","itemsperpage","oauth2","OAuth2","grantType","clientId","userName","password","clientSecret","tokenEndpoint","alert","geoJson","searchdate","searchpoint","enddate","target","julianstart","buildUrl","SearchManager","searchmode","onSearchStart","onPageSearch","onSearchComplete","on401","setsearching","searchtrigger","setsearchtrigger","firstresultdate","lastresultdate","totalloaded","setparam","firstitemdate","lastitemdate","firstResultDate","lastResultDate","sd","sp","outlineRefresh","SearchManagerContainer","debouncedsearchPoint","debouncedaltitude","handlePageSearch","handleSearchStart","handleSearchComplete","searchDesc","handleCredentials","prompt","ProductInfo","App","container","toggle","useFullscreen","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.f8bfd762.chunk.js","sourcesContent":["export const collections = [\n    {\n        code: \"S1\",\n        satellites: ['s1a','s1b'],\n        templateUrl: 'https://scihub.copernicus.eu/dhus/search?q=( footprint:\"Intersects({polygon})\" AND beginposition:[{start} TO {end}] AND platformname:Sentinel-1 AND producttype:GRD)&start={startindex}&rows=100&orderby=beginposition desc&format=json',\n        name: 'Sentinel-1 GRD' ,\n        logo: './images/s1_black.png',\n        type: 'DHUS',\n        startIndexOrigin: 0,\n        dateOff: \" beginposition:[{start} TO {end}] AND\",\n        areaOff: ' footprint:\"Intersects({polygon})\" AND',\n        windowSize: 1000 * 60 * 60 * 18 \n    },\n    {\n        code: 'S1A',\n        satellites: ['s1a'],\n        templateUrl: 'https://scihub.copernicus.eu/dhus/search?q=( footprint:\"Intersects({polygon})\" AND beginposition:[{start} TO {end}] AND platformname:Sentinel-1 AND filename:S1A* AND producttype:GRD)&start={startindex}&rows=100&orderby=beginposition desc&format=json',\n        name: 'Sentinel-1A GRD' ,\n        logo: './images/s1_black.png',\n        type: 'DHUS',\n        startIndexOrigin: 0,\n        dateOff: ' beginposition:[{start} TO {end}] AND',\n        areaOff:  ' footprint:\"Intersects({polygon})\" AND',\n        windowSize: 1000 * 60 * 60 * 18 \n    },\n    {\n        code: 'S1B',\n        satellites: ['s1b'],\n        templateUrl: 'https://scihub.copernicus.eu/dhus/search?q=( footprint:\"Intersects({polygon})\" AND beginposition:[{start} TO {end}] AND platformname:Sentinel-1 AND filename:S1B* AND producttype:GRD)&start={startindex}&rows=100&orderby=beginposition desc&format=json',\n        name: 'Sentinel-1B GRD' ,\n        logo: './images/s1_black.png',\n        type: 'DHUS',\n        startIndexOrigin: 0,\n        dateOff: ' beginposition:[{start} TO {end}] AND',\n        areaOff:  ' footprint:\"Intersects({polygon})\" AND',\n        windowSize: 1000 * 60 * 60 * 18 \n    },\n    {\n        code: 'S2',\n        satellites: ['s2a','s2b'],\n        templateUrl: 'https://scihub.copernicus.eu/dhus/search?q=( footprint:\"Intersects({polygon})\" AND beginposition:[{start} TO {end}] AND platformname:Sentinel-2 AND filename:*MSIL1C*)&start={startindex}&rows=100&orderby=beginposition desc&format=json',\n        name: 'Sentinel-2 A/B Level 1C',\n        logo: './images/s2_black.png',\n        type: 'DHUS',\n        startIndexOrigin: 0,\n        dateOff: ' beginposition:[{start} TO {end}] AND',\n        areaOff:  ' footprint:\"Intersects({polygon})\" AND',\n        windowSize: 1000 * 60 * 60 *3\n    },\n    {\n        code: 'S2A',\n        satellites: ['s2a'],\n        templateUrl: 'https://scihub.copernicus.eu/dhus/search?q=( footprint:\"Intersects({polygon})\" AND beginposition:[{start} TO {end}] AND platformname:Sentinel-2 AND filename:S2A_MSIL1C*)&start={startindex}&rows=100&orderby=beginposition desc&format=json',\n        name: 'Sentinel-2 A/B Level 1C',\n        logo: './images/s2_black.png',\n        type: 'DHUS',\n        startIndexOrigin: 0,\n        dateOff: ' beginposition:[{start} TO {end}] AND',\n        areaOff:  ' footprint:\"Intersects({polygon})\" AND',\n        windowSize: 1000 * 60 * 60 * 3\n    },\n    {\n        code: 'S2B',\n        satellites: ['s2b'],\n        templateUrl: 'https://scihub.copernicus.eu/dhus/search?q=( footprint:\"Intersects({polygon})\" AND beginposition:[{start} TO {end}] AND platformname:Sentinel-2 AND filename:S2B_MSIL1C*)&start={startindex}&rows=100&orderby=beginposition desc&format=json',\n        name: 'Sentinel-2 A/B Level 1C',\n        logo: './images/s2_black.png',\n        type: 'DHUS',\n        startIndexOrigin: 0,\n        dateOff: ' beginposition:[{start} TO {end}] AND',\n        areaOff:  ' footprint:\"Intersects({polygon})\" AND',\n        windowSize: 1000 * 60 * 60 * 3\n    },\n    {\n        code: 'S3',\n        satellites: ['s3a','s3b'],\n        templateUrl: 'https://scihub.copernicus.eu/dhus/search?q=( footprint:\"Intersects({polygon})\" AND beginposition:[{start} TO {end}] AND platformname:Sentinel-3 AND (producttype:OL_1_LFR___ OR producttype:SL_1_RBT___ OR producttype:SR_1_SRA___))&start={startindex}&rows=100&orderby=beginposition desc&format=json',\n        name: 'Sentinel-3 A/B, OLCI/SLSTR/SRAL' ,\n        logo: './images/s3_black.png',\n        type: 'DHUS',\n        startIndexOrigin: 0,\n        dateOff: ' beginposition:[{start} TO {end}] AND',\n        areaOff:  ' footprint:\"Intersects({polygon})\" AND',\n        windowSize: 1000 * 60 * 60 * 24\n    },\n    {\n        code: 'S3A/OLCI/LFR',\n        satellites: ['s3a'],\n        templateUrl: 'https://scihub.copernicus.eu/dhus/search?q=( footprint:\"Intersects({polygon})\" AND beginposition:[{start} TO {end}] AND platformname:Sentinel-3 AND filename:S3A_*  AND (producttype:OL_2_LFR___))&start={startindex}&rows=100&orderby=beginposition desc&format=json',\n        name: 'Sentinel-3 A, OLCI/LFR' ,\n        logo: './images/s3_black.png',\n        type: 'DHUS',\n        startIndexOrigin: 0,\n        dateOff: ' beginposition:[{start} TO {end}] AND',\n        areaOff:  ' footprint:\"Intersects({polygon})\" AND',\n        windowSize: 1000 * 60 * 60 * 24\n    },\n    {\n        code: 'S3B/OLCI/LFR',\n        satellites: ['s3b'],\n        templateUrl: 'https://scihub.copernicus.eu/dhus/search?q=( footprint:\"Intersects({polygon})\" AND beginposition:[{start} TO {end}] AND platformname:Sentinel-3 AND filename:S3B_* AND (producttype:OL_2_LFR___))&start={startindex}&rows=100&orderby=beginposition desc&format=json',\n        name: 'Sentinel-3 B, OLCI/LFR' ,\n        logo: './images/s3_black.png',\n        type: 'DHUS',\n        startIndexOrigin: 0,\n        dateOff: ' beginposition:[{start} TO {end}] AND',\n        areaOff:  ' footprint:\"Intersects({polygon})\" AND',\n        windowSize: 1000 * 60 * 60 * 24\n    },\n    {\n        code: 'S3A/OLCI/RBT',\n        satellites: ['s3a'],\n        templateUrl: 'https://scihub.copernicus.eu/dhus/search?q=( footprint:\"Intersects({polygon})\" AND beginposition:[{start} TO {end}] AND platformname:Sentinel-3 AND filename:S3A_*  AND (producttype:SL_1_RBT___))&start={startindex}&rows=100&orderby=beginposition desc&format=json',\n        name: 'Sentinel-3 A, OLCI/RBT' ,\n        logo: './images/s3_black.png',\n        type: 'DHUS',\n        startIndexOrigin: 0,\n        dateOff: ' beginposition:[{start} TO {end}] AND',\n        areaOff:  ' footprint:\"Intersects({polygon})\" AND',\n        windowSize: 1000 * 60 * 60 * 24\n    },\n    {\n        code: 'S3B/SLSTR/RBT',\n        satellites: ['s3b'],\n        templateUrl: 'https://scihub.copernicus.eu/dhus/search?q=( footprint:\"Intersects({polygon})\" AND beginposition:[{start} TO {end}] AND platformname:Sentinel-3 AND filename:S3B_* AND (producttype:SL_1_RBT___))&start={startindex}&rows=100&orderby=beginposition desc&format=json',\n        name: 'Sentinel-3 B, SLSTR/RBT' ,\n        logo: './images/s3_black.png',\n        type: 'DHUS',\n        startIndexOrigin: 0,\n        dateOff: ' beginposition:[{start} TO {end}] AND',\n        areaOff:  ' footprint:\"Intersects({polygon})\" AND',\n        windowSize: 1000 * 60 * 60 * 24\n    },\n    {\n        code: 'S3/SLSTR',\n        satellites: ['s3a','s3b'],\n        templateUrl: 'https://scihub.copernicus.eu/dhus/search?q=( footprint:\"Intersects({polygon})\" AND beginposition:[{start} TO {end}] AND platformname:Sentinel-3 AND (producttype:SL_1_RBT___))&start={startindex}&rows=100&orderby=beginposition desc&format=json',\n        name: 'Sentinel-3 A/B, SLSTR' ,\n        logo: './images/s3_black.png',\n        type: 'DHUS',\n        startIndexOrigin: 0,\n        dateOff: ' beginposition:[{start} TO {end}] AND',\n        areaOff:  ' footprint:\"Intersects({polygon})\" AND',\n        windowSize: 1000 * 60 * 60 * 24\n    },\n    {\n        code: 'S3/SRAL',\n        templateUrl: 'https://scihub.copernicus.eu/dhus/search?q=( footprint:\"Intersects({polygon})\" AND beginposition:[{start} TO {end}] AND platformname:Sentinel-3 AND (producttype:SR_1_SRA___))&start={startindex}&rows=100&orderby=beginposition desc&format=json',\n        satellites: ['s3a','s3b'],\n        name: 'Sentinel-3 A/B, SRAL' ,\n        logo: './images/s3_black.png',\n        type: 'DHUS',\n        startIndexOrigin: 0,\n        dateOff: ' beginposition:[{start} TO {end}] AND',\n        areaOff:  ' footprint:\"Intersects({polygon})\" AND',\n        windowSize: 1000 * 60 * 60 * 24\n    },\n    {\n        code: 'S5P',\n        satellites: ['s5p'],\n        templateUrl: 'https://scihub.copernicus.eu/dhus/search?q=( footprint:\"Intersects({polygon})\" AND beginposition:[{start} TO {end}] AND platformname:Sentinel-5 precursor AND (producttype:L1B_RA_BD1 OR (producttype:L2__NO2___ AND processingmode:Near real time)))&start={startindex}&rows=100&orderby=beginposition desc&format=json',\n        name: 'S5P',\n        logo: './images/s5p_black.png',\n        type: 'DHUS',\n        startIndexOrigin: 0,\n        dateOff: ' beginposition:[{start} TO {end}] AND',\n        areaOff:  ' footprint:\"Intersects({polygon})\" AND',\n        windowSize: 1000 * 60 * 60 * 24 \n    },\n    {\n        code: 'ENVISAT/MERIS/FRS',\n        satellites: ['env'],\n        templateUrl: 'https://dhr.datahub.eodc.eu/search?q=( footprint:\"Intersects({polygon})\" AND beginposition:[{start} TO {end}] AND platformname:Envisat AND producttype:MER_FRS_2P) &start={startindex}&rows=100&orderby=beginposition desc&format=json',\n        name: \"ENVISAT/MERIS/FRS from EODC's EO Mission Data relay\",\n        logo: './images/s5p_black.png',\n        type: 'DHUS',\n        startIndexOrigin: 0,\n        dateOff: ' beginposition:[{start} TO {end}] AND',\n        areaOff:  ' footprint:\"Intersects({polygon})\" AND',\n        windowSize: 1000 * 60 * 60 * 24 \n    },\n    {\n        code: 'EOCAT-MER_FRS_2P',\n        satellites: ['env'],\n        templateUrl: 'https://eocat.esa.int/api/catalogue/EOCAT-MER_FRS_2P/search?start={start}&stop={end}&geom={polygon}&format=json&count=50&startIndex={startindex}',\n        startIndexOrigin: 1,\n        name: 'EOCAT-MER_FRS_2P',\n        logo: './images/s5p_black.png',\n        type: 'EOCAT',\n        dateOff: 'start={start}&stop={end}&',\n        areaOff:  '&geom={polygon}',\n        windowSize: 1000 * 60 * 60 * 24 * 3\n    },\n\n    {\n        code: 'EOCAT-ENVISAT.ASA.IMP_1P',\n        satellites: ['env'],\n        templateUrl: 'https://eocat.esa.int/api/catalogue/EOCAT-ENVISAT.ASA.IMP_1P/search?start={start}&stop={end}&geom={polygon}&format=json&count=50&startIndex={startindex}',\n        startIndexOrigin: 1,\n        name: 'EOCAT-ENVISAT.ASA.IMP_1P',\n        logo: './images/s5p_black.png',\n        type: 'EOCAT',\n        dateOff: 'start={start}&stop={end}&',\n        areaOff:  '&geom={polygon}',\n        windowSize: 1000 * 60 * 60 * 24 * 3\n    },\n\n    {\n        code: 'RefSysStac',\n        templateUrl: 'https://processing.platform.ops-csc.com/native-api/stac/search?datetime={start}/{end}',\n        satellites: ['s1a'],\n        startIndexOrigin: 1,\n        name: 'RS Stac',\n        type: 'STAC',\n        logo: './images/s5p_black.png',\n        dateOff: 'datetime={start}/{end}',\n        areaOff:  ' and OData.CSC.Intersects(area=geography%27SRID=4326;{polygon}%27)',\n        windowSize: 1000 * 60 * 60 * 24 * 3\n    },\n\n    {\n        code: 'S1A_IW_RAW__0SDV',\n        satellites: ['s1a'],\n        templateUrl: 'https://processing.platform.ops-csc.com/ddip/odata/v1/Products?$format=json&$count=true&$top=100&$skip={startindex}&$filter=contains(Name,%27S1A_IW_RAW__0SDV%27)%20and%20ContentDate/Start%20gt%20{start}%20and%20ContentDate/Start%20lt%20{end}&$orderby=%20ContentDate/Start%20desc',\n        startIndexOrigin: 0,\n        name: 'RS PRIP',\n        logo: './images/s5p_black.png',\n        type: 'PRIP',\n        dateOff: '%20and%20ContentDate/Start%20gt%20{start}%20and%20ContentDate/Start%20lt%20{end}',\n        areaOff:  ' and OData.CSC.Intersects(area=geography%27SRID=4326;{polygon}%27)',\n        windowSize: 1000 * 60 * 60 * 24 * 100\n    },\n    {\n        code: 'S3 RS',\n        satellites: ['s3a','s3b'],\n        templateUrl: 'https://processing.platform.ops-csc.com/ddip/odata/v1/Products?$format=json&$count=true&$top=100&$skip={startindex}&$filter=contains(Name,%27S3%27)%20and%20ContentDate/Start%20gt%20{start}%20and%20ContentDate/Start%20lt%20{end}&$orderby=%20ContentDate/Start%20desc',\n        startIndexOrigin: 0,\n        name: 'RS PRIP',\n        logo: './images/s5p_black.png',\n        type: 'PRIP',\n        dateOff: '%20and%20ContentDate/Start%20gt%20{start}%20and%20ContentDate/Start%20lt%20{end}',\n        areaOff:  ' and OData.CSC.Intersects(area=geography%27SRID=4326;{polygon}%27)',\n        windowSize: 1000 * 60 * 60 * 24 * 7\n    }\n\n\n]","import {collections} from \"./collections.js\"\n\nexport const reducer = (state, action) => {\n    switch (action.type) {\n      case \"toggle_names\":\n          console.log('togglename!')\n        return {\n          ...state,\n          mapSettings: {...state.mapSettings, names: !state.mapSettings.names}\n        }\n  \n        case \"toggle_starfield\":\n            console.log('toggle starfield!')\n          return {\n            ...state,\n            mapSettings: {...state.mapSettings, starfield: !state.mapSettings.starfield}\n          }\n    \n          case \"toggle_atmosphere\":\n            console.log('toggle atmosphere!')\n          return {\n            ...state,\n            mapSettings: {...state.mapSettings, atmosphere: !state.mapSettings.atmosphere}\n          }\n\n    \n          case \"toggle_background\":\n            console.log('toggle background !')\n          return {\n            ...state,\n            mapSettings: {...state.mapSettings, background: state.mapSettings.background + 1}\n          }\n    \n    \n          case \"toggle_overlay\":\n            console.log('toggle overlay!')\n          return {\n            ...state,\n            mapSettings: {...state.mapSettings, overlay: state.mapSettings.overlay + 1}\n          }\n    \n    \n          case \"toggle_projection\":\n            console.log('toggleprojection!')\n          return {\n            ...state,\n            mapSettings: {...state.mapSettings, projection: state.mapSettings.projection + 1}\n          }\n    \n\n          case \"set_dataset\":\n            console.log('set dataset!')\n            console.log(action.value[1])\n          return {\n            ...state,\n            dataset: action.value[0],\n            mapSettings: {...state.mapSettings, satelliteList: action.value[1], datasetSatelliteList: action.value[1]}\n          }\n\n          case \"set_constellation\":\n            console.log('set constellation!')\n          return {\n            ...state,\n            mapSettings: {...state.mapSettings, satelliteList: action.value[1]?action.value[0]:state.mapSettings.datasetSatelliteList, constellation: action.value[1]}\n          }\n          case \"set_dem\":\n          return {\n            ...state,\n            mapSettings: {...state.mapSettings, dem: action.value}\n          }\n    \n    \n          case \"toggle_satellites\":\n            console.log('toggle_satellites!: '+action.value)\n\n          return {\n            ...state,\n            // mapSettings: {...state.mapSettings, satellites: !state.mapSettings.satellites}\n            mapSettings: {...state.mapSettings, satellites: action.value},\n\n          }\n    \n    \n          case \"toggle_quicklooks\":\n          return {\n            ...state,\n            mapSettings: {...state.mapSettings, quicklooks: !state.mapSettings.quicklooks}\n          }\n    \n          \n\n\n          case \"set_altitude\":\n            // console.log('set altitude!: '+action.value)\n          return {\n            ...state,\n            altitude: action.value,\n            productOn: action.value > state.pointSearchMaxAltitude?true:state.productOn,\n            searchMode: (action.value > state.pointSearchMaxAltitude)?'global':'point'\n          }\n    \n    \n          case \"onResultPage\":\n            console.log('onResultPage')\n            console.log(action.value)\n          return {\n            ...state,\n            resultDesc: action.value.resultdesc,\n            geojson: action.value.results\n            // resultDesc: {...state.resultDesc, totalLoaded: action.value.totalLoaded, totalResults: action.value.totalResults}\n          }\n    \n          case \"onSearchStart\":\n            console.log('onSearchStart')\n            console.log(action.value)\n          return {\n            ...state,\n            tics: [],\n            clearResultsTrigger: Math.random(),\n            resultDesc: {totalResults:0, totalLoaded:0 },\n            closestItem: null,\n            filter: [],\n            browseMode: state.searchMode,\n            searching: true\n            // resultDesc: {...state.resultDesc, totalLoaded: action.value.totalLoaded, totalResults: action.value.totalResults}\n          }\n    \n          case \"onSearchComplete\":\n            console.log('onSearchComplete')\n            console.log(action.value)\n            if(state.altitude > state.pointSearchMaxAltitude) {\n              return {\n                ...state,\n                resultDesc: action.value,\n                searching: false\n                // goToDate: !state.animated ? action.value.firstResultDate.getTime() :  action.value.lastResultDate.getTime()\n                // resultDesc: {...state.resultDesc, totalLoaded: action.value.totalLoaded, totalResults: action.value.totalResults}\n              }\n            } else {\n              return {\n                ...state,\n                resultDesc: action.value,\n                searching: false\n                // goToDate: !state.animated ? state.goToDate :  action.value.lastResultDate.getTime()\n                // resultDesc: {...state.resultDesc, totalLoaded: action.value.totalLoaded, totalResults: action.value.totalResults}\n              }\n\n            }\n      \n\n          case \"set_selectedProduct\":\n            console.log('set_selectedProduct:')\n            // console.log(action.value)\n            if(state.selectedProduct != null && action.value === state.selectedProduct) {\n              return {\n                ...state,\n                selectedProduct: action.value,\n                goToDate: action.value?action.value.timeRange[0].getTime():null,\n                productOn: false,\n                addQuicklookWMSTrigger: Math.random()\n              }\n            } else {\n              return {\n                ...state,\n                selectedProduct: action.value,\n                goToDate: action.value?action.value.timeRange[0].getTime():null,\n              }\n            }\n            \n\n          case \"set_closestitem\":\n            if(!action.value) return state\n            return {\n              ...state,\n              closestItem: action.value,\n            }\n            \n\n\n          case \"set_tics\":\n            // console.log('set_tics')\n            return {\n              ...state,\n              tics: action.value,\n            }\n            \n  \n          case \"set_filter\":\n            console.log('toggle_filter')\n            \n            if(state.closestItem === null) return state\n            let newfilter \n            if(state.filter.length === 0) {\n              if(state.dataset.indexOf('S1') >=0 ) {\n                newfilter = [{\n                  attribute: 'relativePassNumber',\n                  value: state.closestItem.userProperties.earthObservation.acquisitionInformation[0].acquisitionParameter.relativePassNumber\n                }]\n              }\n              if(state.dataset.indexOf('S2') >=0 ) {\n                newfilter = [{\n                  attribute: 'relativePassNumber',\n                  value: state.closestItem.userProperties.earthObservation.acquisitionInformation[0].acquisitionParameter.relativePassNumber\n                }]\n              }\n            } else {\n              console.log(\"no filter\")\n\n              newfilter = []\n            }\n            return {\n              ...state,\n              filter: newfilter,\n            }\n            \n\n          case \"gotoclosestitem\":\n            // console.log('gotoclosestitem')\n            if(state.closestItem == null || state.closestItem._sector == null) return state\n            console.log(state)\n\n            return {\n              ...state,\n              goToDate: state.closestItem.timeRange[0].getTime(),\n              // moveToClosestItemTrigger: Math.random(),\n              goToPos: {\n                lat: state.closestItem._sector.centroidLatitude(),\n                lon: state.closestItem._sector.centroidLongitude(),\n                alt: state.altitude,\n              }\n            }\n            \n    \n          case \"set_goToDate\":\n            console.log('set_goToDate')\n            console.log(action.value)\n            if(action.value === null) return state\n            return {\n              ...state,\n              goToDate: action.value.getTime(),\n              // moveToClosestItemTrigger: Math.random()\n            }\n        \n          case \"set_searchDate\":\n            // console.log('set_searchDate')\n            // console.log(action.value)\n            return {\n              ...state,\n              searchDate: action.value.getTime(),\n              goToDate: action.value.getTime()\n            }\n    \n          \n          case \"set_animated\":\n            console.log('set_animated')\n            return {\n              ...state,\n              animated: action.value,\n            }\n    \n          \n          case \"set_color\":\n            console.log('set_color: '+action.value)\n            return {\n              ...state,\n              appColor: action.value,\n            }\n\n\n          case \"set_viewDate\": {\n            // console.log('onDateChanged')\n            // console.log(action.value.getTime())\n            return {\n              ...state,\n              viewDate: action.value.getTime(),\n              productOn: true\n              // goToDate: null\n            }\n          }\n    \n          case \"clear_results\":\n            console.log('clear_results')\n            // return {\n            //   ...state,\n            //   // moveToClosestItemTrigger: Math.random(),\n            //   closestItem: null,\n            //   goToDate: null,\n            //   tics: [],\n            //   filter: [],\n            //   resultDesc: {totalResults:0, totalLoaded:0 },\n            //   selectedProduct: null,\n            //   clearResultsTrigger: Math.random()\n            // }\n            return {\n              ...state,\n              tics: [],\n              resultDesc: {totalResults:0, totalLoaded:0 },\n              clearResultsTrigger: Math.random()\n            }\n    \n          case \"set_searchPoint\": {\n            // console.log('onDateChanged')\n            return {\n              ...state,\n              searchPoint: action.value\n            }\n          }\n\n          case \"set_zoomscale\": {\n            // console.log('onDateChanged')\n            return {\n              ...state,\n              zoomScale: action.value\n            }\n          }\n\n          case \"set_position\": {\n            return {\n              ...state,\n              position: {\n                clon: action.value.lon,\n                clat:action.value.lat\n              },\n            }\n          }\n    \n          case \"set_credentials\": {\n            // console.log(action.value)\n            return {\n              ...state,\n              credentials: action.value\n            }\n          }\n\n          case \"reset_credentials\": {\n            console.log('reset credentials')\n            return {\n              ...state,\n              credentials: {user:'', pass:''}\n            }\n          }\n\n          case \"toggle_lefthanded\": {\n            // console.log('toggle_lefthanded')\n            return {\n              ...state,\n              leftHanded: !state.leftHanded\n            }\n          }\n\n        default:\n          return state\n    }\n  }\n\n\n  let init_date = new Date()\n  export const initialState = {\n    active: false,\n    searching: false,\n    // dataset: 'S1A_IW_RAW__0SDV',\n    dataset: 'S1A',\n    altitude: '5000000',\n    appColor: '#b575c5',\n    position: {\n        clon:'0.5',\n        clat:'45' \n    },\n    viewDate: init_date.getTime(),\n    goToDate: init_date.getTime(),\n    goToPos: {\n      lat: 0,\n      lon: 0\n    },\n    searchDate: null,\n    credentials: {user:'', pass:''},\n    resetStartDateTrigger: null,\n    pointSearchMaxAltitude: 3000000,\n    selectedProduct: null,\n    searchPoint: 'POINT(40 0)',\n    searchMode: 'global',\n    browseMode: 'global',\n    geojson: null,\n    filter: [],\n    closestItem: null,\n    tics: [],\n    addQuicklookWMSTrigger: null,\n    moveToClosestItemTrigger: null,\n    resultDesc: {\n        firstItemDate: null,\n        lastItemDate: null,\n        totalResults: 0,\n        totalLoaded: 0\n    },\n    animated: false,\n    clearResultsTrigger: null,\n    mapSettings: {\n        atmosphere: false,\n        starfield: false,\n        names: false,\n        background: 0,\n        overlay:1,\n        dem: false,\n        satellites: false,\n        quicklooks: true,\n        projection: 0\n    },\n    collections: collections,\n    leftHanded: false\n  }\n\n  export const getsavedstate = (state) => {\n    return {\n      dataset: state.dataset,\n      altitude: state.altitude,\n      appColor: state.appColor,\n      position: state.position,\n      animated: state.animated,\n      mapSettings: state.mapSettings,\n      viewDate: state.viewDate,\n      searchDate: state.searchDate,\n      goToDate: state.goToDate,\n      credentials: state.credentials,\n      leftHanded: state.leftHanded\n\n    }\n\n  }\n  ","import {collections} from \"./collections.js\"\nimport JSONCrush from \"jsoncrush\"\n\n\n\n\n\n  let init_date = new Date()\n  export const defaultstate = {\n    active: false,\n    searching: false,\n    // dataset: 'S1A_IW_RAW__0SDV',\n    dataset: 'S1A',\n    altitude: '5000000',\n    appColor: '#b575c5',\n    position: {\n        clon:'0.5',\n        clat:'45' \n    },\n    viewDate: init_date.getTime(),\n    goToDate: init_date.getTime(),\n    goToPos: {\n      lat: 0,\n      lon: 0\n    },\n    searchDate: null,\n    credentials: {user:'', pass:''},\n    resetStartDateTrigger: null,\n    pointSearchMaxAltitude: 3000000,\n    selectedProduct: null,\n    searchPoint: 'POINT(40 0)',\n    searchMode: 'global',\n    browseMode: 'global',\n    geojson: null,\n    filter: [],\n    closestItem: null,\n    tics: [],\n    addQuicklookWMSTrigger: null,\n    moveToClosestItemTrigger: null,\n    resultDesc: {\n        firstItemDate: null,\n        lastItemDate: null,\n        totalResults: 0,\n        totalLoaded: 0\n    },\n    animated: false,\n    clearResultsTrigger: null,\n    mapSettings: {\n        atmosphere: false,\n        starfield: false,\n        names: false,\n        background: 0,\n        overlay:1,\n        dem: false,\n        satellites: false,\n        satelliteList: ['s1a'],\n        datasetSatelliteList: ['s1a'],\n        constellation: false,\n        quicklooks: true,\n        projection: 0\n    },\n    collections: collections,\n    leftHanded: false\n  }\n\n  export const getsavedstate = (state) => {\n    return {\n      dataset: state.dataset,\n      altitude: state.altitude,\n      appColor: state.appColor,\n      position: state.position,\n      animated: state.animated,\n      mapSettings: state.mapSettings,\n      viewDate: state.viewDate,\n      searchDate: state.searchDate,\n      goToDate: state.goToDate,\n      credentials: state.credentials,\n      leftHanded: state.leftHanded\n\n    }\n\n  }\n  export const getsharedstate = (state) => {\n    return {\n      dataset: state.dataset,\n      altitude: state.altitude,\n      appColor: state.appColor,\n      position: state.position,\n      animated: state.animated,\n      mapSettings: state.mapSettings,\n      viewDate: state.viewDate,\n      searchDate: state.searchDate,\n      goToDate: state.goToDate,\n      leftHanded: state.leftHanded\n    }\n\n  }\n\n  export const initstate = (state) => {\n\n    try {\n      let eoi_state = JSON.parse(window.localStorage.getItem(\"eoi_state\"))\n\n\n      let paramindex = window.location.href.indexOf('?s=') \n      let urlparam = window.location.href.substring(paramindex+3)\n      // window.location.href = window.location.href.split('?')[0]\n      window.history.replaceState(null, document.title, window.location.href.split('?')[0])\n\n      let param = {}\n      if(paramindex >= 0) {\n      \n        param = JSON.parse(JSONCrush.uncrush(decodeURIComponent(urlparam)))\n        console.log(param)\n  \n\n    }\n\n    let initmapsettings = {...defaultstate.mapSettings,...eoi_state.mapSettings,...param.mapSettings}\n\n    let initstate = {...defaultstate,...eoi_state,...param,mapSettings: initmapsettings}\n    console.log(initstate)\n\n    return(initstate)\n  \n  }       catch {\n    return(defaultstate)\n  }\n\n  }\n","import { useState, useEffect } from \"react\";\nfunction useDebounce(value, delay) {\n  // State and setters for debounced value\n  const [debouncedValue, setDebouncedValue] = useState(value);\n  useEffect(\n    () => {\n      // Update debounced value after delay\n      const handler = setTimeout(() => {\n        setDebouncedValue(value);\n      }, delay);\n      // Cancel the timeout if value changes (also on delay change or unmount)\n      // This is how we prevent debounced value from updating if value is changed ...\n      // .. within the delay period. Timeout gets cleared and restarted.\n      return () => {\n        clearTimeout(handler);\n      };\n    },\n    [value, delay] // Only re-call effect if value or delay changes\n  );\n  return debouncedValue;\n}\nexport {useDebounce}  ","// export { AppContext } from './App'\n\nimport React from \"react\"\nimport { reducer } from \"./reducer\"\nimport {  initstate,  getsavedstate } from \"./initstate\"\nimport  { useEffect } from \"react\";\nimport { useDebounce } from '../../hooks/useDebounce'\nimport JSONCrush from \"jsoncrush\"\n\nexport const AppContext = React.createContext(null)\n\nconst istate = initstate()\n\nexport const AppProvider = ({ children }) => {\n\n \n\n  const [state, dispatch] = React.useReducer(reducer, istate)\n\n  const debouncedstate = useDebounce(state, 1000)\n\n  // useEffect(() => {\n  // }, []);\n\n\n  useEffect(() => {\n    window.localStorage.setItem( \"eoi_state\", JSON.stringify(getsavedstate(debouncedstate)) );\n  }, [debouncedstate]);\n\n  return (\n    <AppContext.Provider value={[ state, dispatch ]}>\n    \t{ children }\n    </AppContext.Provider>\n  )\n}","/*\n * Copyright (C) 2014 United States Government as represented by the Administrator of the\n * National Aeronautics and Space Administration. All Rights Reserved.\n */\n/**\n * @exports SurfaceShape\n * @version $Id: SurfaceShape.js 3191 2015-06-15 19:35:57Z tgaskins $\n */\nimport WorldWind from 'webworldwind-esa';\n\nconst {\n    AbstractError,\n    Angle,\n    Location,\n    Logger,\n    NotYetImplementedError,\n    PickedObject,\n    PolygonSplitter,\n    Renderable,\n    Sector,\n    ShapeAttributes,\n    Vec3,\n    MemoryCache,\n    BoundingBox,\n    // SurfaceShape,\n} = WorldWind;\n\nlet SurfaceShape = WorldWind.SurfaceShape;\n\n\n/**\n * Constructs a surface shape with an optionally specified bundle of default attributes.\n * @alias SurfaceShape\n * @constructor\n * @augments Renderable\n * @abstract\n * @classdesc Represents a surface shape. This is an abstract base class and is meant to be instantiated\n * only by subclasses.\n * <p>\n * Surface shapes other than SurfacePolyline {@link SurfacePolyline} have an interior and an outline and utilize\n * the corresponding attributes in their associated ShapeAttributes {@link ShapeAttributes}. They do not\n * utilize image-related attributes.\n *\n * @param {ShapeAttributes} attributes The attributes to apply to this shape. May be null, in which case\n * attributes must be set directly before the shape is drawn.\n */\nSurfaceShape = function (attributes) {\n\n    Renderable.call(this);\n\n    // All these are documented with their property accessors below.\n    this._displayName = \"Surface Shape\";\n    this._attributes = attributes ? attributes : new ShapeAttributes(null);\n    this._highlightAttributes = null;\n    this._highlighted = false;\n    this._enabled = true;\n    this._pathType = WorldWind.GREAT_CIRCLE;\n    this._maximumNumEdgeIntervals = SurfaceShape.DEFAULT_NUM_EDGE_INTERVALS;\n    this._polarThrottle = SurfaceShape.DEFAULT_POLAR_THROTTLE;\n    this._sector = null;\n\n    /**\n     * Indicates the object to return as the owner of this shape when picked.\n     * @type {Object}\n     * @default null\n     */\n    this.pickDelegate = null;\n\n    /*\n     * The bounding sectors for this tile, which may be needed for crossing the dateline.\n     * @type {Sector[]}\n     * @protected\n     */\n    this._sectors = [];\n\n    /*\n     * The raw collection of locations defining this shape and are explicitly specified by the client of this class.\n     * @type {Location[]}\n     * @protected\n     */\n    this._locations = null;\n\n    /*\n     * Boundaries that are either the user specified locations or locations that are algorithmically generated.\n     * @type {Location[]}\n     * @protected\n     */\n    this._boundaries = null;\n\n    /*\n     * The collection of locations that describes a closed curve which can be filled.\n     * @type {Location[][]}\n     * @protected\n     */\n    this._interiorGeometry = null;\n\n    /*\n     * The collection of locations that describe the outline of the shape.\n     * @type {Location[][]}\n     * @protected\n     */\n    this._outlineGeometry = null;\n\n    /*\n     * Internal use only.\n     * Inhibit the filling of the interior. This is to be used ONLY by polylines.\n     * @type {Boolean}\n     * @protected\n     */\n    this._isInteriorInhibited = false;\n\n    /*\n     * Indicates whether this object's state key is invalid. Subclasses must set this value to true when their\n     * attributes change. The state key will be automatically computed the next time it's requested. This flag\n     * will be set to false when that occurs.\n     * @type {Boolean}\n     * @protected\n     */\n    this.stateKeyInvalid = true;\n\n    // Internal use only. Intentionally not documented.\n    this._attributesStateKey = null;\n\n    // Internal use only. Intentionally not documented.\n    this.boundariesArePrepared = false;\n\n    // Internal use only. Intentionally not documented.\n    this.layer = null;\n\n    // Internal use only. Intentionally not documented.\n    this.pickColor = null;\n\n    //the split contours returned from polygon splitter\n    this.contours = [];\n    this.containsPole = false;\n    this.crossesAntiMeridian = false;\n\n    /**\n     * Indicates how long to use terrain-specific shape data before regenerating it, in milliseconds. A value\n     * of zero specifies that shape data should be regenerated every frame. While this causes the shape to\n     * adapt more frequently to the terrain, it decreases performance.\n     * @type {Number}\n     * @default 2000 (milliseconds)\n     */\n    this.expirationInterval = 2000;\n\n    // Internal use only. Intentionally not documented.\n    // Holds the per-globe data\n    this.shapeDataCache = new MemoryCache(3, 2);\n\n    // Internal use only. Intentionally not documented.\n    // The shape-data-cache data that is for the currently active globe.\n    this.currentData = null;\n};\n\nSurfaceShape.prototype = Object.create(Renderable.prototype);\n\nObject.defineProperties(SurfaceShape.prototype, {\n    stateKey: {\n        /**\n         * A hash key of the total visible external state of the surface shape.\n         * @memberof SurfaceShape.prototype\n         * @type {String}\n         */\n        get: function () {\n            // If we don't have a state key for the shape attributes, consider this state key to be invalid.\n            if (!this._attributesStateKey) {\n                // Update the state key for the appropriate attributes for future\n                if (this._highlighted) {\n                    if (!!this._highlightAttributes) {\n                        this._attributesStateKey = this._highlightAttributes.stateKey;\n                    }\n                } else {\n                    if (!!this._attributes) {\n                        this._attributesStateKey = this._attributes.stateKey;\n                    }\n                }\n\n                // If we now actually have a state key for the attributes, it was previously invalid.\n                if (!!this._attributesStateKey) {\n                    this.stateKeyInvalid = true;\n                }\n            } else {\n                // Detect a change in the appropriate attributes.\n                var currentAttributesStateKey = null;\n\n                if (this._highlighted) {\n                    // If there are highlight attributes associated with this shape, ...\n                    if (!!this._highlightAttributes) {\n                        currentAttributesStateKey = this._highlightAttributes.stateKey;\n                    }\n                } else {\n                    if (!!this._attributes) {\n                        currentAttributesStateKey = this._attributes.stateKey;\n                    }\n                }\n\n                // If the attributes state key changed, ...\n                if (currentAttributesStateKey != this._attributesStateKey) {\n                    this._attributesStateKey = currentAttributesStateKey;\n                    this.stateKeyInvalid = true;\n                }\n            }\n\n            if (this.stateKeyInvalid) {\n                this._stateKey = this.computeStateKey();\n            }\n\n            return this._stateKey;\n        }\n    },\n\n    /**\n     * The shape's display name and label text.\n     * @memberof SurfaceShape.prototype\n     * @type {String}\n     * @default Surface Shape\n     */\n    displayName: {\n        get: function () {\n            return this._displayName;\n        },\n        set: function (value) {\n            this.stateKeyInvalid = true;\n            this._displayName = value;\n        }\n    },\n\n    /**\n     * The shape's attributes. If null and this shape is not highlighted, this shape is not drawn.\n     * @memberof SurfaceShape.prototype\n     * @type {ShapeAttributes}\n     * @default see [ShapeAttributes]{@link ShapeAttributes}\n     */\n    attributes: {\n        get: function () {\n            return this._attributes;\n        },\n        set: function (value) {\n            this.stateKeyInvalid = true;\n            this._attributes = value;\n            this._attributesStateKey = value.stateKey;\n        }\n    },\n\n    /**\n     * The attributes used when this shape's highlighted flag is true. If null and the\n     * highlighted flag is true, this shape's normal attributes are used. If they, too, are null, this\n     * shape is not drawn.\n     * @memberof SurfaceShape.prototype\n     * @type {ShapeAttributes}\n     * @default null\n     */\n    highlightAttributes: {\n        get: function () {\n            return this._highlightAttributes;\n        },\n        set: function (value) {\n            this.stateKeyInvalid = true;\n            this._highlightAttributes = value;\n        }\n    },\n\n    /**\n     * Indicates whether this shape displays with its highlight attributes rather than its normal attributes.\n     * @memberof SurfaceShape.prototype\n     * @type {Boolean}\n     * @default false\n     */\n    highlighted: {\n        get: function () {\n            return this._highlighted;\n        },\n        set: function (value) {\n            this.stateKeyInvalid = true;\n            this._highlighted = value;\n        }\n    },\n\n    /**\n     * Indicates whether this shape is drawn.\n     * @memberof SurfaceShape.prototype\n     * @type {Boolean}\n     * @default true\n     */\n    enabled: {\n        get: function () {\n            return this._enabled;\n        },\n        set: function (value) {\n            this.stateKeyInvalid = true;\n            this._enabled = value;\n        }\n    },\n\n    /**\n     * The path type to used to interpolate between locations on this shape. Recognized values are:\n     * <ul>\n     * <li>WorldWind.GREAT_CIRCLE</li>\n     * <li>WorldWind.RHUMB_LINE</li>\n     * <li>WorldWind.LINEAR</li>\n     * </ul>\n     * @memberof SurfaceShape.prototype\n     * @type {String}\n     * @default WorldWind.GREAT_CIRCLE\n     */\n    pathType: {\n        get: function () {\n            return this._pathType;\n        },\n        set: function (value) {\n            this.stateKeyInvalid = true;\n            this.resetBoundaries();\n            this._pathType = value;\n        }\n    },\n\n    /**\n     * The maximum number of intervals an edge will be broken into. This is the number of intervals that an\n     * edge that spans to opposite side of the globe would be broken into. This is strictly an upper bound\n     * and the number of edge intervals may be lower if this resolution is not needed.\n     * @memberof SurfaceShape.prototype\n     * @type {Number}\n     * @default SurfaceShape.DEFAULT_NUM_EDGE_INTERVALS\n     */\n    maximumNumEdgeIntervals: {\n        get: function () {\n            return this._maximumNumEdgeIntervals;\n        },\n        set: function (value) {\n            this.stateKeyInvalid = true;\n            this.resetBoundaries();\n            this._maximumNumEdgeIntervals = value;\n        }\n    },\n\n    /**\n     * A dimensionless number that controls throttling of edge traversal near the poles where edges need to be\n     * sampled more closely together.\n     * A value of 0 indicates that no polar throttling is to be performed.\n     * @memberof SurfaceShape.prototype\n     * @type {Number}\n     * @default SurfaceShape.DEFAULT_POLAR_THROTTLE\n     */\n    polarThrottle: {\n        get: function () {\n            return this._polarThrottle;\n        },\n        set: function (value) {\n            this.stateKeyInvalid = true;\n            this.resetBoundaries();\n            this._polarThrottle = value;\n        }\n    },\n\n    /**\n     * Defines the extent of the shape in latitude and longitude.\n     * This sector only has valid data once the boundary is defined. Prior to this, it is null.\n     * @memberof SurfaceShape.prototype\n     * @type {Sector}\n     */\n    sector: {\n        get: function () {\n            return this._sector;\n        }\n    }\n});\n\nSurfaceShape.staticStateKey = function (shape) {\n    shape.stateKeyInvalid = false;\n\n    if (shape.highlighted) {\n        if (!shape._highlightAttributes) {\n            if (!shape._attributes) {\n                shape._attributesStateKey = null;\n            } else {\n                shape._attributesStateKey = shape._attributes.stateKey;\n            }\n        } else {\n            shape._attributesStateKey = shape._highlightAttributes.stateKey;\n        }\n    } else {\n        if (!shape._attributes) {\n            shape._attributesStateKey = null;\n        } else {\n            shape._attributesStateKey = shape._attributes.stateKey;\n        }\n    }\n\n    return \"dn \" + shape.displayName +\n        \" at \" + (!shape._attributesStateKey ? \"null\" : shape._attributesStateKey) +\n        \" hi \" + shape.highlighted +\n        \" en \" + shape.enabled +\n        \" pt \" + shape.pathType +\n        \" ne \" + shape.maximumNumEdgeIntervals +\n        \" po \" + shape.polarThrottle +\n        \" se \" + \"[\" +\n        shape.sector.minLatitude + \",\" +\n        shape.sector.maxLatitude + \",\" +\n        shape.sector.minLongitude + \",\" +\n        shape.sector.maxLongitude +\n        \"]\";\n};\n\nSurfaceShape.prototype.computeStateKey = function () {\n    return SurfaceShape.staticStateKey(this);\n};\n\n/**\n * Returns this shape's area in square meters.\n * @param {Globe} globe The globe on which to compute the area.\n * @param {Boolean} terrainConformant If true, the returned area is that of the terrain,\n * including its hillsides and other undulations. If false, the returned area is the shape's\n * projected area.\n */\nSurfaceShape.prototype.area = function (globe, terrainConformant) {\n    throw new NotYetImplementedError(\n        Logger.logMessage(Logger.LEVEL_SEVERE, \"SurfaceShape\", \"area\", \"notYetImplemented\"));\n};\n\n// Internal function. Intentionally not documented.\nSurfaceShape.prototype.computeBoundaries = function (globe) {\n    // This method is in the base class and should be overridden if the boundaries are generated.\n    // It should be called only if the geometry has been provided by the user and does not need to be generated.\n    // assert(!this._boundaries);\n\n    throw new AbstractError(\n        Logger.logMessage(Logger.LEVEL_SEVERE, \"SurfaceShape\", \"computeBoundaries\", \"abstractInvocation\"));\n};\n\n\n// Internal. Intentionally not documented.\nSurfaceShape.prototype.intersectsFrustum = function (dc) {\n\n    if (this.currentData && this.currentData.extent) {\n        if (dc.pickingMode) {\n            return this.currentData.extent.intersectsFrustum(dc.pickFrustum);\n        } else {\n            return this.currentData.extent.intersectsFrustum(dc.frustumInModelCoordinates);\n        }\n    } else {\n        return true;\n    }\n};\n\n/**\n * Indicates whether a specified shape data object is current. Subclasses may override this method to add\n * criteria indicating whether the shape data object is current, but must also call this method on this base\n * class. Applications do not call this method.\n * @param {DrawContext} dc The current draw context.\n * @param {Object} shapeData The object to validate.\n * @returns {Boolean} true if the object is current, otherwise false.\n * @protected\n */\nSurfaceShape.prototype.isShapeDataCurrent = function (dc, shapeData) {\n    return shapeData.verticalExaggeration === dc.verticalExaggeration\n        && shapeData.expiryTime > Date.now();\n};\n\n/**\n * Creates a new shape data object for the current globe state. Subclasses may override this method to\n * modify the shape data object that this method creates, but must also call this method on this base class.\n * Applications do not call this method.\n * @returns {Object} The shape data object.\n * @protected\n */\nSurfaceShape.prototype.createShapeDataObject = function () {\n    return {};\n};\n\n// Intentionally not documented.\nSurfaceShape.prototype.resetExpiration = function (shapeData) {\n    // The random addition in the line below prevents all shapes from regenerating during the same frame.\n    shapeData.expiryTime = Date.now() + this.expirationInterval + 1e3 * Math.random();\n};\n\n// Internal. Intentionally not documented.\nSurfaceShape.prototype.establishCurrentData = function (dc) {\n    this.currentData = this.shapeDataCache.entryForKey(dc.globeStateKey);\n    if (!this.currentData) {\n        this.currentData = this.createShapeDataObject();\n        this.resetExpiration(this.currentData);\n        this.shapeDataCache.putEntry(dc.globeStateKey, this.currentData, 1);\n    }\n\n    this.currentData.isExpired = !this.isShapeDataCurrent(dc, this.currentData);\n};\n\n // Internal function. Intentionally not documented.\n SurfaceShape.prototype.render = function (dc) {\n    if (!this.enabled) {\n        return;\n    }\n\n    this.layer = dc.currentLayer;\n\n    this.prepareBoundaries(dc);\n\n    this.establishCurrentData(dc);\n\n    if (this.currentData.isExpired || !this.currentData.extent) {\n        this.computeExtent(dc);\n        this.currentData.verticalExaggeration = dc.verticalExaggeration;\n        this.resetExpiration(this.currentData);\n    }\n\n    // Use the last computed extent to see if this shape is out of view.\n    if (this.currentData && this.currentData.extent && !this.intersectsFrustum(dc)) {\n        return;\n    }\n\n    dc.surfaceShapeTileBuilder.insertSurfaceShape(this);\n};\n\n\n// Internal function. Intentionally not documented.\nSurfaceShape.prototype.interpolateLocations = function (locations) {\n    var first = locations[0],\n        next = first,\n        prev,\n        isNextFirst = true,\n        isPrevFirst = true,// Don't care initially, this will get set in first iteration.\n        countFirst = 0,\n        isInterpolated = true,\n        idx, len;\n\n    this._locations = [first];\n\n    for (idx = 1, len = locations.length; idx < len; idx += 1) {\n        // Advance to next location, retaining previous location.\n        prev = next;\n        isPrevFirst = isNextFirst;\n\n        next = locations[idx];\n\n        // Detect whether the next location and the first location are the same.\n        isNextFirst = next.latitude == first.latitude && next.longitude == first.longitude;\n\n        // Inhibit interpolation if either endpoint if the first location,\n        // except for the first segement which will be the actual first location or that location\n        // as the polygon closes the first time.\n        // All subsequent encounters of the first location are used to connected secondary domains with the\n        // primary domain in multiply-connected geometry (an outer ring with multiple inner rings).\n        isInterpolated = true;\n        if (isNextFirst || isPrevFirst) {\n            countFirst += 1;\n\n            if (countFirst > 2) {\n                isInterpolated = false;\n            }\n        }\n\n        if (isInterpolated) {\n            this.interpolateEdge(prev, next, this._locations);\n        }\n\n        this._locations.push(next);\n\n        prev = next;\n    }\n\n    // Force the closing of the border.\n    if (!this._isInteriorInhibited) {\n        // Avoid duplication if the first endpoint was already emitted.\n        if (prev.latitude != first.latitude || prev.longitude != first.longitude) {\n            this.interpolateEdge(prev, first, this._locations);\n            this._locations.push(first);\n        }\n    }\n};\n\n// Internal function. Intentionally not documented.\nSurfaceShape.prototype.interpolateEdge = function (start, end, locations) {\n    var distanceRadians = Location.greatCircleDistance(start, end),\n        steps = Math.round(this._maximumNumEdgeIntervals * distanceRadians / Math.PI),\n        dt,\n        location;\n\n    if (steps > 0) {\n        dt = 1 / steps;\n        location = start;\n\n        for (var t = this.throttledStep(dt, location); t < 1; t += this.throttledStep(dt, location)) {\n            location = new Location(0, 0);\n            Location.interpolateAlongPath(this._pathType, t, start, end, location);\n\n            //florin: ensure correct longitude sign and decimal error for anti-meridian\n            if (start.longitude === 180 && end.longitude === 180) {\n                location.longitude = 180;\n            }\n            else if (start.longitude === -180 && end.longitude === -180) {\n                location.longitude = -180;\n            }\n\n            locations.push(location);\n        }\n    }\n};\n\n// Internal function. Intentionally not documented.\n// Return a throttled step size when near the poles.\nSurfaceShape.prototype.throttledStep = function (dt, location) {\n    var cosLat = Math.cos(location.latitude * Angle.DEGREES_TO_RADIANS);\n    cosLat *= cosLat; // Square cos to emphasize poles and de-emphasize equator.\n\n    // Remap polarThrotle:\n    //  0 .. INF => 0 .. 1\n    // This acts as a weight between no throttle and fill throttle.\n    var weight = this._polarThrottle / (1 + this._polarThrottle);\n\n    return dt * ((1 - weight) + weight * cosLat);\n};\n\n// Internal function. Intentionally not documented.\nSurfaceShape.prototype.prepareBoundaries = function (dc) {\n    if (this.boundariesArePrepared) {\n        return;\n    }\n\n    if (!this._boundaries) {\n        this.computeBoundaries(dc);\n    }\n\n    var newBoundaries = this.formatBoundaries();\n    this.normalizeAngles(newBoundaries);\n    newBoundaries = this.interpolateBoundaries(newBoundaries);\n\n    var contoursInfo = [];\n    var doesCross = PolygonSplitter.splitContours(newBoundaries, contoursInfo);\n    this.contours = contoursInfo;\n    this.crossesAntiMeridian = doesCross;\n\n    this.prepareGeometry(dc, contoursInfo);\n\n    this.prepareSectors();\n\n    this.boundariesArePrepared = true;\n};\n\n// Internal. Resets boundaries for SurfaceShape recomputing.\nSurfaceShape.prototype.resetBoundaries = function () {\n    this.boundariesArePrepared = false;\n    this.shapeDataCache.clear(false);\n};\n\n//Internal. Formats the boundaries of a surface shape to be a multi dimensional array\nSurfaceShape.prototype.formatBoundaries = function () {\n    var boundaries = [];\n    if (!this._boundaries.length) {\n        return boundaries;\n    }\n    if (this._boundaries[0].latitude != null) {\n        //not multi dim array\n        boundaries.push(this._boundaries);\n    }\n    else {\n        boundaries = this._boundaries;\n    }\n    return boundaries;\n};\n\n// Internal use only. Intentionally not documented.\nSurfaceShape.prototype.normalizeAngles = function (boundaries) {\n    for (var i = 0, len = boundaries.length; i < len; i++) {\n        var polygon = boundaries[i];\n        for (var j = 0, lenP = polygon.length; j < lenP; j++) {\n            var point = polygon[j];\n            if (point.longitude < -180 || point.longitude > 180) {\n                point.longitude = Angle.normalizedDegreesLongitude(point.longitude);\n            }\n            if (point.latitude < -90 || point.latitude > 90) {\n                point.latitude = Angle.normalizedDegreesLatitude(point.latitude);\n            }\n        }\n    }\n};\n\n// Internal use only. Intentionally not documented.\nSurfaceShape.prototype.interpolateBoundaries = function (boundaries) {\n    var newBoundaries = [];\n    for (var i = 0, len = boundaries.length; i < len; i++) {\n        var contour = boundaries[i];\n        this.interpolateLocations(contour);\n        newBoundaries.push(this._locations.slice());\n        this._locations.length = 0;\n    }\n    return newBoundaries;\n};\n\n/**\n * Computes the bounding sectors for the shape. There will be more than one if the shape crosses the date line,\n * but does not enclose a pole.\n *\n * @param {DrawContext} dc The drawing context containing a globe.\n *\n * @return {Sector[]}  Bounding sectors for the shape.\n */\nSurfaceShape.prototype.computeSectors = function (dc) {\n    // Return a previously computed value if it already exists.\n    if (this._sectors && this._sectors.length > 0) {\n        return this._sectors;\n    }\n\n    this.prepareBoundaries(dc);\n\n    return this._sectors;\n};\n\n\n/**\n * Computes the extent for the shape based on its sectors.\n *\n * @param {DrawContext} dc The drawing context containing a globe.\n *\n * @return {BoundingBox} The extent for the shape.\n */\nSurfaceShape.prototype.computeExtent = function (dc) {\n\n    if (!this._sectors || this._sectors.length === 0) {\n        return null;\n    }\n\n    if (!this.currentData) {\n        return null;\n    }\n\n    if (!this.currentData.extent) {\n        this.currentData.extent = new BoundingBox();\n    }\n\n\n    var boxPoints;\n    // This surface shape does not cross the international dateline, and therefore has a single bounding sector.\n    // Return the box which contains that sector.\n    if (this._sectors.length === 1) {\n        boxPoints = this._sectors[0].computeBoundingPoints(dc.globe, dc.verticalExaggeration);\n        this.currentData.extent.setToVec3Points(boxPoints);\n    }\n    // This surface crosses the international dateline, and its bounding sectors are split along the dateline.\n    // Return a box which contains the corners of the boxes bounding each sector.\n    else {\n        var boxCorners = [];\n\n        for (var i = 0; i < this._sectors.length; i++) {\n            boxPoints = this._sectors[i].computeBoundingPoints(dc.globe, dc.verticalExaggeration);\n            var box = new BoundingBox();\n            box.setToVec3Points(boxPoints);\n            var corners = box.getCorners();\n            for (var j = 0; j < corners.length; j++) {\n                boxCorners.push(corners[j]);\n            }\n        }\n        this.currentData.extent.setToVec3Points(boxCorners);\n    }\n\n    return this.currentData.extent;\n\n};\n\n /**\n * Computes a new set of locations translated from a specified location to a new location for a shape.\n *\n * @param {Globe} globe The globe on which to compute a new set of locations.\n * @param {Location} oldLocation The original reference location.\n * @param {Location} newLocation The new reference location.\n * @param {Location[]} locations The locations to translate.\n *\n * @return {Location[]} The translated locations.\n */\nSurfaceShape.prototype.computeShiftedLocations = function(globe, oldLocation, newLocation, locations) {\n    var newLocations = [];\n    var result = new Vec3(0, 0, 0);\n    var newPos = new WorldWind.Position(0, 0, 0);\n\n    var oldPoint = globe.computePointFromLocation(oldLocation.latitude, oldLocation.longitude,\n        new Vec3(0, 0, 0));\n    var newPoint = globe.computePointFromLocation(newLocation.latitude, newLocation.longitude,\n        new Vec3(0, 0, 0));\n\n    if(globe.is2D()){\n        var delta = newPoint.subtract(oldPoint);\n\n        for (var i = 0, len = locations.length; i < len; i++) {\n            globe.computePointFromLocation(locations[i].latitude, locations[i].longitude, result);\n            result.add(delta);\n            globe.computePositionFromPoint(result[0], result[1], result[2], newPos);\n            newLocations.push(new Location(newPos.latitude, newPos.longitude));\n        }\n    } else {\n        // Euler method\n\n        // var xVecOld = new Vec3(0, oldPoint[1], oldPoint[2]);\n        // var yVecOld =  new Vec3(oldPoint[0], 0, oldPoint[2]);\n        // var zVecOld =  new Vec3(oldPoint[0], oldPoint[1], 0);\n        // var xVecNew = new Vec3(0, newPoint[1], newPoint[2]);\n        // var yVecNew =  new Vec3(newPoint[0], 0, newPoint[2]);\n        // var zVecNew =  new Vec3(newPoint[0], newPoint[1], 0);\n        //\n        //\n        // var alpha = Math.acos(xVecOld.dot(xVecNew) / (xVecOld.magnitude() * xVecNew.magnitude()));\n        // var beta = Math.acos(yVecOld.dot(yVecNew) / (yVecOld.magnitude() * yVecNew.magnitude()));\n        // var gama = Math.acos(zVecOld.dot(zVecNew) / (zVecOld.magnitude() * zVecNew.magnitude()));\n        //\n        // var alpha = Math.atan2()\n        //\n        // var crossX = xVecOld.cross(xVecNew);\n        // var crossY = yVecOld.cross(yVecNew);\n        // var crossZ = zVecOld.cross(zVecNew);\n        //\n        // if(new Vec3(1, 0, 0).dot(crossX) < 0){\n        //      alpha = -alpha;\n        // }\n        //\n        // if(new Vec3(0, 1, 0).dot(crossY) < 0){\n        //     beta = -beta;\n        // }\n        //\n        // if(new Vec3(0, 0, 1).dot(crossZ) < 0){\n        //     gama = -gama;\n        // }\n        //\n        // for (var i = 0, len = locations.length; i < len; i++) {\n        //     globe.computePointFromLocation(locations[i].latitude, locations[i].longitude, result);\n        //     var newX = result[0] * Math.cos(beta) * Math.cos(gama) +\n        //                result[1] * (Math.cos(beta) * (-Math.sin(gama))) +\n        //                result[2] * Math.sin(beta);\n        //\n        //     var newY = result[0] * ((-Math.sin(alpha)) * (-Math.sin(beta)) * (Math.cos(gama)) + Math.cos(alpha) * Math.sin(gama)) +\n        //                result[1] * ( (-Math.sin(alpha)) * (-Math.sin(beta)) * (-Math.sin(gama)) + Math.cos(alpha) * Math.cos(gama) ) +\n        //                result[2] * Math.sin(alpha) * Math.cos(beta);\n        //\n        //     var newZ = result[0] * (Math.cos(alpha) * (-Math.sin(beta)) * Math.cos(gama) + Math.sin(alpha) * Math.sin(gama)) +\n        //                result[1] * (Math.cos(alpha) * (-Math.sin(beta)) * (-Math.sin(gama)) + Math.sin(alpha) * Math.cos(gama)) +\n        //                result[2] * Math.cos(alpha) * Math.cos(beta);\n        //\n        //     globe.computePositionFromPoint(newX, newY, newZ, newPos);\n        //     newLocations.push(new Location(newPos.latitude, newPos.longitude));\n        // }\n\n        var delta_lat = newLocation.latitude - oldLocation.latitude;\n        var delta_long = newLocation.longitude - oldLocation.longitude;\n        var max = -90;\n        var min = 90;\n\n        for (var i = 0, len = locations.length; i < len; i++) {\n            var new_lat = locations[i].latitude + delta_lat;\n            var new_long = locations[i].longitude + delta_long;\n\n\n            if (new_lat > 90) {\n                new_lat = 180 - new_lat;\n                new_long += 180;\n            } else if (new_lat < -90) {\n                new_lat = -180 - new_lat;\n                new_long += 180;\n            }\n\n            if (new_long < -180) {\n                new_long += 360;\n            } else if (new_long > 180) {\n                new_long -= 360;\n            }\n\n\n            if (new_lat > max) {\n                max = new_lat;\n            }\n\n            if (new_lat < min) {\n                min = new_lat;\n            }\n\n            newLocations.push(new Location(new_lat, new_long));\n        }\n\n        if (max > 90) {\n            var delta = max - 90;\n            for (var i = 0, len = newLocations.length; i < len; i++) {\n                newLocations[i].latitude -= delta;\n            }\n        }\n    }\n\n    return newLocations;\n};\n\n\n\n// Internal use only. Intentionally not documented.\nSurfaceShape.prototype.prepareSectors = function () {\n    this.determineSectors();\n    if (this.crossesAntiMeridian) {\n        this.sectorsOverAntiMeridian();\n    }\n    else {\n        this.sectorsNotOverAntiMeridian();\n    }\n};\n\n// Internal use only. Intentionally not documented.\nSurfaceShape.prototype.determineSectors = function () {\n    for (var i = 0, len = this.contours.length; i < len; i++) {\n        var contour = this.contours[i];\n        var polygons = contour.polygons;\n        contour.sectors = [];\n        for (var j = 0, lenP = polygons.length; j < lenP; j++) {\n            var polygon = polygons[j];\n            var sector = new Sector(0, 0, 0, 0);\n            sector.setToBoundingSector(polygon);\n            if (this._pathType === WorldWind.GREAT_CIRCLE) {\n                var extremes = Location.greatCircleArcExtremeLocations(polygon);\n                var minLatitude = Math.min(sector.minLatitude, extremes[0].latitude);\n                var maxLatitude = Math.max(sector.maxLatitude, extremes[1].latitude);\n                sector.minLatitude = minLatitude;\n                sector.maxLatitude = maxLatitude;\n            }\n            contour.sectors.push(sector);\n        }\n    }\n};\n\n// Internal use only. Intentionally not documented.\nSurfaceShape.prototype.sectorsOverAntiMeridian = function () {\n    var eastSector = new Sector(90, -90, 180, -180); //positive\n    var westSector = new Sector(90, -90, 180, -180); //negative\n    for (var i = 0, len = this.contours.length; i < len; i++) {\n        var sectors = this.contours[i].sectors;\n        for (var j = 0, lenS = sectors.length; j < lenS; j++) {\n            var sector = sectors[j];\n            if (sector.minLongitude < 0 && sector.maxLongitude > 0) {\n                westSector.union(sector);\n                eastSector.union(sector);\n            }\n            else if (sector.minLongitude < 0) {\n                westSector.union(sector);\n            }\n            else {\n                eastSector.union(sector);\n            }\n        }\n    }\n    var minLatitude = Math.min(eastSector.minLatitude, westSector.minLatitude);\n    var maxLatitude = Math.max(eastSector.maxLatitude, eastSector.maxLatitude);\n    this._sector = new Sector(minLatitude, maxLatitude, -180, 180);\n    this._sectors = [eastSector, westSector];\n};\n\n// Internal use only. Intentionally not documented.\nSurfaceShape.prototype.sectorsNotOverAntiMeridian = function () {\n    this._sector = new Sector(90, -90, 180, -180);\n    for (var i = 0, len = this.contours.length; i < len; i++) {\n        var sectors = this.contours[i].sectors;\n        for (var j = 0, lenS = sectors.length; j < lenS; j++) {\n            this._sector.union(sectors[j]);\n        }\n    }\n    this._sectors = [this._sector];\n};\n\n// Internal use only. Intentionally not documented.\nSurfaceShape.prototype.prepareGeometry = function (dc, contours) {\n    var interiorPolygons = [];\n    var outlinePolygons = [];\n\n    for (var i = 0, len = contours.length; i < len; i++) {\n        var contour = contours[i];\n        var poleIndex = contour.poleIndex;\n\n        for (var j = 0, lenC = contour.polygons.length; j < lenC; j++) {\n            var polygon = contour.polygons[j];\n            var iMap = contour.iMap[j];\n            interiorPolygons.push(polygon);\n\n            if (contour.pole !== Location.poles.NONE && lenC > 1) {\n                //split with pole\n                if (j === poleIndex) {\n                    this.outlineForPole(polygon, iMap, outlinePolygons);\n                }\n                else {\n                    this.outlineForSplit(polygon, iMap, outlinePolygons);\n                }\n            }\n            else if (contour.pole !== Location.poles.NONE && lenC === 1) {\n                //only pole\n                this.outlineForPole(polygon, iMap, outlinePolygons);\n            }\n            else if (contour.pole === Location.poles.NONE && lenC > 1) {\n                //only split\n                this.outlineForSplit(polygon, iMap, outlinePolygons);\n            }\n            else if (contour.pole === Location.poles.NONE && lenC === 1) {\n                //no pole, no split\n                outlinePolygons.push(polygon);\n            }\n        }\n    }\n\n    this._interiorGeometry = interiorPolygons;\n    this._outlineGeometry = outlinePolygons;\n};\n\n// Internal use only. Intentionally not documented.\nSurfaceShape.prototype.outlineForPole = function (polygon, iMap, outlinePolygons) {\n    this.containsPole = true;\n    var outlinePolygon = [];\n    var pCount = 0;\n    for (var k = 0, lenP = polygon.length; k < lenP; k++) {\n        var point = polygon[k];\n        var intersection = iMap.get(k);\n        if (intersection && intersection.forPole) {\n            pCount++;\n            if (pCount % 2 === 1) {\n                outlinePolygon.push(point);\n                outlinePolygons.push(outlinePolygon);\n                outlinePolygon = [];\n            }\n        }\n        if (pCount % 2 === 0) {\n            outlinePolygon.push(point);\n        }\n    }\n    if (outlinePolygon.length) {\n        outlinePolygons.push(outlinePolygon);\n    }\n};\n\n// Internal use only. Intentionally not documented.\nSurfaceShape.prototype.outlineForSplit = function (polygon, iMap, outlinePolygons) {\n    var outlinePolygon = [];\n    var iCount = 0;\n    for (var k = 0, lenP = polygon.length; k < lenP; k++) {\n        var point = polygon[k];\n        var intersection = iMap.get(k);\n        if (intersection && !intersection.forPole) {\n            iCount++;\n            if (iCount % 2 === 0) {\n                outlinePolygon.push(point);\n                outlinePolygons.push(outlinePolygon);\n                outlinePolygon = [];\n            }\n        }\n        if (iCount % 2 === 1) {\n            outlinePolygon.push(point);\n        }\n    }\n};\n\n// Internal use only. Intentionally not documented.\nSurfaceShape.prototype.resetPickColor = function () {\n    this.pickColor = null;\n};\n\n/**\n * Internal use only.\n * Render the shape onto the texture map of the tile.\n * @param {DrawContext} dc The draw context to render onto.\n * @param {CanvasRenderingContext2D} ctx2D The rendering context for SVG.\n * @param {Number} xScale The multiplicative scale factor in the horizontal direction.\n * @param {Number} yScale The multiplicative scale factor in the vertical direction.\n * @param {Number} dx The additive offset in the horizontal direction.\n * @param {Number} dy The additive offset in the vertical direction.\n */\nSurfaceShape.prototype.renderToTexture = function (dc, ctx2D, xScale, yScale, dx, dy) {\n    var attributes = (this._highlighted ? (this._highlightAttributes || this._attributes) : this._attributes);\n    var drawInterior = (!this._isInteriorInhibited && attributes.drawInterior);\n    var drawOutline = (attributes.drawOutline && attributes.outlineWidth > 0);\n\n    if (!drawInterior && !drawOutline) {\n        return;\n    }\n\n    if (dc.pickingMode && !this.pickColor) {\n        this.pickColor = dc.uniquePickColor();\n    }\n\n    if (dc.pickingMode) {\n        var pickColor = this.pickColor.toHexString();\n    }\n\n    if (this.crossesAntiMeridian || this.containsPole) {\n        if (drawInterior) {\n            this.draw(this._interiorGeometry, ctx2D, xScale, yScale, dx, dy);\n            ctx2D.fillStyle = dc.pickingMode ? pickColor : attributes.interiorColor.toRGBAString();\n            ctx2D.fill();\n        }\n        if (drawOutline) {\n            this.draw(this._outlineGeometry, ctx2D, xScale, yScale, dx, dy);\n            ctx2D.lineWidth = 4 * attributes.outlineWidth;\n            ctx2D.strokeStyle = dc.pickingMode ? pickColor : attributes.outlineColor.toRGBAString();\n            ctx2D.stroke();\n        }\n    }\n    else {\n        this.draw(this._interiorGeometry, ctx2D, xScale, yScale, dx, dy);\n        if (drawInterior) {\n            ctx2D.fillStyle = dc.pickingMode ? pickColor : attributes.interiorColor.toRGBAString();\n            ctx2D.fill();\n        }\n        if (drawOutline) {\n            ctx2D.lineWidth = 4 * attributes.outlineWidth;\n            ctx2D.strokeStyle = dc.pickingMode ? pickColor : attributes.outlineColor.toRGBAString();\n            ctx2D.stroke();\n        }\n    }\n\n    if (dc.pickingMode) {\n        var po = new PickedObject(this.pickColor.clone(), this.pickDelegate ? this.pickDelegate : this,\n            null, this.layer, false);\n        dc.resolvePick(po);\n    }\n};\n\nSurfaceShape.prototype.draw = function (contours, ctx2D, xScale, yScale, dx, dy) {\n    ctx2D.beginPath();\n    for (var i = 0, len = contours.length; i < len; i++) {\n        var contour = contours[i];\n        var point = contour[0];\n        var x = point.longitude * xScale + dx;\n        var y = point.latitude * yScale + dy;\n        ctx2D.moveTo(x, y);\n        for (var j = 1, lenC = contour.length; j < lenC; j++) {\n            point = contour[j];\n            x = point.longitude * xScale + dx;\n            y = point.latitude * yScale + dy;\n            ctx2D.lineTo(x, y);\n        }\n    }\n};\n\n/**\n * Default value for the maximum number of edge intervals. This results in a maximum error of 480 m for an arc\n * that spans the entire globe.\n *\n * Other values for this parameter have the associated errors below:\n * Intervals        Maximum error (meters)\n *      2           1280253.5\n *      4           448124.5\n *      8           120837.6\n *      16          30628.3\n *      32          7677.9\n *      64          1920.6\n *      128         480.2\n *      256         120.0\n *      512         30.0\n *      1024        7.5\n *      2048        1.8\n * The errors cited above are upper bounds and the actual error may be lower.\n * @type {Number}\n */\nSurfaceShape.DEFAULT_NUM_EDGE_INTERVALS = 128;\n\n/**\n * The defualt value for the polar throttle, which slows edge traversal near the poles.\n * @type {Number}\n */\nSurfaceShape.DEFAULT_POLAR_THROTTLE = 10;\n\nWorldWind.SurfaceShape = SurfaceShape;\n\nexport default SurfaceShape;","import WorldWind from 'webworldwind-esa';\nimport SurfaceShape from './SurfaceShape';\n\nconst {\n    DrawContext,\n    // SurfaceShape,\n} = WorldWind;\n\n/**\n * Determines whether a specified picked object is under the pick point, and if it is adds it to this draw\n * context's list of picked objects. This method should be called by shapes during ordered rendering\n * after the shape is drawn. If this draw context is in single-picking mode, the specified pickable object\n * is added to the list of picked objects whether or not it is under the pick point.\n * @param pickableObject\n * @returns {null}\n */\nDrawContext.prototype.resolvePick = function (pickableObject) {\n    if (!(pickableObject.userObject instanceof SurfaceShape) && this.deepPicking && !this.regionPicking) {\n        var color = this.readPickColor(this.pickPoint);\n        if (!color) { // getPickColor returns null if the pick point selects the clear color\n            return null;\n        }\n\n        if (pickableObject.color.equals(color)) {\n            this.addPickedObject(pickableObject);\n        }\n    } else {\n        // Don't resolve. Just add the object to the pick list. It will be resolved later.\n        this.addPickedObject(pickableObject);\n    }\n};","export default class FramebufferTexture {\n\n    constructor(textureId, width, height) {\n        this.textureId = textureId || null;\n        this.imageWidth = width;\n        this.imageHeight = height;\n        this.size = width * height * 4;\n        this.originalImageWidth = width;\n        this.originalImageHeight = height;\n        this.creationTime = new Date();\n    }\n\n    bind(dc) {\n        dc.currentGlContext.bindTexture(dc.currentGlContext.TEXTURE_2D, this.textureId);\n        dc.frameStatistics.incrementTextureLoadCount(1);\n        return true;\n    }\n\n    dispose(gl) {\n        gl.deleteTexture(this.textureId);\n        delete this.textureId;\n    }\n\n}\n","import FramebufferTexture from './FramebufferTexture';\n\nexport default class Framebuffer {\n\n    constructor() {\n        this.framebufferId = null;\n        this.textureId = null;\n        this.width = 0;\n        this.height = 0;\n        this.texture = null;\n    }\n\n    attachTexture(gl, width, height) {\n        this.textureId = this.createTexture(gl, width, height);\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.textureId, 0);\n\n        /*const e = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n        if (e !== gl.FRAMEBUFFER_COMPLETE) {\n            console.log('bind Error creating framebuffer', e);\n            this.framebufferId = null;\n            this.textureId = null;\n            return false;\n        }*/\n\n        this.texture = new FramebufferTexture(this.textureId, width, height);\n\n        return true;\n    }\n\n    bind(gl, width, height) {\n        if(!this.framebufferId) {\n            this.framebufferId = gl.createFramebuffer();\n        }\n\n        this.width = width;\n        this.height = height;\n\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebufferId);\n        gl.viewport(0, 0, width, height);\n    }\n\n    bind_or(gl, width, height) {\n        /*if (!this.framebufferId) {\n            return false;\n        }*/\n\n        if(!this.framebufferId) {\n            this.framebufferId = gl.createFramebuffer();\n        }\n\n        this.width = width;\n        this.height = height;\n\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebufferId);\n        gl.viewport(0, 0, width, height);\n        this.textureId = this.createTexture(gl, width, height);\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.textureId, 0);\n\n        /*const e = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n        if (e !== gl.FRAMEBUFFER_COMPLETE) {\n            console.log('bind Error creating framebuffer', e);\n            this.framebufferId = null;\n            this.textureId = null;\n            return false;\n        }*/\n\n        this.texture = new FramebufferTexture(this.textureId, width, height);\n\n        return true;\n    }\n\n    clear(gl) {\n        gl.clearColor(0, 0, 0, 0);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n    }\n\n    unbind(gl, fbo) {\n        if (!fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n            gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n        }\n        else {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.framebufferId);\n            gl.viewport(0, 0, fbo.width, fbo.height);\n\n        }\n    }\n\n    createTexture(gl, width, height) {\n        if (width !== 256) {\n            console.log('width', width);\n        }\n        if (height !== 256) {\n            console.log('width', height);\n        }\n        const textureId = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, textureId);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n\n        /*var ext = (\n            gl.getExtension(\"EXT_texture_filter_anisotropic\") ||\n            gl.getExtension(\"WEBKIT_EXT_texture_filter_anisotropic\"));\n        if (ext) {\n            gl.texParameteri(gl.TEXTURE_2D, ext.TEXTURE_MAX_ANISOTROPY_EXT, 16);\n        }*/\n\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n\n        //gl.generateMipmap(gl.TEXTURE_2D);\n        //gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, textureId, 0);\n        return textureId;\n    }\n\n}","import Framebuffer from '../framebuffer/Framebuffer';\nimport WorldWind from 'webworldwind-esa';\n\nconst {\n    ArgumentError,\n    Logger,\n    SurfaceShapeTileBuilder,\n    SurfaceShape,\n    PickedObject\n} = WorldWind;\n\nconst fboCacheKey = 'SurfaceShapeFBO';\n\nSurfaceShapeTileBuilder.prototype.buildTiles = function (dc) {\n    if (!dc) {\n        throw new ArgumentError(\n            Logger.logMessage(Logger.LEVEL_SEVERE, 'SurfaceShapeTileBuilder', 'buildTiles', 'missingDc'));\n    }\n\n    if (!this.surfaceShapes || this.surfaceShapes.length < 1) {\n        return;\n    }\n\n    // Assemble the current visible tiles and update their associated textures if necessary.\n    this.assembleTiles(dc);\n\n    if (SurfaceShapeTileBuilder.__fboBound__) {\n        const fbo = SurfaceShapeTileBuilder.getFbo(dc);\n        fbo.unbind(dc.currentGlContext, dc.currentFramebuffer);\n        SurfaceShapeTileBuilder.__fboBound__ = false;\n    }\n\n    // Clean up references to all surface shapes to avoid dangling references. The surface shape list is no\n    // longer needed, now that the shapes are held by each tile.\n    this.surfaceShapes.splice(0, this.surfaceShapes.length);\n    for (var idx = 0, len = this.surfaceShapeTiles.length; idx < len; idx += 1) {\n        var tile = this.surfaceShapeTiles[idx];\n        tile.clearShapes();\n    }\n};\n\n\nSurfaceShapeTileBuilder.prototype.addTile = function (dc, tile) {\n    if (dc.pickingMode) {\n        tile.pickSequence = SurfaceShapeTileBuilder.pickSequence;\n    }\n\n    if (tile.needsUpdate(dc)) {\n\n        const fbo = SurfaceShapeTileBuilder.getFbo(dc);\n        if (!SurfaceShapeTileBuilder.__fboBound__) {\n            fbo.bind(dc.currentGlContext, this.tileWidth, this.tileHeight);\n            SurfaceShapeTileBuilder.__fboBound__ = true;\n        }\n\n        tile.updateTexture(dc);\n    }\n\n    this.surfaceShapeTiles.push(tile);\n};\n\n\n/**\n * Perform the rendering of any accumulated surface shapes by building the surface shape tiles that contain these\n * shapes and then rendering those tiles.\n *\n * @param {DrawContext} dc The drawing context.\n */\nSurfaceShapeTileBuilder.prototype.doRender = function (dc) {\n    if (dc.pickingMode) {\n        // Picking rendering strategy:\n        //  1) save all tiles created prior to picking,\n        //  2) construct and render new tiles with pick-based contents (colored with pick IDs),\n        //  3) restore all prior tiles.\n        // This has a big potential win for normal rendering, since there is a lot of coherence\n        // from frame to frame if no picking is occurring.\n        for (var idx = 0, len = this.surfaceShapes.length; idx < len; idx += 1) {\n            this.surfaceShapes[idx].resetPickColor();\n        }\n\n        SurfaceShapeTileBuilder.pickSequence += 1;\n\n        var savedTiles = this.surfaceShapeTiles;\n        var savedTopLevelTiles = this.topLevelTiles;\n\n        this.surfaceShapeTiles = [];\n        this.topLevelTiles = [];\n\n        this.buildTiles(dc);\n\n        if (dc.deepPicking) {\n            // Normally, we render all shapes together in one tile (or a small number, but this detail\n            // doesn't matter). For deep picking, we need to render each shape individually.\n            this.doDeepPickingRender(dc);\n\n        } else {\n            dc.surfaceTileRenderer.renderTiles(dc, this.surfaceShapeTiles, 1);\n        }\n\n        this.surfaceShapeTiles = savedTiles;\n        this.topLevelTiles = savedTopLevelTiles;\n    } else {\n        this.buildTiles(dc);\n\n        dc.surfaceTileRenderer.renderTiles(dc, this.surfaceShapeTiles, 1);\n    }\n};\n\nSurfaceShapeTileBuilder.prototype.doDeepPickingRender = function (dc) {\n    var idxTile, lenTiles, idxShape, lenShapes, idxPick, lenPicks, po, shape, tile;\n\n    // Determine the shapes that were drawn during buildTiles. These shapes may not actually be\n    // at the pick point, but they are candidates for deep picking.\n    var deepPickShapes = [];\n    for (idxPick = 0, lenPicks = dc.objectsAtPickPoint.objects.length; idxPick < lenPicks; idxPick += 1) {\n        po = dc.objectsAtPickPoint.objects[idxPick];\n        if (po.userObject instanceof SurfaceShape) {\n            shape = po.userObject;\n\n            // If the shape was not already in the collection of deep picked shapes, ...\n            if (deepPickShapes.indexOf(shape) < 0) {\n                deepPickShapes.push(shape);\n\n                // Delete the shape that was drawn during buildTiles from the pick list.\n                dc.objectsAtPickPoint.objects.splice(idxPick, 1);\n\n                // Update the index and length to reflect the deletion.\n                idxPick -= 1;\n                lenPicks -= 1;\n            }\n        }\n    }\n\n    if (deepPickShapes.length <= 0) {\n        return;\n    }\n\n    // For all shapes,\n    //  1) force that shape to be the only shape in a tile,\n    //  2) re-render the tile, and\n    //  3) use the surfaceTileRenderer to render the tile on the terrain,\n    //  4) read the color to see if it is attributable to the current shape.\n    var resolvablePickObjects = [];\n    for (idxShape = 0, lenShapes = deepPickShapes.length; idxShape < lenShapes; idxShape += 1) {\n        shape = deepPickShapes[idxShape];\n\n        const fbo = SurfaceShapeTileBuilder.getFbo(dc);\n        if (!SurfaceShapeTileBuilder.__fboBound__) {\n            fbo.bind(dc.currentGlContext, this.tileWidth, this.tileHeight);\n            SurfaceShapeTileBuilder.__fboBound__ = true;\n        }\n\n        for (idxTile = 0, lenTiles = this.surfaceShapeTiles.length; idxTile < lenTiles; idxTile += 1) {\n            tile = this.surfaceShapeTiles[idxTile];\n            tile.setShapes([shape]);\n\n            tile.updateTexture(dc);\n        }\n\n        if (SurfaceShapeTileBuilder.__fboBound__) {\n            const fbo = SurfaceShapeTileBuilder.getFbo(dc);\n            fbo.unbind(dc.currentGlContext, dc.currentFramebuffer);\n            SurfaceShapeTileBuilder.__fboBound__ = false;\n        }\n\n        dc.surfaceTileRenderer.renderTiles(dc, this.surfaceShapeTiles, 1);\n\n        var pickColor = dc.readPickColor(dc.pickPoint);\n        if (!!pickColor && shape.pickColor.equals(pickColor)) {\n            po = new PickedObject(shape.pickColor.clone(),\n                shape.pickDelegate ? shape.pickDelegate : shape, null, shape.layer, false);\n            resolvablePickObjects.push(po);\n        }\n    }\n\n    // Flush surface shapes that have accumulated in the updateTexture pass just completed on all shapes.\n    for (idxPick = 0, lenPicks = dc.objectsAtPickPoint.objects.length; idxPick < lenPicks; idxPick += 1) {\n        po = dc.objectsAtPickPoint.objects[idxPick];\n        if (po.userObject instanceof SurfaceShape) {\n            // Delete the shape that was picked in the most recent pass.\n            dc.objectsAtPickPoint.objects.splice(idxPick, 1);\n\n            // Update the index and length to reflect the deletion.\n            idxPick -= 1;\n            lenPicks -= 1;\n        }\n    }\n\n    // Add the resolvable pick objects for surface shapes that were actually visible at the pick point\n    // to the pick list.\n    for (idxPick = 0, lenPicks = resolvablePickObjects.length; idxPick < lenPicks; idxPick += 1) {\n        po = resolvablePickObjects[idxPick];\n        dc.objectsAtPickPoint.objects.push(po);\n    }\n};\n\nSurfaceShapeTileBuilder.getFbo = function (dc) {\n    let fbo = dc.gpuResourceCache.resourceForKey(fboCacheKey);\n    if (!fbo) {\n        fbo = new Framebuffer();\n        dc.gpuResourceCache.putResource(fboCacheKey, fbo, 1);\n    }\n    return fbo;\n};\n\nSurfaceShapeTileBuilder.__frameStart__ = false;\nSurfaceShapeTileBuilder.__fboBound__ = false;","import Framebuffer from '../framebuffer/Framebuffer';\nimport WorldWind from 'webworldwind-esa';\n\nconst {\n    SurfaceShapeTile\n} = WorldWind;\n\nSurfaceShapeTile.prototype.updateTexture = function (dc) {\n    var gl = dc.currentGlContext;\n    // Mapping from lat/lon to x/y:\n    //  lon = minlon => x = 0\n    //  lon = maxLon => x = 256\n    //  lat = minLat => y = 256\n    //  lat = maxLat => y = 0\n    //  (assuming texture size is 256)\n    // So:\n    //  x = 256 / sector.dlon * (lon - minLon)\n    //  y = -256 / sector.dlat * (lat - maxLat)\n    var xScale = this.tileWidth / this.sector.deltaLongitude(),\n        yScale = -this.tileHeight / this.sector.deltaLatitude(),\n        xOffset = -this.sector.minLongitude * xScale,\n        yOffset = -this.sector.maxLatitude * yScale;\n\n    // Reset the surface shape state keys\n    this.asRenderedSurfaceShapeStateKeys = [];\n\n    var fbo = dc.gpuResourceCache.resourceForKey('SurfaceShapeFBO');\n    fbo.attachTexture(gl, this.tileWidth, this.tileHeight);\n    fbo.clear(gl);\n\n    for (var idx = 0, len = this.surfaceShapes.length; idx < len; idx += 1) {\n        var shape = this.surfaceShapes[idx];\n        this.asRenderedSurfaceShapeStateKeys.push(this.surfaceShapeStateKeys[idx]);\n\n        shape.renderToTexture(dc, fbo, xScale, yScale, xOffset, yOffset);\n    }\n\n    this.gpuCacheKey = this.getCacheKey();\n\n    var gpuResourceCache = dc.gpuResourceCache;\n    var texture = fbo.texture;\n    gpuResourceCache.putResource(this.gpuCacheKey, texture, texture.size);\n\n    return texture;\n};","import WorldWind from 'webworldwind-esa';\n\nconst {\n    TiledImageLayer\n} = WorldWind;\n\nvar index = 0;\n\nTiledImageLayer.prototype.retrieveTileImage = function (dc, tile, suppressRedraw) {\n    if (!this.pendingRequests) {\n        this.pendingRequests = [];\n    }\n    if (!this.MAX_REQUESTS) {\n        this.MAX_REQUESTS = 16;\n    }\n\n    const isBeingRetrieved = this.currentRetrievals.indexOf(tile.imagePath) >= 0;\n    if (isBeingRetrieved) {\n        return;\n    }\n\n    const isPending = this.pendingRequests.some(t => t.imagePath === tile.imagePath);\n    if (isPending) {\n        return;\n    }\n\n    if (this.absentResourceList.isResourceAbsent(tile.imagePath)) {\n        return;\n    }\n\n    const url = this.resourceUrlForTile(tile, this.retrievalImageFormat);\n    //const imagePath = tile.imagePath;\n\n    if (!url) {\n        this.currentTilesInvalid = true;\n        return;\n    }\n\n    /*this.pendingRequests.push(tile);\n    if (this.pendingRequests.length === 100) {\n        console.log('pendingRequests', this.pendingRequests.length, 'currentRetrievals', this.currentRetrievals.length);\n        //console.log('pendingRequests', this.pendingRequests.slice());\n\n        this.pendingRequests = this.pendingRequests.slice(80);\n\n        console.log('pendingRequests', this.pendingRequests.length, 'currentRetrievals', this.currentRetrievals.length);\n    }*/\n    if (this.pendingRequests.length === 20) {\n        //console.log(20);\n        this.pendingRequests.shift();\n    }\n    this.pendingRequests.push(tile);\n\n    if (this.currentRetrievals.length <= this.MAX_REQUESTS) {\n        this.fetchMoreImages(dc, this);\n    }\n};\n\nTiledImageLayer.prototype.fetchMoreImages = function (dc, layer) {\n    const before = layer.pendingRequests.length;\n    layer.pendingRequests = layer.pendingRequests.filter(pendingTile => layer.isTileVisible(dc, pendingTile));\n    if (!layer.pendingRequests.length) {\n        return;\n    }\n\n    const skip = before - layer.pendingRequests.length\n\n    //if (skip) console.log('skip tiles', skip);\n\n    var pendingTile = layer.pendingRequests.shift();\n    var imagePath = pendingTile.imagePath;\n    var url = layer.resourceUrlForTile(pendingTile, layer.retrievalImageFormat);\n\n    if (!imagePath || !url) {\n        return;\n    }\n\n    const cache = dc.gpuResourceCache;\n    //const layer = self;\n\n    layer.fetchImage(url, function (err, image) {\n        if (err) {\n            layer.removeFromCurrentRetrievals(imagePath);\n            layer.absentResourceList.markResourceAbsent(imagePath);\n\n            if (layer.currentRetrievals.length <= layer.MAX_REQUESTS) {\n                layer.fetchMoreImages(dc, layer);\n            }\n            return;\n        }\n\n        var texture = layer.createTexture(dc, null, image);\n        layer.removeFromCurrentRetrievals(imagePath);\n\n        if (texture) {\n            cache.putResource(imagePath, texture, texture.size);\n\n            layer.currentTilesInvalid = true;\n            layer.absentResourceList.unmarkResourceAbsent(imagePath);\n\n            var e = document.createEvent('Event');\n            e.initEvent(WorldWind.REDRAW_EVENT_TYPE, true, true);\n            window.dispatchEvent(e);\n        }\n\n        if (layer.currentRetrievals.length <= layer.MAX_REQUESTS) {\n            layer.fetchMoreImages(dc, layer);\n        }\n    });\n\n    layer.currentRetrievals.push(imagePath);\n};\n\nTiledImageLayer.prototype.fetchImage = function (url, cb) {\n    const image = new Image();\n\n    image.onload = function () {\n        cb(null, image);\n    };\n\n    image.onerror = function () {\n        cb(new Error('Image retrieval failed'), null);\n    };\n\n    image.crossOrigin = 'anonymous';\n\n    if (window.webkit) {\n        // url = '/proxy?url=' + encodeURIComponent(url);\n    }\n    else if (!window.webkit && !window.AndroidApp) {\n        // url = '/proxy?url=' + encodeURIComponent(url);\n    }\n\n    image.src = url;\n};\n\nTiledImageLayer.prototype.doRender_ = function (dc) {\n    if (!dc.terrain)\n        return;\n\n    if (this.currentTilesInvalid\n        || !this.lasTtMVP || !dc.navigatorState.modelviewProjection.equals(this.lasTtMVP)\n        || dc.globeStateKey !== this.lastGlobeStateKey) {\n        this.currentTilesInvalid = false;\n\n        this.assembleTiles(dc);\n\n        // Tile fading works visually only when the surface tiles are opaque, otherwise the surface flashes\n        // when two tiles are drawn over the same area, even though one of them is semi-transparent.\n        // So do not provide fading when the surface opacity is less than 1;\n        /*if (dc.surfaceOpacity >= 1 && this.opacity >= 1) {\n            // Fading of outgoing tiles requires determination of the those tiles. Prepare an object with all of\n            // the preceding frame's tiles so that we can subsequently compare the list of newly selected tiles\n            // with the previously selected tiles.\n            this.previousTiles = {};\n            for (var j = 0; j < this.currentTiles.length; j++) {\n                this.previousTiles[this.currentTiles[j].imagePath] = this.currentTiles[j];\n            }\n\n            this.assembleTiles(dc);\n            this.fadeOutgoingTiles(dc);\n        } else {\n            this.assembleTiles(dc);\n        }*/\n\n    }\n\n    this.lasTtMVP = dc.navigatorState.modelviewProjection;\n    this.lastGlobeStateKey = dc.globeStateKey;\n\n    //this.cleanCache(dc);\n\n    if (this.currentTiles.length > 0) {\n        dc.surfaceTileRenderer.renderTiles(dc, this.currentTiles, this.opacity, dc.surfaceOpacity >= 1);\n        dc.frameStatistics.incrementImageTileCount(this.currentTiles.length);\n        this.inCurrentFrame = true;\n    }\n};\n\nTiledImageLayer.prototype.cleanCache = function () {\n\n};","/*\n * @license\n * Copyright 2000, Silicon Graphics, Inc. All Rights Reserved.\n * Copyright 2014, Google Inc. All Rights Reserved.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to\n * deal in the Software without restriction, including without limitation the\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n * sell copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice including the dates of first publication and\n * either this permission notice or a reference to http://oss.sgi.com/projects/FreeB/\n * shall be included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n * SILICON GRAPHICS, INC. BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR\n * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n *\n * Original Code. The Original Code is: OpenGL Sample Implementation,\n * Version 1.2.1, released January 26, 2000, developed by Silicon Graphics,\n * Inc. The Original Code is Copyright (c) 1991-2000 Silicon Graphics, Inc.\n * Copyright in any portions created by third parties is as indicated\n * elsewhere herein. All Rights Reserved.\n */\n/*\n * @author ericv@cs.stanford.edu (Eric Veach)\n * @author bckenny@google.com (Brendan Kenny)\n */\n\n/*\n * Base namespace.\n * @const\n */\nvar libtess = {};\n\n/**\n * Whether to run asserts and extra debug checks.\n * @define {boolean}\n */\nlibtess.DEBUG = false;\n\n/**\n * Checks if the condition evaluates to true if libtess.DEBUG is true.\n * @param {*} condition The condition to check.\n * @param {string=} opt_message Error message in case of failure.\n * @throws {Error} Assertion failed, the condition evaluates to false.\n */\nlibtess.assert = function(condition, opt_message) {\n  if (libtess.DEBUG && !condition) {\n    throw new Error('Assertion failed' +\n        (opt_message ? ': ' + opt_message : ''));\n  }\n};\n\n/**\n * The maximum vertex coordinate size, 1e150. Anything larger will trigger a\n * GLU_TESS_COORD_TOO_LARGE error callback and the vertex will be clamped to\n * this value for all tessellation calculations.\n * @const {number}\n */\nlibtess.GLU_TESS_MAX_COORD = 1e150;\n// NOTE(bckenny): value from glu.pl generator\n\n/**\n * Normally the polygon is projected to a plane perpendicular to one of the\n * three coordinate axes before tessellating in 2d. This helps numerical\n * accuracy by forgoing a transformation step by simply dropping one coordinate\n * dimension.\n *\n * However, this can affect the placement of intersection points for non-axis-\n * aligned polygons. Setting TRUE_PROJECT to true will instead project onto a\n * plane actually perpendicular to the polygon's normal.\n *\n * NOTE(bckenny): I can find no instances on the internet in which this mode has\n * been used, but it's difficult to search for. This was a compile-time setting\n * in the original, so setting this as constant. If this is exposed in the\n * public API, remove the ignore coverage directives on\n * libtess.normal.projectPolygon and libtess.normal.normalize_.\n * @const {boolean}\n */\nlibtess.TRUE_PROJECT = false;\n\n/**\n * We cache vertex data for single-contour polygons so that we can try a\n * quick-and-dirty decomposition first.\n * @const {number}\n */\nlibtess.TESS_MAX_CACHE = 100;\n\n/**\n * The default tolerance for merging features, 0, meaning vertices are only\n * merged if they are exactly coincident\n * If a higher tolerance is needed, significant rewriting will need to occur.\n * See libtess.sweep.TOLERANCE_NONZERO_ as a starting place.\n * @const {number}\n */\nlibtess.GLU_TESS_DEFAULT_TOLERANCE = 0;\n\n/**\n * The input contours parition the plane into regions. A winding\n * rule determines which of these regions are inside the polygon.\n *\n * For a single contour C, the winding number of a point x is simply\n * the signed number of revolutions we make around x as we travel\n * once around C (where CCW is positive). When there are several\n * contours, the individual winding numbers are summed. This\n * procedure associates a signed integer value with each point x in\n * the plane. Note that the winding number is the same for all\n * points in a single region.\n *\n * The winding rule classifies a region as \"inside\" if its winding\n * number belongs to the chosen category (odd, nonzero, positive,\n * negative, or absolute value of at least two). The current GLU\n * tesselator implements the \"odd\" rule. The \"nonzero\" rule is another\n * common way to define the interior. The other three rules are\n * useful for polygon CSG operations.\n * @enum {number}\n */\nlibtess.windingRule = {\n  // NOTE(bckenny): values from enumglu.spec\n  GLU_TESS_WINDING_ODD: 100130,\n  GLU_TESS_WINDING_NONZERO: 100131,\n  GLU_TESS_WINDING_POSITIVE: 100132,\n  GLU_TESS_WINDING_NEGATIVE: 100133,\n  GLU_TESS_WINDING_ABS_GEQ_TWO: 100134\n};\n\n/**\n * The type of primitive return from a \"begin\" callback. GL_LINE_LOOP is only\n * returned when GLU_TESS_BOUNDARY_ONLY is true. GL_TRIANGLE_STRIP and\n * GL_TRIANGLE_FAN are no longer returned since 1.1.0 (see release notes).\n * @enum {number}\n */\nlibtess.primitiveType = {\n  GL_LINE_LOOP: 2,\n  GL_TRIANGLES: 4,\n  GL_TRIANGLE_STRIP: 5,\n  GL_TRIANGLE_FAN: 6\n};\n\n/**\n * The types of errors provided in the error callback.\n * @enum {number}\n */\nlibtess.errorType = {\n  // TODO(bckenny) doc types\n  // NOTE(bckenny): values from enumglu.spec\n  GLU_TESS_MISSING_BEGIN_POLYGON: 100151,\n  GLU_TESS_MISSING_END_POLYGON: 100153,\n  GLU_TESS_MISSING_BEGIN_CONTOUR: 100152,\n  GLU_TESS_MISSING_END_CONTOUR: 100154,\n  GLU_TESS_COORD_TOO_LARGE: 100155,\n  GLU_TESS_NEED_COMBINE_CALLBACK: 100156\n};\n\n/**\n * Enum values necessary for providing settings and callbacks. See the readme\n * for details.\n * @enum {number}\n */\nlibtess.gluEnum = {\n  // TODO(bckenny): rename so not always typing libtess.gluEnum.*?\n\n  // NOTE(bckenny): values from enumglu.spec\n  GLU_TESS_BEGIN: 100100,\n  GLU_TESS_VERTEX: 100101,\n  GLU_TESS_END: 100102,\n  GLU_TESS_ERROR: 100103,\n  GLU_TESS_EDGE_FLAG: 100104,\n  GLU_TESS_COMBINE: 100105,\n  GLU_TESS_BEGIN_DATA: 100106,\n  GLU_TESS_VERTEX_DATA: 100107,\n  GLU_TESS_END_DATA: 100108,\n  GLU_TESS_ERROR_DATA: 100109,\n  GLU_TESS_EDGE_FLAG_DATA: 100110,\n  GLU_TESS_COMBINE_DATA: 100111,\n\n  GLU_TESS_MESH: 100112,  //  NOTE(bckenny): from tess.c\n  GLU_TESS_TOLERANCE: 100142,\n  GLU_TESS_WINDING_RULE: 100140,\n  GLU_TESS_BOUNDARY_ONLY: 100141,\n\n  // TODO(bckenny): move this to libtess.errorType?\n  GLU_INVALID_ENUM: 100900,\n  GLU_INVALID_VALUE: 100901\n};\n\n/** @typedef {number} */\n//libtess.PQHandle;\n\n// TODO(bckenny): better typing on key?\n/** @typedef {Object} */\n//libtess.PQKey;\n\n\n/* global libtess */\n\n/** @const */\nlibtess.geom = {};\n\n/**\n * Returns whether vertex u and vertex v are equal.\n * @param {libtess.GluVertex} u\n * @param {libtess.GluVertex} v\n * @return {boolean}\n */\nlibtess.geom.vertEq = function(u, v) {\n  return u.s === v.s && u.t === v.t;\n};\n\n/**\n * Returns whether vertex u is lexicographically less than or equal to vertex v.\n * @param {libtess.GluVertex} u\n * @param {libtess.GluVertex} v\n * @return {boolean}\n */\nlibtess.geom.vertLeq = function(u, v) {\n  return (u.s < v.s) || (u.s === v.s && u.t <= v.t);\n};\n\n/**\n * Given three vertices u,v,w such that geom.vertLeq(u,v) && geom.vertLeq(v,w),\n * evaluates the t-coord of the edge uw at the s-coord of the vertex v.\n * Returns v.t - (uw)(v.s), ie. the signed distance from uw to v.\n * If uw is vertical (and thus passes thru v), the result is zero.\n *\n * The calculation is extremely accurate and stable, even when v\n * is very close to u or w.  In particular if we set v.t = 0 and\n * let r be the negated result (this evaluates (uw)(v.s)), then\n * r is guaranteed to satisfy MIN(u.t,w.t) <= r <= MAX(u.t,w.t).\n * @param {libtess.GluVertex} u\n * @param {libtess.GluVertex} v\n * @param {libtess.GluVertex} w\n * @return {number}\n */\nlibtess.geom.edgeEval = function(u, v, w) {\n\n  var gapL = v.s - u.s;\n  var gapR = w.s - v.s;\n\n  if (gapL + gapR > 0) {\n    if (gapL < gapR) {\n      return (v.t - u.t) + (u.t - w.t) * (gapL / (gapL + gapR));\n    } else {\n      return (v.t - w.t) + (w.t - u.t) * (gapR / (gapL + gapR));\n    }\n  }\n\n  // vertical line\n  return 0;\n};\n\n/**\n * Returns a number whose sign matches geom.edgeEval(u,v,w) but which\n * is cheaper to evaluate.  Returns > 0, == 0 , or < 0\n * as v is above, on, or below the edge uw.\n * @param {libtess.GluVertex} u\n * @param {libtess.GluVertex} v\n * @param {libtess.GluVertex} w\n * @return {number}\n */\nlibtess.geom.edgeSign = function(u, v, w) {\n\n  var gapL = v.s - u.s;\n  var gapR = w.s - v.s;\n\n  if (gapL + gapR > 0) {\n    return (v.t - w.t) * gapL + (v.t - u.t) * gapR;\n  }\n\n  // vertical line\n  return 0;\n};\n\n/**\n * Version of VertLeq with s and t transposed.\n * Returns whether vertex u is lexicographically less than or equal to vertex v.\n * @param {libtess.GluVertex} u\n * @param {libtess.GluVertex} v\n * @return {boolean}\n */\nlibtess.geom.transLeq = function(u, v) {\n  return (u.t < v.t) || (u.t === v.t && u.s <= v.s);\n};\n\n/**\n * Version of geom.edgeEval with s and t transposed.\n * Given three vertices u,v,w such that geom.transLeq(u,v) &&\n * geom.transLeq(v,w), evaluates the t-coord of the edge uw at the s-coord of\n * the vertex v. Returns v.s - (uw)(v.t), ie. the signed distance from uw to v.\n * If uw is vertical (and thus passes thru v), the result is zero.\n *\n * The calculation is extremely accurate and stable, even when v\n * is very close to u or w.  In particular if we set v.s = 0 and\n * let r be the negated result (this evaluates (uw)(v.t)), then\n * r is guaranteed to satisfy MIN(u.s,w.s) <= r <= MAX(u.s,w.s).\n * @param {libtess.GluVertex} u\n * @param {libtess.GluVertex} v\n * @param {libtess.GluVertex} w\n * @return {number}\n */\nlibtess.geom.transEval = function(u, v, w) {\n\n  var gapL = v.t - u.t;\n  var gapR = w.t - v.t;\n\n  if (gapL + gapR > 0) {\n    if (gapL < gapR) {\n      return (v.s - u.s) + (u.s - w.s) * (gapL / (gapL + gapR));\n    } else {\n      return (v.s - w.s) + (w.s - u.s) * (gapR / (gapL + gapR));\n    }\n  }\n\n  // vertical line\n  return 0;\n};\n\n/**\n * Version of geom.edgeSign with s and t transposed.\n * Returns a number whose sign matches geom.transEval(u,v,w) but which\n * is cheaper to evaluate.  Returns > 0, == 0 , or < 0\n * as v is above, on, or below the edge uw.\n * @param {libtess.GluVertex} u\n * @param {libtess.GluVertex} v\n * @param {libtess.GluVertex} w\n * @return {number}\n */\nlibtess.geom.transSign = function(u, v, w) {\n\n  var gapL = v.t - u.t;\n  var gapR = w.t - v.t;\n\n  if (gapL + gapR > 0) {\n    return (v.s - w.s) * gapL + (v.s - u.s) * gapR;\n  }\n\n  // vertical line\n  return 0;\n};\n\n/**\n * Returns whether edge is directed from right to left.\n * @param {libtess.GluHalfEdge} e\n * @return {boolean}\n */\nlibtess.geom.edgeGoesLeft = function(e) {\n  return libtess.geom.vertLeq(e.dst(), e.org);\n};\n\n/**\n * Returns whether edge is directed from left to right.\n * @param {libtess.GluHalfEdge} e\n * @return {boolean}\n */\nlibtess.geom.edgeGoesRight = function(e) {\n  return libtess.geom.vertLeq(e.org, e.dst());\n};\n\n/**\n * Calculates the L1 distance between vertices u and v.\n * @param {libtess.GluVertex} u\n * @param {libtess.GluVertex} v\n * @return {number}\n */\nlibtess.geom.vertL1dist = function(u, v) {\n  return Math.abs(u.s - v.s) + Math.abs(u.t - v.t);\n};\n\n// NOTE(bckenny): vertCCW is called nowhere in libtess and isn't part of the\n// public API.\n/* istanbul ignore next */\n/**\n * For almost-degenerate situations, the results are not reliable.\n * Unless the floating-point arithmetic can be performed without\n * rounding errors, *any* implementation will give incorrect results\n * on some degenerate inputs, so the client must have some way to\n * handle this situation.\n * @param {!libtess.GluVertex} u\n * @param {!libtess.GluVertex} v\n * @param {!libtess.GluVertex} w\n * @return {boolean}\n */\nlibtess.geom.vertCCW = function(u, v, w) {\n  return (u.s * (v.t - w.t) + v.s * (w.t - u.t) + w.s * (u.t - v.t)) >= 0;\n};\n\n/**\n * Given parameters a,x,b,y returns the value (b*x+a*y)/(a+b),\n * or (x+y)/2 if a==b==0. It requires that a,b >= 0, and enforces\n * this in the rare case that one argument is slightly negative.\n * The implementation is extremely stable numerically.\n * In particular it guarantees that the result r satisfies\n * MIN(x,y) <= r <= MAX(x,y), and the results are very accurate\n * even when a and b differ greatly in magnitude.\n * @private\n * @param {number} a\n * @param {number} x\n * @param {number} b\n * @param {number} y\n * @return {number}\n */\nlibtess.geom.interpolate_ = function(a, x, b, y) {\n  // from Macro RealInterpolate:\n  //(a = (a < 0) ? 0 : a, b = (b < 0) ? 0 : b, ((a <= b) ? ((b == 0) ? ((x+y) / 2) : (x + (y-x) * (a/(a+b)))) : (y + (x-y) * (b/(a+b)))))\n  a = (a < 0) ? 0 : a;\n  b = (b < 0) ? 0 : b;\n\n  if (a <= b) {\n    if (b === 0) {\n      return (x + y) / 2;\n    } else {\n      return x + (y - x) * (a / (a + b));\n    }\n  } else {\n    return y + (x - y) * (b / (a + b));\n  }\n};\n\n/**\n * Given edges (o1,d1) and (o2,d2), compute their point of intersection.\n * The computed point is guaranteed to lie in the intersection of the\n * bounding rectangles defined by each edge.\n * @param {!libtess.GluVertex} o1\n * @param {!libtess.GluVertex} d1\n * @param {!libtess.GluVertex} o2\n * @param {!libtess.GluVertex} d2\n * @param {!libtess.GluVertex} v\n */\nlibtess.geom.edgeIntersect = function(o1, d1, o2, d2, v) {\n  // This is certainly not the most efficient way to find the intersection\n  // of two line segments, but it is very numerically stable.\n\n  // Strategy: find the two middle vertices in the VertLeq ordering,\n  // and interpolate the intersection s-value from these. Then repeat\n  // using the TransLeq ordering to find the intersection t-value.\n  var z1;\n  var z2;\n  var tmp;\n  if (!libtess.geom.vertLeq(o1, d1)) {\n    // Swap(o1, d1);\n    tmp = o1;\n    o1 = d1;\n    d1 = tmp;\n  }\n  if (!libtess.geom.vertLeq(o2, d2)) {\n    // Swap(o2, d2);\n    tmp = o2;\n    o2 = d2;\n    d2 = tmp;\n  }\n  if (!libtess.geom.vertLeq(o1, o2)) {\n    // Swap(o1, o2);\n    tmp = o1;\n    o1 = o2;\n    o2 = tmp;\n    // Swap(d1, d2);\n    tmp = d1;\n    d1 = d2;\n    d2 = tmp;\n  }\n\n  if (!libtess.geom.vertLeq(o2, d1)) {\n    // Technically, no intersection -- do our best\n    v.s = (o2.s + d1.s) / 2;\n\n  } else if (libtess.geom.vertLeq(d1, d2)) {\n    // Interpolate between o2 and d1\n    z1 = libtess.geom.edgeEval(o1, o2, d1);\n    z2 = libtess.geom.edgeEval(o2, d1, d2);\n    if (z1 + z2 < 0) { z1 = -z1; z2 = -z2; }\n    v.s = libtess.geom.interpolate_(z1, o2.s, z2, d1.s);\n\n  } else {\n    // Interpolate between o2 and d2\n    z1 = libtess.geom.edgeSign(o1, o2, d1);\n    z2 = -libtess.geom.edgeSign(o1, d2, d1);\n    if (z1 + z2 < 0) { z1 = -z1; z2 = -z2; }\n    v.s = libtess.geom.interpolate_(z1, o2.s, z2, d2.s);\n  }\n\n  // Now repeat the process for t\n  if (!libtess.geom.transLeq(o1, d1)) {\n    // Swap(o1, d1);\n    tmp = o1;\n    o1 = d1;\n    d1 = tmp;\n  }\n  if (!libtess.geom.transLeq(o2, d2)) {\n    // Swap(o2, d2);\n    tmp = o2;\n    o2 = d2;\n    d2 = tmp;\n  }\n  if (!libtess.geom.transLeq(o1, o2)) {\n    // Swap(o1, o2);\n    tmp = o1;\n    o1 = o2;\n    o2 = tmp;\n    // Swap(d1, d2);\n    tmp = d1;\n    d1 = d2;\n    d2 = tmp;\n  }\n\n  if (!libtess.geom.transLeq(o2, d1)) {\n    // Technically, no intersection -- do our best\n    v.t = (o2.t + d1.t) / 2;\n\n  } else if (libtess.geom.transLeq(d1, d2)) {\n    // Interpolate between o2 and d1\n    z1 = libtess.geom.transEval(o1, o2, d1);\n    z2 = libtess.geom.transEval(o2, d1, d2);\n    if (z1 + z2 < 0) { z1 = -z1; z2 = -z2; }\n    v.t = libtess.geom.interpolate_(z1, o2.t, z2, d1.t);\n\n  } else {\n    // Interpolate between o2 and d2\n    z1 = libtess.geom.transSign(o1, o2, d1);\n    z2 = -libtess.geom.transSign(o1, d2, d1);\n    if (z1 + z2 < 0) { z1 = -z1; z2 = -z2; }\n    v.t = libtess.geom.interpolate_(z1, o2.t, z2, d2.t);\n  }\n};\n\n\n\n/* global libtess */\n\n// TODO(bckenny): could maybe merge GluMesh and mesh.js since these are\n// operations on the mesh\n\n/** @const */\nlibtess.mesh = {};\n\n/****************** Basic Edge Operations **********************/\n\n\n/**\n * makeEdge creates one edge, two vertices, and a loop (face).\n * The loop consists of the two new half-edges.\n *\n * @param {libtess.GluMesh} mesh [description].\n * @return {libtess.GluHalfEdge} [description].\n */\nlibtess.mesh.makeEdge = function(mesh) {\n  // TODO(bckenny): probably move to GluMesh, but needs Make* methods with it\n\n  var e = libtess.mesh.makeEdgePair_(mesh.eHead);\n\n  // complete edge with vertices and face (see mesh.makeEdgePair_)\n  libtess.mesh.makeVertex_(e, mesh.vHead);\n  libtess.mesh.makeVertex_(e.sym, mesh.vHead);\n  libtess.mesh.makeFace_(e, mesh.fHead);\n\n  return e;\n};\n\n\n/**\n * meshSplice(eOrg, eDst) is the basic operation for changing the\n * mesh connectivity and topology. It changes the mesh so that\n *  eOrg.oNext <- OLD( eDst.oNext )\n *  eDst.oNext <- OLD( eOrg.oNext )\n * where OLD(...) means the value before the meshSplice operation.\n *\n * This can have two effects on the vertex structure:\n *  - if eOrg.org != eDst.org, the two vertices are merged together\n *  - if eOrg.org == eDst.org, the origin is split into two vertices\n * In both cases, eDst.org is changed and eOrg.org is untouched.\n *\n * Similarly (and independently) for the face structure,\n *  - if eOrg.lFace == eDst.lFace, one loop is split into two\n *  - if eOrg.lFace != eDst.lFace, two distinct loops are joined into one\n * In both cases, eDst.lFace is changed and eOrg.lFace is unaffected.\n *\n * Some special cases:\n * If eDst == eOrg, the operation has no effect.\n * If eDst == eOrg.lNext, the new face will have a single edge.\n * If eDst == eOrg.lPrev(), the old face will have a single edge.\n * If eDst == eOrg.oNext, the new vertex will have a single edge.\n * If eDst == eOrg.oPrev(), the old vertex will have a single edge.\n *\n * @param {libtess.GluHalfEdge} eOrg [description].\n * @param {libtess.GluHalfEdge} eDst [description].\n */\nlibtess.mesh.meshSplice = function(eOrg, eDst) {\n  // TODO: more descriptive name?\n\n  var joiningLoops = false;\n  var joiningVertices = false;\n\n  if (eOrg === eDst) {\n    return;\n  }\n\n  if (eDst.org !== eOrg.org) {\n    // We are merging two disjoint vertices -- destroy eDst.org\n    joiningVertices = true;\n    libtess.mesh.killVertex_(eDst.org, eOrg.org);\n  }\n\n  if (eDst.lFace !== eOrg.lFace) {\n    // We are connecting two disjoint loops -- destroy eDst.lFace\n    joiningLoops = true;\n    libtess.mesh.killFace_(eDst.lFace, eOrg.lFace);\n  }\n\n  // Change the edge structure\n  libtess.mesh.splice_(eDst, eOrg);\n\n  if (!joiningVertices) {\n    // We split one vertex into two -- the new vertex is eDst.org.\n    // Make sure the old vertex points to a valid half-edge.\n    libtess.mesh.makeVertex_(eDst, eOrg.org);\n    eOrg.org.anEdge = eOrg;\n  }\n\n  if (!joiningLoops) {\n    // We split one loop into two -- the new loop is eDst.lFace.\n    // Make sure the old face points to a valid half-edge.\n    libtess.mesh.makeFace_(eDst, eOrg.lFace);\n    eOrg.lFace.anEdge = eOrg;\n  }\n};\n\n\n/**\n * deleteEdge(eDel) removes the edge eDel. There are several cases:\n * if (eDel.lFace != eDel.rFace()), we join two loops into one; the loop\n * eDel.lFace is deleted. Otherwise, we are splitting one loop into two;\n * the newly created loop will contain eDel.dst(). If the deletion of eDel\n * would create isolated vertices, those are deleted as well.\n *\n * This function could be implemented as two calls to __gl_meshSplice\n * plus a few calls to memFree, but this would allocate and delete\n * unnecessary vertices and faces.\n *\n * @param {libtess.GluHalfEdge} eDel [description].\n */\nlibtess.mesh.deleteEdge = function(eDel) {\n  var eDelSym = eDel.sym;\n  var joiningLoops = false;\n\n  // First step: disconnect the origin vertex eDel.org.  We make all\n  // changes to get a consistent mesh in this \"intermediate\" state.\n  if (eDel.lFace !== eDel.rFace()) {\n    // We are joining two loops into one -- remove the left face\n    joiningLoops = true;\n    libtess.mesh.killFace_(eDel.lFace, eDel.rFace());\n  }\n\n  if (eDel.oNext === eDel) {\n    libtess.mesh.killVertex_(eDel.org, null);\n\n  } else {\n    // Make sure that eDel.org and eDel.rFace() point to valid half-edges\n    eDel.rFace().anEdge = eDel.oPrev();\n    eDel.org.anEdge = eDel.oNext;\n\n    libtess.mesh.splice_(eDel, eDel.oPrev());\n\n    if (!joiningLoops) {\n      // We are splitting one loop into two -- create a new loop for eDel.\n      libtess.mesh.makeFace_(eDel, eDel.lFace);\n    }\n  }\n\n  // Claim: the mesh is now in a consistent state, except that eDel.org\n  // may have been deleted.  Now we disconnect eDel.dst().\n  if (eDelSym.oNext === eDelSym) {\n    libtess.mesh.killVertex_(eDelSym.org, null);\n    libtess.mesh.killFace_(eDelSym.lFace, null);\n\n  } else {\n    // Make sure that eDel.dst() and eDel.lFace point to valid half-edges\n    eDel.lFace.anEdge = eDelSym.oPrev();\n    eDelSym.org.anEdge = eDelSym.oNext;\n    libtess.mesh.splice_(eDelSym, eDelSym.oPrev());\n  }\n\n  // Any isolated vertices or faces have already been freed.\n  libtess.mesh.killEdge_(eDel);\n};\n\n/******************** Other Edge Operations **********************/\n\n/* All these routines can be implemented with the basic edge\n * operations above.  They are provided for convenience and efficiency.\n */\n\n\n/**\n * addEdgeVertex(eOrg) creates a new edge eNew such that\n * eNew == eOrg.lNext, and eNew.dst() is a newly created vertex.\n * eOrg and eNew will have the same left face.\n *\n * @param {libtess.GluHalfEdge} eOrg [description].\n * @return {libtess.GluHalfEdge} [description].\n */\nlibtess.mesh.addEdgeVertex = function(eOrg) {\n  // TODO(bckenny): why is it named this?\n\n  var eNew = libtess.mesh.makeEdgePair_(eOrg);\n  var eNewSym = eNew.sym;\n\n  // Connect the new edge appropriately\n  libtess.mesh.splice_(eNew, eOrg.lNext);\n\n  // Set the vertex and face information\n  eNew.org = eOrg.dst();\n\n  libtess.mesh.makeVertex_(eNewSym, eNew.org);\n\n  eNew.lFace = eNewSym.lFace = eOrg.lFace;\n\n  return eNew;\n};\n\n\n/**\n * splitEdge(eOrg) splits eOrg into two edges eOrg and eNew,\n * such that eNew == eOrg.lNext. The new vertex is eOrg.dst() == eNew.org.\n * eOrg and eNew will have the same left face.\n *\n * @param {libtess.GluHalfEdge} eOrg [description].\n * @return {!libtess.GluHalfEdge} [description].\n */\nlibtess.mesh.splitEdge = function(eOrg) {\n  var tempHalfEdge = libtess.mesh.addEdgeVertex(eOrg);\n  var eNew = tempHalfEdge.sym;\n\n  // Disconnect eOrg from eOrg.dst() and connect it to eNew.org\n  libtess.mesh.splice_(eOrg.sym, eOrg.sym.oPrev());\n  libtess.mesh.splice_(eOrg.sym, eNew);\n\n  // Set the vertex and face information\n  eOrg.sym.org = eNew.org; // NOTE(bckenny): assignment to dst\n  eNew.dst().anEdge = eNew.sym;  // may have pointed to eOrg.sym\n  eNew.sym.lFace = eOrg.rFace(); // NOTE(bckenny): assignment to rFace\n  eNew.winding = eOrg.winding;  // copy old winding information\n  eNew.sym.winding = eOrg.sym.winding;\n\n  return eNew;\n};\n\n\n/**\n * connect(eOrg, eDst) creates a new edge from eOrg.dst()\n * to eDst.org, and returns the corresponding half-edge eNew.\n * If eOrg.lFace == eDst.lFace, this splits one loop into two,\n * and the newly created loop is eNew.lFace. Otherwise, two disjoint\n * loops are merged into one, and the loop eDst.lFace is destroyed.\n *\n * If (eOrg == eDst), the new face will have only two edges.\n * If (eOrg.lNext == eDst), the old face is reduced to a single edge.\n * If (eOrg.lNext.lNext == eDst), the old face is reduced to two edges.\n *\n * @param {libtess.GluHalfEdge} eOrg [description].\n * @param {libtess.GluHalfEdge} eDst [description].\n * @return {!libtess.GluHalfEdge} [description].\n */\nlibtess.mesh.connect = function(eOrg, eDst) {\n  var joiningLoops = false;\n  var eNew = libtess.mesh.makeEdgePair_(eOrg);\n  var eNewSym = eNew.sym;\n\n  if (eDst.lFace !== eOrg.lFace) {\n    // We are connecting two disjoint loops -- destroy eDst.lFace\n    joiningLoops = true;\n    libtess.mesh.killFace_(eDst.lFace, eOrg.lFace);\n  }\n\n  // Connect the new edge appropriately\n  libtess.mesh.splice_(eNew, eOrg.lNext);\n  libtess.mesh.splice_(eNewSym, eDst);\n\n  // Set the vertex and face information\n  eNew.org = eOrg.dst();\n  eNewSym.org = eDst.org;\n  eNew.lFace = eNewSym.lFace = eOrg.lFace;\n\n  // Make sure the old face points to a valid half-edge\n  eOrg.lFace.anEdge = eNewSym;\n\n  if (!joiningLoops) {\n    // We split one loop into two -- the new loop is eNew.lFace\n    libtess.mesh.makeFace_(eNew, eOrg.lFace);\n  }\n  return eNew;\n};\n\n/******************** Other Operations **********************/\n\n\n/**\n * zapFace(fZap) destroys a face and removes it from the\n * global face list. All edges of fZap will have a null pointer as their\n * left face. Any edges which also have a null pointer as their right face\n * are deleted entirely (along with any isolated vertices this produces).\n * An entire mesh can be deleted by zapping its faces, one at a time,\n * in any order. Zapped faces cannot be used in further mesh operations!\n *\n * @param {libtess.GluFace} fZap [description].\n */\nlibtess.mesh.zapFace = function(fZap) {\n  var eStart = fZap.anEdge;\n\n  // walk around face, deleting edges whose right face is also NULL\n  var eNext = eStart.lNext;\n  var e;\n  do {\n    e = eNext;\n    eNext = e.lNext;\n\n    e.lFace = null;\n    if (e.rFace() === null) {\n      // delete the edge -- see mesh.deleteEdge above\n      if (e.oNext === e) {\n        libtess.mesh.killVertex_(e.org, null);\n\n      } else {\n        // Make sure that e.org points to a valid half-edge\n        e.org.anEdge = e.oNext;\n        libtess.mesh.splice_(e, e.oPrev());\n      }\n\n      var eSym = e.sym;\n\n      if (eSym.oNext === eSym) {\n        libtess.mesh.killVertex_(eSym.org, null);\n\n      } else {\n        // Make sure that eSym.org points to a valid half-edge\n        eSym.org.anEdge = eSym.oNext;\n        libtess.mesh.splice_(eSym, eSym.oPrev());\n      }\n      libtess.mesh.killEdge_(e);\n    }\n  } while (e !== eStart);\n\n  // delete from circular doubly-linked list\n  var fPrev = fZap.prev;\n  var fNext = fZap.next;\n  fNext.prev = fPrev;\n  fPrev.next = fNext;\n\n  // TODO(bckenny): memFree( fZap );\n  // TODO(bckenny): probably null at callsite\n};\n\n// TODO(bckenny): meshUnion isn't called within libtess and isn't part of the\n// public API. Could be useful if more mesh manipulation functions are exposed.\n/* istanbul ignore next */\n/**\n * meshUnion() forms the union of all structures in\n * both meshes, and returns the new mesh (the old meshes are destroyed).\n *\n * @param {!libtess.GluMesh} mesh1\n * @param {!libtess.GluMesh} mesh2\n * @return {!libtess.GluMesh}\n */\nlibtess.mesh.meshUnion = function(mesh1, mesh2) {\n  // TODO(bceknny): probably move to GluMesh method\n  var f1 = mesh1.fHead;\n  var v1 = mesh1.vHead;\n  var e1 = mesh1.eHead;\n\n  var f2 = mesh2.fHead;\n  var v2 = mesh2.vHead;\n  var e2 = mesh2.eHead;\n\n  // Add the faces, vertices, and edges of mesh2 to those of mesh1\n  if (f2.next !== f2) {\n    f1.prev.next = f2.next;\n    f2.next.prev = f1.prev;\n    f2.prev.next = f1;\n    f1.prev = f2.prev;\n  }\n\n  if (v2.next !== v2) {\n    v1.prev.next = v2.next;\n    v2.next.prev = v1.prev;\n    v2.prev.next = v1;\n    v1.prev = v2.prev;\n  }\n\n  if (e2.next !== e2) {\n    e1.sym.next.sym.next = e2.next;\n    e2.next.sym.next = e1.sym.next;\n    e2.sym.next.sym.next = e1;\n    e1.sym.next = e2.sym.next;\n  }\n\n  // TODO(bckenny): memFree(mesh2);\n  // TODO(bckenny): If function is kept, remove mesh2's data to enforce.\n  return mesh1;\n};\n\n\n/**\n * deleteMesh(mesh) will free all storage for any valid mesh.\n * @param {libtess.GluMesh} mesh [description].\n */\nlibtess.mesh.deleteMesh = function(mesh) {\n  // TODO(bckenny): unnecessary, I think.\n  // TODO(bckenny): might want to explicitly null at callsite\n  // lots of memFrees. see also DELETE_BY_ZAPPING\n};\n\n/************************ Utility Routines ************************/\n\n\n/**\n * Creates a new pair of half-edges which form their own loop.\n * No vertex or face structures are allocated, but these must be assigned\n * before the current edge operation is completed.\n *\n * TODO(bckenny): warning about eNext strictly being first of pair? (see code)\n *\n * @private\n * @param {libtess.GluHalfEdge} eNext [description].\n * @return {libtess.GluHalfEdge} [description].\n */\nlibtess.mesh.makeEdgePair_ = function(eNext) {\n  var e = new libtess.GluHalfEdge();\n  var eSym = new libtess.GluHalfEdge();\n\n  // TODO(bckenny): how do we ensure this? see above comment in jsdoc\n  // Make sure eNext points to the first edge of the edge pair\n  // if (eNext->Sym < eNext ) { eNext = eNext->Sym; }\n\n  // NOTE(bckenny): check this for bugs in current implementation!\n\n  // Insert in circular doubly-linked list before eNext.\n  // Note that the prev pointer is stored in sym.next.\n  var ePrev = eNext.sym.next;\n  eSym.next = ePrev;\n  ePrev.sym.next = e;\n  e.next = eNext;\n  eNext.sym.next = eSym;\n\n  e.sym = eSym;\n  e.oNext = e;\n  e.lNext = eSym;\n\n  eSym.sym = e;\n  eSym.oNext = eSym;\n  eSym.lNext = e;\n\n  return e;\n};\n\n\n/**\n * splice_ is best described by the Guibas/Stolfi paper or the\n * CS348a notes. Basically, it modifies the mesh so that\n * a.oNext and b.oNext are exchanged. This can have various effects\n * depending on whether a and b belong to different face or vertex rings.\n * For more explanation see mesh.meshSplice below.\n *\n * @private\n * @param {libtess.GluHalfEdge} a [description].\n * @param {libtess.GluHalfEdge} b [description].\n */\nlibtess.mesh.splice_ = function(a, b) {\n  var aONext = a.oNext;\n  var bONext = b.oNext;\n\n  aONext.sym.lNext = b;\n  bONext.sym.lNext = a;\n  a.oNext = bONext;\n  b.oNext = aONext;\n};\n\n\n/**\n * makeVertex_(eOrig, vNext) attaches a new vertex and makes it the\n * origin of all edges in the vertex loop to which eOrig belongs. \"vNext\" gives\n * a place to insert the new vertex in the global vertex list.  We insert\n * the new vertex *before* vNext so that algorithms which walk the vertex\n * list will not see the newly created vertices.\n *\n * NOTE: unlike original, acutally allocates new vertex.\n *\n * @private\n * @param {libtess.GluHalfEdge} eOrig [description].\n * @param {libtess.GluVertex} vNext [description].\n */\nlibtess.mesh.makeVertex_ = function(eOrig, vNext) {\n  // insert in circular doubly-linked list before vNext\n  var vPrev = vNext.prev;\n  var vNew = new libtess.GluVertex(vNext, vPrev);\n  vPrev.next = vNew;\n  vNext.prev = vNew;\n\n  vNew.anEdge = eOrig;\n  // leave coords, s, t undefined\n  // TODO(bckenny): does above line mean 0 specifically, or does it matter?\n\n  // fix other edges on this vertex loop\n  var e = eOrig;\n  do {\n    e.org = vNew;\n    e = e.oNext;\n  } while (e !== eOrig);\n};\n\n\n/**\n * makeFace_(eOrig, fNext) attaches a new face and makes it the left\n * face of all edges in the face loop to which eOrig belongs. \"fNext\" gives\n * a place to insert the new face in the global face list.  We insert\n * the new face *before* fNext so that algorithms which walk the face\n * list will not see the newly created faces.\n *\n * NOTE: unlike original, acutally allocates new face.\n *\n * @private\n * @param {libtess.GluHalfEdge} eOrig [description].\n * @param {libtess.GluFace} fNext [description].\n */\nlibtess.mesh.makeFace_ = function(eOrig, fNext) {\n  // insert in circular doubly-linked list before fNext\n  var fPrev = fNext.prev;\n  var fNew = new libtess.GluFace(fNext, fPrev);\n  fPrev.next = fNew;\n  fNext.prev = fNew;\n\n  fNew.anEdge = eOrig;\n\n  // The new face is marked \"inside\" if the old one was.  This is a\n  // convenience for the common case where a face has been split in two.\n  fNew.inside = fNext.inside;\n\n  // fix other edges on this face loop\n  var e = eOrig;\n  do {\n    e.lFace = fNew;\n    e = e.lNext;\n  } while (e !== eOrig);\n};\n\n\n/**\n * killEdge_ destroys an edge (the half-edges eDel and eDel.sym),\n * and removes from the global edge list.\n *\n * @private\n * @param {libtess.GluHalfEdge} eDel [description].\n */\nlibtess.mesh.killEdge_ = function(eDel) {\n  // TODO(bckenny): in this case, no need to worry(?), but check when checking mesh.makeEdgePair_\n  // Half-edges are allocated in pairs, see EdgePair above\n  // if (eDel->Sym < eDel ) { eDel = eDel->Sym; }\n\n  // delete from circular doubly-linked list\n  var eNext = eDel.next;\n  var ePrev = eDel.sym.next;\n  eNext.sym.next = ePrev;\n  ePrev.sym.next = eNext;\n\n  // TODO(bckenny): memFree( eDel ); (which also frees eDel.sym)\n  // TODO(bckenny): need to null at callsites?\n};\n\n\n/**\n * killVertex_ destroys a vertex and removes it from the global\n * vertex list. It updates the vertex loop to point to a given new vertex.\n *\n * @private\n * @param {libtess.GluVertex} vDel [description].\n * @param {libtess.GluVertex} newOrg [description].\n */\nlibtess.mesh.killVertex_ = function(vDel, newOrg) {\n  var eStart = vDel.anEdge;\n\n  // change the origin of all affected edges\n  var e = eStart;\n  do {\n    e.org = newOrg;\n    e = e.oNext;\n  } while (e !== eStart);\n\n  // delete from circular doubly-linked list\n  var vPrev = vDel.prev;\n  var vNext = vDel.next;\n  vNext.prev = vPrev;\n  vPrev.next = vNext;\n\n  // TODO(bckenny): memFree( vDel );\n  // TODO(bckenny): need to null at callsites?\n};\n\n\n/**\n * killFace_ destroys a face and removes it from the global face\n * list. It updates the face loop to point to a given new face.\n *\n * @private\n * @param {libtess.GluFace} fDel [description].\n * @param {libtess.GluFace} newLFace [description].\n */\nlibtess.mesh.killFace_ = function(fDel, newLFace) {\n  var eStart = fDel.anEdge;\n\n  // change the left face of all affected edges\n  var e = eStart;\n  do {\n    e.lFace = newLFace;\n    e = e.lNext;\n  } while (e !== eStart);\n\n  // delete from circular doubly-linked list\n  var fPrev = fDel.prev;\n  var fNext = fDel.next;\n  fNext.prev = fPrev;\n  fPrev.next = fNext;\n\n  // TODO(bckenny): memFree( fDel );\n  // TODO(bckenny): need to null at callsites?\n};\n\n\n/* global libtess */\n\n/** @const */\nlibtess.normal = {};\n\n// TODO(bckenny): Integrate SLANTED_SWEEP somehow?\n/* The \"feature merging\" is not intended to be complete. There are\n * special cases where edges are nearly parallel to the sweep line\n * which are not implemented. The algorithm should still behave\n * robustly (ie. produce a reasonable tesselation) in the presence\n * of such edges, however it may miss features which could have been\n * merged. We could minimize this effect by choosing the sweep line\n * direction to be something unusual (ie. not parallel to one of the\n * coordinate axes).\n * #if defined(SLANTED_SWEEP)\n * #define S_UNIT_X  0.50941539564955385 // Pre-normalized\n * #define S_UNIT_Y  0.86052074622010633\n * #endif\n */\n\n/**\n * X coordinate of local basis for polygon projection.\n * @private\n * @const\n */\nlibtess.normal.S_UNIT_X_ = 1.0;\n\n/**\n * Y coordinate of local basis for polygon projection.\n * @private\n * @const\n */\nlibtess.normal.S_UNIT_Y_ = 0.0;\n\n/**\n * Determines a polygon normal and projects vertices onto the plane of the\n * polygon.\n * @param {!libtess.GluTesselator} tess\n */\nlibtess.normal.projectPolygon = function(tess) {\n  var computedNormal = false;\n\n  var norm = [\n    tess.normal[0],\n    tess.normal[1],\n    tess.normal[2]\n  ];\n  if (norm[0] === 0 && norm[1] === 0 && norm[2] === 0) {\n    libtess.normal.computeNormal_(tess, norm);\n    computedNormal = true;\n  }\n\n  var sUnit = tess.sUnit;\n  var tUnit = tess.tUnit;\n  var i = libtess.normal.longAxis_(norm);\n\n  // NOTE(bckenny): This branch is never taken. See comment on\n  // libtess.TRUE_PROJECT.\n  /* istanbul ignore if */\n  if (libtess.TRUE_PROJECT) {\n    // Choose the initial sUnit vector to be approximately perpendicular\n    // to the normal.\n    libtess.normal.normalize_(norm);\n\n    sUnit[i] = 0;\n    sUnit[(i + 1) % 3] = libtess.normal.S_UNIT_X_;\n    sUnit[(i + 2) % 3] = libtess.normal.S_UNIT_Y_;\n\n    // Now make it exactly perpendicular\n    var w = libtess.normal.dot_(sUnit, norm);\n    sUnit[0] -= w * norm[0];\n    sUnit[1] -= w * norm[1];\n    sUnit[2] -= w * norm[2];\n    libtess.normal.normalize_(sUnit);\n\n    // Choose tUnit so that (sUnit,tUnit,norm) form a right-handed frame\n    tUnit[0] = norm[1] * sUnit[2] - norm[2] * sUnit[1];\n    tUnit[1] = norm[2] * sUnit[0] - norm[0] * sUnit[2];\n    tUnit[2] = norm[0] * sUnit[1] - norm[1] * sUnit[0];\n    libtess.normal.normalize_(tUnit);\n\n  } else {\n    // Project perpendicular to a coordinate axis -- better numerically\n    sUnit[i] = 0;\n    sUnit[(i + 1) % 3] = libtess.normal.S_UNIT_X_;\n    sUnit[(i + 2) % 3] = libtess.normal.S_UNIT_Y_;\n\n    tUnit[i] = 0;\n    tUnit[(i + 1) % 3] = (norm[i] > 0) ?\n        -libtess.normal.S_UNIT_Y_ : libtess.normal.S_UNIT_Y_;\n    tUnit[(i + 2) % 3] = (norm[i] > 0) ?\n        libtess.normal.S_UNIT_X_ : -libtess.normal.S_UNIT_X_;\n  }\n\n  // Project the vertices onto the sweep plane\n  var vHead = tess.mesh.vHead;\n  for (var v = vHead.next; v !== vHead; v = v.next) {\n    v.s = libtess.normal.dot_(v.coords, sUnit);\n    v.t = libtess.normal.dot_(v.coords, tUnit);\n  }\n\n  if (computedNormal) {\n    libtess.normal.checkOrientation_(tess);\n  }\n};\n\n/**\n * Computes the dot product of vectors u and v.\n * @private\n * @param {!Array.<number>} u\n * @param {!Array.<number>} v\n * @return {number}\n */\nlibtess.normal.dot_ = function(u, v) {\n  return u[0] * v[0] + u[1] * v[1] + u[2] * v[2];\n};\n\n// NOTE(bckenny): only called from within libtess.normal.projectPolygon's\n// TRUE_PROJECT branch, so ignoring for code coverage.\n/* istanbul ignore next */\n/**\n * Normalize vector v.\n * @private\n * @param {!Array.<number>} v\n */\nlibtess.normal.normalize_ = function(v) {\n  var len = v[0] * v[0] + v[1] * v[1] + v[2] * v[2];\n\n  len = Math.sqrt(len);\n  v[0] /= len;\n  v[1] /= len;\n  v[2] /= len;\n};\n\n/**\n * Returns the index of the longest component of vector v.\n * @private\n * @param {!Array.<number>} v\n * @return {number}\n */\nlibtess.normal.longAxis_ = function(v) {\n  var i = 0;\n\n  if (Math.abs(v[1]) > Math.abs(v[0])) {\n    i = 1;\n  }\n  if (Math.abs(v[2]) > Math.abs(v[i])) {\n    i = 2;\n  }\n\n  return i;\n};\n\n/**\n * Compute an approximate normal of the polygon from the vertices themselves.\n * Result returned in norm.\n * @private\n * @param {!libtess.GluTesselator} tess\n * @param {!Array.<number>} norm\n */\nlibtess.normal.computeNormal_ = function(tess, norm) {\n  var maxVal = [\n    -2 * libtess.GLU_TESS_MAX_COORD,\n    -2 * libtess.GLU_TESS_MAX_COORD,\n    -2 * libtess.GLU_TESS_MAX_COORD\n  ];\n  var minVal = [\n    2 * libtess.GLU_TESS_MAX_COORD,\n    2 * libtess.GLU_TESS_MAX_COORD,\n    2 * libtess.GLU_TESS_MAX_COORD\n  ];\n  var maxVert = [];\n  var minVert = [];\n\n  var v;\n  var vHead = tess.mesh.vHead;\n  for (v = vHead.next; v !== vHead; v = v.next) {\n    for (var i = 0; i < 3; ++i) {\n      var c = v.coords[i];\n      if (c < minVal[i]) { minVal[i] = c; minVert[i] = v; }\n      if (c > maxVal[i]) { maxVal[i] = c; maxVert[i] = v; }\n    }\n  }\n\n  // Find two vertices separated by at least 1/sqrt(3) of the maximum\n  // distance between any two vertices\n  var index = 0;\n  if (maxVal[1] - minVal[1] > maxVal[0] - minVal[0]) { index = 1; }\n  if (maxVal[2] - minVal[2] > maxVal[index] - minVal[index]) { index = 2; }\n  if (minVal[index] >= maxVal[index]) {\n    // All vertices are the same -- normal doesn't matter\n    norm[0] = 0; norm[1] = 0; norm[2] = 1;\n    return;\n  }\n\n  // Look for a third vertex which forms the triangle with maximum area\n  // (Length of normal == twice the triangle area)\n  var maxLen2 = 0;\n  var v1 = minVert[index];\n  var v2 = maxVert[index];\n  var tNorm = [0, 0, 0];\n  var d1 = [\n    v1.coords[0] - v2.coords[0],\n    v1.coords[1] - v2.coords[1],\n    v1.coords[2] - v2.coords[2]\n  ];\n  var d2 = [0, 0, 0];\n  for (v = vHead.next; v !== vHead; v = v.next) {\n    d2[0] = v.coords[0] - v2.coords[0];\n    d2[1] = v.coords[1] - v2.coords[1];\n    d2[2] = v.coords[2] - v2.coords[2];\n    tNorm[0] = d1[1] * d2[2] - d1[2] * d2[1];\n    tNorm[1] = d1[2] * d2[0] - d1[0] * d2[2];\n    tNorm[2] = d1[0] * d2[1] - d1[1] * d2[0];\n    var tLen2 = tNorm[0] * tNorm[0] + tNorm[1] * tNorm[1] + tNorm[2] * tNorm[2];\n    if (tLen2 > maxLen2) {\n      maxLen2 = tLen2;\n      norm[0] = tNorm[0];\n      norm[1] = tNorm[1];\n      norm[2] = tNorm[2];\n    }\n  }\n\n  if (maxLen2 <= 0) {\n    // All points lie on a single line -- any decent normal will do\n    norm[0] = norm[1] = norm[2] = 0;\n    norm[libtess.normal.longAxis_(d1)] = 1;\n  }\n};\n\n/**\n * Check that the sum of the signed area of all projected contours is\n * non-negative. If not, negate the t-coordinates to reverse the orientation and\n * make it so.\n * @private\n * @param {!libtess.GluTesselator} tess\n */\nlibtess.normal.checkOrientation_ = function(tess) {\n  var area = 0;\n  var fHead = tess.mesh.fHead;\n  for (var f = fHead.next; f !== fHead; f = f.next) {\n    var e = f.anEdge;\n    if (e.winding <= 0) { continue; }\n    do {\n      area += (e.org.s - e.dst().s) * (e.org.t + e.dst().t);\n      e = e.lNext;\n    } while (e !== f.anEdge);\n  }\n\n  if (area < 0) {\n    // Reverse the orientation by flipping all the t-coordinates\n    var vHead = tess.mesh.vHead;\n    for (var v = vHead.next; v !== vHead; v = v.next) {\n      v.t = -v.t;\n    }\n    tess.tUnit[0] = -tess.tUnit[0];\n    tess.tUnit[1] = -tess.tUnit[1];\n    tess.tUnit[2] = -tess.tUnit[2];\n  }\n};\n\n\n/* global libtess */\n\n/** @const */\nlibtess.render = {};\n\n/**\n * Takes a mesh, breaks it into separate triangles, and renders them. The\n * rendering output is provided as callbacks (see the API). Set flagEdges to\n * true to get edgeFlag callbacks (tess.flagBoundary in original libtess).\n * @param {!libtess.GluTesselator} tess\n * @param {!libtess.GluMesh} mesh\n * @param {boolean} flagEdges\n */\nlibtess.render.renderMesh = function(tess, mesh, flagEdges) {\n  var beginOrBeginDataCalled = false;\n\n  // TODO(bckenny): edgeState needs to be boolean, but !== on first call\n  // force edge state output for first vertex\n  var edgeState = -1;\n\n  // We examine all faces in an arbitrary order. Whenever we find\n  // an inside triangle f, we render f.\n  // NOTE(bckenny): go backwards through face list to match original libtess\n  // triangle order\n  for (var f = mesh.fHead.prev; f !== mesh.fHead; f = f.prev) {\n    if (f.inside) {\n      // We're going to emit a triangle, so call begin callback once\n      if (!beginOrBeginDataCalled) {\n        tess.callBeginOrBeginData(libtess.primitiveType.GL_TRIANGLES);\n        beginOrBeginDataCalled = true;\n      }\n\n      // check that face has only three edges\n      var e = f.anEdge;\n      // Loop once for each edge (there will always be 3 edges)\n      do {\n        if (flagEdges) {\n          // Set the \"edge state\" to true just before we output the\n          // first vertex of each edge on the polygon boundary.\n          var newState = !e.rFace().inside ? 1 : 0; // TODO(bckenny): total hack to get edgeState working. fix me.\n          if (edgeState !== newState) {\n            edgeState = newState;\n            // TODO(bckenny): edgeState should be boolean now\n            tess.callEdgeFlagOrEdgeFlagData(!!edgeState);\n          }\n        }\n\n        // emit vertex\n        tess.callVertexOrVertexData(e.org.data);\n\n        e = e.lNext;\n      } while (e !== f.anEdge);\n    }\n  }\n\n  // only call end callback if begin was called\n  if (beginOrBeginDataCalled) {\n    tess.callEndOrEndData();\n  }\n};\n\n/**\n * Takes a mesh, and outputs one contour for each face marked \"inside\". The\n * rendering output is provided as callbacks (see the API).\n * @param {!libtess.GluTesselator} tess\n * @param {!libtess.GluMesh} mesh\n */\nlibtess.render.renderBoundary = function(tess, mesh) {\n  for (var f = mesh.fHead.next; f !== mesh.fHead; f = f.next) {\n    if (f.inside) {\n      tess.callBeginOrBeginData(libtess.primitiveType.GL_LINE_LOOP);\n\n      var e = f.anEdge;\n      do {\n        tess.callVertexOrVertexData(e.org.data);\n        e = e.lNext;\n      } while (e !== f.anEdge);\n\n      tess.callEndOrEndData();\n    }\n  }\n};\n\n\n/* global libtess */\n\n// TODO(bckenny): a number of these never return null (as opposed to original) and should be typed appropriately\n\n/*\n * Invariants for the Edge Dictionary.\n * - each pair of adjacent edges e2=succ(e1) satisfies edgeLeq_(e1,e2)\n *   at any valid location of the sweep event\n * - if edgeLeq_(e2,e1) as well (at any valid sweep event), then e1 and e2\n *   share a common endpoint\n * - for each e, e.dst() has been processed, but not e.org\n * - each edge e satisfies vertLeq(e.dst(),event) && vertLeq(event,e.org)\n *   where \"event\" is the current sweep line event.\n * - no edge e has zero length\n *\n * Invariants for the Mesh (the processed portion).\n * - the portion of the mesh left of the sweep line is a planar graph,\n *   ie. there is *some* way to embed it in the plane\n * - no processed edge has zero length\n * - no two processed vertices have identical coordinates\n * - each \"inside\" region is monotone, ie. can be broken into two chains\n *   of monotonically increasing vertices according to VertLeq(v1,v2)\n *   - a non-invariant: these chains may intersect (very slightly)\n *\n * Invariants for the Sweep.\n * - if none of the edges incident to the event vertex have an activeRegion\n *   (ie. none of these edges are in the edge dictionary), then the vertex\n *   has only right-going edges.\n * - if an edge is marked \"fixUpperEdge\" (it is a temporary edge introduced\n *   by ConnectRightVertex), then it is the only right-going edge from\n *   its associated vertex.  (This says that these edges exist only\n *   when it is necessary.)\n */\n\n/** @const */\nlibtess.sweep = {};\n\n\n/**\n * Make the sentinel coordinates big enough that they will never be\n * merged with real input features.  (Even with the largest possible\n * input contour and the maximum tolerance of 1.0, no merging will be\n * done with coordinates larger than 3 * libtess.GLU_TESS_MAX_COORD).\n * @private\n * @const\n * @type {number}\n */\nlibtess.sweep.SENTINEL_COORD_ = 4 * libtess.GLU_TESS_MAX_COORD;\n\n\n/**\n * Because vertices at exactly the same location are merged together\n * before we process the sweep event, some degenerate cases can't occur.\n * However if someone eventually makes the modifications required to\n * merge features which are close together, the cases below marked\n * TOLERANCE_NONZERO will be useful.  They were debugged before the\n * code to merge identical vertices in the main loop was added.\n * @private\n * @const\n * @type {boolean}\n */\nlibtess.sweep.TOLERANCE_NONZERO_ = false;\n\n\n/**\n * computeInterior(tess) computes the planar arrangement specified\n * by the given contours, and further subdivides this arrangement\n * into regions. Each region is marked \"inside\" if it belongs\n * to the polygon, according to the rule given by tess.windingRule.\n * Each interior region is guaranteed be monotone.\n *\n * @param {libtess.GluTesselator} tess [description].\n */\nlibtess.sweep.computeInterior = function(tess) {\n  tess.fatalError = false;\n\n  // Each vertex defines an event for our sweep line. Start by inserting\n  // all the vertices in a priority queue. Events are processed in\n  // lexicographic order, ie.\n  // e1 < e2  iff  e1.x < e2.x || (e1.x == e2.x && e1.y < e2.y)\n  libtess.sweep.removeDegenerateEdges_(tess);\n  libtess.sweep.initPriorityQ_(tess);\n  libtess.sweep.initEdgeDict_(tess);\n\n  // TODO(bckenny): don't need the cast if pq's key is better typed\n  var v;\n  while ((v = /** @type {libtess.GluVertex} */(tess.pq.extractMin())) !== null) {\n    for (;;) {\n      var vNext = /** @type {libtess.GluVertex} */(tess.pq.minimum());\n      if (vNext === null || !libtess.geom.vertEq(vNext, v)) {\n        break;\n      }\n\n      /* Merge together all vertices at exactly the same location.\n       * This is more efficient than processing them one at a time,\n       * simplifies the code (see connectLeftDegenerate), and is also\n       * important for correct handling of certain degenerate cases.\n       * For example, suppose there are two identical edges A and B\n       * that belong to different contours (so without this code they would\n       * be processed by separate sweep events).  Suppose another edge C\n       * crosses A and B from above.  When A is processed, we split it\n       * at its intersection point with C.  However this also splits C,\n       * so when we insert B we may compute a slightly different\n       * intersection point.  This might leave two edges with a small\n       * gap between them.  This kind of error is especially obvious\n       * when using boundary extraction (GLU_TESS_BOUNDARY_ONLY).\n       */\n      vNext = /** @type {libtess.GluVertex} */(tess.pq.extractMin());\n      libtess.sweep.spliceMergeVertices_(tess, v.anEdge, vNext.anEdge);\n    }\n    libtess.sweep.sweepEvent_(tess, v);\n  }\n\n  // TODO(bckenny): what does the next comment mean? can we eliminate event except when debugging?\n  // Set tess.event for debugging purposes\n  var minRegion = tess.dict.getMin().getKey();\n  tess.event = minRegion.eUp.org;\n  libtess.sweep.doneEdgeDict_(tess);\n  libtess.sweep.donePriorityQ_(tess);\n\n  libtess.sweep.removeDegenerateFaces_(tess.mesh);\n  tess.mesh.checkMesh();\n};\n\n\n/**\n * When we merge two edges into one, we need to compute the combined\n * winding of the new edge.\n * @private\n * @param {libtess.GluHalfEdge} eDst [description].\n * @param {libtess.GluHalfEdge} eSrc [description].\n */\nlibtess.sweep.addWinding_ = function(eDst, eSrc) {\n  // NOTE(bckenny): from AddWinding macro\n  eDst.winding += eSrc.winding;\n  eDst.sym.winding += eSrc.sym.winding;\n};\n\n\n/**\n * Both edges must be directed from right to left (this is the canonical\n * direction for the upper edge of each region).\n *\n * The strategy is to evaluate a \"t\" value for each edge at the\n * current sweep line position, given by tess.event.  The calculations\n * are designed to be very stable, but of course they are not perfect.\n *\n * Special case: if both edge destinations are at the sweep event,\n * we sort the edges by slope (they would otherwise compare equally).\n *\n * @private\n * @param {!libtess.GluTesselator} tess\n * @param {!libtess.ActiveRegion} reg1\n * @param {!libtess.ActiveRegion} reg2\n * @return {boolean}\n */\nlibtess.sweep.edgeLeq_ = function(tess, reg1, reg2) {\n  var event = tess.event;\n  var e1 = reg1.eUp;\n  var e2 = reg2.eUp;\n\n  if (e1.dst() === event) {\n    if (e2.dst() === event) {\n      // Two edges right of the sweep line which meet at the sweep event.\n      // Sort them by slope.\n      if (libtess.geom.vertLeq(e1.org, e2.org)) {\n        return libtess.geom.edgeSign(e2.dst(), e1.org, e2.org) <= 0;\n      }\n\n      return libtess.geom.edgeSign(e1.dst(), e2.org, e1.org) >= 0;\n    }\n\n    return libtess.geom.edgeSign(e2.dst(), event, e2.org) <= 0;\n  }\n\n  if (e2.dst() === event) {\n    return libtess.geom.edgeSign(e1.dst(), event, e1.org) >= 0;\n  }\n\n  // General case - compute signed distance *from* e1, e2 to event\n  var t1 = libtess.geom.edgeEval(e1.dst(), event, e1.org);\n  var t2 = libtess.geom.edgeEval(e2.dst(), event, e2.org);\n  return (t1 >= t2);\n};\n\n\n/**\n * [deleteRegion_ description]\n * @private\n * @param {libtess.GluTesselator} tess [description].\n * @param {libtess.ActiveRegion} reg [description].\n */\nlibtess.sweep.deleteRegion_ = function(tess, reg) {\n  if (reg.fixUpperEdge) {\n    // It was created with zero winding number, so it better be\n    // deleted with zero winding number (ie. it better not get merged\n    // with a real edge).\n  }\n\n  reg.eUp.activeRegion = null;\n\n  tess.dict.deleteNode(reg.nodeUp);\n  reg.nodeUp = null;\n\n  // memFree( reg ); TODO(bckenny)\n  // TODO(bckenny): may need to null at callsite\n};\n\n\n/**\n * Replace an upper edge which needs fixing (see connectRightVertex).\n * @private\n * @param {libtess.ActiveRegion} reg [description].\n * @param {libtess.GluHalfEdge} newEdge [description].\n */\nlibtess.sweep.fixUpperEdge_ = function(reg, newEdge) {\n  libtess.mesh.deleteEdge(reg.eUp);\n\n  reg.fixUpperEdge = false;\n  reg.eUp = newEdge;\n  newEdge.activeRegion = reg;\n};\n\n\n/**\n * Find the region above the uppermost edge with the same origin.\n * @private\n * @param {libtess.ActiveRegion} reg [description].\n * @return {libtess.ActiveRegion} [description].\n */\nlibtess.sweep.topLeftRegion_ = function(reg) {\n  var org = reg.eUp.org;\n\n  // Find the region above the uppermost edge with the same origin\n  do {\n    reg = reg.regionAbove();\n  } while (reg.eUp.org === org);\n\n  // If the edge above was a temporary edge introduced by connectRightVertex,\n  // now is the time to fix it.\n  if (reg.fixUpperEdge) {\n    var e = libtess.mesh.connect(reg.regionBelow().eUp.sym, reg.eUp.lNext);\n    libtess.sweep.fixUpperEdge_(reg, e);\n    reg = reg.regionAbove();\n  }\n\n  return reg;\n};\n\n\n/**\n * Find the region above the uppermost edge with the same destination.\n * @private\n * @param {libtess.ActiveRegion} reg [description].\n * @return {libtess.ActiveRegion} [description].\n */\nlibtess.sweep.topRightRegion_ = function(reg) {\n  var dst = reg.eUp.dst();\n\n  do {\n    reg = reg.regionAbove();\n  } while (reg.eUp.dst() === dst);\n\n  return reg;\n};\n\n\n/**\n * Add a new active region to the sweep line, *somewhere* below \"regAbove\"\n * (according to where the new edge belongs in the sweep-line dictionary).\n * The upper edge of the new region will be \"eNewUp\".\n * Winding number and \"inside\" flag are not updated.\n *\n * @private\n * @param {libtess.GluTesselator} tess [description].\n * @param {libtess.ActiveRegion} regAbove [description].\n * @param {libtess.GluHalfEdge} eNewUp [description].\n * @return {libtess.ActiveRegion} regNew.\n */\nlibtess.sweep.addRegionBelow_ = function(tess, regAbove, eNewUp) {\n  var regNew = new libtess.ActiveRegion();\n\n  regNew.eUp = eNewUp;\n  regNew.nodeUp = tess.dict.insertBefore(regAbove.nodeUp, regNew);\n  eNewUp.activeRegion = regNew;\n\n  return regNew;\n};\n\n\n/**\n * [isWindingInside_ description]\n * @private\n * @param {libtess.GluTesselator} tess [description].\n * @param {number} n int.\n * @return {boolean} [description].\n */\nlibtess.sweep.isWindingInside_ = function(tess, n) {\n  switch (tess.windingRule) {\n    case libtess.windingRule.GLU_TESS_WINDING_ODD:\n      return ((n & 1) !== 0);\n    case libtess.windingRule.GLU_TESS_WINDING_NONZERO:\n      return (n !== 0);\n    case libtess.windingRule.GLU_TESS_WINDING_POSITIVE:\n      return (n > 0);\n    case libtess.windingRule.GLU_TESS_WINDING_NEGATIVE:\n      return (n < 0);\n    case libtess.windingRule.GLU_TESS_WINDING_ABS_GEQ_TWO:\n      return (n >= 2) || (n <= -2);\n  }\n\n  // TODO(bckenny): not reached\n  return false;\n};\n\n\n/**\n * [computeWinding_ description]\n * @private\n * @param {libtess.GluTesselator} tess [description].\n * @param {libtess.ActiveRegion} reg [description].\n */\nlibtess.sweep.computeWinding_ = function(tess, reg) {\n  reg.windingNumber = reg.regionAbove().windingNumber + reg.eUp.winding;\n  reg.inside = libtess.sweep.isWindingInside_(tess, reg.windingNumber);\n};\n\n\n/**\n * Delete a region from the sweep line. This happens when the upper\n * and lower chains of a region meet (at a vertex on the sweep line).\n * The \"inside\" flag is copied to the appropriate mesh face (we could\n * not do this before -- since the structure of the mesh is always\n * changing, this face may not have even existed until now).\n *\n * @private\n * @param {libtess.GluTesselator} tess [description].\n * @param {libtess.ActiveRegion} reg [description].\n */\nlibtess.sweep.finishRegion_ = function(tess, reg) {\n  // TODO(bckenny): may need to null reg at callsite\n\n  var e = reg.eUp;\n  var f = e.lFace;\n\n  f.inside = reg.inside;\n  f.anEdge = e;   // optimization for tessmono.tessellateMonoRegion() // TODO(bckenny): how so?\n  libtess.sweep.deleteRegion_(tess, reg);\n};\n\n\n/**\n * We are given a vertex with one or more left-going edges. All affected\n * edges should be in the edge dictionary. Starting at regFirst.eUp,\n * we walk down deleting all regions where both edges have the same\n * origin vOrg. At the same time we copy the \"inside\" flag from the\n * active region to the face, since at this point each face will belong\n * to at most one region (this was not necessarily true until this point\n * in the sweep). The walk stops at the region above regLast; if regLast\n * is null we walk as far as possible. At the same time we relink the\n * mesh if necessary, so that the ordering of edges around vOrg is the\n * same as in the dictionary.\n *\n * @private\n * @param {libtess.GluTesselator} tess [description].\n * @param {libtess.ActiveRegion} regFirst [description].\n * @param {libtess.ActiveRegion} regLast [description].\n * @return {libtess.GluHalfEdge} [description].\n */\nlibtess.sweep.finishLeftRegions_ = function(tess, regFirst, regLast) {\n  var regPrev = regFirst;\n  var ePrev = regFirst.eUp;\n  while (regPrev !== regLast) {\n    // placement was OK\n    regPrev.fixUpperEdge = false;\n    var reg = regPrev.regionBelow();\n    var e = reg.eUp;\n    if (e.org !== ePrev.org) {\n      if (!reg.fixUpperEdge) {\n        /* Remove the last left-going edge. Even though there are no further\n         * edges in the dictionary with this origin, there may be further\n         * such edges in the mesh (if we are adding left edges to a vertex\n         * that has already been processed). Thus it is important to call\n         * finishRegion rather than just deleteRegion.\n         */\n        libtess.sweep.finishRegion_(tess, regPrev);\n        break;\n      }\n\n      // If the edge below was a temporary edge introduced by\n      // connectRightVertex, now is the time to fix it.\n      e = libtess.mesh.connect(ePrev.lPrev(), e.sym);\n      libtess.sweep.fixUpperEdge_(reg, e);\n    }\n\n    // Relink edges so that ePrev.oNext === e\n    if (ePrev.oNext !== e) {\n      libtess.mesh.meshSplice(e.oPrev(), e);\n      libtess.mesh.meshSplice(ePrev, e);\n    }\n\n    // may change reg.eUp\n    libtess.sweep.finishRegion_(tess, regPrev);\n    ePrev = reg.eUp;\n    regPrev = reg;\n  }\n\n  return ePrev;\n};\n\n\n/**\n * Purpose: insert right-going edges into the edge dictionary, and update\n * winding numbers and mesh connectivity appropriately. All right-going\n * edges share a common origin vOrg. Edges are inserted CCW starting at\n * eFirst; the last edge inserted is eLast.oPrev. If vOrg has any\n * left-going edges already processed, then eTopLeft must be the edge\n * such that an imaginary upward vertical segment from vOrg would be\n * contained between eTopLeft.oPrev and eTopLeft; otherwise eTopLeft\n * should be null.\n *\n * @private\n * @param {libtess.GluTesselator} tess [description].\n * @param {libtess.ActiveRegion} regUp [description].\n * @param {libtess.GluHalfEdge} eFirst [description].\n * @param {libtess.GluHalfEdge} eLast [description].\n * @param {libtess.GluHalfEdge} eTopLeft [description].\n * @param {boolean} cleanUp [description].\n */\nlibtess.sweep.addRightEdges_ = function(tess, regUp, eFirst, eLast, eTopLeft,\n    cleanUp) {\n\n  var firstTime = true;\n\n  // Insert the new right-going edges in the dictionary\n  var e = eFirst;\n  do {\n    libtess.sweep.addRegionBelow_(tess, regUp, e.sym);\n    e = e.oNext;\n  } while (e !== eLast);\n\n  // Walk *all* right-going edges from e.org, in the dictionary order,\n  // updating the winding numbers of each region, and re-linking the mesh\n  // edges to match the dictionary ordering (if necessary).\n  if (eTopLeft === null) {\n    eTopLeft = regUp.regionBelow().eUp.rPrev();\n  }\n  var regPrev = regUp;\n  var ePrev = eTopLeft;\n  var reg;\n  for (;;) {\n    reg = regPrev.regionBelow();\n    e = reg.eUp.sym;\n    if (e.org !== ePrev.org) {\n      break;\n    }\n\n    if (e.oNext !== ePrev) {\n      // Unlink e from its current position, and relink below ePrev\n      libtess.mesh.meshSplice(e.oPrev(), e);\n      libtess.mesh.meshSplice(ePrev.oPrev(), e);\n    }\n    // Compute the winding number and \"inside\" flag for the new regions\n    reg.windingNumber = regPrev.windingNumber - e.winding;\n    reg.inside = libtess.sweep.isWindingInside_(tess, reg.windingNumber);\n\n    // Check for two outgoing edges with same slope -- process these\n    // before any intersection tests (see example in libtess.sweep.computeInterior).\n    regPrev.dirty = true;\n    if (!firstTime && libtess.sweep.checkForRightSplice_(tess, regPrev)) {\n      libtess.sweep.addWinding_(e, ePrev);\n      libtess.sweep.deleteRegion_(tess, regPrev); // TODO(bckenny): need to null regPrev anywhere else?\n      libtess.mesh.deleteEdge(ePrev);\n    }\n    firstTime = false;\n    regPrev = reg;\n    ePrev = e;\n  }\n\n  regPrev.dirty = true;\n\n  if (cleanUp) {\n    // Check for intersections between newly adjacent edges.\n    libtess.sweep.walkDirtyRegions_(tess, regPrev);\n  }\n};\n\n\n/**\n * [callCombine_ description]\n * @private\n * @param {libtess.GluTesselator} tess [description].\n * @param {libtess.GluVertex} isect [description].\n * @param {Array.<Object>} data [description].\n * @param {Array.<number>} weights [description].\n * @param {boolean} needed [description].\n */\nlibtess.sweep.callCombine_ = function(tess, isect, data, weights, needed) {\n  // Copy coord data in case the callback changes it.\n  var coords = [\n    isect.coords[0],\n    isect.coords[1],\n    isect.coords[2]\n  ];\n\n  isect.data = null;\n  isect.data = tess.callCombineOrCombineData(coords, data, weights);\n  if (isect.data === null) {\n    if (!needed) {\n      // not needed, so just use data from first vertex\n      isect.data = data[0];\n\n    } else if (!tess.fatalError) {\n      // The only way fatal error is when two edges are found to intersect,\n      // but the user has not provided the callback necessary to handle\n      // generated intersection points.\n      tess.callErrorOrErrorData(\n          libtess.errorType.GLU_TESS_NEED_COMBINE_CALLBACK);\n      tess.fatalError = true;\n    }\n  }\n};\n\n\n/**\n * Two vertices with idential coordinates are combined into one.\n * e1.org is kept, while e2.org is discarded.\n * @private\n * @param {libtess.GluTesselator} tess [description].\n * @param {libtess.GluHalfEdge} e1 [description].\n * @param {libtess.GluHalfEdge} e2 [description].\n */\nlibtess.sweep.spliceMergeVertices_ = function(tess, e1, e2) {\n  // TODO(bckenny): better way to init these? save them?\n  var data = [null, null, null, null];\n  var weights = [0.5, 0.5, 0, 0];\n\n  data[0] = e1.org.data;\n  data[1] = e2.org.data;\n  libtess.sweep.callCombine_(tess, e1.org, data, weights, false);\n  libtess.mesh.meshSplice(e1, e2);\n};\n\n\n/**\n * Find some weights which describe how the intersection vertex is\n * a linear combination of org and dst. Each of the two edges\n * which generated \"isect\" is allocated 50% of the weight; each edge\n * splits the weight between its org and dst according to the\n * relative distance to \"isect\".\n *\n * @private\n * @param {libtess.GluVertex} isect [description].\n * @param {libtess.GluVertex} org [description].\n * @param {libtess.GluVertex} dst [description].\n * @param {Array.<number>} weights [description].\n * @param {number} weightIndex Index into weights for first weight to supply.\n */\nlibtess.sweep.vertexWeights_ = function(isect, org, dst, weights, weightIndex) {\n  // TODO(bckenny): think through how we can use L1dist here and be correct for coords\n  var t1 = libtess.geom.vertL1dist(org, isect);\n  var t2 = libtess.geom.vertL1dist(dst, isect);\n\n  // TODO(bckenny): introduced weightIndex to mimic addressing in original\n  // 1) document (though it is private and only used from getIntersectData)\n  // 2) better way? manually inline into getIntersectData? supply two two-length tmp arrays?\n  var i0 = weightIndex;\n  var i1 = weightIndex + 1;\n  weights[i0] = 0.5 * t2 / (t1 + t2);\n  weights[i1] = 0.5 * t1 / (t1 + t2);\n  isect.coords[0] += weights[i0] * org.coords[0] + weights[i1] * dst.coords[0];\n  isect.coords[1] += weights[i0] * org.coords[1] + weights[i1] * dst.coords[1];\n  isect.coords[2] += weights[i0] * org.coords[2] + weights[i1] * dst.coords[2];\n};\n\n\n/**\n * We've computed a new intersection point, now we need a \"data\" pointer\n * from the user so that we can refer to this new vertex in the\n * rendering callbacks.\n * @private\n * @param {libtess.GluTesselator} tess [description].\n * @param {libtess.GluVertex} isect [description].\n * @param {libtess.GluVertex} orgUp [description].\n * @param {libtess.GluVertex} dstUp [description].\n * @param {libtess.GluVertex} orgLo [description].\n * @param {libtess.GluVertex} dstLo [description].\n */\nlibtess.sweep.getIntersectData_ = function(tess, isect, orgUp, dstUp, orgLo,\n    dstLo) {\n\n  // TODO(bckenny): called for every intersection event, should these be from a pool?\n  // TODO(bckenny): better way to init these?\n  var weights = [0, 0, 0, 0];\n  var data = [\n    orgUp.data,\n    dstUp.data,\n    orgLo.data,\n    dstLo.data\n  ];\n\n  // TODO(bckenny): it appears isect is a reappropriated vertex, so does need to be zeroed.\n  // double check this.\n  isect.coords[0] = isect.coords[1] = isect.coords[2] = 0;\n\n  // TODO(bckenny): see note in libtess.sweep.vertexWeights_ for explanation of weightIndex. fix?\n  libtess.sweep.vertexWeights_(isect, orgUp, dstUp, weights, 0);\n  libtess.sweep.vertexWeights_(isect, orgLo, dstLo, weights, 2);\n\n  libtess.sweep.callCombine_(tess, isect, data, weights, true);\n};\n\n\n/**\n * Check the upper and lower edge of regUp, to make sure that the\n * eUp.org is above eLo, or eLo.org is below eUp (depending on which\n * origin is leftmost).\n *\n * The main purpose is to splice right-going edges with the same\n * dest vertex and nearly identical slopes (ie. we can't distinguish\n * the slopes numerically). However the splicing can also help us\n * to recover from numerical errors. For example, suppose at one\n * point we checked eUp and eLo, and decided that eUp.org is barely\n * above eLo. Then later, we split eLo into two edges (eg. from\n * a splice operation like this one). This can change the result of\n * our test so that now eUp.org is incident to eLo, or barely below it.\n * We must correct this condition to maintain the dictionary invariants.\n *\n * One possibility is to check these edges for intersection again\n * (i.e. checkForIntersect). This is what we do if possible. However\n * checkForIntersect requires that tess.event lies between eUp and eLo,\n * so that it has something to fall back on when the intersection\n * calculation gives us an unusable answer. So, for those cases where\n * we can't check for intersection, this routine fixes the problem\n * by just splicing the offending vertex into the other edge.\n * This is a guaranteed solution, no matter how degenerate things get.\n * Basically this is a combinatorial solution to a numerical problem.\n *\n * @private\n * @param {libtess.GluTesselator} tess [description].\n * @param {libtess.ActiveRegion} regUp [description].\n * @return {boolean} [description].\n */\nlibtess.sweep.checkForRightSplice_ = function(tess, regUp) {\n  // TODO(bckenny): fully learn how these two checks work\n\n  var regLo = regUp.regionBelow();\n  var eUp = regUp.eUp;\n  var eLo = regLo.eUp;\n\n  if (libtess.geom.vertLeq(eUp.org, eLo.org)) {\n    if (libtess.geom.edgeSign(eLo.dst(), eUp.org, eLo.org) > 0) {\n      return false;\n    }\n\n    // eUp.org appears to be below eLo\n    if (!libtess.geom.vertEq(eUp.org, eLo.org)) {\n      // Splice eUp.org into eLo\n      libtess.mesh.splitEdge(eLo.sym);\n      libtess.mesh.meshSplice(eUp, eLo.oPrev());\n      regUp.dirty = regLo.dirty = true;\n\n    } else if (eUp.org !== eLo.org) {\n      // merge the two vertices, discarding eUp.org\n      // TODO(bckenny): fix pqHandle null situation\n      tess.pq.remove(/** @type {libtess.PQHandle} */(eUp.org.pqHandle));\n      libtess.sweep.spliceMergeVertices_(tess, eLo.oPrev(), eUp);\n    }\n\n  } else {\n    if (libtess.geom.edgeSign(eUp.dst(), eLo.org, eUp.org) < 0) {\n      return false;\n    }\n\n    // eLo.org appears to be above eUp, so splice eLo.org into eUp\n    regUp.regionAbove().dirty = regUp.dirty = true;\n    libtess.mesh.splitEdge(eUp.sym);\n    libtess.mesh.meshSplice(eLo.oPrev(), eUp);\n  }\n\n  return true;\n};\n\n\n/**\n * Check the upper and lower edge of regUp to make sure that the\n * eUp.dst() is above eLo, or eLo.dst() is below eUp (depending on which\n * destination is rightmost).\n *\n * Theoretically, this should always be true. However, splitting an edge\n * into two pieces can change the results of previous tests. For example,\n * suppose at one point we checked eUp and eLo, and decided that eUp.dst()\n * is barely above eLo. Then later, we split eLo into two edges (eg. from\n * a splice operation like this one). This can change the result of\n * the test so that now eUp.dst() is incident to eLo, or barely below it.\n * We must correct this condition to maintain the dictionary invariants\n * (otherwise new edges might get inserted in the wrong place in the\n * dictionary, and bad stuff will happen).\n *\n * We fix the problem by just splicing the offending vertex into the\n * other edge.\n *\n * @private\n * @param {libtess.GluTesselator} tess description].\n * @param {libtess.ActiveRegion} regUp [description].\n * @return {boolean} [description].\n */\nlibtess.sweep.checkForLeftSplice_ = function(tess, regUp) {\n  var regLo = regUp.regionBelow();\n  var eUp = regUp.eUp;\n  var eLo = regLo.eUp;\n  var e;\n\n  if (libtess.geom.vertLeq(eUp.dst(), eLo.dst())) {\n    if (libtess.geom.edgeSign(eUp.dst(), eLo.dst(), eUp.org) < 0) {\n      return false;\n    }\n\n    // eLo.dst() is above eUp, so splice eLo.dst() into eUp\n    regUp.regionAbove().dirty = regUp.dirty = true;\n    e = libtess.mesh.splitEdge(eUp);\n    libtess.mesh.meshSplice(eLo.sym, e);\n    e.lFace.inside = regUp.inside;\n\n  } else {\n    if (libtess.geom.edgeSign(eLo.dst(), eUp.dst(), eLo.org) > 0) {\n      return false;\n    }\n\n    // eUp.dst() is below eLo, so splice eUp.dst() into eLo\n    regUp.dirty = regLo.dirty = true;\n    e = libtess.mesh.splitEdge(eLo);\n    libtess.mesh.meshSplice(eUp.lNext, eLo.sym);\n    e.rFace().inside = regUp.inside;\n  }\n\n  return true;\n};\n\n\n/**\n * Check the upper and lower edges of the given region to see if\n * they intersect. If so, create the intersection and add it\n * to the data structures.\n *\n * Returns true if adding the new intersection resulted in a recursive\n * call to addRightEdges_(); in this case all \"dirty\" regions have been\n * checked for intersections, and possibly regUp has been deleted.\n *\n * @private\n * @param {libtess.GluTesselator} tess [description].\n * @param {libtess.ActiveRegion} regUp [description].\n * @return {boolean} [description].\n */\nlibtess.sweep.checkForIntersect_ = function(tess, regUp) {\n  var regLo = regUp.regionBelow();\n  var eUp = regUp.eUp;\n  var eLo = regLo.eUp;\n  var orgUp = eUp.org;\n  var orgLo = eLo.org;\n  var dstUp = eUp.dst();\n  var dstLo = eLo.dst();\n\n  var isect = new libtess.GluVertex();\n\n  if (orgUp === orgLo) {\n    // right endpoints are the same\n    return false;\n  }\n\n  var tMinUp = Math.min(orgUp.t, dstUp.t);\n  var tMaxLo = Math.max(orgLo.t, dstLo.t);\n  if (tMinUp > tMaxLo) {\n    // t ranges do not overlap\n    return false;\n  }\n\n  if (libtess.geom.vertLeq(orgUp, orgLo)) {\n    if (libtess.geom.edgeSign(dstLo, orgUp, orgLo) > 0) {\n      return false;\n    }\n  } else {\n    if (libtess.geom.edgeSign(dstUp, orgLo, orgUp) < 0) {\n      return false;\n    }\n  }\n\n  // At this point the edges intersect, at least marginally\n  libtess.geom.edgeIntersect(dstUp, orgUp, dstLo, orgLo, isect);\n\n  // The following properties are guaranteed:\n\n  if (libtess.geom.vertLeq(isect, tess.event)) {\n    /* The intersection point lies slightly to the left of the sweep line,\n     * so move it until it's slightly to the right of the sweep line.\n     * (If we had perfect numerical precision, this would never happen\n     * in the first place). The easiest and safest thing to do is\n     * replace the intersection by tess.event.\n     */\n    isect.s = tess.event.s;\n    isect.t = tess.event.t;\n  }\n\n  // TODO(bckenny): try to find test54.d\n  /* Similarly, if the computed intersection lies to the right of the\n   * rightmost origin (which should rarely happen), it can cause\n   * unbelievable inefficiency on sufficiently degenerate inputs.\n   * (If you have the test program, try running test54.d with the\n   * \"X zoom\" option turned on).\n   */\n  var orgMin = libtess.geom.vertLeq(orgUp, orgLo) ? orgUp : orgLo;\n  if (libtess.geom.vertLeq(orgMin, isect)) {\n    isect.s = orgMin.s;\n    isect.t = orgMin.t;\n  }\n\n  if (libtess.geom.vertEq(isect, orgUp) || libtess.geom.vertEq(isect, orgLo)) {\n    // Easy case -- intersection at one of the right endpoints\n    libtess.sweep.checkForRightSplice_(tess, regUp);\n    return false;\n  }\n\n  // TODO(bckenny): clean this up; length is distracting\n  if ((!libtess.geom.vertEq(dstUp, tess.event) &&\n      libtess.geom.edgeSign(dstUp, tess.event, isect) >= 0) ||\n      (!libtess.geom.vertEq(dstLo, tess.event) &&\n      libtess.geom.edgeSign(dstLo, tess.event, isect) <= 0)) {\n\n    /* Very unusual -- the new upper or lower edge would pass on the\n     * wrong side of the sweep event, or through it. This can happen\n     * due to very small numerical errors in the intersection calculation.\n     */\n    if (dstLo === tess.event) {\n      // Splice dstLo into eUp, and process the new region(s)\n      libtess.mesh.splitEdge(eUp.sym);\n      libtess.mesh.meshSplice(eLo.sym, eUp);\n      regUp = libtess.sweep.topLeftRegion_(regUp);\n      eUp = regUp.regionBelow().eUp;\n      libtess.sweep.finishLeftRegions_(tess, regUp.regionBelow(), regLo);\n      libtess.sweep.addRightEdges_(tess, regUp, eUp.oPrev(), eUp, eUp, true);\n      return true;\n    }\n\n    if (dstUp === tess.event) {\n      // Splice dstUp into eLo, and process the new region(s)\n      libtess.mesh.splitEdge(eLo.sym);\n      libtess.mesh.meshSplice(eUp.lNext, eLo.oPrev());\n      regLo = regUp;\n      regUp = libtess.sweep.topRightRegion_(regUp);\n      var e = regUp.regionBelow().eUp.rPrev();\n      regLo.eUp = eLo.oPrev();\n      eLo = libtess.sweep.finishLeftRegions_(tess, regLo, null);\n      libtess.sweep.addRightEdges_(tess, regUp, eLo.oNext, eUp.rPrev(), e,\n          true);\n      return true;\n    }\n\n    /* Special case: called from connectRightVertex. If either\n     * edge passes on the wrong side of tess.event, split it\n     * (and wait for connectRightVertex to splice it appropriately).\n     */\n    if (libtess.geom.edgeSign(dstUp, tess.event, isect) >= 0) {\n      regUp.regionAbove().dirty = regUp.dirty = true;\n      libtess.mesh.splitEdge(eUp.sym);\n      eUp.org.s = tess.event.s;\n      eUp.org.t = tess.event.t;\n    }\n\n    if (libtess.geom.edgeSign(dstLo, tess.event, isect) <= 0) {\n      regUp.dirty = regLo.dirty = true;\n      libtess.mesh.splitEdge(eLo.sym);\n      eLo.org.s = tess.event.s;\n      eLo.org.t = tess.event.t;\n    }\n\n    // leave the rest for connectRightVertex\n    return false;\n  }\n\n  /* General case -- split both edges, splice into new vertex.\n   * When we do the splice operation, the order of the arguments is\n   * arbitrary as far as correctness goes. However, when the operation\n   * creates a new face, the work done is proportional to the size of\n   * the new face. We expect the faces in the processed part of\n   * the mesh (ie. eUp.lFace) to be smaller than the faces in the\n   * unprocessed original contours (which will be eLo.oPrev.lFace).\n   */\n  libtess.mesh.splitEdge(eUp.sym);\n  libtess.mesh.splitEdge(eLo.sym);\n  libtess.mesh.meshSplice(eLo.oPrev(), eUp);\n  eUp.org.s = isect.s;\n  eUp.org.t = isect.t;\n  eUp.org.pqHandle = tess.pq.insert(eUp.org);\n  libtess.sweep.getIntersectData_(tess, eUp.org, orgUp, dstUp, orgLo, dstLo);\n  regUp.regionAbove().dirty = regUp.dirty = regLo.dirty = true;\n\n  return false;\n};\n\n\n/**\n * When the upper or lower edge of any region changes, the region is\n * marked \"dirty\". This routine walks through all the dirty regions\n * and makes sure that the dictionary invariants are satisfied\n * (see the comments at the beginning of this file). Of course,\n * new dirty regions can be created as we make changes to restore\n * the invariants.\n * @private\n * @param {libtess.GluTesselator} tess [description].\n * @param {libtess.ActiveRegion} regUp [description].\n */\nlibtess.sweep.walkDirtyRegions_ = function(tess, regUp) {\n  var regLo = regUp.regionBelow();\n\n  for (;;) {\n    // Find the lowest dirty region (we walk from the bottom up).\n    while (regLo.dirty) {\n      regUp = regLo;\n      regLo = regLo.regionBelow();\n    }\n    if (!regUp.dirty) {\n      regLo = regUp;\n      regUp = regUp.regionAbove();\n      if (regUp === null || !regUp.dirty) {\n        // We've walked all the dirty regions\n        return;\n      }\n    }\n\n    regUp.dirty = false;\n    var eUp = regUp.eUp;\n    var eLo = regLo.eUp;\n\n    if (eUp.dst() !== eLo.dst()) {\n      // Check that the edge ordering is obeyed at the dst vertices.\n      if (libtess.sweep.checkForLeftSplice_(tess, regUp)) {\n        // If the upper or lower edge was marked fixUpperEdge, then\n        // we no longer need it (since these edges are needed only for\n        // vertices which otherwise have no right-going edges).\n        if (regLo.fixUpperEdge) {\n          libtess.sweep.deleteRegion_(tess, regLo);\n          libtess.mesh.deleteEdge(eLo);\n          regLo = regUp.regionBelow();\n          eLo = regLo.eUp;\n\n        } else if (regUp.fixUpperEdge) {\n          libtess.sweep.deleteRegion_(tess, regUp);\n          libtess.mesh.deleteEdge(eUp);\n          regUp = regLo.regionAbove();\n          eUp = regUp.eUp;\n        }\n      }\n    }\n\n    if (eUp.org !== eLo.org) {\n      if (eUp.dst() !== eLo.dst() && !regUp.fixUpperEdge &&\n          !regLo.fixUpperEdge &&\n          (eUp.dst() === tess.event || eLo.dst() === tess.event)) {\n        /* When all else fails in checkForIntersect(), it uses tess.event\n         * as the intersection location. To make this possible, it requires\n         * that tess.event lie between the upper and lower edges, and also\n         * that neither of these is marked fixUpperEdge (since in the worst\n         * case it might splice one of these edges into tess.event, and\n         * violate the invariant that fixable edges are the only right-going\n         * edge from their associated vertex).\n         */\n        if (libtess.sweep.checkForIntersect_(tess, regUp)) {\n          // walkDirtyRegions() was called recursively; we're done\n          return;\n        }\n\n      } else {\n        // Even though we can't use checkForIntersect(), the org vertices\n        // may violate the dictionary edge ordering. Check and correct this.\n        libtess.sweep.checkForRightSplice_(tess, regUp);\n      }\n    }\n\n    if (eUp.org === eLo.org && eUp.dst() === eLo.dst()) {\n      // A degenerate loop consisting of only two edges -- delete it.\n      libtess.sweep.addWinding_(eLo, eUp);\n      libtess.sweep.deleteRegion_(tess, regUp);\n      libtess.mesh.deleteEdge(eUp);\n      regUp = regLo.regionAbove();\n    }\n  }\n};\n\n\n/**\n * Purpose: connect a \"right\" vertex vEvent (one where all edges go left)\n * to the unprocessed portion of the mesh. Since there are no right-going\n * edges, two regions (one above vEvent and one below) are being merged\n * into one. regUp is the upper of these two regions.\n *\n * There are two reasons for doing this (adding a right-going edge):\n *  - if the two regions being merged are \"inside\", we must add an edge\n *    to keep them separated (the combined region would not be monotone).\n *  - in any case, we must leave some record of vEvent in the dictionary,\n *    so that we can merge vEvent with features that we have not seen yet.\n *    For example, maybe there is a vertical edge which passes just to\n *    the right of vEvent; we would like to splice vEvent into this edge.\n *\n * However, we don't want to connect vEvent to just any vertex. We don't\n * want the new edge to cross any other edges; otherwise we will create\n * intersection vertices even when the input data had no self-intersections.\n * (This is a bad thing; if the user's input data has no intersections,\n * we don't want to generate any false intersections ourselves.)\n *\n * Our eventual goal is to connect vEvent to the leftmost unprocessed\n * vertex of the combined region (the union of regUp and regLo).\n * But because of unseen vertices with all right-going edges, and also\n * new vertices which may be created by edge intersections, we don't\n * know where that leftmost unprocessed vertex is. In the meantime, we\n * connect vEvent to the closest vertex of either chain, and mark the region\n * as \"fixUpperEdge\". This flag says to delete and reconnect this edge\n * to the next processed vertex on the boundary of the combined region.\n * Quite possibly the vertex we connected to will turn out to be the\n * closest one, in which case we won't need to make any changes.\n *\n * @private\n * @param {libtess.GluTesselator} tess [description].\n * @param {libtess.ActiveRegion} regUp [description].\n * @param {libtess.GluHalfEdge} eBottomLeft [description].\n */\nlibtess.sweep.connectRightVertex_ = function(tess, regUp, eBottomLeft) {\n  var eTopLeft = eBottomLeft.oNext;\n  var regLo = regUp.regionBelow();\n  var eUp = regUp.eUp;\n  var eLo = regLo.eUp;\n  var degenerate = false;\n\n  if (eUp.dst() !== eLo.dst()) {\n    libtess.sweep.checkForIntersect_(tess, regUp);\n  }\n\n  // Possible new degeneracies: upper or lower edge of regUp may pass\n  // through vEvent, or may coincide with new intersection vertex\n  if (libtess.geom.vertEq(eUp.org, tess.event)) {\n    libtess.mesh.meshSplice(eTopLeft.oPrev(), eUp);\n    regUp = libtess.sweep.topLeftRegion_(regUp);\n    eTopLeft = regUp.regionBelow().eUp;\n    libtess.sweep.finishLeftRegions_(tess, regUp.regionBelow(), regLo);\n    degenerate = true;\n  }\n  if (libtess.geom.vertEq(eLo.org, tess.event)) {\n    libtess.mesh.meshSplice(eBottomLeft, eLo.oPrev());\n    eBottomLeft = libtess.sweep.finishLeftRegions_(tess, regLo, null);\n    degenerate = true;\n  }\n  if (degenerate) {\n    libtess.sweep.addRightEdges_(tess, regUp, eBottomLeft.oNext, eTopLeft,\n        eTopLeft, true);\n    return;\n  }\n\n  // Non-degenerate situation -- need to add a temporary, fixable edge.\n  // Connect to the closer of eLo.org, eUp.org.\n  var eNew;\n  if (libtess.geom.vertLeq(eLo.org, eUp.org)) {\n    eNew = eLo.oPrev();\n  } else {\n    eNew = eUp;\n  }\n  eNew = libtess.mesh.connect(eBottomLeft.lPrev(), eNew);\n\n  // Prevent cleanup, otherwise eNew might disappear before we've even\n  // had a chance to mark it as a temporary edge.\n  libtess.sweep.addRightEdges_(tess, regUp, eNew, eNew.oNext, eNew.oNext,\n      false);\n  eNew.sym.activeRegion.fixUpperEdge = true;\n  libtess.sweep.walkDirtyRegions_(tess, regUp);\n};\n\n\n/**\n * The event vertex lies exacty on an already-processed edge or vertex.\n * Adding the new vertex involves splicing it into the already-processed\n * part of the mesh.\n * @private\n * @param {libtess.GluTesselator} tess [description].\n * @param {libtess.ActiveRegion} regUp [description].\n * @param {libtess.GluVertex} vEvent [description].\n */\nlibtess.sweep.connectLeftDegenerate_ = function(tess, regUp, vEvent) {\n  var e = regUp.eUp;\n  /* istanbul ignore if */\n  if (libtess.geom.vertEq(e.org, vEvent)) {\n    // NOTE(bckenny): this code is unreachable but remains for a hypothetical\n    // future extension of libtess. See docs on libtess.sweep.TOLERANCE_NONZERO_\n    // for more information. Conditional on TOLERANCE_NONZERO_ to help Closure\n    // Compiler eliminate dead code.\n    // e.org is an unprocessed vertex - just combine them, and wait\n    // for e.org to be pulled from the queue\n    if (libtess.sweep.TOLERANCE_NONZERO_) {\n      libtess.sweep.spliceMergeVertices_(tess, e, vEvent.anEdge);\n    }\n    return;\n  }\n\n  if (!libtess.geom.vertEq(e.dst(), vEvent)) {\n    // General case -- splice vEvent into edge e which passes through it\n    libtess.mesh.splitEdge(e.sym);\n\n    if (regUp.fixUpperEdge) {\n      // This edge was fixable -- delete unused portion of original edge\n      libtess.mesh.deleteEdge(e.oNext);\n      regUp.fixUpperEdge = false;\n    }\n\n    libtess.mesh.meshSplice(vEvent.anEdge, e);\n\n    // recurse\n    libtess.sweep.sweepEvent_(tess, vEvent);\n    return;\n  }\n\n  // NOTE(bckenny): this code is unreachable but remains for a hypothetical\n  // future extension of libtess. See docs on libtess.sweep.TOLERANCE_NONZERO_\n  // for more information. Conditional on TOLERANCE_NONZERO_ to help Closure\n  // Compiler eliminate dead code.\n  // vEvent coincides with e.dst(), which has already been processed.\n  // Splice in the additional right-going edges.\n  /* istanbul ignore next */\n\n  /* istanbul ignore next */\n  if (libtess.sweep.TOLERANCE_NONZERO_) {\n    regUp = libtess.sweep.topRightRegion_(regUp);\n    var reg = regUp.regionBelow();\n    var eTopRight = reg.eUp.sym;\n    var eTopLeft = eTopRight.oNext;\n    var eLast = eTopLeft;\n\n    if (reg.fixUpperEdge) {\n      // Here e.dst() has only a single fixable edge going right.\n      // We can delete it since now we have some real right-going edges.\n\n      // there are some left edges too\n      libtess.sweep.deleteRegion_(tess, reg); // TODO(bckenny): something to null?\n      libtess.mesh.deleteEdge(eTopRight);\n      eTopRight = eTopLeft.oPrev();\n    }\n\n    libtess.mesh.meshSplice(vEvent.anEdge, eTopRight);\n    if (!libtess.geom.edgeGoesLeft(eTopLeft)) {\n      // e.dst() had no left-going edges -- indicate this to addRightEdges()\n      eTopLeft = null;\n    }\n\n    libtess.sweep.addRightEdges_(tess, regUp, eTopRight.oNext, eLast, eTopLeft,\n        true);\n  }\n};\n\n\n/**\n * Connect a \"left\" vertex (one where both edges go right)\n * to the processed portion of the mesh. Let R be the active region\n * containing vEvent, and let U and L be the upper and lower edge\n * chains of R. There are two possibilities:\n *\n * - the normal case: split R into two regions, by connecting vEvent to\n *   the rightmost vertex of U or L lying to the left of the sweep line\n *\n * - the degenerate case: if vEvent is close enough to U or L, we\n *   merge vEvent into that edge chain. The subcases are:\n *  - merging with the rightmost vertex of U or L\n *  - merging with the active edge of U or L\n *  - merging with an already-processed portion of U or L\n *\n * @private\n * @param {libtess.GluTesselator} tess   [description].\n * @param {libtess.GluVertex} vEvent [description].\n */\nlibtess.sweep.connectLeftVertex_ = function(tess, vEvent) {\n  // TODO(bckenny): tmp only used for sweep. better to keep tmp across calls?\n  var tmp = new libtess.ActiveRegion();\n\n  // NOTE(bckenny): this was commented out in the original\n  // libtess.assert(vEvent.anEdge.oNext.oNext === vEvent.anEdge);\n\n  // Get a pointer to the active region containing vEvent\n  tmp.eUp = vEvent.anEdge.sym;\n  var regUp = tess.dict.search(tmp).getKey();\n  var regLo = regUp.regionBelow();\n  var eUp = regUp.eUp;\n  var eLo = regLo.eUp;\n\n  // try merging with U or L first\n  if (libtess.geom.edgeSign(eUp.dst(), vEvent, eUp.org) === 0) {\n    libtess.sweep.connectLeftDegenerate_(tess, regUp, vEvent);\n    return;\n  }\n\n  // Connect vEvent to rightmost processed vertex of either chain.\n  // e.dst() is the vertex that we will connect to vEvent.\n  var reg = libtess.geom.vertLeq(eLo.dst(), eUp.dst()) ? regUp : regLo;\n  var eNew;\n  if (regUp.inside || reg.fixUpperEdge) {\n    if (reg === regUp) {\n      eNew = libtess.mesh.connect(vEvent.anEdge.sym, eUp.lNext);\n\n    } else {\n      var tempHalfEdge = libtess.mesh.connect(eLo.dNext(), vEvent.anEdge);\n      eNew = tempHalfEdge.sym;\n    }\n\n    if (reg.fixUpperEdge) {\n      libtess.sweep.fixUpperEdge_(reg, eNew);\n\n    } else {\n      libtess.sweep.computeWinding_(tess,\n          libtess.sweep.addRegionBelow_(tess, regUp, eNew));\n    }\n    libtess.sweep.sweepEvent_(tess, vEvent);\n\n  } else {\n    // The new vertex is in a region which does not belong to the polygon.\n    // We don''t need to connect this vertex to the rest of the mesh.\n    libtess.sweep.addRightEdges_(tess, regUp, vEvent.anEdge, vEvent.anEdge,\n        null, true);\n  }\n};\n\n\n/**\n * Does everything necessary when the sweep line crosses a vertex.\n * Updates the mesh and the edge dictionary.\n * @private\n * @param {libtess.GluTesselator} tess [description].\n * @param {libtess.GluVertex} vEvent [description].\n */\nlibtess.sweep.sweepEvent_ = function(tess, vEvent) {\n  tess.event = vEvent; // for access in edgeLeq_ // TODO(bckenny): wuh?\n\n  /* Check if this vertex is the right endpoint of an edge that is\n   * already in the dictionary.  In this case we don't need to waste\n   * time searching for the location to insert new edges.\n   */\n  var e = vEvent.anEdge;\n  while (e.activeRegion === null) {\n    e = e.oNext;\n    if (e === vEvent.anEdge) {\n      // All edges go right -- not incident to any processed edges\n      libtess.sweep.connectLeftVertex_(tess, vEvent);\n      return;\n    }\n  }\n\n  /* Processing consists of two phases: first we \"finish\" all the\n   * active regions where both the upper and lower edges terminate\n   * at vEvent (ie. vEvent is closing off these regions).\n   * We mark these faces \"inside\" or \"outside\" the polygon according\n   * to their winding number, and delete the edges from the dictionary.\n   * This takes care of all the left-going edges from vEvent.\n   */\n  var regUp = libtess.sweep.topLeftRegion_(e.activeRegion);\n  var reg = regUp.regionBelow();\n  var eTopLeft = reg.eUp;\n  var eBottomLeft = libtess.sweep.finishLeftRegions_(tess, reg, null);\n\n  /* Next we process all the right-going edges from vEvent. This\n   * involves adding the edges to the dictionary, and creating the\n   * associated \"active regions\" which record information about the\n   * regions between adjacent dictionary edges.\n   */\n  if (eBottomLeft.oNext === eTopLeft) {\n    // No right-going edges -- add a temporary \"fixable\" edge\n    libtess.sweep.connectRightVertex_(tess, regUp, eBottomLeft);\n\n  } else {\n    libtess.sweep.addRightEdges_(tess, regUp, eBottomLeft.oNext, eTopLeft,\n        eTopLeft, true);\n  }\n};\n\n\n/**\n * We add two sentinel edges above and below all other edges,\n * to avoid special cases at the top and bottom.\n * @private\n * @param {libtess.GluTesselator} tess [description].\n * @param {number} t [description].\n */\nlibtess.sweep.addSentinel_ = function(tess, t) {\n  var reg = new libtess.ActiveRegion();\n\n  var e = libtess.mesh.makeEdge(tess.mesh);\n\n  e.org.s = libtess.sweep.SENTINEL_COORD_;\n  e.org.t = t;\n  e.dst().s = -libtess.sweep.SENTINEL_COORD_;\n  e.dst().t = t;\n  tess.event = e.dst(); //initialize it\n\n  reg.eUp = e;\n  reg.windingNumber = 0;\n  reg.inside = false;\n  reg.fixUpperEdge = false;\n  reg.sentinel = true;\n  reg.dirty = false;\n  reg.nodeUp = tess.dict.insert(reg);\n};\n\n\n/**\n * We maintain an ordering of edge intersections with the sweep line.\n * This order is maintained in a dynamic dictionary.\n * @private\n * @param {libtess.GluTesselator} tess [description].\n */\nlibtess.sweep.initEdgeDict_ = function(tess) {\n  tess.dict = new libtess.Dict(tess, libtess.sweep.edgeLeq_);\n\n  libtess.sweep.addSentinel_(tess, -libtess.sweep.SENTINEL_COORD_);\n  libtess.sweep.addSentinel_(tess, libtess.sweep.SENTINEL_COORD_);\n};\n\n\n/**\n * [doneEdgeDict_ description]\n * @private\n * @param {libtess.GluTesselator} tess [description].\n */\nlibtess.sweep.doneEdgeDict_ = function(tess) {\n  // NOTE(bckenny): fixedEdges is only used in the assert below, so ignore so\n  // when asserts are removed jshint won't error.\n  /* jshint unused:false */\n  var fixedEdges = 0;\n\n  var reg;\n  while ((reg = tess.dict.getMin().getKey()) !== null) {\n    // At the end of all processing, the dictionary should contain\n    // only the two sentinel edges, plus at most one \"fixable\" edge\n    // created by connectRightVertex().\n    if (!reg.sentinel) {\n    }\n    libtess.sweep.deleteRegion_(tess, reg);\n  }\n\n  // NOTE(bckenny): see tess.dict.deleteDict_() for old delete dict function\n  tess.dict = null;\n};\n\n\n/**\n * Remove zero-length edges, and contours with fewer than 3 vertices.\n * @private\n * @param {libtess.GluTesselator} tess [description].\n */\nlibtess.sweep.removeDegenerateEdges_ = function(tess) {\n  var eHead = tess.mesh.eHead;\n\n  var eNext;\n  for (var e = eHead.next; e !== eHead; e = eNext) {\n    eNext = e.next;\n    var eLNext = e.lNext;\n\n    if (libtess.geom.vertEq(e.org, e.dst()) && e.lNext.lNext !== e) {\n      // Zero-length edge, contour has at least 3 edges\n      libtess.sweep.spliceMergeVertices_(tess, eLNext, e); // deletes e.org\n      libtess.mesh.deleteEdge(e); // e is a self-loop TODO(bckenny): does this comment really apply here?\n      e = eLNext;\n      eLNext = e.lNext;\n    }\n\n    if (eLNext.lNext === e) {\n      // Degenerate contour (one or two edges)\n      if (eLNext !== e) {\n        if (eLNext === eNext || eLNext === eNext.sym) {\n          eNext = eNext.next;\n        }\n        libtess.mesh.deleteEdge(eLNext);\n      }\n\n      if (e === eNext || e === eNext.sym) {\n        eNext = eNext.next;\n      }\n      libtess.mesh.deleteEdge(e);\n    }\n  }\n};\n\n\n/**\n * Construct priority queue and insert all vertices into it, which determines\n * the order in which vertices cross the sweep line.\n * @private\n * @param {libtess.GluTesselator} tess [description].\n */\nlibtess.sweep.initPriorityQ_ = function(tess) {\n  // TODO(bckenny): libtess.geom.vertLeq needs cast?\n  var pq = new libtess.PriorityQ(\n      /** @type {function(Object, Object): boolean} */(libtess.geom.vertLeq));\n  tess.pq = pq;\n\n  var vHead = tess.mesh.vHead;\n  var v;\n  for (v = vHead.next; v !== vHead; v = v.next) {\n    v.pqHandle = pq.insert(v);\n  }\n\n  pq.init();\n};\n\n\n/**\n * [donePriorityQ_ description]\n * @private\n * @param {libtess.GluTesselator} tess [description].\n */\nlibtess.sweep.donePriorityQ_ = function(tess) {\n  // TODO(bckenny): probably don't need deleteQ. check that function for comment\n  tess.pq.deleteQ();\n  tess.pq = null;\n};\n\n\n/**\n * Delete any degenerate faces with only two edges. walkDirtyRegions()\n * will catch almost all of these, but it won't catch degenerate faces\n * produced by splice operations on already-processed edges.\n * The two places this can happen are in finishLeftRegions(), when\n * we splice in a \"temporary\" edge produced by connectRightVertex(),\n * and in checkForLeftSplice(), where we splice already-processed\n * edges to ensure that our dictionary invariants are not violated\n * by numerical errors.\n *\n * In both these cases it is *very* dangerous to delete the offending\n * edge at the time, since one of the routines further up the stack\n * will sometimes be keeping a pointer to that edge.\n *\n * @private\n * @param {libtess.GluMesh} mesh [description].\n */\nlibtess.sweep.removeDegenerateFaces_ = function(mesh) {\n  var fNext;\n  for (var f = mesh.fHead.next; f !== mesh.fHead; f = fNext) {\n    fNext = f.next;\n    var e = f.anEdge;\n\n    if (e.lNext.lNext === e) {\n      // A face with only two edges\n      libtess.sweep.addWinding_(e.oNext, e);\n      libtess.mesh.deleteEdge(e);\n    }\n  }\n};\n\n\n/* global libtess */\n\n/** @const */\nlibtess.tessmono = {};\n\n/**\n * Tessellates a monotone region (what else would it do??). The region must\n * consist of a single loop of half-edges (see mesh.js) oriented CCW. \"Monotone\"\n * in this case means that any vertical line intersects the interior of the\n * region in a single interval.\n *\n * Tessellation consists of adding interior edges (actually pairs of\n * half-edges), to split the region into non-overlapping triangles.\n * @private\n * @param {!libtess.GluFace} face\n */\nlibtess.tessmono.tessellateMonoRegion_ = function(face) {\n  /* The basic idea is explained in Preparata and Shamos (which I don't\n   * have handy right now), although their implementation is more\n   * complicated than this one. The are two edge chains, an upper chain\n   * and a lower chain. We process all vertices from both chains in order,\n   * from right to left.\n   *\n   * The algorithm ensures that the following invariant holds after each\n   * vertex is processed: the untessellated region consists of two\n   * chains, where one chain (say the upper) is a single edge, and\n   * the other chain is concave. The left vertex of the single edge\n   * is always to the left of all vertices in the concave chain.\n   *\n   * Each step consists of adding the rightmost unprocessed vertex to one\n   * of the two chains, and forming a fan of triangles from the rightmost\n   * of two chain endpoints. Determining whether we can add each triangle\n   * to the fan is a simple orientation test. By making the fan as large\n   * as possible, we restore the invariant (check it yourself).\n   *\n   * All edges are oriented CCW around the boundary of the region.\n   * First, find the half-edge whose origin vertex is rightmost.\n   * Since the sweep goes from left to right, face.anEdge should\n   * be close to the edge we want.\n   */\n  var up = face.anEdge;\n\n  for (; libtess.geom.vertLeq(up.dst(), up.org); up = up.lPrev()) { }\n  for (; libtess.geom.vertLeq(up.org, up.dst()); up = up.lNext) { }\n\n  var lo = up.lPrev();\n\n  var tempHalfEdge;\n  while (up.lNext !== lo) {\n    if (libtess.geom.vertLeq(up.dst(), lo.org)) {\n      // up.dst() is on the left. It is safe to form triangles from lo.org.\n      // The edgeGoesLeft test guarantees progress even when some triangles\n      // are CW, given that the upper and lower chains are truly monotone.\n      while (lo.lNext !== up && (libtess.geom.edgeGoesLeft(lo.lNext) ||\n          libtess.geom.edgeSign(lo.org, lo.dst(), lo.lNext.dst()) <= 0)) {\n\n        tempHalfEdge = libtess.mesh.connect(lo.lNext, lo);\n        lo = tempHalfEdge.sym;\n      }\n      lo = lo.lPrev();\n\n    } else {\n      // lo.org is on the left. We can make CCW triangles from up.dst().\n      while (lo.lNext !== up && (libtess.geom.edgeGoesRight(up.lPrev()) ||\n          libtess.geom.edgeSign(up.dst(), up.org, up.lPrev().org) >= 0)) {\n\n        tempHalfEdge = libtess.mesh.connect(up, up.lPrev());\n        up = tempHalfEdge.sym;\n      }\n      up = up.lNext;\n    }\n  }\n\n  // Now lo.org == up.dst() == the leftmost vertex. The remaining region\n  // can be tessellated in a fan from this leftmost vertex.\n  while (lo.lNext.lNext !== up) {\n    tempHalfEdge = libtess.mesh.connect(lo.lNext, lo);\n    lo = tempHalfEdge.sym;\n  }\n};\n\n/**\n * Tessellates each region of the mesh which is marked \"inside\" the polygon.\n * Each such region must be monotone.\n * @param {!libtess.GluMesh} mesh\n */\nlibtess.tessmono.tessellateInterior = function(mesh) {\n  var next;\n  for (var f = mesh.fHead.next; f !== mesh.fHead; f = next) {\n    // Make sure we don't try to tessellate the new triangles.\n    next = f.next;\n    if (f.inside) {\n      libtess.tessmono.tessellateMonoRegion_(f);\n    }\n  }\n};\n\n/**\n * Zaps (i.e. sets to null) all faces which are not marked \"inside\" the polygon.\n * Since further mesh operations on null faces are not allowed, the main purpose\n * is to clean up the mesh so that exterior loops are not represented in the\n * data structure.\n * @param {!libtess.GluMesh} mesh\n */\nlibtess.tessmono.discardExterior = function(mesh) {\n  var next;\n  for (var f = mesh.fHead.next; f !== mesh.fHead; f = next) {\n    // Since f will be destroyed, save its next pointer.\n    next = f.next;\n    if (!f.inside) {\n      libtess.mesh.zapFace(f);\n    }\n  }\n};\n\n/**\n * Resets the winding numbers on all edges so that regions marked \"inside\" the\n * polygon have a winding number of \"value\", and regions outside have a winding\n * number of 0.\n *\n * If keepOnlyBoundary is true, it also deletes all edges which do not separate\n * an interior region from an exterior one.\n *\n * @param {!libtess.GluMesh} mesh\n * @param {number} value\n * @param {boolean} keepOnlyBoundary\n */\nlibtess.tessmono.setWindingNumber = function(mesh, value, keepOnlyBoundary) {\n  var eNext;\n  for (var e = mesh.eHead.next; e !== mesh.eHead; e = eNext) {\n    eNext = e.next;\n\n    if (e.rFace().inside !== e.lFace.inside) {\n      // This is a boundary edge (one side is interior, one is exterior).\n      e.winding = (e.lFace.inside) ? value : -value;\n\n    } else {\n      // Both regions are interior, or both are exterior.\n      if (!keepOnlyBoundary) {\n        e.winding = 0;\n\n      } else {\n        libtess.mesh.deleteEdge(e);\n      }\n    }\n  }\n};\n\n\n/* global libtess */\n\n/**\n * A list of edges crossing the sweep line, sorted from top to bottom.\n * Implementation is a doubly-linked list, sorted by the injected edgeLeq\n * comparator function. Here it is a simple ordering, but see libtess.sweep for\n * the list of invariants on the edge dictionary this ordering creates.\n * @constructor\n * @struct\n * @param {!libtess.GluTesselator} frame\n * @param {function(!libtess.GluTesselator, !libtess.ActiveRegion, !libtess.ActiveRegion): boolean} leq\n */\nlibtess.Dict = function(frame, leq) {\n\n  /**\n   * The head of the doubly-linked DictNode list. At creation time, links back\n   * and forward only to itself.\n   * @private\n   */\n  this.head_ = new libtess.DictNode();\n\n  /**\n   * The GluTesselator used as the frame for edge/event comparisons.\n   * @private\n   */\n  this.frame_ = frame;\n\n  /**\n   * Comparison function to maintain the invariants of the Dict. See\n   * libtess.sweep.edgeLeq_ for source.\n   * @private\n   * @type {function(!libtess.GluTesselator, !libtess.ActiveRegion, !libtess.ActiveRegion): boolean}\n   */\n  this.leq_ = leq;\n};\n\n/* istanbul ignore next */\n/**\n * Formerly used to delete the dict.\n * NOTE(bckenny): No longer called but left for memFree documentation. Nulled at\n * former callsite instead (sweep.doneEdgeDict_)\n * @private\n */\nlibtess.Dict.prototype.deleteDict_ = function() {\n  // for (var node = this.head_.next; node !== this.head_; node = node.next) {\n  //   memFree(node);\n  // }\n  // memFree(dict);\n};\n\n/**\n * Insert the supplied key into the edge list and return its new node.\n * @param {libtess.DictNode} node\n * @param {!libtess.ActiveRegion} key\n * @return {!libtess.DictNode}\n */\nlibtess.Dict.prototype.insertBefore = function(node, key) {\n  do {\n    node = node.prev;\n  } while (node.key !== null && !this.leq_(this.frame_, node.key, key));\n\n  // insert the new node and update the surrounding nodes to point to it\n  var newNode = new libtess.DictNode(key, node.next, node);\n  node.next.prev = newNode;\n  node.next = newNode;\n\n  return newNode;\n};\n\n/**\n * Insert key into the dict and return the new node that contains it.\n * @param {!libtess.ActiveRegion} key\n * @return {!libtess.DictNode}\n */\nlibtess.Dict.prototype.insert = function(key) {\n  // NOTE(bckenny): from a macro in dict.h/dict-list.h\n  return this.insertBefore(this.head_, key);\n};\n\n/**\n * Remove node from the list.\n * @param {libtess.DictNode} node\n */\nlibtess.Dict.prototype.deleteNode = function(node) {\n  node.next.prev = node.prev;\n  node.prev.next = node.next;\n\n  // NOTE(bckenny): nulled at callsite (sweep.deleteRegion_)\n  // memFree( node );\n};\n\n/**\n * Search returns the node with the smallest key greater than or equal\n * to the given key. If there is no such key, returns a node whose\n * key is null. Similarly, max(d).getSuccessor() has a null key, etc.\n * @param {!libtess.ActiveRegion} key\n * @return {!libtess.DictNode}\n */\nlibtess.Dict.prototype.search = function(key) {\n  var node = this.head_;\n\n  do {\n    node = node.next;\n  } while (node.key !== null && !this.leq_(this.frame_, key, node.key));\n\n  return node;\n};\n\n/**\n * Return the node with the smallest key.\n * @return {!libtess.DictNode}\n */\nlibtess.Dict.prototype.getMin = function() {\n  // NOTE(bckenny): from a macro in dict.h/dict-list.h\n  return this.head_.next;\n};\n\n// NOTE(bckenny): libtess.Dict.getMax isn't called within libtess and isn't part\n// of the public API. For now, leaving in but ignoring for coverage.\n/* istanbul ignore next */\n/**\n * Returns the node with the greatest key.\n * @return {!libtess.DictNode}\n */\nlibtess.Dict.prototype.getMax = function() {\n  // NOTE(bckenny): from a macro in dict.h/dict-list.h\n  return this.head_.prev;\n};\n\n\n/* global libtess */\n\n/**\n * A doubly-linked-list node with a libtess.ActiveRegion payload.\n * The key for this node and the next and previous nodes in the parent Dict list\n * can be provided to insert it into an existing list (or all can be omitted if\n * this is to be the founding node of the list).\n * @param {!libtess.ActiveRegion=} opt_key\n * @param {!libtess.DictNode=} opt_nextNode\n * @param {!libtess.DictNode=} opt_prevNode\n * @constructor\n * @struct\n */\nlibtess.DictNode = function(opt_key, opt_nextNode, opt_prevNode) {\n  /**\n   * The ActiveRegion key for this node, or null if the head of the list.\n   * @type {libtess.ActiveRegion}\n   */\n  this.key = opt_key || null;\n\n  /**\n   * Link to next DictNode in parent list or to self if this is the first node.\n   * @type {!libtess.DictNode}\n   */\n  this.next = opt_nextNode || this;\n\n  /**\n   * Link to previous DictNode in parent list or to self if this is the first\n   * node.\n   * @type {!libtess.DictNode}\n   */\n  this.prev = opt_prevNode || this;\n};\n\n/**\n * Get the key from this node.\n * @return {libtess.ActiveRegion}\n */\nlibtess.DictNode.prototype.getKey = function() {\n  return this.key;\n};\n\n/**\n * Get the successor node to this one.\n * @return {!libtess.DictNode}\n */\nlibtess.DictNode.prototype.getSuccessor = function() {\n  return this.next;\n};\n\n/**\n * Get the predecessor node to this one.\n * @return {!libtess.DictNode}\n */\nlibtess.DictNode.prototype.getPredecessor = function() {\n  return this.prev;\n};\n\n\n\n/* global libtess */\n\n/**\n * Cached vertex data for single-countour polygons for quick-and-dirty\n * decomposition.\n * @constructor\n * @struct\n */\nlibtess.CachedVertex = function() {\n  /**\n   * [coords description]\n   * @type {Array.<number>}\n   */\n  this.coords = [0, 0, 0];\n  // TODO(bckenny): better way to init?\n\n  /**\n   * [data description]\n   * @type {Object}\n   */\n  this.data = null;\n};\n\n\n\n/* global libtess */\n\n// TODO(bckenny): create more javascript-y API, e.g. make gluTessEndPolygon\n// async, don't require so many temp objects created\n\n/**\n * The tesselator main class, providing the public API.\n * @constructor\n * @struct\n */\nlibtess.GluTesselator = function() {\n  // Only initialize fields which can be changed by the api. Other fields\n  // are initialized where they are used.\n\n  // TODO(bckenny): many of these can be made private\n  // TODO(bckenny): can we combine call* and call*Data functions?\n\n  /*** state needed for collecting the input data ***/\n\n  /**\n   * what begin/end calls have we seen?\n   * @type {libtess.GluTesselator.tessState_}\n   */\n  this.state = libtess.GluTesselator.tessState_.T_DORMANT;\n\n  /**\n   * lastEdge_.org is the most recent vertex\n   * @private\n   * @type {libtess.GluHalfEdge}\n   */\n  this.lastEdge_ = null;\n\n  /**\n   * stores the input contours, and eventually the tessellation itself\n   * @type {libtess.GluMesh}\n   */\n  this.mesh = null;\n  // NOTE(bckenny): initialized in this.emptyCache_\n\n  /**\n   * Error callback.\n   * @private\n   * @type {?function((libtess.errorType|libtess.gluEnum))}\n   */\n  this.callError_ = null;\n\n\n  /*** state needed for projecting onto the sweep plane ***/\n\n  /**\n   * user-specified normal (if provided)\n   * @type {!Array.<number>}\n   */\n  this.normal = [0, 0, 0];\n  // TODO(bckenny): better way to init these arrays?\n\n  /**\n   * unit vector in s-direction (debugging)\n   * @type {!Array.<number>}\n   */\n  this.sUnit = [0, 0, 0];\n\n  /**\n   * unit vector in t-direction (debugging)\n   * @type {!Array.<number>}\n   */\n  this.tUnit = [0, 0, 0];\n\n  /*** state needed for the line sweep ***/\n  // TODO(bckenny): this could be moved to a sweep state object of some sort\n\n  /**\n   * tolerance for merging features\n   * @type {number}\n   */\n  this.relTolerance = libtess.GLU_TESS_DEFAULT_TOLERANCE;\n\n  /**\n   * rule for determining polygon interior\n   * @type {libtess.windingRule}\n   */\n  this.windingRule = libtess.windingRule.GLU_TESS_WINDING_ODD;\n\n  /**\n   * fatal error: needed combine callback\n   * @type {boolean}\n   */\n  this.fatalError = false;\n\n  /**\n   * edge dictionary for sweep line\n   * @type {libtess.Dict}\n   */\n  this.dict = null;\n  // NOTE(bckenny): dict initialized in sweep.initEdgeDict_, removed in sweep.doneEdgeDict_\n\n  /**\n   * priority queue of vertex events\n   * @type {libtess.PriorityQ}\n   */\n  this.pq = null;\n  // NOTE(bckenny): pq initialized in sweep.initPriorityQ\n\n  /**\n   * current sweep event being processed\n   * @type {libtess.GluVertex}\n   */\n  this.event = null;\n\n  /**\n   * Combine callback.\n   * @private\n   * @type {?function(Array.<number>, Array.<Object>, Array.<number>): Object}\n   */\n  this.callCombine_ = null;\n\n  /*** state needed for rendering callbacks (see render.js) ***/\n\n  /**\n   * Extract contours, not triangles\n   * @type {boolean}\n   */\n  this.boundaryOnly = false;\n\n  /**\n   * Begin callback.\n   * @private\n   * @type {?function(libtess.primitiveType)}\n   */\n  this.callBegin_ = null;\n\n  /**\n   * Edge flag callback.\n   * @private\n   * @type {?function(boolean)}\n   */\n  this.callEdgeFlag_ = null;\n\n  /**\n   * Vertex callback.\n   * @private\n   * @type {?function(Object)}\n   */\n  this.callVertex_ = null;\n\n  /**\n   * End callback.\n   * @private\n   * @type {?function()}\n   */\n  this.callEnd_ = null;\n\n  /**\n   * Mesh callback.\n   * @private\n   * @type {?function(libtess.GluMesh)}\n   */\n  this.callMesh_ = null;\n\n  /*** rendering callbacks that also pass polygon data  ***/\n  /**\n   * BeginData callback.\n   * @private\n   * @type {?function(libtess.primitiveType, Object)}\n   */\n  this.callBeginData_ = null;\n\n  /**\n   * EdgeFlagData callback.\n   * @private\n   * @type {?function(boolean, Object)}\n   */\n  this.callEdgeFlagData_ = null;\n\n  /**\n   * VertexData callback.\n   * @private\n   * @type {?function(Object, Object)}\n   */\n  this.callVertexData_ = null;\n\n  /**\n   * EndData callback.\n   * @private\n   * @type {?function(Object)}\n   */\n  this.callEndData_ = null;\n\n  /**\n   * ErrorData callback.\n   * @private\n   * @type {?function((libtess.errorType|libtess.gluEnum), Object)}\n   */\n  this.callErrorData_ = null;\n\n  /**\n   * CombineData callback.\n   * @private\n   * @type {?function(Array.<number>, Array.<Object>, Array.<number>, Object): Object}\n   */\n  this.callCombineData_ = null;\n\n  /**\n   * client data for current polygon\n   * @private\n   * @type {Object}\n   */\n  this.polygonData_ = null;\n\n  /*** state needed to cache single-contour polygons for renderCache() ***/\n  /**\n   * empty cache on next vertex() call\n   * @type {boolean}\n   */\n  this.emptyCache = false;\n  // TODO(bckenny): possibly rename to be clear it's a boolean\n\n  /**\n   * number of cached vertices\n   * @type {number}\n   */\n  this.cacheCount = 0;\n\n  /**\n   * the vertex data\n   * @type {Array.<libtess.CachedVertex>}\n   */\n  this.cache = new Array(libtess.TESS_MAX_CACHE);\n\n  // TODO(bckenny): fill now? or init on demand\n  for (var i = 0; i < libtess.TESS_MAX_CACHE; i++) {\n    this.cache[i] = new libtess.CachedVertex();\n  }\n};\n\n/**\n * The begin/end calls must be properly nested. We keep track of the current\n * state to enforce the ordering.\n * @enum {number}\n * @private\n */\nlibtess.GluTesselator.tessState_ = {\n  T_DORMANT: 0,\n  T_IN_POLYGON: 1,\n  T_IN_CONTOUR: 2\n};\n\n/**\n * Destory the tesselator object. See README.\n */\nlibtess.GluTesselator.prototype.gluDeleteTess = function() {\n  // TODO(bckenny): This does nothing but assert that it isn't called while\n  // building the polygon since we rely on GC to handle memory. *If* the public\n  // API changes, this should go.\n  this.requireState_(libtess.GluTesselator.tessState_.T_DORMANT);\n  // memFree(tess); TODO(bckenny)\n};\n\n\n/**\n * Set properties for control over tesselation. See README.\n * @param {libtess.gluEnum} which [description].\n * @param {number|boolean} value [description].\n */\nlibtess.GluTesselator.prototype.gluTessProperty = function(which, value) {\n  // TODO(bckenny): split into more setters?\n  // TODO(bckenny): in any case, we can do better than this switch statement\n\n  switch (which) {\n    case libtess.gluEnum.GLU_TESS_TOLERANCE:\n      if (value < 0 || value > 1) {\n        break;\n      }\n      // TODO(bckenny): libtess doesn't support any tolerance but 0. This should\n      // reject any non-zero tolerance accordingly.\n      this.relTolerance = /** @type {number} */(value);\n      return;\n\n    case libtess.gluEnum.GLU_TESS_WINDING_RULE:\n      var windingRule = /** @type {libtess.windingRule} */(value);\n\n      switch (windingRule) {\n        case libtess.windingRule.GLU_TESS_WINDING_ODD:\n        case libtess.windingRule.GLU_TESS_WINDING_NONZERO:\n        case libtess.windingRule.GLU_TESS_WINDING_POSITIVE:\n        case libtess.windingRule.GLU_TESS_WINDING_NEGATIVE:\n        case libtess.windingRule.GLU_TESS_WINDING_ABS_GEQ_TWO:\n          this.windingRule = windingRule;\n          return;\n        default:\n      }\n      break;\n\n    case libtess.gluEnum.GLU_TESS_BOUNDARY_ONLY:\n      // TODO(bckenny): added boolean param type. make sure ok.\n      this.boundaryOnly = !!value;\n      return;\n\n    default:\n      this.callErrorOrErrorData(libtess.gluEnum.GLU_INVALID_ENUM);\n      return;\n  }\n  this.callErrorOrErrorData(libtess.gluEnum.GLU_INVALID_VALUE);\n};\n\n\n/**\n * Returns tessellator property\n * @param {libtess.gluEnum} which [description].\n * @return {number|boolean} [description].\n */\nlibtess.GluTesselator.prototype.gluGetTessProperty = function(which) {\n  // TODO(bckenny): as above, split into more getters? and improve on switch statement\n  // why are these being asserted in getter but not setter?\n\n  switch (which) {\n    case libtess.gluEnum.GLU_TESS_TOLERANCE:\n      // tolerance should be in range [0..1]\n      return this.relTolerance;\n\n    case libtess.gluEnum.GLU_TESS_WINDING_RULE:\n      var rule = this.windingRule;\n      return rule;\n\n    case libtess.gluEnum.GLU_TESS_BOUNDARY_ONLY:\n      return this.boundaryOnly;\n\n    default:\n      this.callErrorOrErrorData(libtess.gluEnum.GLU_INVALID_ENUM);\n      break;\n  }\n  return false;\n};\n\n\n/**\n * Lets the user supply the polygon normal, if known.  All input data\n * is projected into a plane perpendicular to the normal before\n * tesselation. All output triangles are oriented CCW with\n * respect to the normal (CW orientation can be obtained by\n * reversing the sign of the supplied normal). For example, if\n * you know that all polygons lie in the x-y plane, call\n * \"tess.gluTessNormal(0.0, 0.0, 1.0)\" before rendering any polygons.\n *\n * @param {number} x [description].\n * @param {number} y [description].\n * @param {number} z [description].\n */\nlibtess.GluTesselator.prototype.gluTessNormal = function(x, y, z) {\n  this.normal[0] = x;\n  this.normal[1] = y;\n  this.normal[2] = z;\n};\n\n\n/**\n * Specify callbacks. See README. A null or undefined opt_fn removes current callback.\n *\n * @param {libtess.gluEnum} which [description].\n * @param {?Function=} opt_fn [description].\n */\nlibtess.GluTesselator.prototype.gluTessCallback = function(which, opt_fn) {\n  var fn = !opt_fn ? null : opt_fn;\n  // TODO(bckenny): better opt_fn typing?\n\n  switch (which) {\n    case libtess.gluEnum.GLU_TESS_BEGIN:\n      this.callBegin_ = /** @type {function(libtess.primitiveType)} */ (fn);\n      return;\n\n    case libtess.gluEnum.GLU_TESS_BEGIN_DATA:\n      this.callBeginData_ =\n          /** @type {function(libtess.primitiveType, Object)} */ (fn);\n      return;\n\n    case libtess.gluEnum.GLU_TESS_EDGE_FLAG:\n      this.callEdgeFlag_ = /** @type {function(boolean)} */ (fn);\n      return;\n\n    case libtess.gluEnum.GLU_TESS_EDGE_FLAG_DATA:\n      this.callEdgeFlagData_ = /** @type {function(boolean, Object)} */ (fn);\n      return;\n\n    case libtess.gluEnum.GLU_TESS_VERTEX:\n      this.callVertex_ = /** @type {function(Object)} */ (fn);\n      return;\n\n    case libtess.gluEnum.GLU_TESS_VERTEX_DATA:\n      this.callVertexData_ = /** @type {function(Object, Object)} */ (fn);\n      return;\n\n    case libtess.gluEnum.GLU_TESS_END:\n      this.callEnd_ = /** @type {function()} */ (fn);\n      return;\n\n    case libtess.gluEnum.GLU_TESS_END_DATA:\n      this.callEndData_ = /** @type {function(Object)} */ (fn);\n      return;\n\n    case libtess.gluEnum.GLU_TESS_ERROR:\n      this.callError_ = /** @type {function((libtess.errorType|libtess.gluEnum))} */ (fn);\n      return;\n\n    case libtess.gluEnum.GLU_TESS_ERROR_DATA:\n      this.callErrorData_ =\n          /** @type {function((libtess.errorType|libtess.gluEnum), Object)} */ (fn);\n      return;\n\n    case libtess.gluEnum.GLU_TESS_COMBINE:\n      this.callCombine_ = /** @type {function(Array.<number>, Array.<Object>, Array.<number>): Object} */ (fn);\n      return;\n\n    case libtess.gluEnum.GLU_TESS_COMBINE_DATA:\n      this.callCombineData_ = /** @type {function(Array.<number>, Array.<Object>, Array.<number>, Object): Object} */ (fn);\n      return;\n\n    case libtess.gluEnum.GLU_TESS_MESH:\n      this.callMesh_ = /** @type {function(libtess.GluMesh)} */ (fn);\n      return;\n\n    default:\n      this.callErrorOrErrorData(libtess.gluEnum.GLU_INVALID_ENUM);\n      return;\n  }\n};\n\n\n/**\n * Specify a vertex and associated data. Must be within calls to\n * beginContour/endContour. See README.\n *\n * @param {Array.<number>} coords [description].\n * @param {Object} data [description].\n */\nlibtess.GluTesselator.prototype.gluTessVertex = function(coords, data) {\n  var tooLarge = false;\n\n  // TODO(bckenny): pool allocation?\n  var clamped = [0, 0, 0];\n\n  this.requireState_(libtess.GluTesselator.tessState_.T_IN_CONTOUR);\n\n  if (this.emptyCache) {\n    this.emptyCache_();\n    this.lastEdge_ = null;\n  }\n\n  for (var i = 0; i < 3; ++i) {\n    var x = coords[i];\n    if (x < -libtess.GLU_TESS_MAX_COORD) {\n      x = -libtess.GLU_TESS_MAX_COORD;\n      tooLarge = true;\n    }\n    if (x > libtess.GLU_TESS_MAX_COORD) {\n      x = libtess.GLU_TESS_MAX_COORD;\n      tooLarge = true;\n    }\n    clamped[i] = x;\n  }\n\n  if (tooLarge) {\n    this.callErrorOrErrorData(libtess.errorType.GLU_TESS_COORD_TOO_LARGE);\n  }\n\n  if (this.mesh === null) {\n    if (this.cacheCount < libtess.TESS_MAX_CACHE) {\n      this.cacheVertex_(clamped, data);\n      return;\n    }\n\n    // cache is full, create mesh and add cached verts to it\n    this.emptyCache_();\n  }\n\n  this.addVertex_(clamped, data);\n};\n\n\n/**\n * [gluTessBeginPolygon description]\n * @param {Object} data Client data for current polygon.\n */\nlibtess.GluTesselator.prototype.gluTessBeginPolygon = function(data) {\n  this.requireState_(libtess.GluTesselator.tessState_.T_DORMANT);\n\n  this.state = libtess.GluTesselator.tessState_.T_IN_POLYGON;\n  this.cacheCount = 0;\n  this.emptyCache = false;\n  this.mesh = null;\n\n  this.polygonData_ = data;\n};\n\n\n/**\n * [gluTessBeginContour description]\n */\nlibtess.GluTesselator.prototype.gluTessBeginContour = function() {\n  this.requireState_(libtess.GluTesselator.tessState_.T_IN_POLYGON);\n\n  this.state = libtess.GluTesselator.tessState_.T_IN_CONTOUR;\n  this.lastEdge_ = null;\n  if (this.cacheCount > 0) {\n    // Just set a flag so we don't get confused by empty contours\n    // -- these can be generated accidentally with the obsolete\n    // NextContour() interface.\n    // TODO(bckenny): we aren't implementing NextContour() interface.\n    this.emptyCache = true;\n  }\n};\n\n\n/**\n * [gluTessEndContour description]\n */\nlibtess.GluTesselator.prototype.gluTessEndContour = function() {\n  this.requireState_(libtess.GluTesselator.tessState_.T_IN_CONTOUR);\n  this.state = libtess.GluTesselator.tessState_.T_IN_POLYGON;\n};\n\n\n/**\n * [gluTessEndPolygon description]\n */\nlibtess.GluTesselator.prototype.gluTessEndPolygon = function() {\n  this.requireState_(libtess.GluTesselator.tessState_.T_IN_POLYGON);\n  this.state = libtess.GluTesselator.tessState_.T_DORMANT;\n\n  if (this.mesh === null) {\n    // TODO(bckenny): can we eliminate more cache functionality?\n    this.emptyCache_();\n  }\n\n  // Determine the polygon normal and project vertices onto the plane\n  // of the polygon.\n  libtess.normal.projectPolygon(this);\n\n  // computeInterior(tess) computes the planar arrangement specified\n  // by the given contours, and further subdivides this arrangement\n  // into regions. Each region is marked \"inside\" if it belongs\n  // to the polygon, according to the rule given by this.windingRule.\n  // Each interior region is guaranteed be monotone.\n  libtess.sweep.computeInterior(this);\n\n  if (!this.fatalError) {\n    // If the user wants only the boundary contours, we throw away all edges\n    // except those which separate the interior from the exterior.\n    // Otherwise we tessellate all the regions marked \"inside\".\n    // NOTE(bckenny): we know this.mesh has been initialized, so help closure out.\n    var mesh = /** @type {!libtess.GluMesh} */(this.mesh);\n    if (this.boundaryOnly) {\n      libtess.tessmono.setWindingNumber(mesh, 1, true);\n    } else {\n      libtess.tessmono.tessellateInterior(mesh);\n    }\n\n    this.mesh.checkMesh();\n\n    if (this.callBegin_ || this.callEnd_ || this.callVertex_ ||\n        this.callEdgeFlag_ || this.callBeginData_ || this.callEndData_ ||\n        this.callVertexData_ || this.callEdgeFlagData_) {\n\n      if (this.boundaryOnly) {\n        // output boundary contours\n        libtess.render.renderBoundary(this, this.mesh);\n\n      } else {\n        // output triangles (with edge callback if one is set)\n        var flagEdges = !!(this.callEdgeFlag_ || this.callEdgeFlagData_);\n        libtess.render.renderMesh(this, this.mesh, flagEdges);\n      }\n    }\n\n    if (this.callMesh_) {\n      // Throw away the exterior faces, so that all faces are interior.\n      // This way the user doesn't have to check the \"inside\" flag,\n      // and we don't need to even reveal its existence. It also leaves\n      // the freedom for an implementation to not generate the exterior\n      // faces in the first place.\n      libtess.tessmono.discardExterior(this.mesh);\n      // user wants the mesh itself\n      this.callMesh_(this.mesh);\n\n      this.mesh = null;\n      this.polygonData_ = null;\n      return;\n    }\n  }\n\n  libtess.mesh.deleteMesh(this.mesh);\n  this.polygonData_ = null;\n  this.mesh = null;\n};\n\n\n/**\n * Return the tessellator to its original dormant state.\n * @private\n */\nlibtess.GluTesselator.prototype.makeDormant_ = function() {\n  if (this.mesh) {\n    libtess.mesh.deleteMesh(this.mesh);\n  }\n  this.state = libtess.GluTesselator.tessState_.T_DORMANT;\n  this.lastEdge_ = null;\n  this.mesh = null;\n};\n\n\n/**\n * [requireState_ description]\n * @private\n * @param {libtess.GluTesselator.tessState_} state [description].\n */\nlibtess.GluTesselator.prototype.requireState_ = function(state) {\n  if (this.state !== state) {\n    this.gotoState_(state);\n  }\n};\n\n\n/**\n * [gotoState_ description]\n * @private\n * @param  {libtess.GluTesselator.tessState_} newState [description].\n */\nlibtess.GluTesselator.prototype.gotoState_ = function(newState) {\n  while (this.state !== newState) {\n    // We change the current state one level at a time, to get to the desired\n    // state.\n    if (this.state < newState) {\n      switch (this.state) {\n        case libtess.GluTesselator.tessState_.T_DORMANT:\n          this.callErrorOrErrorData(\n              libtess.errorType.GLU_TESS_MISSING_BEGIN_POLYGON);\n          this.gluTessBeginPolygon(null);\n          break;\n\n        case libtess.GluTesselator.tessState_.T_IN_POLYGON:\n          this.callErrorOrErrorData(\n              libtess.errorType.GLU_TESS_MISSING_BEGIN_CONTOUR);\n          this.gluTessBeginContour();\n          break;\n      }\n\n    } else {\n      switch (this.state) {\n        case libtess.GluTesselator.tessState_.T_IN_CONTOUR:\n          this.callErrorOrErrorData(\n              libtess.errorType.GLU_TESS_MISSING_END_CONTOUR);\n          this.gluTessEndContour();\n          break;\n\n        case libtess.GluTesselator.tessState_.T_IN_POLYGON:\n          this.callErrorOrErrorData(\n              libtess.errorType.GLU_TESS_MISSING_END_POLYGON);\n          // this.gluTessEndPolygon() is too much work!\n          this.makeDormant_();\n          break;\n      }\n    }\n  }\n};\n\n\n/**\n * [addVertex_ description]\n * @private\n * @param {Array.<number>} coords [description].\n * @param {Object} data [description].\n */\nlibtess.GluTesselator.prototype.addVertex_ = function(coords, data) {\n  var e = this.lastEdge_;\n  if (e === null) {\n    // Make a self-loop (one vertex, one edge).\n    e = libtess.mesh.makeEdge(this.mesh);\n    libtess.mesh.meshSplice(e, e.sym);\n\n  } else {\n    // Create a new vertex and edge which immediately follow e\n    // in the ordering around the left face.\n    libtess.mesh.splitEdge(e);\n    e = e.lNext;\n  }\n\n  // The new vertex is now e.org.\n  e.org.data = data;\n  e.org.coords[0] = coords[0];\n  e.org.coords[1] = coords[1];\n  e.org.coords[2] = coords[2];\n\n  // The winding of an edge says how the winding number changes as we\n  // cross from the edge''s right face to its left face.  We add the\n  // vertices in such an order that a CCW contour will add +1 to\n  // the winding number of the region inside the contour.\n  e.winding = 1;\n  e.sym.winding = -1;\n\n  this.lastEdge_ = e;\n};\n\n\n/**\n * [cacheVertex_ description]\n * @private\n * @param {Array.<number>} coords [description].\n * @param {Object} data [description].\n */\nlibtess.GluTesselator.prototype.cacheVertex_ = function(coords, data) {\n  var v = this.cache[this.cacheCount];\n\n  v.data = data;\n  v.coords[0] = coords[0];\n  v.coords[1] = coords[1];\n  v.coords[2] = coords[2];\n  ++this.cacheCount;\n};\n\n\n/**\n * [emptyCache_ description]\n * @private\n */\nlibtess.GluTesselator.prototype.emptyCache_ = function() {\n  // NOTE(bckenny): surprise!\n  this.mesh = new libtess.GluMesh();\n\n  for (var i = 0; i < this.cacheCount; i++) {\n    var v = this.cache[i];\n    this.addVertex_(v.coords, v.data);\n  }\n\n  this.cacheCount = 0;\n  this.emptyCache = false;\n};\n\n\n// TODO(bckenny): all following conditional callbacks could be simplified\n// TODO(bckenny): using null for now, but may rework\n// TODO(bckenny): should add documentation that references in callback are volatile (or make a copy)\n// see README callback descriptions\n/**\n * [callBeginOrBeginData description]\n * @param {libtess.primitiveType} type [description].\n */\nlibtess.GluTesselator.prototype.callBeginOrBeginData = function(type) {\n  if (this.callBeginData_) {\n    this.callBeginData_(type, this.polygonData_);\n\n  } else if (this.callBegin_) {\n    this.callBegin_(type);\n  }\n};\n\n\n/**\n * [callVertexOrVertexData description]\n * @param {Object} data [description].\n */\nlibtess.GluTesselator.prototype.callVertexOrVertexData = function(data) {\n  if (this.callVertexData_) {\n    this.callVertexData_(data, this.polygonData_);\n\n  } else if (this.callVertex_) {\n    this.callVertex_(data);\n  }\n};\n\n\n/**\n * [callEdgeFlagOrEdgeFlagData description]\n * @param {boolean} flag [description].\n */\nlibtess.GluTesselator.prototype.callEdgeFlagOrEdgeFlagData = function(flag) {\n  if (this.callEdgeFlagData_) {\n    this.callEdgeFlagData_(flag, this.polygonData_);\n\n  } else if (this.callEdgeFlag_) {\n    this.callEdgeFlag_(flag);\n  }\n};\n\n\n/**\n * [callEndOrEndData description]\n */\nlibtess.GluTesselator.prototype.callEndOrEndData = function() {\n  if (this.callEndData_) {\n    this.callEndData_(this.polygonData_);\n\n  } else if (this.callEnd_) {\n    this.callEnd_();\n  }\n};\n\n\n/**\n * [callCombineOrCombineData description]\n * @param {Array.<number>} coords [description].\n * @param {Array.<Object>} data [description].\n * @param {Array.<number>} weight [description].\n * @return {Object} Interpolated vertex.\n */\nlibtess.GluTesselator.prototype.callCombineOrCombineData =\n    function(coords, data, weight) {\n\n  var interpData;\n  if (this.callCombineData_) {\n    interpData = this.callCombineData_(coords, data, weight, this.polygonData_);\n\n  } else if (this.callCombine_) {\n    interpData = this.callCombine_(coords, data, weight);\n  }\n\n  // TODO(bckenny): can't be undefined\n  if (interpData === undefined) {\n    interpData = null;\n  }\n  return interpData;\n};\n\n\n// TODO(bckenny): combine the enums in libtess\n/**\n * [callErrorOrErrorData description]\n * @param {(libtess.errorType|libtess.gluEnum)} errno [description].\n */\nlibtess.GluTesselator.prototype.callErrorOrErrorData = function(errno) {\n  if (this.callErrorData_) {\n    this.callErrorData_(errno, this.polygonData_);\n\n  } else if (this.callError_) {\n    this.callError_(errno);\n  }\n};\n\n\n\n/* global libtess */\n\n/**\n * Each face has a pointer to the next and previous faces in the\n * circular list, and a pointer to a half-edge with this face as\n * the left face (null if this is the dummy header). There is also\n * a field \"data\" for client data.\n *\n * @param {libtess.GluFace=} opt_nextFace\n * @param {libtess.GluFace=} opt_prevFace\n * @constructor\n * @struct\n */\nlibtess.GluFace = function(opt_nextFace, opt_prevFace) {\n  // TODO(bckenny): reverse order of params?\n\n  /**\n   * next face (never null)\n   * @type {!libtess.GluFace}\n   */\n  this.next = opt_nextFace || this;\n\n  /**\n   * previous face (never NULL)\n   * @type {!libtess.GluFace}\n   */\n  this.prev = opt_prevFace || this;\n\n  /**\n   * A half edge with this left face.\n   * @type {libtess.GluHalfEdge}\n   */\n  this.anEdge = null;\n\n  /**\n   * room for client's data\n   * @type {Object}\n   */\n  this.data = null;\n\n  /**\n   * This face is in the polygon interior.\n   * @type {boolean}\n   */\n  this.inside = false;\n};\n\n\n\n/* global libtess */\n\n/**\n * The fundamental data structure is the \"half-edge\". Two half-edges\n * go together to make an edge, but they point in opposite directions.\n * Each half-edge has a pointer to its mate (the \"symmetric\" half-edge sym),\n * its origin vertex (org), the face on its left side (lFace), and the\n * adjacent half-edges in the CCW direction around the origin vertex\n * (oNext) and around the left face (lNext). There is also a \"next\"\n * pointer for the global edge list (see below).\n *\n * The notation used for mesh navigation:\n *  sym   = the mate of a half-edge (same edge, but opposite direction)\n *  oNext = edge CCW around origin vertex (keep same origin)\n *  dNext = edge CCW around destination vertex (keep same dest)\n *  lNext = edge CCW around left face (dest becomes new origin)\n *  rNext = edge CCW around right face (origin becomes new dest)\n *\n * \"prev\" means to substitute CW for CCW in the definitions above.\n *\n * The circular edge list is special; since half-edges always occur\n * in pairs (e and e.sym), each half-edge stores a pointer in only\n * one direction. Starting at eHead and following the e.next pointers\n * will visit each *edge* once (ie. e or e.sym, but not both).\n * e.sym stores a pointer in the opposite direction, thus it is\n * always true that e.sym.next.sym.next === e.\n *\n * @param {libtess.GluHalfEdge=} opt_nextEdge\n * @constructor\n * @struct\n */\nlibtess.GluHalfEdge = function(opt_nextEdge) {\n  // TODO(bckenny): are these the right defaults? (from gl_meshNewMesh requirements)\n\n  /**\n   * doubly-linked list (prev==sym->next)\n   * @type {!libtess.GluHalfEdge}\n   */\n  this.next = opt_nextEdge || this;\n\n  // TODO(bckenny): how can this be required if created in pairs? move to factory creation only?\n  /**\n   * same edge, opposite direction\n   * @type {libtess.GluHalfEdge}\n   */\n  this.sym = null;\n\n  /**\n   * next edge CCW around origin\n   * @type {libtess.GluHalfEdge}\n   */\n  this.oNext = null;\n\n  /**\n   * next edge CCW around left face\n   * @type {libtess.GluHalfEdge}\n   */\n  this.lNext = null;\n\n  /**\n   * origin vertex (oVertex too long)\n   * @type {libtess.GluVertex}\n   */\n  this.org = null;\n\n  /**\n   * left face\n   * @type {libtess.GluFace}\n   */\n  this.lFace = null;\n\n  // Internal data (keep hidden)\n  // NOTE(bckenny): can't be private, though...\n\n  /**\n   * a region with this upper edge (see sweep.js)\n   * @type {libtess.ActiveRegion}\n   */\n  this.activeRegion = null;\n\n  /**\n   * change in winding number when crossing from the right face to the left face\n   * @type {number}\n   */\n  this.winding = 0;\n};\n\n// NOTE(bckenny): the following came from macros in mesh\n// TODO(bckenny): using methods as aliases for sym connections for now.\n// not sure about this approach. getters? renames?\n\n\n/**\n * [rFace description]\n * @return {libtess.GluFace} [description].\n */\nlibtess.GluHalfEdge.prototype.rFace = function() {\n  return this.sym.lFace;\n};\n\n\n/**\n * [dst description]\n * @return {libtess.GluVertex} [description].\n */\nlibtess.GluHalfEdge.prototype.dst = function() {\n  return this.sym.org;\n};\n\n\n/**\n * [oPrev description]\n * @return {libtess.GluHalfEdge} [description].\n */\nlibtess.GluHalfEdge.prototype.oPrev = function() {\n  return this.sym.lNext;\n};\n\n\n/**\n * [lPrev description]\n * @return {libtess.GluHalfEdge} [description].\n */\nlibtess.GluHalfEdge.prototype.lPrev = function() {\n  return this.oNext.sym;\n};\n\n// NOTE(bckenny): libtess.GluHalfEdge.dPrev is called nowhere in libtess and\n// isn't part of the current public API. It could be useful for mesh traversal\n// and manipulation if made public, however.\n/* istanbul ignore next */\n/**\n * The edge clockwise around destination vertex (keep same dest).\n * @return {libtess.GluHalfEdge}\n */\nlibtess.GluHalfEdge.prototype.dPrev = function() {\n  return this.lNext.sym;\n};\n\n\n/**\n * [rPrev description]\n * @return {libtess.GluHalfEdge} [description].\n */\nlibtess.GluHalfEdge.prototype.rPrev = function() {\n  return this.sym.oNext;\n};\n\n\n/**\n * [dNext description]\n * @return {libtess.GluHalfEdge} [description].\n */\nlibtess.GluHalfEdge.prototype.dNext = function() {\n  return this.rPrev().sym;\n};\n\n\n// NOTE(bckenny): libtess.GluHalfEdge.rNext is called nowhere in libtess and\n// isn't part of the current public API. It could be useful for mesh traversal\n// and manipulation if made public, however.\n/* istanbul ignore next */\n/**\n * The edge CCW around the right face (origin of this becomes new dest).\n * @return {libtess.GluHalfEdge}\n */\nlibtess.GluHalfEdge.prototype.rNext = function() {\n  return this.oPrev().sym;\n};\n\n\n\n/* global libtess */\n\n/**\n * Creates a new mesh with no edges, no vertices,\n * and no loops (what we usually call a \"face\").\n *\n * @constructor\n * @struct\n */\nlibtess.GluMesh = function() {\n  /**\n   * dummy header for vertex list\n   * @type {libtess.GluVertex}\n   */\n  this.vHead = new libtess.GluVertex();\n\n  /**\n   * dummy header for face list\n   * @type {libtess.GluFace}\n   */\n  this.fHead = new libtess.GluFace();\n\n  /**\n   * dummy header for edge list\n   * @type {libtess.GluHalfEdge}\n   */\n  this.eHead = new libtess.GluHalfEdge();\n\n  /**\n   * and its symmetric counterpart\n   * @type {libtess.GluHalfEdge}\n   */\n  this.eHeadSym = new libtess.GluHalfEdge();\n\n  // TODO(bckenny): better way to pair these?\n  this.eHead.sym = this.eHeadSym;\n  this.eHeadSym.sym = this.eHead;\n};\n\n\n// TODO(bckenny): #ifndef NDEBUG\n/**\n * Checks mesh for self-consistency.\n */\nlibtess.GluMesh.prototype.checkMesh = function() {\n  if (!libtess.DEBUG) {\n    return;\n  }\n\n  var fHead = this.fHead;\n  var vHead = this.vHead;\n  var eHead = this.eHead;\n\n  var e;\n\n  // faces\n  var f;\n  var fPrev = fHead;\n  for (fPrev = fHead; (f = fPrev.next) !== fHead; fPrev = f) {\n    e = f.anEdge;\n    do {\n      e = e.lNext;\n    } while (e !== f.anEdge);\n  }\n\n  // vertices\n  var v;\n  var vPrev = vHead;\n  for (vPrev = vHead; (v = vPrev.next) !== vHead; vPrev = v) {\n    e = v.anEdge;\n    do {\n      e = e.oNext;\n    } while (e !== v.anEdge);\n  }\n\n  // edges\n  var ePrev = eHead;\n  for (ePrev = eHead; (e = ePrev.next) !== eHead; ePrev = e) {\n  }\n};\n\n\n\n/* global libtess */\n\n/**\n * Each vertex has a pointer to next and previous vertices in the\n * circular list, and a pointer to a half-edge with this vertex as\n * the origin (null if this is the dummy header). There is also a\n * field \"data\" for client data.\n *\n * @param {libtess.GluVertex=} opt_nextVertex [description].\n * @param {libtess.GluVertex=} opt_prevVertex [description].\n * @constructor\n * @struct\n */\nlibtess.GluVertex = function(opt_nextVertex, opt_prevVertex) {\n  // TODO(bckenny): reverse order of params?\n\n  /**\n   * Next vertex (never null).\n   * @type {!libtess.GluVertex}\n   */\n  this.next = opt_nextVertex || this;\n\n  /**\n   * Previous vertex (never null).\n   * @type {!libtess.GluVertex}\n   */\n  this.prev = opt_prevVertex || this;\n\n  /**\n   * A half-edge with this origin.\n   * @type {libtess.GluHalfEdge}\n   */\n  this.anEdge = null;\n\n  /**\n   * The client's data.\n   * @type {Object}\n   */\n  this.data = null;\n\n  /**\n   * The vertex location in 3D.\n   * @type {!Array.<number>}\n   */\n  this.coords = [0, 0, 0];\n  // TODO(bckenny): we may want to rethink coords, either eliminate (using s\n  // and t and user data) or index into contiguous storage?\n\n  /**\n   * Component of projection onto the sweep plane.\n   * @type {number}\n   */\n  this.s = 0;\n\n  /**\n   * Component of projection onto the sweep plane.\n   * @type {number}\n   */\n  this.t = 0;\n\n  /**\n   * To allow deletion from priority queue.\n   * @type {?libtess.PQHandle}\n   */\n  this.pqHandle = null;\n  // NOTE(bckenny): pqHandle inited in sweep\n  // TODO(bckenny): can we have a numeric default value? null may do bad things\n};\n\n\n\n/* global libtess */\n\n// TODO(bckenny): more specific typing on key\n\n/**\n * [PQHandleElem description]\n * @constructor\n * @struct\n */\nlibtess.PQHandleElem = function() {\n  // TODO(bckenny): if key could instead be an indexed into another store, makes heap storage a lot easier\n\n  /**\n   * [key description]\n   * @type {libtess.PQKey}\n   */\n  this.key = null;\n\n  /**\n   * [node description]\n   * @type {libtess.PQHandle}\n   */\n  this.node = 0;\n};\n\n\n/**\n * Allocate a PQHandleElem array of size size. If oldArray is not null, its\n * contents are copied to the beginning of the new array. The rest of the array\n * is filled with new PQHandleElems.\n *\n * @param {?Array.<libtess.PQHandleElem>} oldArray [description].\n * @param {number} size [description].\n * @return {Array.<libtess.PQHandleElem>} [description].\n */\nlibtess.PQHandleElem.realloc = function(oldArray, size) {\n  var newArray = new Array(size);\n\n  // TODO(bckenny): better to reallocate array? or grow array?\n  var index = 0;\n  if (oldArray !== null) {\n    for (; index < oldArray.length; index++) {\n      newArray[index] = oldArray[index];\n    }\n  }\n\n  for (; index < size; index++) {\n    newArray[index] = new libtess.PQHandleElem();\n  }\n\n  return newArray;\n};\n\n\n\n/* global libtess */\n\n// TODO(bckenny): maybe just have these created inline as literals\n// (or unboxed directly - PQHandle is just an array index number)\n\n/**\n * [PQNode description]\n * @constructor\n * @struct\n */\nlibtess.PQNode = function() {\n  /**\n   * [handle description]\n   * @type {libtess.PQHandle}\n   */\n  this.handle = 0;\n};\n\n\n/**\n * Allocate a PQNode array of size size. If oldArray is not null, its contents\n * are copied to the beginning of the new array. The rest of the array is\n * filled with new PQNodes.\n *\n * @param {?Array.<libtess.PQNode>} oldArray [description].\n * @param {number} size [description].\n * @return {Array.<libtess.PQNode>} [description].\n */\nlibtess.PQNode.realloc = function(oldArray, size) {\n  var newArray = new Array(size);\n\n  // TODO(bckenny): better to reallocate array? or grow array?\n  var index = 0;\n  if (oldArray !== null) {\n    for (; index < oldArray.length; index++) {\n      newArray[index] = oldArray[index];\n    }\n  }\n\n  for (; index < size; index++) {\n    newArray[index] = new libtess.PQNode();\n  }\n\n  return newArray;\n};\n\n\n\n/* global libtess */\n\n// TODO(bckenny): preallocating arrays may actually be hurting us in sort\n// performance (esp if theres some undefs in there)\n\n/**\n * [PriorityQ description]\n * @constructor\n * @struct\n * @param {function(Object, Object): boolean} leq [description].\n */\nlibtess.PriorityQ = function(leq) {\n  /**\n   * [keys description]\n   * @private\n   * @type {Array.<libtess.PQKey>}\n   */\n  this.keys_ = libtess.PriorityQ.prototype.PQKeyRealloc_(null,\n      libtess.PriorityQ.INIT_SIZE_);\n\n  /**\n   * Array of indexes into this.keys_\n   * @private\n   * @type {Array.<number>}\n   */\n  this.order_ = null;\n\n  /**\n   * [size description]\n   * @private\n   * @type {number}\n   */\n  this.size_ = 0;\n\n  /**\n   * [max_ description]\n   * @private\n   * @type {number}\n   */\n  this.max_ = libtess.PriorityQ.INIT_SIZE_;\n\n  /**\n   * [initialized description]\n   * @private\n   * @type {boolean}\n   */\n  this.initialized_ = false;\n\n  // TODO(bckenny): leq was inlined by define in original, but appears to just\n  // be vertLeq, as passed. keep an eye on this as to why its not used.\n  /**\n   * [leq description]\n   * @private\n   * @type {function(libtess.PQKey, libtess.PQKey): boolean}\n   */\n  this.leq_ =\n      /** @type {function(libtess.PQKey, libtess.PQKey): boolean} */(leq);\n\n  /**\n   * [heap_ description]\n   * @private\n   * @type {libtess.PriorityQHeap}\n   */\n  this.heap_ = new libtess.PriorityQHeap(this.leq_);\n};\n\n\n/**\n * [INIT_SIZE_ description]\n * @private\n * @const\n * @type {number}\n */\nlibtess.PriorityQ.INIT_SIZE_ = 32;\n\n\n/**\n * [deleteQ description]\n */\nlibtess.PriorityQ.prototype.deleteQ = function() {\n  // TODO(bckenny): unnecessary, I think.\n  this.heap_.deleteHeap();\n  this.heap_ = null;\n  this.order_ = null;\n  this.keys_ = null;\n  // NOTE(bckenny): nulled at callsite (sweep.donePriorityQ_)\n};\n\n\n/**\n * [init description]\n */\nlibtess.PriorityQ.prototype.init = function() {\n  // TODO(bckenny): reuse. in theory, we don't have to empty this, as access is\n  // dictated by this.size_, but array.sort doesn't know that\n  this.order_ = [];\n\n  // Create an array of indirect pointers to the keys, so that\n  // the handles we have returned are still valid.\n  // TODO(bckenny): valid for when? it appears we can just store indexes into\n  // keys_, but what did this mean?\n  for (var i = 0; i < this.size_; i++) {\n    this.order_[i] = i;\n  }\n\n  // sort the indirect pointers in descending order of the keys themselves\n  // TODO(bckenny): make sure it's ok that keys[a] === keys[b] returns 1\n  // TODO(bckenny): unstable sort means we may get slightly different polys in\n  // different browsers, but only when passing in equal points\n  // TODO(bckenny): make less awkward closure?\n  var comparator = (function(keys, leq) {\n    return function(a, b) {\n      return leq(keys[a], keys[b]) ? 1 : -1;\n    };\n  })(this.keys_, this.leq_);\n  this.order_.sort(comparator);\n\n  this.max_ = this.size_;\n  this.initialized_ = true;\n  this.heap_.init();\n\n  // TODO(bckenny):\n  // #ifndef NDEBUG\n  if (libtess.DEBUG) {\n    var p = 0;\n    var r = p + this.size_ - 1;\n    for (i = p; i < r; ++i) {\n    }\n  }\n  // #endif\n};\n\n\n/**\n * [insert description]\n * @param {libtess.PQKey} keyNew [description].\n * @return {libtess.PQHandle} [description].\n */\nlibtess.PriorityQ.prototype.insert = function(keyNew) {\n  // NOTE(bckenny): originally returned LONG_MAX as alloc failure signal. no\n  // longer does.\n  if (this.initialized_) {\n    return this.heap_.insert(keyNew);\n  }\n\n  var curr = this.size_;\n  if (++this.size_ >= this.max_) {\n    // If the heap overflows, double its size.\n    this.max_ *= 2;\n    this.keys_ =\n        libtess.PriorityQ.prototype.PQKeyRealloc_(this.keys_, this.max_);\n  }\n\n  this.keys_[curr] = keyNew;\n\n  // Negative handles index the sorted array.\n  return -(curr + 1);\n};\n\n\n/**\n * Allocate a PQKey array of size size. If oldArray is not null, its\n * contents are copied to the beginning of the new array. The rest of the array\n * is filled with nulls.\n *\n * @private\n * @param {?Array.<libtess.PQKey>} oldArray [description].\n * @param {number} size [description].\n * @return {Array.<(?libtess.PQKey)>} [description].\n */\nlibtess.PriorityQ.prototype.PQKeyRealloc_ = function(oldArray, size) {\n  // TODO(bckenny): double check return type. can we have ? there?\n  var newArray = new Array(size);\n\n  // TODO(bckenny): better to reallocate array? or grow array?\n  var index = 0;\n  if (oldArray !== null) {\n    for (; index < oldArray.length; index++) {\n      newArray[index] = oldArray[index];\n    }\n  }\n\n  for (; index < size; index++) {\n    newArray[index] = null;\n  }\n\n  return newArray;\n};\n\n// NOTE(bckenny): libtess.PriorityQ.keyLessThan_ is called nowhere in libtess\n// and isn't part of the public API.\n/* istanbul ignore next */\n/**\n * Whether x is less than y according to this.leq_.\n * @private\n * @param {number} x\n * @param {number} y\n * @return {boolean}\n */\nlibtess.PriorityQ.prototype.keyLessThan_ = function(x, y) {\n  // NOTE(bckenny): was macro LT\n  var keyX = this.keys_[x];\n  var keyY = this.keys_[y];\n  return !this.leq_(keyY, keyX);\n};\n\n// NOTE(bckenny): libtess.PriorityQ.keyGreaterThan_ is called nowhere in libtess\n// and isn't part of the public API.\n/* istanbul ignore next */\n/**\n * Whether x is greater than y according to this.leq_.\n * @private\n * @param {number} x\n * @param {number} y\n * @return {boolean}\n */\nlibtess.PriorityQ.prototype.keyGreaterThan_ = function(x, y) {\n  // NOTE(bckenny): was macro GT\n  var keyX = this.keys_[x];\n  var keyY = this.keys_[y];\n  return !this.leq_(keyX, keyY);\n};\n\n\n/**\n * [extractMin description]\n * @return {libtess.PQKey} [description].\n */\nlibtess.PriorityQ.prototype.extractMin = function() {\n  if (this.size_ === 0) {\n    return this.heap_.extractMin();\n  }\n\n  var sortMin = this.keys_[this.order_[this.size_ - 1]];\n  if (!this.heap_.isEmpty()) {\n    var heapMin = this.heap_.minimum();\n    if (this.leq_(heapMin, sortMin)) {\n      return this.heap_.extractMin();\n    }\n  }\n\n  do {\n    --this.size_;\n  } while (this.size_ > 0 && this.keys_[this.order_[this.size_ - 1]] === null);\n\n  return sortMin;\n};\n\n\n/**\n * [minimum description]\n * @return {libtess.PQKey} [description].\n */\nlibtess.PriorityQ.prototype.minimum = function() {\n  if (this.size_ === 0) {\n    return this.heap_.minimum();\n  }\n\n  var sortMin = this.keys_[this.order_[this.size_ - 1]];\n  if (!this.heap_.isEmpty()) {\n    var heapMin = this.heap_.minimum();\n    if (this.leq_(heapMin, sortMin)) {\n      return heapMin;\n    }\n  }\n\n  return sortMin;\n};\n\n// NOTE(bckenny): libtess.PriorityQ.isEmpty_ isn't called within libtess and\n// isn't part of the public API. For now, leaving in but ignoring for coverage.\n/* istanbul ignore next */\n/**\n * Returns whether the priority queue is empty.\n * @private\n * @return {boolean}\n */\nlibtess.PriorityQ.prototype.isEmpty_ = function() {\n  return (this.size_ === 0) && this.heap_.isEmpty();\n};\n\n\n/**\n * [remove description]\n * @param {libtess.PQHandle} curr [description].\n */\nlibtess.PriorityQ.prototype.remove = function(curr) {\n  if (curr >= 0) {\n    this.heap_.remove(curr);\n    return;\n  }\n  curr = -(curr + 1);\n\n  this.keys_[curr] = null;\n  while (this.size_ > 0 && this.keys_[this.order_[this.size_ - 1]] === null) {\n    --this.size_;\n  }\n};\n\n\n\n/* global libtess */\n\n// TODO(bckenny): keys appear to always be GluVertex in this case?\n\n/**\n * [PriorityQHeap description]\n * @constructor\n * @struct\n * @param {function(libtess.PQKey, libtess.PQKey): boolean} leq [description].\n */\nlibtess.PriorityQHeap = function(leq) {\n  /**\n   * The heap itself. Active nodes are stored in the range 1..size. Each node\n   * stores only an index into handles.\n   * @private\n   * @type {Array.<libtess.PQNode>}\n   */\n  this.nodes_ = libtess.PQNode.realloc(null,\n      libtess.PriorityQHeap.INIT_SIZE_ + 1);\n\n  /**\n   * Each handle stores a key, plus a pointer back to the node which currently\n   * represents that key (ie. nodes[handles[i].node].handle == i).\n   * @private\n   * @type {Array.<libtess.PQHandleElem>}\n   */\n  this.handles_ = libtess.PQHandleElem.realloc(null,\n      libtess.PriorityQHeap.INIT_SIZE_ + 1);\n\n  // TODO(bckenny): size and max should probably be libtess.PQHandle for correct\n  // typing (see PriorityQ.js)\n  /**\n   * The size of the queue.\n   * @private\n   * @type {number}\n   */\n  this.size_ = 0;\n\n  /**\n   * The queue's current allocated space.\n   * @private\n   * @type {number}\n   */\n  this.max_ = libtess.PriorityQHeap.INIT_SIZE_;\n\n  /**\n   * The index of the next free hole in the handles array. Handle in that slot\n   * has next item in freeList in its node propert. If there are no holes,\n   * freeList === 0 and one at the end of handles must be use.\n   * @private\n   * @type {libtess.PQHandle}\n   */\n  this.freeList_ = 0;\n\n  /**\n   * Indicates that the heap has been initialized via init. If false, inserts\n   * are fast insertions at the end of a list. If true, all inserts will now be\n   * correctly ordered in the queue before returning.\n   * @private\n   * @type {boolean}\n   */\n  this.initialized_ = false;\n\n  // TODO(bckenny): leq was inlined by define in original, but appears to\n  // be vertLeq, as passed. Using injected version, but is it better just to\n  // manually inline?\n  /**\n   * [leq description]\n   * @private\n   * @type {function(libtess.PQKey, libtess.PQKey): boolean}\n   */\n  this.leq_ = leq;\n\n  // so that minimum returns null\n  this.nodes_[1].handle = 1;\n};\n\n\n/**\n * [INIT_SIZE_ description]\n * @private\n * @const\n * @type {number}\n */\nlibtess.PriorityQHeap.INIT_SIZE_ = 32;\n\n\n/**\n * [deleteHeap description]\n */\nlibtess.PriorityQHeap.prototype.deleteHeap = function() {\n  // TODO(bckenny): unnecessary, I think.\n  this.handles_ = null;\n  this.nodes_ = null;\n  // NOTE(bckenny): nulled at callsite in PriorityQ.deleteQ\n};\n\n\n/**\n * Initializing ordering of the heap. Must be called before any method other\n * than insert is called to ensure correctness when removing or querying.\n */\nlibtess.PriorityQHeap.prototype.init = function() {\n  // This method of building a heap is O(n), rather than O(n lg n).\n  for (var i = this.size_; i >= 1; --i) {\n    this.floatDown_(i);\n  }\n\n  this.initialized_ = true;\n};\n\n\n/**\n * Insert a new key into the heap.\n * @param {libtess.PQKey} keyNew The key to insert.\n * @return {libtess.PQHandle} A handle that can be used to remove the key.\n */\nlibtess.PriorityQHeap.prototype.insert = function(keyNew) {\n  var curr = ++this.size_;\n\n  // if the heap overflows, double its size.\n  if ((curr * 2) > this.max_) {\n    this.max_ *= 2;\n    this.nodes_ = libtess.PQNode.realloc(this.nodes_, this.max_ + 1);\n    this.handles_ = libtess.PQHandleElem.realloc(this.handles_, this.max_ + 1);\n  }\n\n  var free;\n  if (this.freeList_ === 0) {\n    free = curr;\n  } else {\n    free = this.freeList_;\n    this.freeList_ = this.handles_[free].node;\n  }\n\n  this.nodes_[curr].handle = free;\n  this.handles_[free].node = curr;\n  this.handles_[free].key = keyNew;\n\n  if (this.initialized_) {\n    this.floatUp_(curr);\n  }\n\n  return free;\n};\n\n\n/**\n * @return {boolean} Whether the heap is empty.\n */\nlibtess.PriorityQHeap.prototype.isEmpty = function() {\n  return this.size_ === 0;\n};\n\n\n/**\n * Returns the minimum key in the heap. If the heap is empty, null will be\n * returned.\n * @return {libtess.PQKey} [description].\n */\nlibtess.PriorityQHeap.prototype.minimum = function() {\n  return this.handles_[this.nodes_[1].handle].key;\n};\n\n\n/**\n * Removes the minimum key from the heap and returns it. If the heap is empty,\n * null will be returned.\n * @return {libtess.PQKey} [description].\n */\nlibtess.PriorityQHeap.prototype.extractMin = function() {\n  var n = this.nodes_;\n  var h = this.handles_;\n  var hMin = n[1].handle;\n  var min = h[hMin].key;\n\n  if (this.size_ > 0) {\n    n[1].handle = n[this.size_].handle;\n    h[n[1].handle].node = 1;\n\n    h[hMin].key = null;\n    h[hMin].node = this.freeList_;\n    this.freeList_ = hMin;\n\n    if (--this.size_ > 0) {\n      this.floatDown_(1);\n    }\n  }\n\n  return min;\n};\n\n\n/**\n * Remove key associated with handle hCurr (returned from insert) from heap.\n * @param {libtess.PQHandle} hCurr [description].\n */\nlibtess.PriorityQHeap.prototype.remove = function(hCurr) {\n  var n = this.nodes_;\n  var h = this.handles_;\n\n  var curr = h[hCurr].node;\n  n[curr].handle = n[this.size_].handle;\n  h[n[curr].handle].node = curr;\n\n  if (curr <= --this.size_) {\n    if (curr <= 1 ||\n        this.leq_(h[n[curr >> 1].handle].key, h[n[curr].handle].key)) {\n\n      this.floatDown_(curr);\n    } else {\n      this.floatUp_(curr);\n    }\n  }\n\n  h[hCurr].key = null;\n  h[hCurr].node = this.freeList_;\n  this.freeList_ = hCurr;\n};\n\n\n/**\n * [floatDown_ description]\n * @private\n * @param {libtess.PQHandle} curr [description].\n */\nlibtess.PriorityQHeap.prototype.floatDown_ = function(curr) {\n  var n = this.nodes_;\n  var h = this.handles_;\n\n  var hCurr = n[curr].handle;\n  for (;;) {\n    // The children of node i are nodes 2i and 2i+1.\n    // set child to the index of the child with the minimum key\n    var child = curr << 1;\n    if (child < this.size_ &&\n        this.leq_(h[n[child + 1].handle].key, h[n[child].handle].key)) {\n\n      ++child;\n    }\n\n    var hChild = n[child].handle;\n    if (child > this.size_ || this.leq_(h[hCurr].key, h[hChild].key)) {\n      n[curr].handle = hCurr;\n      h[hCurr].node = curr;\n      break;\n    }\n    n[curr].handle = hChild;\n    h[hChild].node = curr;\n    curr = child;\n  }\n};\n\n\n/**\n * [floatUp_ description]\n * @private\n * @param {libtess.PQHandle} curr [description].\n */\nlibtess.PriorityQHeap.prototype.floatUp_ = function(curr) {\n  var n = this.nodes_;\n  var h = this.handles_;\n\n  var hCurr = n[curr].handle;\n  for (;;) {\n    var parent = curr >> 1;\n    var hParent = n[parent].handle;\n    if (parent === 0 || this.leq_(h[hParent].key, h[hCurr].key)) {\n      n[curr].handle = hCurr;\n      h[hCurr].node = curr;\n      break;\n    }\n\n    n[curr].handle = hParent;\n    h[hParent].node = curr;\n    curr = parent;\n  }\n};\n\n\n/* global libtess */\n\n// TODO(bckenny): apparently only visible outside of sweep for debugging routines.\n// find out if we can hide\n\n/**\n * For each pair of adjacent edges crossing the sweep line, there is\n * an ActiveRegion to represent the region between them. The active\n * regions are kept in sorted order in a dynamic dictionary. As the\n * sweep line crosses each vertex, we update the affected regions.\n * @constructor\n * @struct\n */\nlibtess.ActiveRegion = function() {\n  // TODO(bckenny): I *think* eUp and nodeUp could be passed in as constructor params\n\n  /**\n   * The upper edge of the region, directed right to left\n   * @type {libtess.GluHalfEdge}\n   */\n  this.eUp = null;\n\n  /**\n   * Dictionary node corresponding to eUp edge.\n   * @type {libtess.DictNode}\n   */\n  this.nodeUp = null;\n\n  /**\n   * Used to determine which regions are inside the polygon.\n   * @type {number}\n   */\n  this.windingNumber = 0;\n\n  /**\n   * Whether this region is inside the polygon.\n   * @type {boolean}\n   */\n  this.inside = false;\n\n  /**\n   * Marks fake edges at t = +/-infinity.\n   * @type {boolean}\n   */\n  this.sentinel = false;\n\n  /**\n   * Marks regions where the upper or lower edge has changed, but we haven't\n   * checked whether they intersect yet.\n   * @type {boolean}\n   */\n  this.dirty = false;\n\n  /**\n   * marks temporary edges introduced when we process a \"right vertex\" (one\n   * without any edges leaving to the right)\n   * @type {boolean}\n   */\n  this.fixUpperEdge = false;\n};\n\n/**\n * Returns the ActiveRegion below this one.\n * @return {libtess.ActiveRegion}\n */\nlibtess.ActiveRegion.prototype.regionBelow = function() {\n  return this.nodeUp.getPredecessor().getKey();\n};\n\n/**\n * Returns the ActiveRegion above this one.\n * @return {libtess.ActiveRegion}\n */\nlibtess.ActiveRegion.prototype.regionAbove = function() {\n  return this.nodeUp.getSuccessor().getKey();\n};\n\n/* global libtess, module */\n\nexport default libtess;\n","import WorldWind from 'webworldwind-esa';\n\nconst {\n    GpuProgram\n} = WorldWind;\n\nexport default class ScreenColorProgram extends GpuProgram {\n\n    constructor(gl) {\n        const vertexShaderSource =\n            'attribute vec3 a_position;\\n' +\n\n            'uniform vec2 u_resolution;\\n' +\n\n            'void main() {\\n' +\n                // convert the position from pixels to 0.0 to 1.0\n            '   vec2 zeroToOne = a_position.xy / u_resolution;\\n' +\n\n                // convert from 0->1 to 0->2\n            '   vec2 zeroToTwo = zeroToOne * 2.0;\\n' +\n\n                // convert from 0->2 to -1->+1 (clipspace)\n            '   vec2 clipSpace = zeroToTwo - 1.0;\\n' +\n\n            '   gl_Position = vec4(clipSpace, 0, 1);\\n' +\n            '}';\n\n        const fragmentShaderSource =\n            'precision mediump float;\\n' +\n\n            'uniform vec4 color;\\n' +\n\n            'void main() {\\n' +\n            '   gl_FragColor = color;\\n' +\n            '}';\n\n        super(gl, vertexShaderSource, fragmentShaderSource, ['a_position']);\n\n        this.resolutionLocation = this.uniformLocation(gl, 'u_resolution');\n        this.colorLocation = this.uniformLocation(gl, 'color');\n\n        this.localCache = {\n            resolution: {\n                width: null,\n                height: null,\n            },\n            color: {\n                r: null,\n                g: null,\n                b: null,\n                a: null,\n            },\n        };\n    }\n\n    loadResolution(gl, width, height) {\n        if (this.localCache.resolution.width === width && this.localCache.resolution.height === height) {\n            return;\n        }\n        gl.uniform2f(this.resolutionLocation, width, height);\n        this.localCache.resolution.width = width;\n        this.localCache.resolution.height = height;\n    }\n\n    loadColor(gl, color) {\n        const cacheColor = this.localCache.color;\n        if (cacheColor.r === color.red &&\n            cacheColor.g === color.green &&\n            cacheColor.b === color.blue &&\n            cacheColor.a === color.alpha) {\n            return;\n        }\n        const a = color.alpha;\n        gl.uniform4f(this.colorLocation, color.red * a, color.green * a, color.blue * a, color.alpha);\n        cacheColor.r = color.red;\n        cacheColor.g = color.green;\n        cacheColor.b = color.blue;\n        cacheColor.a = color.alpha;\n    }\n\n}\n\nScreenColorProgram.key = 'WorldWindGpuScreenColorProgram';","import WorldWind from 'webworldwind-esa';\n\nconst {\n    GpuProgram\n} = WorldWind;\n\nexport default class ScreenTextureProgram extends GpuProgram {\n\n    constructor(gl) {\n        const vertexShaderSource =\n            'attribute vec3 a_position;\\n' +\n            'attribute vec2 vertexTexCoord;\\n' +\n\n            'uniform vec2 u_resolution;\\n' +\n\n            'varying vec2 texCoord;\\n' +\n\n            'void main() {\\n' +\n            // convert the position from pixels to 0.0 to 1.0\n            '   vec2 zeroToOne = a_position.xy / u_resolution;\\n' +\n\n            // convert from 0->1 to 0->2\n            '   vec2 zeroToTwo = zeroToOne * 2.0;\\n' +\n\n            // convert from 0->2 to -1->+1 (clipspace)\n            '   vec2 clipSpace = zeroToTwo - 1.0;\\n' +\n\n            '   gl_Position = vec4(clipSpace, 0, 1);\\n' +\n            '   gl_PointSize = 3.0;\\n' +\n            '   texCoord = vertexTexCoord;\\n' +\n            '}';\n\n        const fragmentShaderSource =\n            'precision mediump float;\\n' +\n\n            'uniform sampler2D textureSampler;\\n' +\n\n            'varying vec2 texCoord;\\n' +\n\n            'void main() {\\n' +\n            '   gl_FragColor = texture2D(textureSampler, texCoord);\\n' +\n            //'   gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);\\n' +\n            '}';\n\n        super(gl, vertexShaderSource, fragmentShaderSource, ['a_position', 'vertexTexCoord']);\n\n        this.resolutionLocation = this.uniformLocation(gl, 'u_resolution');\n        this.texUnitLocation = this.uniformLocation(gl, 'textureSampler');\n\n        this.localCache = {\n            resolution: {\n                width: null,\n                height: null,\n            },\n            textureUnit: null,\n        };\n    }\n\n    loadResolution(gl, width, height) {\n        if (this.localCache.resolution.width === width && this.localCache.resolution.height === height) {\n            return;\n        }\n        gl.uniform2f(this.resolutionLocation, width, height);\n        this.localCache.resolution.width = width;\n        this.localCache.resolution.height = height;\n    }\n\n    loadTextureUnit(gl, unit) {\n        if (this.localCache.textureUnit === unit) {\n            return;\n        }\n        gl.uniform1i(this.texUnitLocation, unit - gl.TEXTURE0);\n        this.localCache.textureUnit = unit;\n    }\n\n}\n\nScreenTextureProgram.key = 'WorldWindGpuScreenTextureProgram';","import libtess from './libtess';\nimport ScreenColorProgram from './ScreenColorProgram';\nimport ScreenTextureProgram from './ScreenTextureProgram';\nimport WorldWind from 'webworldwind-esa';\n\nconst {\n    Angle,\n    SurfaceShape,\n    PickedObject,\n    Texture,\n    Location,\n} = WorldWind;\n\nconst WGS84_SEMI_MAJOR_AXIS = 6378137.0;\n\nexport default class TexturedSurfaceShape extends SurfaceShape {\n\n    static tesselator() {\n        if (!TexturedSurfaceShape.tess) {\n            TexturedSurfaceShape.tess = new libtess.GluTesselator();\n        }\n        return TexturedSurfaceShape.tess;\n    }\n\n    static nextId() {\n        if (!TexturedSurfaceShape._nextId) {\n            TexturedSurfaceShape._nextId = 0;\n        }\n        return TexturedSurfaceShape._nextId++;\n    }\n\n    static staticStateKey(shape) {\n        shape.stateKeyInvalid = false;\n\n        if (shape.highlighted) {\n            if (!shape._highlightAttributes) {\n                if (!shape._attributes) {\n                    shape._attributesStateKey = null;\n                } else {\n                    shape._attributesStateKey = shape._attributes.stateKey;\n                }\n            } else {\n                shape._attributesStateKey = shape._highlightAttributes.stateKey;\n            }\n        } else {\n            if (!shape._attributes) {\n                shape._attributesStateKey = null;\n            } else {\n                shape._attributesStateKey = shape._attributes.stateKey;\n            }\n        }\n\n        return 'dn ' + shape.displayName +\n            ' id ' + shape._id +\n            ' at ' + (!shape._attributesStateKey ? 'null' : shape._attributesStateKey) +\n            ' hi ' + shape.highlighted +\n            ' en ' + shape.enabled +\n            ' pt ' + shape.pathType +\n            ' ne ' + shape.maximumNumEdgeIntervals +\n            ' po ' + shape.polarThrottle +\n            ' img ' + !!shape.image +\n            ' se ' + '[' +\n            shape.sector.minLatitude + ',' +\n            shape.sector.maxLatitude + ',' +\n            shape.sector.minLongitude + ',' +\n            shape.sector.maxLongitude +\n            ']';\n    }\n\n    constructor(attributes) {\n        super(attributes);\n\n        this._image = null;\n        this._imageUUID = '';\n        this._interiorVboCacheKey = '';\n        this._outlineVboCacheKey = '';\n\n        this._contoursPrepered = false;\n        this._contoursInfo = [];\n\n        this._id = TexturedSurfaceShape.nextId();\n    }\n\n    get image() {\n        return this._image;\n    }\n\n    set image(img) {\n        this._image = img;\n        this.stateKeyInvalid = true;\n    }\n\n    get imageUUID() {\n        return this._imageUUID;\n    }\n\n    set imageUUID(value) {\n        this._imageUUID = value;\n    }\n\n    renderToTexture(dc, fbo, xScale, yScale, dx, dy) {\n        const attributes = (this._highlighted ? (this._highlightAttributes || this._attributes) : this._attributes);\n        const drawInterior = (!this._isInteriorInhibited && attributes.drawInterior);\n        const drawOutline = (attributes.drawOutline && attributes.outlineWidth > 0);\n\n        if (!drawInterior && !drawOutline) {\n            return;\n        }\n\n        if (dc.pickingMode && !this.pickColor) {\n            this.pickColor = dc.uniquePickColor();\n        }\n\n        //TODO pass width and height from SurfaceShapeTile\n        const tileWidth = 256;\n        const tileHeight = 256;\n\n        var i;\n        const interiorGeometry = this.mapGeometry(this._interiorGeometry, xScale, yScale, dx, dy);\n        for (i = 0; i < interiorGeometry.length; i++) {\n            if (!this._contoursPrepered) {\n                var wo = this.windingOrder_all(interiorGeometry[i]);\n                this._contoursInfo.push({wo: wo});\n            }\n\n            var points = interiorGeometry[i];\n            if (points[0] === points[points.length - 2] && points[1] === points[points.length - 1]) {\n                points.pop();\n                points.pop();\n            }\n        }\n\n        if (this._image && !dc.pickingMode && !this.crossesAntiMeridian && !this.containsPole ) {\n            if (!this._contoursPrepered) {\n                if (interiorGeometry.length === 1) {\n                    const {anglesMap, topLeftIndex} = this.getCorners(interiorGeometry[0], this._contoursInfo[0].wo);\n                    const uvs = this.computeUvs(this._contoursInfo[0].wo, anglesMap, topLeftIndex, this._interiorGeometry[0]);\n                    this._contoursInfo[0].anglesMap = anglesMap;\n                    this._contoursInfo[0].topLeftIndex = topLeftIndex;\n                    this._contoursInfo[0].uvs = uvs;\n\n                    var tessGeom = this.tessellate_p1(interiorGeometry[0], uvs);\n                    var tessIndices = [];\n                    for (i = 0; i < tessGeom.length; i += 5) {\n                        var x = tessGeom[i];\n                        var y = tessGeom[i + 1];\n\n                        for (var j = 0; j < interiorGeometry[0].length; j += 2) {\n                            var px = interiorGeometry[0][j];\n                            var py = interiorGeometry[0][j + 1];\n                            if (px === x && py === y) {\n                                tessIndices.push(j / 2);\n                                break;\n                            }\n                        }\n                    }\n                    this._contoursInfo[0].iboData = new Uint16Array(tessIndices);\n\n                    var len = Math.floor(interiorGeometry[0].length / 2) * 5;\n                    this._contoursInfo[0].vboData = new Float32Array(len);\n\n                    var vboData = this._contoursInfo[0].vboData;\n                    var k = 0;\n                    for (i = 0; i < vboData.length; i += 5) {\n                        vboData[i] = interiorGeometry[k];\n                        vboData[i + 1] = interiorGeometry[k + 1];\n                        vboData[i + 2] = 0;\n                        vboData[i + 3] = uvs[k];\n                        vboData[i + 4] = uvs[k + 1];\n                        k += 2;\n                    }\n\n                    this._contoursPrepered = true;\n                }\n                else {\n\n                }\n                //this._contoursPrepered = true;\n            }\n            this.renderTexture(dc, {\n                points: interiorGeometry[0],\n                tileWidth,\n                tileHeight,\n                xScale,\n                yScale,\n                dx,\n                dy,\n            });\n        }\n        else {\n            this.renderColor(dc, {\n                tileWidth,\n                tileHeight,\n                xScale,\n                yScale,\n                dx,\n                dy,\n                drawInterior,\n                interiorColor: attributes.interiorColor,\n                drawOutline,\n                outlineColor: attributes.outlineColor,\n            });\n            this._contoursPrepered = true;\n        }\n\n        if (dc.pickingMode) {\n            var po = new PickedObject(this.pickColor.clone(), this.pickDelegate ? this.pickDelegate : this,\n                null, this.layer, false);\n            dc.resolvePick(po);\n        }\n    }\n\n    renderColor(dc, {tileWidth, tileHeight, xScale, yScale, dx, dy, drawInterior, interiorColor, drawOutline, outlineColor}) {\n        if (!this.tessGeom) {\n            this.tessGeom = this.tessellate(this._interiorGeometry);\n            this.tessTris = new Float32Array(this.tessGeom.length);\n        }\n\n        if (!this.wo) {\n            const interiorGeometry = this.mapGeometry(this._interiorGeometry, xScale, yScale, dx, dy);\n            this.wo = this.windingOrder_all(interiorGeometry[0]);\n        }\n\n        const gl = dc.currentGlContext;\n        const program = dc.findAndBindProgram(ScreenColorProgram);\n        program.loadResolution(gl, tileWidth, tileHeight);\n        gl.enableVertexAttribArray(0);\n\n        if (drawInterior) {\n            program.loadColor(gl, dc.pickingMode ? this.pickColor : interiorColor);\n\n            for (var i = 0; i < this.tessGeom.length; i += 3) {\n                var x = this.tessGeom[i];\n                var y = this.tessGeom[i + 1];\n                this.tessTris[i] = x * Angle.RADIANS_TO_DEGREES * xScale + dx;\n                this.tessTris[i + 1] = y * Angle.RADIANS_TO_DEGREES * yScale + dy;\n                this.tessTris[i + 2] = 0;\n            }\n\n            this.bindInteriorVbo(dc, this.tessTris, null);\n            gl.vertexAttribPointer(0, 3, gl.FLOAT, false, 0, 0);\n\n            if (this.wo === 'CW') {\n                gl.frontFace(gl.CW);\n            }\n            gl.drawArrays(gl.TRIANGLES, 0, Math.floor(this.tessTris.length / 3));\n\n            if (this.wo === 'CW') {\n                gl.frontFace(gl.CCW);\n            }\n        }\n\n        // if (drawOutline || true) {\n        //     program.loadColor(gl, outlineColor);\n        //     // console.log(this._outlineGeometry[0])\n        //     let outline = []\n        //     let interiorGeometry = this.mapGeometry(this._interiorGeometry, xScale, yScale, dx, dy)\n        //     for (var i = 0; i < interiorGeometry[0].length; i += 2) {\n        //         var x = interiorGeometry[0][i];\n        //         var y = interiorGeometry[0][i + 1];\n        //         outline.push(x * Angle.RADIANS_TO_DEGREES * xScale + dx)\n        //         outline.push(y * Angle.RADIANS_TO_DEGREES * yScale + dy)\n        //         outline.push(0)\n        //     }\n\n\n        //     this.bindOutlineVbo(dc, new Float32Array(outline), null);\n        //     gl.vertexAttribPointer(0, 2, gl.FLOAT, false, 0, 0);\n        //     gl.drawArrays(gl.LINE_STRIP, 0, Math.floor(outline.length / 2));\n        // }\n    }\n\n    renderTexture(dc, {points, tileWidth, tileHeight, xScale, yScale, dx, dy, anglesMap, topLeftIndex}) {\n\n        var vboData = this._contoursInfo[0].vboData;\n        var k = 0;\n        for (var i = 0; i < vboData.length; i += 5) {\n            vboData[i] = points[k];\n            vboData[i + 1] = points[k + 1];\n            k += 2;\n        }\n\n        const gl = dc.currentGlContext;\n        const program = dc.findAndBindProgram(ScreenTextureProgram);\n        program.loadResolution(gl, tileWidth, tileHeight);\n        gl.enableVertexAttribArray(0);\n        gl.enableVertexAttribArray(1);\n        program.loadTextureUnit(gl, gl.TEXTURE0);\n        const imageTextureKey = this._imageUUID || this._image.src;\n        if (!imageTextureKey) {\n            console.error('TexturedSurfaceShape, no uuid for image. Use shape.imageUUID to set a unique id');\n        }\n        let imageTexture = dc.gpuResourceCache.resourceForKey(imageTextureKey);\n\n        if (!imageTexture) {\n            imageTexture = new Texture(gl, this._image, null, true);\n            dc.gpuResourceCache.putResource(imageTextureKey, imageTexture, imageTexture.size);\n        }\n\n        imageTexture.bind(dc);\n\n        this.bindInteriorVbo(dc, vboData, null);\n        this.bindInteriorIbo(dc, this._contoursInfo[0].iboData, null);\n        /*var buf = gl.createBuffer();\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buf);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, this._contoursInfo[0].iboData, gl.STATIC_DRAW);*/\n        const valuesPerVertex = 3 + 2; //3 values for position and 2 values for uvs\n        const sizeOfFloat32 = 4;\n        const vertexSize = valuesPerVertex * sizeOfFloat32;\n\n        gl.vertexAttribPointer(0, 3, gl.FLOAT, false, vertexSize, 0);\n        gl.vertexAttribPointer(1, 2, gl.FLOAT, false, vertexSize, 3 * sizeOfFloat32);\n\n        if (this._contoursInfo[0].wo === 'CW') {\n            gl.frontFace(gl.CW);\n        }\n\n        gl.drawElements(gl.TRIANGLES, this._contoursInfo[0].iboData.length, gl.UNSIGNED_SHORT, 0);\n\n        //gl.drawArrays(gl.TRIANGLES, 0, Math.floor(this._contoursInfo[0].tessTris.length / 5));\n        //gl.drawArrays(gl.POINTS, 0,  Math.floor(this.tessTris.length / 5));\n        /*for (var i =0 ; i < this.tessTris.length; i += 3) {\n            gl.drawArrays(gl.LINE_LOOP, i, 3);\n        }*/\n\n        if (this._contoursInfo[0].wo === 'CW') {\n            gl.frontFace(gl.CCW);\n        }\n\n        gl.disableVertexAttribArray(1);\n    }\n\n    computeUvs(wo, anglesMap, topLeftIndex, locations1) {\n        const locations = locations1.slice();\n        locations.pop();\n        var uvs = new Float32Array(locations.length * 2);\n        var side = '';\n\n        for (var i = topLeftIndex; i < locations.length + topLeftIndex; i++) {\n            var index = i % locations.length;\n            var uv = {s: -1, t: -1};\n\n            if (anglesMap[index]) {\n                //is corner\n                side = this.nextSide(side, wo);\n\n                var sideStart = locations[index];\n                var sideEnd = null;\n                for (var j = i + 1; j < locations.length + topLeftIndex; j++) {\n                    var jIndex = j % locations.length;\n                    if (anglesMap[jIndex] != null) {\n                        sideEnd = locations[jIndex];\n                        break;\n                    }\n                }\n                if (!sideEnd) {\n                    sideEnd = locations[topLeftIndex];\n                }\n                var sideDistance = Location.greatCircleDistance(sideStart, sideEnd) * WGS84_SEMI_MAJOR_AXIS;\n            }\n\n            var distance = Location.greatCircleDistance(sideStart, locations[index]) * WGS84_SEMI_MAJOR_AXIS;\n\n            if (wo === 'CW') {\n                if (side === 'top') {\n                    uv.s = distance / sideDistance;\n                    uv.t = 0;\n                }\n                else if (side === 'right') {\n                    uv.s = 1;\n                    uv.t = distance / sideDistance;\n                }\n                else if (side === 'bottom') {\n                    uv.s = 1 - distance / sideDistance;\n                    uv.t = 1;\n                }\n                else if (side === 'left') {\n                    uv.s = 0;\n                    uv.t = 1 - distance / sideDistance;\n                }\n            }\n            else {\n                if (side === 'left') {\n                    uv.s = 0;\n                    uv.t = distance / sideDistance;\n                }\n                else if (side === 'bottom') {\n                    uv.s = distance / sideDistance;\n                    uv.t = 1;\n                }\n                else if (side === 'right') {\n                    uv.s = 1;\n                    uv.t = 1 - distance / sideDistance;\n                }\n                else if (side === 'top') {\n                    uv.s = 1 - distance / sideDistance;\n                    uv.t = 0;\n                }\n            }\n\n            uvs[index * 2] = uv.s;\n            uvs[index * 2 + 1] = uv.t;\n        }\n\n        return uvs;\n    }\n\n    nextSide(side, wo) {\n        var nextSide = '';\n        if (wo === 'CW') {\n            nextSide = 'top';\n            if (side === 'top') {\n                nextSide = 'right';\n            }\n            else if (side === 'right') {\n                nextSide = 'bottom';\n            }\n            else if (side === 'bottom') {\n                nextSide = 'left';\n            }\n            else if (side === 'left') {\n                nextSide = 'top';\n            }\n        }\n        else {\n            nextSide = 'left';\n            if (side === 'left') {\n                nextSide = 'bottom';\n            }\n            else if (side === 'bottom') {\n                nextSide = 'right';\n            }\n            else if (side === 'right') {\n                nextSide = 'top';\n            }\n            else if (side === 'top') {\n                nextSide = 'left';\n            }\n        }\n\n        return nextSide;\n    }\n\n    mapGeometry(contours, xScale, yScale, dx, dy) {\n        return contours.map(contour => {\n            return contour.reduce((acc, location) => {\n                const x = location.longitude * xScale + dx;\n                const y = location.latitude * yScale + dy;\n                acc.push(x, y);\n                return acc;\n            }, []);\n        });\n    }\n\n    bindInteriorVbo(dc, vboData, vboUsage) {\n        vboUsage = vboUsage || dc.currentGlContext.STATIC_DRAW;\n        if (!this._interiorVboCacheKey) {\n            this._interiorVboCacheKey = dc.gpuResourceCache.generateCacheKey();\n        }\n        this.bindVbo(dc, vboData, vboUsage, this._interiorVboCacheKey);\n    }\n\n    bindOutlineVbo(dc, vboData, vboUsage) {\n        vboUsage = vboUsage || dc.currentGlContext.STATIC_DRAW;\n        if (!this._outlineVboCacheKey) {\n            this._outlineVboCacheKey = dc.gpuResourceCache.generateCacheKey();\n        }\n        this.bindVbo(dc, vboData, vboUsage, this._outlineVboCacheKey);\n    }\n\n    bindVbo(dc, vboData, vboUsage, cacheKey) {\n        const gl = dc.currentGlContext;\n\n        let vbo = dc.gpuResourceCache.resourceForKey(cacheKey);\n        const vboEntry = dc.gpuResourceCache.entries.entries[cacheKey];\n        let vboSize = 0;\n        if (vboEntry) {\n            vboSize = vboEntry.size;\n        }\n        if (!vbo || vboSize < vboData.length * vboData.BYTES_PER_ELEMENT) {\n            vbo = gl.createBuffer();\n            gl.bindBuffer(gl.ARRAY_BUFFER, vbo);\n            gl.bufferData(gl.ARRAY_BUFFER, vboData, vboUsage);\n\n            dc.gpuResourceCache.putResource(cacheKey, vbo, vboData.length * vboData.BYTES_PER_ELEMENT);\n        }\n        else {\n            gl.bindBuffer(gl.ARRAY_BUFFER, vbo);\n            gl.bufferSubData(gl.ARRAY_BUFFER, 0, vboData);\n        }\n    }\n\n    bindInteriorIbo(dc, iboData, iboUsage) {\n        iboUsage = iboUsage || dc.currentGlContext.STATIC_DRAW;\n        if (!this._interiorIboCacheKey) {\n            this._interiorIboCacheKey = dc.gpuResourceCache.generateCacheKey();\n        }\n\n        this.bindIbo(dc, iboData, iboUsage, this._interiorIboCacheKey);\n    }\n\n    bindIbo(dc, iboData, iboUsage, cacheKey) {\n        const gl = dc.currentGlContext;\n\n        let ibo = dc.gpuResourceCache.resourceForKey(cacheKey);\n        const vboEntry = dc.gpuResourceCache.entries.entries[cacheKey];\n        let iboSize = 0;\n        if (vboEntry) {\n            iboSize = vboEntry.size;\n        }\n        if (!ibo || iboSize < iboData.length * iboData.BYTES_PER_ELEMENT) {\n            ibo = gl.createBuffer();\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, ibo);\n            gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, iboData, iboUsage);\n            dc.gpuResourceCache.putResource(cacheKey, ibo, iboData.length * iboData.BYTES_PER_ELEMENT);\n        }\n        else {\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, ibo);\n        }\n    }\n\n    tessellate_p(points, uvs) {\n        var tess = TexturedSurfaceShape.tesselator();\n        var triangles = [];\n\n        tess.gluTessCallback(libtess.gluEnum.GLU_TESS_BEGIN, function (prim) {\n            if (prim !== libtess.primitiveType.GL_TRIANGLES) {\n                console.error('Tessellation error, primitive is not TRIANGLES.');\n            }\n        });\n\n        tess.gluTessCallback(libtess.gluEnum.GLU_TESS_COMBINE, function (coords, data, weight) {\n            var newCoords = [coords[0], coords[1], coords[2]];\n\n            if (uvs && uvs.length) {\n                for (var i = 3; i <= 4; i++) {\n                    var value = 0;\n                    for (var w = 0; w < 4; w++) {\n                        if (weight[w] > 0) {\n                            value += weight[w] * data[w][i];\n                        }\n                    }\n\n                    newCoords[i] = value;\n                }\n            }\n\n            return newCoords;\n        });\n\n        //prevents triangle fans and strips\n        tess.gluTessCallback(libtess.gluEnum.GLU_TESS_EDGE_FLAG, function () {\n        });\n\n        tess.gluTessCallback(libtess.gluEnum.GLU_TESS_VERTEX_DATA, function (data, tris) {\n            tris.push(data[0]);\n            tris.push(data[1]);\n            tris.push(data[2]);\n\n            if (uvs && uvs.length) {\n                tris.push(data[3]);\n                tris.push(data[4]);\n            }\n        });\n\n        tess.gluTessCallback(libtess.gluEnum.GLU_TESS_ERROR, function (errno) {\n            console.error('tess err', errno);\n        });\n\n        tess.gluTessBeginPolygon(triangles);\n        tess.gluTessBeginContour();\n\n        var k = 0;\n        for (var i = 0; i < points.length; i++) {\n\n            var vertex = [points[i].x, points[i].y, 0];\n            if (uvs && uvs.length) {\n                vertex.push(uvs[k], uvs[k + 1]);\n                k += 2;\n            }\n\n            tess.gluTessVertex(vertex, vertex);\n        }\n\n        tess.gluTessEndContour();\n        tess.gluTessEndPolygon();\n\n        return triangles;\n    }\n\n    tessellate_p1(points, uvs) {\n        var tess = TexturedSurfaceShape.tesselator();\n        var triangles = [];\n\n        tess.gluTessCallback(libtess.gluEnum.GLU_TESS_BEGIN, function (prim) {\n            if (prim !== libtess.primitiveType.GL_TRIANGLES) {\n                console.error('Tessellation error, primitive is not TRIANGLES.');\n            }\n        });\n\n        tess.gluTessCallback(libtess.gluEnum.GLU_TESS_COMBINE, function (coords, data, weight) {\n            var newCoords = [coords[0], coords[1], coords[2]];\n\n            if (uvs && uvs.length) {\n                for (var i = 3; i <= 4; i++) {\n                    var value = 0;\n                    for (var w = 0; w < 4; w++) {\n                        if (weight[w] > 0) {\n                            value += weight[w] * data[w][i];\n                        }\n                    }\n\n                    newCoords[i] = value;\n                }\n            }\n\n            return newCoords;\n        });\n\n        //prevents triangle fans and strips\n        tess.gluTessCallback(libtess.gluEnum.GLU_TESS_EDGE_FLAG, function () {\n        });\n\n        tess.gluTessCallback(libtess.gluEnum.GLU_TESS_VERTEX_DATA, function (data, tris) {\n            tris.push(data[0]);\n            tris.push(data[1]);\n            tris.push(data[2]);\n\n            if (uvs && uvs.length) {\n                tris.push(data[3]);\n                tris.push(data[4]);\n            }\n        });\n\n        tess.gluTessCallback(libtess.gluEnum.GLU_TESS_ERROR, function (errno) {\n            console.error('tess err', errno);\n        });\n\n        tess.gluTessBeginPolygon(triangles);\n        tess.gluTessBeginContour();\n\n        var k = 0;\n        for (var i = 0; i < points.length; i += 2) {\n\n            var vertex = [points[i], points[i + 1], 0];\n            if (uvs && uvs.length) {\n                vertex.push(uvs[k], uvs[k + 1]);\n                k += 2;\n            }\n\n            tess.gluTessVertex(vertex, vertex);\n        }\n\n        tess.gluTessEndContour();\n        tess.gluTessEndPolygon();\n\n        return triangles;\n    }\n\n    tessellate(contours, uvs) {\n        var tess = TexturedSurfaceShape.tesselator();\n        var triangles = [];\n\n        tess.gluTessCallback(libtess.gluEnum.GLU_TESS_BEGIN, function (prim) {\n            if (prim !== libtess.primitiveType.GL_TRIANGLES) {\n                console.error('Tessellation error, primitive is not TRIANGLES.');\n            }\n        });\n\n        tess.gluTessCallback(libtess.gluEnum.GLU_TESS_COMBINE, function (coords, data, weight) {\n            var newCoords = [coords[0], coords[1], coords[2]];\n\n            if (uvs && uvs.length) {\n                for (var i = 3; i <= 4; i++) {\n                    var value = 0;\n                    for (var w = 0; w < 4; w++) {\n                        if (weight[w] > 0) {\n                            value += weight[w] * data[w][i];\n                        }\n                    }\n\n                    newCoords[i] = value;\n                }\n            }\n\n            return newCoords;\n        });\n\n        //prevents triangle fans and strips\n        tess.gluTessCallback(libtess.gluEnum.GLU_TESS_EDGE_FLAG, function () {\n        });\n\n        tess.gluTessCallback(libtess.gluEnum.GLU_TESS_VERTEX_DATA, function (data, tris) {\n            tris.push(data[0]);\n            tris.push(data[1]);\n            tris.push(data[2]);\n\n            if (uvs && uvs.length) {\n                tris.push(data[3]);\n                tris.push(data[4]);\n            }\n        });\n\n        tess.gluTessCallback(libtess.gluEnum.GLU_TESS_ERROR, function (errno) {\n            console.error('tess err', errno);\n        });\n\n        // Tessellate the polygon.\n        tess.gluTessBeginPolygon(triangles);\n        var k = 0;\n        for (var i = 0; i < contours.length; i++) {\n            tess.gluTessBeginContour();\n            var contour = contours[i];\n            for (var j = 0; j < contour.length; j += 1) {\n                var pos = contour[j];\n                var x = pos.longitude * Angle.DEGREES_TO_RADIANS;\n                var y = pos.latitude * Angle.DEGREES_TO_RADIANS;\n                var vertex = [x, y, 0];\n                if (uvs && uvs.length) {\n                    vertex.push(uvs[k], uvs[k + 1]);\n                    k += 2;\n                }\n                //console.log('vertex', vertex);\n                tess.gluTessVertex(vertex, vertex);\n            }\n            tess.gluTessEndContour();\n        }\n        tess.gluTessEndPolygon();\n\n        return triangles;\n    }\n\n    getBbox(points) {\n        const bbox = {\n            minX: Number.MAX_SAFE_INTEGER,\n            maxX: Number.MIN_SAFE_INTEGER,\n            minY: Number.MAX_SAFE_INTEGER,\n            maxY: Number.MIN_SAFE_INTEGER,\n            width: 0,\n            height: 0\n        };\n\n        for (var i = 0; i < points.length; i++) {\n            var point = points[i];\n            bbox.minX = Math.min(bbox.minX, point.x);\n            bbox.maxX = Math.max(bbox.maxX, point.x);\n            bbox.minY = Math.min(bbox.minY, point.y);\n            bbox.maxY = Math.max(bbox.maxY, point.y);\n        }\n\n        bbox.width = Math.abs(bbox.maxX - bbox.minX);\n        bbox.height = Math.abs(bbox.maxY - bbox.minY);\n\n        return bbox;\n    }\n\n    getCorners(points, wo) {\n        if (points.length === 4) {\n            //return this.reindexCorners(points);\n        }\n\n        var angles = [];\n        for (var i = 0; i < points.length; i += 2) {\n            var prevX;\n            var prevY;\n            var currentX;\n            var currentY;\n            var nextX;\n            var nextY;\n\n            if (i === 0) {\n                prevX = points[points.length - 2];\n                prevY = points[points.length - 1];\n            }\n            else {\n                prevX = points[i - 2];\n                prevY = points[i - 1];\n            }\n\n            currentX = points[i];\n            currentY = points[i + 1];\n\n            if (i === points.length - 2) {\n                nextX = points[0];\n                nextY = points[1];\n            }\n            else {\n                nextX = points[i + 2];\n                nextY = points[i + 3];\n            }\n\n            var angle = Math.atan2(nextY - currentY, nextX - currentX) -\n                Math.atan2(prevY - currentY, prevX - currentX);\n\n            angles.push({\n                index: i / 2,\n                angle: Math.abs(angle) * Angle.RADIANS_TO_DEGREES\n            });\n        }\n\n        angles = angles.filter(el => {\n            if (el.angle < 170 || el.angle > 190) {\n                return true;\n            }\n            return false;\n        });\n\n        /*var p0 = points[angles[0].index];\n        var p1 = points[angles[1].index];\n        var p2 = points[angles[2].index];\n        var p3 = points[angles[3].index];*/\n\n        var p0 = {x: points[angles[0].index * 2], y: points[angles[0].index * 2 + 1], index: angles[0].index};\n        var p1 = {x: points[angles[1].index * 2], y: points[angles[1].index * 2 + 1], index: angles[1].index};\n        var p2 = {x: points[angles[2].index * 2], y: points[angles[2].index * 2 + 1], index: angles[2].index};\n        var p3 = {x: points[angles[3].index * 2], y: points[angles[3].index * 2 + 1], index: angles[3].index};\n\n       /* p0.index = angles[0].index;\n        p1.index = angles[1].index;\n        p2.index = angles[2].index;\n        p3.index = angles[3].index;*/\n\n        //const corners = this.reindexCorners([p0, p1, p2, p3]);\n        const corners = this.findWhichCorners([p0, p1, p2, p3]);\n        const topLeftIndex = corners[0].index;\n\n        /*const newPoints = [];\n        const topLeftIndex = corners[0].index;\n        for (i = topLeftIndex; i < points.length + topLeftIndex; i++) {\n            newPoints.push(points[i % points.length]);\n        }*/\n\n        var anglesMap = angles.reduce((map, el) => {\n            var type = '';\n            var i = corners.findIndex(c => c.index === el.index);\n            if (wo === 'CW') {\n                if (i === 0) {\n                    type = 'tl';\n                }\n                else if (i === 1) {\n                    type = 'tr';\n                }\n                else if (i === 2) {\n                    type = 'br';\n                }\n                else if (i === 3) {\n                    type = 'bl';\n                }\n            }\n            else {\n                if (i === 0) {\n                    type = 'tl';\n                }\n                else if (i === 1) {\n                    type = 'bl';\n                }\n                else if (i === 2) {\n                    type = 'br';\n                }\n                else if (i === 3) {\n                    type = 'tr';\n                }\n            }\n            map[el.index] = type;\n            return map;\n        }, Object.create(null));\n\n        return {anglesMap, topLeftIndex};\n    }\n\n    findWhichCorners(corners) {\n        const userProps = this.userProperties;\n        if (userProps && userProps.identifier) {\n            var id = userProps.identifier;\n            //id = \"S3A_OL_1_ERR____20190110T190220_20190110T194614_20190110T211413_2634_040_113______SVL_O_NR_002.SEN3\"\n            if (id.indexOf('S3') === 0 && id.indexOf('OL_1_ERR___') !== -1) {\n                //these shapes span from pole to pole and became twisted in 2D\n                var geom = this._interiorGeometry[0];\n                var cornerLocations = corners.map(c => {\n                    var location = geom[c.index];\n                    return {latitude: location.latitude, longitude: location.longitude, index: c.index};\n                });\n                cornerLocations.sort((a, b) => a.latitude - b.latitude);\n                cornerLocations.length = 2;\n                var c0 = cornerLocations[0];\n                var c1 = cornerLocations[1];\n                if ((c0.longitude < 0 && c1.longitude > 0) ||\n                    (c0.longitude > 0 && c1.longitude < 0)) {\n                    cornerLocations.sort((a, b) => Math.abs(b.longitude) - Math.abs(a.longitude));\n                }\n                else {\n                    cornerLocations.sort((a, b) => Math.abs(a.longitude) - Math.abs(b.longitude));\n                }\n\n                var topLeftIndex = corners.findIndex(corner => corner.index === cornerLocations[0].index);\n                var newCorners;\n                if (topLeftIndex > 0) {\n                    newCorners = [];\n                    for (var i = topLeftIndex; i < corners.length + topLeftIndex; i++) {\n                        newCorners.push(corners[i % corners.length]);\n                    }\n                }\n\n                return newCorners || corners;\n            }\n        }\n\n        return this.reindexCorners(corners);\n    }\n\n    getCorners_old(points, bbox) {\n        if (this.isEqualPoints(points[0], points[points.length - 1])) {\n            points.pop();\n        }\n\n        if (points.length === 4) {\n            return this.reindexCorners(points);\n        }\n\n        bbox = bbox || this.getBbox(points);\n\n        var corners = [];\n        for (var i = 0; i < points.length - 1; i++) {\n            var point = points[i];\n            if (point.x === bbox.minX || point.x === bbox.maxX) {\n                corners.push(point);\n            }\n            else if (point.y === bbox.minY || point.y === bbox.maxY) {\n                corners.push(point);\n            }\n        }\n\n        if (corners.length < 4) {\n            return corners;\n        }\n\n        return this.reindexCorners(corners);\n    }\n\n    reindexCorners(corners) {\n        //return corners;\n\n        var topLeftIndex = -1;\n        var c = corners.slice();\n        c.sort((a, b) => b.y - a.y);\n        c.length = 2;\n        c.sort((a, b) => a.x - b.x);\n        topLeftIndex = c[0].index;\n        topLeftIndex = corners.findIndex(corner => corner.index === c[0].index);\n\n        //return topLeftIndex;\n\n        var newCorners;\n        if (topLeftIndex > 0) {\n            newCorners = [];\n            for (var i = topLeftIndex; i < corners.length + topLeftIndex; i++) {\n                newCorners.push(corners[i % corners.length]);\n            }\n        }\n\n        return newCorners || corners;\n    }\n\n    reindexCorners_old(corners) {\n        var topLeftIndex = -1;\n        var slope1 = this.getSlope(corners[0], corners[2]);\n        if (slope1 > 0) {\n            if (corners[0].y < corners[2].y) {\n                topLeftIndex = 0;\n            }\n            else {\n                topLeftIndex = 2;\n            }\n        }\n        var slope2 = this.getSlope(corners[1], corners[3]);\n        if (slope2 > 0) {\n            if (corners[1].y < corners[3].y) {\n                if (topLeftIndex !== -1) {\n                    console.error('slope method is not ok 1');\n                }\n                topLeftIndex = 1;\n            }\n            else {\n                if (topLeftIndex !== -1) {\n                    console.error('slope method is not ok 2');\n                }\n                topLeftIndex = 3;\n            }\n        }\n\n        if (topLeftIndex === -1) {\n            console.error('slope method could not determine topLeft');\n        }\n\n        var newCorners;\n        if (topLeftIndex > 0) {\n            newCorners = [];\n            for (var i = topLeftIndex; i < corners.length + topLeftIndex; i++) {\n                newCorners.push(corners[i % corners.length]);\n            }\n        }\n\n        return newCorners || corners;\n    }\n\n    isEqualPoints(p1, p2) {\n        return (\n            p1.x === p2.x &&\n            p1.y === p2.y\n        );\n    }\n\n    windingOrder(corners) {\n        const e0 = (corners[1].x - corners[0].x) * (corners[1].y + corners[0].y);\n        const e1 = (corners[2].x - corners[1].x) * (corners[2].y + corners[1].y);\n        const e2 = (corners[3].x - corners[2].x) * (corners[3].y + corners[2].y);\n        const e3 = (corners[0].x - corners[3].x) * (corners[0].y + corners[3].y);\n        const sum = e0 + e1 + e2 + e3;\n        if (sum < 0) {\n            return 'CCW';\n        }\n        return 'CW';\n    }\n\n    windingOrder_all(list) {\n        let sum = 0;\n        for (let i = 0; i < list.length - 2; i += 2) {\n            let i1 = (i + 2) % list.length;\n            let i0 = i % list.length;\n            let p1x = list[i1];\n            let p1y = list[i1 + 1];\n            let p0x = list[i0];\n            let p0y = list[i0 + 1];\n            sum += ((p1x - p0x) * (p1y + p0y));\n        }\n        if (sum < 0) {\n            return 'CCW';\n        }\n        return 'CW';\n    }\n\n    getSlope(p1, p2) {\n        return (p1.y - p2.y) / (p1.x - p2.x);\n    }\n\n    distance2D(p1, p2) {\n        var dx = p2.x - p1.x;\n        var dy = p2.y - p1.y;\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n\n}\n\nvar a = [\n    {latitude: -71.0573, longitude: -119.968}, //TL\n    {latitude: -79.6085, longitude: -149.754}, //TR\n    {latitude: 55.7391, longitude: 27.7961}, //BR\n    {latitude: 58.487, longitude: 6.61523}, //BL\n];\n\nvar b = [\n    {latitude: -70.6695, longitude: -54.5441}, //TL\n    {latitude: -79.8964, longitude: -85.1012}, //TR\n    {latitude: 55.9681, longitude: 91.5418}, //BR\n    {latitude: 58.7238, longitude: 70.2286}, //BL\n];","import TexturedSurfaceShape from './TexturedSurfaceShape';\n\nexport default class TexturedSurfacePolygon extends TexturedSurfaceShape {\n\n    static staticStateKey(shape) {\n        return TexturedSurfaceShape.staticStateKey(shape);\n    }\n\n    constructor(boundaries, attributes) {\n        super(attributes);\n\n        if (!Array.isArray(boundaries)) {\n            throw new Error('TexturedSurfacePolygon - constructor - The specified boundary is not an array.');\n\n        }\n\n        //this._boundaries = boundaries;\n        this._boundaries = this.removeDuplicateLocations(boundaries);\n    }\n\n    get boundaries() {\n        return this._boundaries;\n    }\n\n    set boundaries(boundaries) {\n        if (!Array.isArray(boundaries)) {\n            throw new Error('TexturedSurfacePolygon - set boundaries - The specified boundary is not an array.');\n        }\n        //this._boundaries = boundaries;\n        this._boundaries = this.removeDuplicateLocations(boundaries);\n        this.isPrepared = false;\n        this.stateKeyInvalid = true;\n    }\n\n    removeDuplicateLocations(boundaries) {\n        if (Array.isArray(boundaries[0])) {\n            const newBoundaries = [];\n            for (var i = 0; i < boundaries.length; i++) {\n                var contour = this.removeDuplicateLocationsFromContour(boundaries[i]);\n                newBoundaries.push(contour);\n            }\n            return newBoundaries;\n        }\n        else {\n            return this.removeDuplicateLocationsFromContour(boundaries);\n        }\n    }\n\n    removeDuplicateLocationsFromContour(contour) {\n        const newBoundaries = [];\n\n        for (var i = 0; i < contour.length ; i++) {\n            var loc = contour[i];\n            newBoundaries.push(loc);\n            for (var j = i + 1; j < contour.length; j++) {\n                var loc2 = contour[j];\n                if (loc.latitude !== loc2.latitude || loc.longitude !== loc2.longitude) {\n                    break;\n                }\n                i++;\n            }\n        }\n\n        return newBoundaries;\n    }\n\n    computeStateKey() {\n        return TexturedSurfacePolygon.staticStateKey(this);\n    }\n\n}","/*\n * Copyright 2003-2006, 2009, 2017, United States Government, as represented by the Administrator of the\n * National Aeronautics and Space Administration. All rights reserved.\n *\n * The NASAWorldWind/WebWorldWind platform is licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @exports GeoJSONParser\n */\nimport WorldWind from 'webworldwind-esa';\nimport TexturedSurfacePolygon from '../../wwwxx/textured/TexturedSurfacePolygon'\n\n\n\n    const { \n        ArgumentError,\n        GeoJSONConstants,\n        GeoJSONParser,\n        Location ,\n        Logger,\n        RenderableLayer\n              \n            } = WorldWind;\n\n        /**\n         * Creates a {@link SurfacePolygon} for a Polygon geometry.\n         * Applications typically do not call this method directly. It is called by\n         * [addRenderablesForGeometry]{@link GeoJSONParser#addRenderablesForGeometry}.\n         * <p>\n         * This method invokes this GeoJSON's\n         * [shapeConfigurationCallback]{@link GeoJSONParser#shapeConfigurationCallback} for the geometry.\n         * @param {RenderableLayer} layer The layer in which to place the newly created shapes.\n         * @param {GeoJSONGeometryPolygon} geometry The Polygon geometry object.\n         * @param {Object} properties The properties related to the Polygon geometry.\n         * @throws {ArgumentError} If the specified layer is null or undefined.\n         * @throws {ArgumentError} If the specified geometry is null or undefined.\n         */\n        GeoJSONParser.prototype.addRenderablesForPolygon = function (layer, geometry, properties) {\n            if (!layer) {\n                throw new ArgumentError(\n                    Logger.logMessage(Logger.LEVEL_SEVERE, \"GeoJSON\", \"addRenderablesForPolygon\", \"missingLayer\"));\n            }\n\n            if (!geometry) {\n                throw new ArgumentError(\n                    Logger.logMessage(Logger.LEVEL_SEVERE, \"GeoJSON\", \"addRenderablesForPolygon\", \"missingGeometry\"));\n            }\n\n            var configuration = this.shapeConfigurationCallback(geometry, properties);\n\n            if (!this.crs || this.crs.isCRSSupported()) {\n                var pBoundaries = [];\n                for (var boundariesIndex = 0, boundaries = geometry.coordinates;\n                     boundariesIndex < boundaries.length; boundariesIndex++) {\n                    var positions = [];\n\n                    for (var positionIndex = 0, points = boundaries[boundariesIndex];\n                         positionIndex < points.length; positionIndex++) {\n                        var longitude = points[positionIndex][0],\n                            latitude = points[positionIndex][1];\n                        //altitude = points[positionIndex][2] ?  points[positionIndex][2] : 0,\n                        var reprojectedCoordinate = this.getReprojectedIfRequired(\n                            latitude,\n                            longitude,\n                            this.crs);\n                        var position = new Location(reprojectedCoordinate[1], reprojectedCoordinate[0]);\n                        positions.push(position);\n                    }\n                    pBoundaries.push(positions);\n                }\n\n                    var shape;\n                    shape = new TexturedSurfacePolygon(\n                        pBoundaries,\n                        configuration && configuration.attributes ? configuration.attributes : null);\n                    if (configuration.highlightAttributes) {\n                        shape.highlightAttributes = configuration.highlightAttributes;\n                    }\n                    if (configuration && configuration.name) {\n                        shape.displayName = configuration.name;\n                    }\n                    if (configuration && configuration.pickDelegate) {\n                        shape.pickDelegate = configuration.pickDelegate;\n                    }\n                    if (configuration && configuration.userProperties) {\n                        shape.userProperties = configuration.userProperties;\n                    }\n                    if (configuration && configuration.timeRange) {\n                        shape.timeRange = configuration.timeRange;\n                    }\n                    layer.addRenderable(shape);\n            }\n        };\n\n        GeoJSONParser.prototype.load = function (parserCompletionCallback, shapeConfigurationCallback, layer) {\n            if (parserCompletionCallback) {\n                this._parserCompletionCallback = parserCompletionCallback;\n            }\n            if (shapeConfigurationCallback) {\n                this._shapeConfigurationCallback = shapeConfigurationCallback;\n            }\n            this._layer = layer || new RenderableLayer();\n            var dataSourceType = (typeof this.dataSource);\n            if (dataSourceType === 'string') {\n                var obj = GeoJSONParser.tryParseJSONString(this.dataSource);\n                if (obj !== null) {\n                    this.handle(obj);\n                } else {\n                    this.requestUrl(this.dataSource);\n                }\n            } else if (dataSourceType === 'object') {\n                this.handle(this.dataSource);\n            } else {\n                Logger.logMessage(Logger.LEVEL_SEVERE, \"GeoJSON\", \"load\",\n                    \"Unsupported data source type: \" + dataSourceType);\n            }\n        };\n\n\n\n        GeoJSONParser.prototype.addRenderablesForMultiPolygon = function (layer, geometry, properties) {\n            if (!layer) {\n                throw new ArgumentError(\n                    Logger.logMessage(Logger.LEVEL_SEVERE, \"GeoJSON\", \"addRenderablesForMultiPolygon\",\n                        \"missingLayer\"));\n            }\n            if (!geometry) {\n                throw new ArgumentError(\n                    Logger.logMessage(Logger.LEVEL_SEVERE, \"GeoJSON\", \"addRenderablesForMultiPolygon\",\n                        \"missingGeometry\"));\n            }\n            var configuration = this.shapeConfigurationCallback(geometry, properties);\n            if (!this.crs || this.crs.isCRSSupported()) {\n                for (var polygonsIndex = 0, polygons = geometry.coordinates;\n                     polygonsIndex < polygons.length; polygonsIndex++) {\n                    var boundaries = [];\n                    for (var boundariesIndex = 0; boundariesIndex < polygons[polygonsIndex].length; boundariesIndex++) {\n                        var positions = [];\n                        for (var positionIndex = 0, points = polygons[polygonsIndex][boundariesIndex];\n                             positionIndex < points.length; positionIndex++) {\n                            var longitude = points[positionIndex][0],\n                                latitude = points[positionIndex][1];\n                            //altitude = points[positionIndex][2] ?  points[positionIndex][2] : 0,;\n                            var reprojectedCoordinate = this.getReprojectedIfRequired(\n                                latitude,\n                                longitude,\n                                this.crs);\n                            var position = new Location(reprojectedCoordinate[1], reprojectedCoordinate[0]);\n                            positions.push(position);\n                        }\n                        boundaries.push(positions);\n                    }\n                    var shape;\n                    shape = new TexturedSurfacePolygon(\n                        boundaries,\n                        configuration && configuration.attributes ? configuration.attributes : null);\n                    if (configuration.highlightAttributes) {\n                        shape.highlightAttributes = configuration.highlightAttributes;\n                    }\n                    if (configuration && configuration.name) {\n                        shape.displayName = configuration.name;\n                    }\n                    if (configuration && configuration.pickDelegate) {\n                        shape.pickDelegate = configuration.pickDelegate;\n                    }\n                    if (configuration && configuration.userProperties) {\n                        shape.userProperties = configuration.userProperties;\n                    }\n                    if (configuration && configuration.timeRange) {\n                        shape.timeRange = configuration.timeRange;\n                    }\n                    layer.addRenderable(shape);\n                }\n            }\n        };\n\n\n","import WorldWind from 'webworldwind-esa';\n\nconst {\n    ArcBallCamera,\n    ArgumentError,\n    BasicWorldWindowController,\n    DrawContext,\n    EarthElevationModel,\n    FrameStatistics,\n    Frustum,\n    Globe,\n    Globe2D,\n    GoToAnimator,\n    GpuResourceCache,\n    Line,\n    Logger,\n    LookAtNavigator,\n    Matrix,\n    Navigator,\n    PickedObjectList,\n    Position,\n    Rectangle,\n    Sector,\n    SurfaceShape,\n    SurfaceShapeTileBuilder,\n    Terrain,\n    Vec2,\n    Vec3,\n    WWMath\n} = WorldWind;\n\n\n/**\n * Constructs a WorldWind window for an HTML canvas.\n * @alias WorldWindow\n * @constructor\n * @classdesc Represents a WorldWind window for an HTML canvas.\n * @param {String|HTMLCanvasElement} canvasElem The ID assigned to the HTML canvas in the document or the canvas\n * element itself.\n * @param {ElevationModel} elevationModel An optional argument indicating the elevation model to use for the World\n * Window. If missing or null, a default elevation model is used.\n * @throws {ArgumentError} If there is no HTML element with the specified ID in the document, or if the\n * HTML canvas does not support WebGL.\n */\nclass WorldWindow {\n    constructor(canvasElem, elevationModel, controllerConstructor, cameraConstructor) {\n        console.log('constructing worlwindow')\n        if (!(window.WebGLRenderingContext)) {\n            throw new ArgumentError(\n                Logger.logMessage(Logger.LEVEL_SEVERE, \"WorldWindow\", \"constructor\", \"webglNotSupported\"));\n        }\n\n        // Get the actual canvas element either directly or by ID.\n        var canvas;\n        if (canvasElem instanceof HTMLCanvasElement) {\n            canvas = canvasElem;\n        } else {\n            // Attempt to get the HTML canvas with the specified ID.\n            canvas = document.getElementById(canvasElem);\n\n            if (!canvas) {\n                throw new ArgumentError(\n                    Logger.logMessage(Logger.LEVEL_SEVERE, \"WorldWindow\", \"constructor\",\n                        \"The specified canvas ID is not in the document.\"));\n            }\n        }\n\n        // Create the WebGL context associated with the HTML canvas.\n        var gl = this.createContext(canvas);\n        if (!gl) {\n            throw new ArgumentError(\n                Logger.logMessage(Logger.LEVEL_SEVERE, \"WorldWindow\", \"constructor\", \"webglNotSupported\"));\n        }\n\n        // Internal. Intentionally not documented.\n        this.drawContext = new DrawContext(gl);\n\n        // Internal. Intentionally not documented. Must be initialized before the navigator is created.\n        this.eventListeners = {};\n\n        // Internal. Intentionally not documented. Initially true in order to redraw at least once.\n        this.redrawRequested = true;\n\n        // Internal. Intentionally not documented.\n        this.redrawRequestId = null;\n\n        // Internal. Intentionally not documented.\n        this.scratchModelview = Matrix.fromIdentity();\n\n        // Internal. Intentionally not documented.\n        this.scratchProjection = Matrix.fromIdentity();\n\n        // Internal. Intentionally not documented.\n        this.hasStencilBuffer = gl.getContextAttributes().stencil;\n\n        /**\n         * The HTML canvas associated with this WorldWindow.\n         * @type {HTMLElement}\n         * @readonly\n         */\n        this.canvas = canvas;\n\n        /**\n         * The number of bits in the depth buffer associated with this WorldWindow.\n         * @type {number}\n         * @readonly\n         */\n        this.depthBits = gl.getParameter(gl.DEPTH_BITS);\n\n        /**\n         * The current viewport of this WorldWindow.\n         * @type {Rectangle}\n         * @readonly\n         */\n        this.viewport = new Rectangle(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\n        /**\n         * The globe displayed.\n         * @type {Globe}\n         */\n        this.globe = new Globe(elevationModel || new EarthElevationModel());\n\n        /**\n         * The layers to display in this WorldWindow.\n         * This property is read-only. Use [addLayer]{@link WorldWindow#addLayer} or\n         * [insertLayer]{@link WorldWindow#insertLayer} to add layers to this WorldWindow.\n         * Use [removeLayer]{@link WorldWindow#removeLayer} to remove layers from this WorldWindow.\n         * @type {Layer[]}\n         * @readonly\n         */\n        this.layers = [];\n\n        /**\n         * The navigator used to manipulate the globe.\n         * @type {Navigator}\n         * @default [Navigator]{@link Navigator}\n         */\n        this.navigator = new Navigator(cameraConstructor && new cameraConstructor(this) || new ArcBallCamera(this));\n\n\n        /**\n         * The controller used to manipulate the globe.\n         * @type {WorldWindowController}\n         * @default [BasicWorldWindowController]{@link BasicWorldWindowController}\n         */\n        // this.worldWindowController = controllerConstructor && new controllerConstructor(this) || new BasicWorldWindowController(this);\n\n        /**\n         * The vertical exaggeration to apply to the terrain.\n         * @type {Number}\n         */\n        this.verticalExaggeration = 1;\n\n        /**\n         * Indicates that picking will return all objects at the pick point, if any. The top-most object will have\n         * its isOnTop flag set to true.\n         * If deep picking is false, the default, only the top-most object is returned, plus\n         * the picked-terrain object if the pick point is over the terrain.\n         * @type {boolean}\n         * @default false\n         */\n        this.deepPicking = false;\n\n        /**\n         * Indicates whether this WorldWindow should be configured for sub-surface rendering. If true, shapes\n         * below the terrain can be seen when the terrain is made transparent. If false, sub-surface shapes are\n         * not visible, however, performance is slightly increased.\n         * @type {boolean}\n         * @default false\n         */\n        this.subsurfaceMode = false;\n\n        /**\n         * The opacity to apply to terrain and surface shapes. This property is typically used when viewing\n         * the sub-surface. It modifies the opacity of the terrain and surface shapes as a whole. It should be\n         * a number between 0 and 1. It is compounded with the individual opacities of the image layers and\n         * surface shapes on the terrain.\n         * @type {Number}\n         * @default 1\n         */\n        this.surfaceOpacity = 1;\n\n        /**\n         * Performance statistics for this WorldWindow.\n         * @type {FrameStatistics}\n         */\n        this.frameStatistics = new FrameStatistics();\n\n        /**\n         * The {@link GoToAnimator} used by this WorldWindow to respond to its goTo method.\n         * @type {GoToAnimator}\n         */\n        this.goToAnimator = new GoToAnimator(this);\n\n        // Documented with its property accessor below.\n        this._redrawCallbacks = [];\n\n        // Documented with its property accessor below.\n        this._orderedRenderingFilters = [\n            function (dc) {\n                thisWindow.declutter(dc, 1);\n            },\n            function (dc) {\n                thisWindow.declutter(dc, 2);\n            }\n        ];\n\n        // Intentionally not documented.\n        this.pixelScale = 1;\n\n        // Prevent the browser's default actions in response to mouse and touch events, which interfere with\n        // navigation. Register these event listeners  before any others to ensure that they're called last.\n        function preventDefaultListener(event) {\n            event.preventDefault();\n        }\n\n        this.addEventListener(\"mousedown\", preventDefaultListener);\n        this.addEventListener(\"touchstart\", preventDefaultListener);\n        this.addEventListener(\"contextmenu\", preventDefaultListener);\n        this.addEventListener(\"wheel\", preventDefaultListener);\n\n        var thisWindow = this;\n\n        // Redirect various UI interactions to the appropriate handler.\n        // function onGestureEvent(event) {\n        //     thisWindow.onGestureEvent(event);\n        // }\n\n        // if (window.PointerEvent) {\n        //     // Prevent the browser's default actions in response to pointer events which interfere with navigation.\n        //     // This CSS style property is configured here to ensure that it's set for all applications.\n        //     this.canvas.style.setProperty(\"touch-action\", \"none\");\n\n        //     this.addEventListener(\"pointerdown\", onGestureEvent, false);\n        //     window.addEventListener(\"pointermove\", onGestureEvent, false); // get pointermove events outside event target\n        //     window.addEventListener(\"pointercancel\", onGestureEvent, false); // get pointercancel events outside event target\n        //     window.addEventListener(\"pointerup\", onGestureEvent, false); // get pointerup events outside event target\n        // } else {\n        //     this.addEventListener(\"mousedown\", onGestureEvent, false);\n        //     window.addEventListener(\"mousemove\", onGestureEvent, false); // get mousemove events outside event target\n        //     window.addEventListener(\"mouseup\", onGestureEvent, false); // get mouseup events outside event target\n        //     this.addEventListener(\"touchstart\", onGestureEvent, false);\n        //     this.addEventListener(\"touchmove\", onGestureEvent, false);\n        //     this.addEventListener(\"touchend\", onGestureEvent, false);\n        //     this.addEventListener(\"touchcancel\", onGestureEvent, false);\n        // }\n\n        // // Register wheel event listeners on the WorldWindow's canvas.\n        // this.addEventListener(\"wheel\", function (event) {\n        //     onGestureEvent(event);\n        // });\n\n        // Set up to handle WebGL context lost events.\n        function handleContextLost(event) {\n            thisWindow.handleContextLost(event);\n        }\n\n        this.canvas.addEventListener(\"webglcontextlost\", handleContextLost, false);\n\n        // Set up to handle WebGL context restored events.\n        function handleContextRestored(event) {\n            thisWindow.handleContextRestored(event);\n        }\n\n        this.canvas.addEventListener(\"webglcontextrestored\", handleContextRestored, false);\n\n        // Set up to handle WebGL context events and WorldWind redraw request events. Imagery uses the canvas\n        // redraw events because images are generally specific to the WebGL context associated with the canvas.\n        // Elevation models use the global window redraw events because they can be shared among WorldWindows.\n        function handleRedrawEvent(event) {\n            thisWindow.handleRedrawEvent(event)\n        }\n\n        this.canvas.addEventListener(WorldWind.REDRAW_EVENT_TYPE, handleRedrawEvent, false);\n        window.addEventListener(WorldWind.REDRAW_EVENT_TYPE, handleRedrawEvent, false);\n\n        // Render to the WebGL context in an animation frame loop until the WebGL context is lost.\n        this.animationFrameLoop();\n    };\n\n\n    /**\n     * An array of functions to call during ordered rendering prior to rendering the ordered renderables.\n     * Each function is passed one argument, the current draw context. The function may modify the\n     * ordered renderables in the draw context's ordered renderable list, which has been sorted from front\n     * to back when the filter function is called. Ordered rendering filters are typically used to apply\n     * decluttering. The default set of filter functions contains one function that declutters shapes with\n     * declutter group ID of 1 ({@link GeographicText} by default) and one function that declutters shapes\n     * with declutter group ID 2 ({@link Placemark} by default). Applications can add functions to this\n     * array or remove them.\n     * @type {Function[]}\n     * @default [WorldWindow.declutter]{@link WorldWindow#declutter} with a group ID of 1\n     * @readonly\n     * @memberof WorldWindow.prototype\n     */\n    orderedRenderingFilters() {\n        return this._orderedRenderingFilters;\n    }\n\n    /**\n     * The list of callbacks to call immediately before and immediately after performing a redraw. The callbacks\n     * have two arguments: this WorldWindow and the redraw stage, e.g., <code style='white-space:nowrap'>redrawCallback(worldWindow, stage);</code>.\n     * The stage will be either WorldWind.BEFORE_REDRAW or WorldWind.AFTER_REDRAW indicating whether the\n     * callback has been called either immediately before or immediately after a redraw, respectively.\n     * Applications may add functions to this array or remove them.\n     * @type {Function[]}\n     * @readonly\n     * @memberof WorldWindow.prototype\n     */\n    redrawCallbacks() {\n        return this._redrawCallbacks;\n    }\n\n    /**\n     * Converts window coordinates to coordinates relative to this WorldWindow's canvas.\n     * @param {Number} x The X coordinate to convert.\n     * @param {Number} y The Y coordinate to convert.\n     * @returns {Vec2} The converted coordinates.\n     */\n    canvasCoordinates(x, y) {\n        var bbox = this.canvas.getBoundingClientRect(),\n            xc = x - (bbox.left + this.canvas.clientLeft),// * (this.canvas.width / bbox.width),\n            yc = y - (bbox.top + this.canvas.clientTop);// * (this.canvas.height / bbox.height);\n\n        return new Vec2(xc, yc);\n    };\n\n    // onGestureEvent(event) {\n    //     this.worldWindowController.onGestureEvent(event);\n    // };\n\n    /**\n     * Registers an event listener for the specified event type on this WorldWindow's canvas. This function\n     * delegates the processing of events to the WorldWindow's canvas. For details on this function and its\n     * arguments, see the W3C [EventTarget]{@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget}\n     * documentation.\n     *\n     * Registering event listeners using this function enables applications to prevent the WorldWindow's default\n     * navigation behavior. To prevent default navigation behavior, call the [Event]{@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-Event}'s\n     * preventDefault method from within an event listener for any events the navigator should not respond to.\n     *\n     * When an event occurs, this calls the registered event listeners in order of reverse registration. Since the\n     * WorldWindow registers its navigator event listeners first, application event listeners are called before\n     * navigator event listeners.\n     *\n     * @param type The event type to listen for.\n     * @param listener The function to call when the event occurs.\n     * @throws {ArgumentError} If any argument is null or undefined.\n     */\n    addEventListener(type, listener) {\n        if (!type) {\n            throw new ArgumentError(\n                Logger.logMessage(Logger.LEVEL_SEVERE, \"WorldWindow\", \"addEventListener\", \"missingType\"));\n        }\n\n        if (!listener) {\n            throw new ArgumentError(\n                Logger.logMessage(Logger.LEVEL_SEVERE, \"WorldWindow\", \"addEventListener\", \"missingListener\"));\n        }\n\n        var thisWorldWindow = this;\n        var entry = this.eventListeners[type];\n        if (!entry) {\n            entry = {\n                listeners: [],\n                callback: function (event) { // calls listeners in reverse registration order\n                    event.worldWindow = thisWorldWindow;\n                    for (var i = 0, len = entry.listeners.length; i < len; i++) {\n                        entry.listeners[i](event);\n                    }\n                }\n            };\n            this.eventListeners[type] = entry;\n        }\n\n        var index = entry.listeners.indexOf(listener);\n        if (index == -1) { // suppress duplicate listeners\n            entry.listeners.splice(0, 0, listener); // insert the listener at the beginning of the list\n\n            if (entry.listeners.length == 1) { // first listener added, add the event listener callback\n                this.canvas.addEventListener(type, entry.callback, false);\n            }\n        }\n    };\n\n    /**\n     * Removes an event listener for the specified event type from this WorldWindow's canvas. The listener must be\n     * the same object passed to addEventListener. Calling removeEventListener with arguments that do not identify a\n     * currently registered listener has no effect.\n     *\n     * @param type Indicates the event type the listener registered for.\n     * @param listener The listener to remove. Must be the same function object passed to addEventListener.\n     * @throws {ArgumentError} If any argument is null or undefined.\n     */\n    removeEventListener(type, listener) {\n        if (!type) {\n            throw new ArgumentError(\n                Logger.logMessage(Logger.LEVEL_SEVERE, \"WorldWindow\", \"removeEventListener\", \"missingType\"));\n        }\n\n        if (!listener) {\n            throw new ArgumentError(\n                Logger.logMessage(Logger.LEVEL_SEVERE, \"WorldWindow\", \"removeEventListener\", \"missingListener\"));\n        }\n\n        var entry = this.eventListeners[type];\n        if (!entry) {\n            return; // no entry for the specified type\n        }\n\n        var index = entry.listeners.indexOf(listener);\n        if (index != -1) {\n            entry.listeners.splice(index, 1); // remove the listener from the list\n\n            if (entry.listeners.length == 0) { // last listener removed, remove the event listener callback\n                this.canvas.removeEventListener(type, entry.callback, false);\n            }\n        }\n    };\n\n    /**\n     * Causes this WorldWindow to redraw itself at the next available opportunity. The redraw occurs on the main\n     * thread at a time of the browser's discretion. Applications should call redraw after changing the World\n     * Window's state, but should not expect that change to be reflected on screen immediately after this function\n     * returns. This is the preferred method for requesting a redraw of the WorldWindow.\n     */\n    redraw() {\n        this.redrawRequested = true; // redraw during the next animation frame\n    };\n\n    /**\n     * Requests the WorldWind objects displayed at a specified screen-coordinate point.\n     *\n     * If the point intersects the terrain, the returned list contains an object identifying the associated geographic\n     * position. This returns an empty list when nothing in the WorldWind scene intersects the specified point.\n     *\n     * @param pickPoint The point to examine in this WorldWindow's screen coordinates.\n     * @returns {PickedObjectList} A list of picked WorldWind objects at the specified pick point.\n     * @throws {ArgumentError} If the specified pick point is null or undefined.\n     */\n    pick(pickPoint) {\n        if (!pickPoint) {\n            throw new ArgumentError(\n                Logger.logMessage(Logger.LEVEL_SEVERE, \"WorldWindow\", \"pick\", \"missingPoint\"));\n        }\n\n        // Suppress the picking operation and return an empty list when the WebGL context has been lost.\n        if (this.drawContext.currentGlContext.isContextLost()) {\n            return new PickedObjectList();\n        }\n\n        this.resize();\n        this.resetDrawContext();\n        this.drawContext.pickingMode = true;\n        this.drawContext.pickPoint = pickPoint;\n        this.drawContext.pickRay = this.rayThroughScreenPoint(pickPoint);\n        this.drawFrame();\n\n        return this.drawContext.objectsAtPickPoint;\n    };\n\n    /**\n     * Requests the position of the WorldWind terrain at a specified screen-coordinate point. If the point\n     * intersects the terrain, the returned list contains a single object identifying the associated geographic\n     * position. Otherwise this returns an empty list.\n     * @param pickPoint The point to examine in this WorldWindow's screen coordinates.\n     * @returns {PickedObjectList} A list containing the picked WorldWind terrain position at the specified point,\n     * or an empty list if the point does not intersect the terrain.\n     * @throws {ArgumentError} If the specified pick point is null or undefined.\n     */\n    pickTerrain(pickPoint) {\n        if (!pickPoint) {\n            throw new ArgumentError(\n                Logger.logMessage(Logger.LEVEL_SEVERE, \"WorldWindow\", \"pickTerrain\", \"missingPoint\"));\n        }\n\n        // Suppress the picking operation and return an empty list when the WebGL context has been lost.\n        if (this.drawContext.currentGlContext.isContextLost()) {\n            return new PickedObjectList();\n        }\n\n        this.resize();\n        this.resetDrawContext();\n        this.drawContext.pickingMode = true;\n        this.drawContext.pickTerrainOnly = true;\n        this.drawContext.pickPoint = pickPoint;\n        this.drawContext.pickRay = this.rayThroughScreenPoint(pickPoint);\n        this.drawFrame();\n\n        return this.drawContext.objectsAtPickPoint;\n    };\n\n    /**\n     * Requests the WorldWind objects displayed within a specified screen-coordinate region. This returns all\n     * objects that intersect the specified region, regardless of whether or not an object is actually visible, and\n     * marks objects that are visible as on top.\n     * @param {Rectangle} rectangle The screen coordinate rectangle identifying the region to search.\n     * @returns {PickedObjectList} A list of visible WorldWind objects within the specified region.\n     * @throws {ArgumentError} If the specified rectangle is null or undefined.\n     */\n    pickShapesInRegion(rectangle) {\n        if (!rectangle) {\n            throw new ArgumentError(\n                Logger.logMessage(Logger.LEVEL_SEVERE, \"WorldWindow\", \"pickShapesInRegion\", \"missingRectangle\"));\n        }\n\n        // Suppress the picking operation and return an empty list when the WebGL context has been lost.\n        if (this.drawContext.currentGlContext.isContextLost()) {\n            return new PickedObjectList();\n        }\n\n        this.resize();\n        this.resetDrawContext();\n        this.drawContext.pickingMode = true;\n        this.drawContext.regionPicking = true;\n        this.drawContext.pickRectangle =\n            new Rectangle(rectangle.x, this.canvas.height - rectangle.y, rectangle.width, rectangle.height);\n        this.drawFrame();\n\n        return this.drawContext.objectsAtPickPoint;\n    };\n\n    // Internal function. Intentionally not documented.\n    createContext(canvas) {\n        // Request a WebGL context with antialiasing is disabled. Antialiasing causes gaps to appear at the edges of\n        // terrain tiles.\n        var glAttrs = { antialias: false, stencil: true },\n            gl = canvas.getContext(\"webgl\", glAttrs);\n        if (!gl) {\n            gl = canvas.getContext(\"experimental-webgl\", glAttrs);\n        }\n\n        // uncomment to debug WebGL\n        //var gl = WebGLDebugUtils.makeDebugContext(this.canvas.getContext(\"webgl\"),\n        //        this.throwOnGLError,\n        //        this.logAndValidate\n        //);\n\n        return gl;\n    };\n\n    // Internal function. Intentionally not documented.\n    handleContextLost(event) {\n        Logger.log(Logger.LEVEL_INFO, \"WebGL context event: \" + event.statusMessage);\n        // Inform WebGL that we handle context restoration, enabling the context restored event to be delivered.\n        event.preventDefault();\n        // Notify the draw context that the WebGL rendering context has been lost.\n        this.drawContext.contextLost();\n        // Stop the rendering animation frame loop, resuming only if the WebGL context is restored.\n        window.cancelAnimationFrame(this.redrawRequestId);\n    };\n\n    // Internal function. Intentionally not documented.\n    handleContextRestored(event) {\n        Logger.log(Logger.LEVEL_INFO, \"WebGL context event: \" + event.statusMessage);\n        // Notify the draw context that the WebGL rendering context has been restored.\n        this.drawContext.contextRestored();\n        // Resume the rendering animation frame loop until the WebGL context is lost.\n        this.redraw();\n        this.animationFrameLoop();\n    };\n\n    // Internal function. Intentionally not documented.\n    handleRedrawEvent(event) {\n        this.redraw(); // redraw in the next animation frame\n    };\n\n    // Internal function. Intentionally not documented.\n    animationFrameLoop() {\n        // Render to the WebGL context as needed.\n        this.redrawIfNeeded();\n\n        // Continue the animation frame loop until the WebGL context is lost.\n        var thisWindow = this;\n\n        function animationFrameCallback() {\n            thisWindow.animationFrameLoop();\n        }\n\n        this.redrawRequestId = window.requestAnimationFrame(animationFrameCallback);\n    };\n\n    // Internal function. Intentionally not documented.\n    redrawIfNeeded() {\n        // Check if the drawing buffer needs to resize to match its screen size, which requires a redraw.\n        this.resize();\n\n        // Redraw the WebGL drawing buffer only when necessary.\n        if (!this.redrawRequested) {\n            return;\n        }\n\n        try {\n            // Prepare to redraw and notify the redraw callbacks that a redraw is about to occur.\n            this.redrawRequested = false;\n            this.drawContext.previousRedrawTimestamp = this.drawContext.timestamp;\n            this.callRedrawCallbacks(WorldWind.BEFORE_REDRAW);\n            // Redraw the WebGL drawing buffer.\n            this.resetDrawContext();\n            this.drawFrame();\n        } catch (e) {\n            Logger.logMessage(Logger.LEVEL_SEVERE, \"WorldWindow\", \"redrawIfNeeded\",\n                \"Exception occurred during redrawing.\\n\" + e.toString());\n        } finally {\n            // Notify the redraw callbacks that a redraw has completed.\n            this.callRedrawCallbacks(WorldWind.AFTER_REDRAW);\n            // Handle rendering code redraw requests.\n            if (this.drawContext.redrawRequested) {\n                this.redrawRequested = true;\n            }\n        }\n    };\n\n    // Internal function. Intentionally not documented.\n    resize() {\n        var gl = this.drawContext.currentGlContext,\n            width = gl.canvas.clientWidth * this.pixelScale,\n            height = gl.canvas.clientHeight * this.pixelScale;\n\n        if (gl.canvas.width != width ||\n            gl.canvas.height != height) {\n\n            // Make the canvas drawing buffer size match its screen size.\n            gl.canvas.width = width;\n            gl.canvas.height = height;\n\n            // Set the WebGL viewport to match the canvas drawing buffer size.\n            gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n            this.viewport = new Rectangle(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\n            // Cause this WorldWindow to redraw with the new size.\n            this.redrawRequested = true;\n        }\n    };\n\n    // Internal. Intentionally not documented.\n    computeViewingTransform(projection, modelview) {\n        if (!modelview) {\n            throw new ArgumentError(\n                Logger.logMessage(Logger.LEVEL_SEVERE, \"WorldWindow\", \"computeViewingTransform\", \"missingModelview\"));\n        }\n\n        var globe = this.globe;\n        this.navigator.camera.createViewMatrix(modelview);\n\n        if (projection) {\n            projection.setToIdentity();\n            var globeRadius = WWMath.max(globe.equatorialRadius, globe.polarRadius),\n                eyePoint = modelview.extractEyePoint(new Vec3(0, 0, 0)),\n                eyePos = globe.computePositionFromPoint(eyePoint[0], eyePoint[1], eyePoint[2], new Position(0, 0, 0)),\n                eyeHorizon = WWMath.horizonDistanceForGlobeRadius(globeRadius, eyePos.altitude),\n                atmosphereHorizon = WWMath.horizonDistanceForGlobeRadius(globeRadius, 160000),\n                viewport = this.viewport;\n\n            // Set the far clip distance to the smallest value that does not clip the atmosphere.\n            // TODO adjust the clip plane distances based on the navigator's orientation - shorter distances when the\n            // TODO horizon is not in view\n            // TODO parameterize the object altitude for horizon distance\n            var farDistance = eyeHorizon + atmosphereHorizon;\n            if (farDistance < 1e3)\n                farDistance = 1e3;\n\n            // Compute the near clip distance in order to achieve a desired depth resolution at the far clip distance.\n            // This computed distance is limited such that it does not intersect the terrain when possible and is never\n            // less than a predetermined minimum (usually one). The computed near distance automatically scales with the\n            // resolution of the WebGL depth buffer.\n            var nearDistance = WWMath.perspectiveNearDistanceForFarDistance(farDistance, 10, this.depthBits);\n\n            // Prevent the near clip plane from intersecting the terrain.\n            var distanceToSurface = eyePos.altitude - globe.elevationAtLocation(eyePos.latitude, eyePos.longitude);\n            if (distanceToSurface > 0) {\n                var maxNearDistance = WWMath.perspectiveNearDistance(viewport.width, viewport.height, distanceToSurface);\n                if (nearDistance > maxNearDistance) {\n                    nearDistance = maxNearDistance;\n                }\n            }\n\n            if (nearDistance < 1) {\n                nearDistance = 1;\n            }\n\n            // Compute the current projection matrix based on this navigator's perspective properties and the current\n            // WebGL viewport.\n            projection.setToPerspectiveProjection(viewport.width, viewport.height, nearDistance, farDistance);\n        }\n    };\n\n    // Internal. Intentionally not documented.\n    computePixelMetrics(projection) {\n        var projectionInv = Matrix.fromIdentity();\n        projectionInv.invertMatrix(projection);\n\n        // Compute the eye coordinate rectangles carved out of the frustum by the near and far clipping planes, and\n        // the distance between those planes and the eye point along the -Z axis. The rectangles are determined by\n        // transforming the bottom-left and top-right points of the frustum from clip coordinates to eye\n        // coordinates.\n        var nbl = new Vec3(-1, -1, -1),\n            ntr = new Vec3(+1, +1, -1),\n            fbl = new Vec3(-1, -1, +1),\n            ftr = new Vec3(+1, +1, +1);\n        // Convert each frustum corner from clip coordinates to eye coordinates by multiplying by the inverse\n        // projection matrix.\n        nbl.multiplyByMatrix(projectionInv);\n        ntr.multiplyByMatrix(projectionInv);\n        fbl.multiplyByMatrix(projectionInv);\n        ftr.multiplyByMatrix(projectionInv);\n\n        var nrRectWidth = WWMath.fabs(ntr[0] - nbl[0]),\n            frRectWidth = WWMath.fabs(ftr[0] - fbl[0]),\n            nrDistance = -nbl[2],\n            frDistance = -fbl[2];\n\n        // Compute the scale and offset used to determine the width of a pixel on a rectangle carved out of the\n        // frustum at a distance along the -Z axis in eye coordinates. These values are found by computing the scale\n        // and offset of a frustum rectangle at a given distance, then dividing each by the viewport width.\n        var frustumWidthScale = (frRectWidth - nrRectWidth) / (frDistance - nrDistance),\n            frustumWidthOffset = nrRectWidth - frustumWidthScale * nrDistance;\n\n        return {\n            pixelSizeFactor: frustumWidthScale / this.viewport.width,\n            pixelSizeOffset: frustumWidthOffset / this.viewport.height\n        };\n    };\n\n    /**\n     * Computes the approximate size of a pixel at a specified distance from the eye point.\n     * <p>\n     * This method assumes rectangular pixels, where pixel coordinates denote\n     * infinitely thin spaces between pixels. The units of the returned size are in model coordinates per pixel\n     * (usually meters per pixel). This returns 0 if the specified distance is zero. The returned size is undefined\n     * if the distance is less than zero.\n     *\n     * @param {Number} distance The distance from the eye point at which to determine pixel size, in model\n     * coordinates.\n     * @returns {Number} The approximate pixel size at the specified distance from the eye point, in model\n     * coordinates per pixel.\n     */\n    pixelSizeAtDistance(distance) {\n        this.computeViewingTransform(this.scratchProjection, this.scratchModelview);\n        var pixelMetrics = this.computePixelMetrics(this.scratchProjection);\n        return pixelMetrics.pixelSizeFactor * distance + pixelMetrics.pixelSizeOffset;\n    };\n\n    // Internal. Intentionally not documented.\n    computeDrawContext() {\n        var dc = this.drawContext;\n\n        this.computeViewingTransform(dc.projection, dc.modelview);\n        dc.viewport = this.viewport;\n        dc.eyePoint = dc.modelview.extractEyePoint(new Vec3(0, 0, 0));\n\n        dc.modelviewProjection.setToIdentity();\n        dc.modelviewProjection.setToMultiply(dc.projection, dc.modelview);\n\n        var pixelMetrics = this.computePixelMetrics(dc.projection);\n        dc.pixelSizeFactor = pixelMetrics.pixelSizeFactor;\n        dc.pixelSizeOffset = pixelMetrics.pixelSizeOffset;\n\n        // Compute the inverse of the modelview, projection, and modelview-projection matrices. The inverse matrices\n        // are used to support operations on navigator state.\n        var modelviewInv = Matrix.fromIdentity();\n        modelviewInv.invertOrthonormalMatrix(dc.modelview);\n\n        dc.modelviewNormalTransform = Matrix.fromIdentity().setToTransposeOfMatrix(modelviewInv.upper3By3());\n\n        // Compute the frustum in model coordinates. Start by computing the frustum in eye coordinates from the\n        // projection matrix, then transform this frustum to model coordinates by multiplying its planes by the\n        // transpose of the modelview matrix. We use the transpose of the modelview matrix because planes are\n        // transformed by the inverse transpose of a matrix, and we want to transform from eye coordinates to model\n        // coordinates.\n        var modelviewTranspose = Matrix.fromIdentity();\n        modelviewTranspose.setToTransposeOfMatrix(dc.modelview);\n        dc.frustumInModelCoordinates = Frustum.fromProjectionMatrix(dc.projection);\n        dc.frustumInModelCoordinates.transformByMatrix(modelviewTranspose);\n        dc.frustumInModelCoordinates.normalize();\n    };\n\n    // Internal. Intentionally not documented.\n    resetDrawContext() {\n        this.globe.offset = 0;\n\n        var dc = this.drawContext;\n        dc.reset();\n        dc.globe = this.globe;\n        dc.navigator = this.navigator;\n        dc.layers = this.layers.slice();\n        dc.layers.push(dc.screenCreditController);\n        this.computeDrawContext();\n        dc.verticalExaggeration = this.verticalExaggeration;\n        dc.surfaceOpacity = this.surfaceOpacity;\n        dc.deepPicking = this.deepPicking;\n        dc.frameStatistics = this.frameStatistics;\n        dc.pixelScale = this.pixelScale;\n        dc.update();\n    };\n\n    /* useful stuff to debug WebGL */\n    /*\n        function logGLCall(functionName, args) {\n        console.log(\"gl.\" + functionName + \"(\" +\n        WebGLDebugUtils.glFunctionArgsToString(functionName, args) + \")\");\n        };\n    \n        function validateNoneOfTheArgsAreUndefined(functionName, args) {\n        for (var ii = 0; ii < args.length; ++ii) {\n        if (args[ii] === undefined) {\n        console.error(\"undefined passed to gl.\" + functionName + \"(\" +\n        WebGLDebugUtils.glFunctionArgsToString(functionName, args) + \")\");\n        }\n        }\n        };\n    \n        logAndValidate logAndValidate(functionName, args) {\n        logGLCall(functionName, args);\n        validateNoneOfTheArgsAreUndefined (functionName, args);\n        };\n    \n        throwOnGLError throwOnGLError(err, funcName, args) {\n        throw WebGLDebugUtils.glEnumToString(err) + \" was caused by call to: \" + funcName;\n        };\n        */\n\n    // Internal function. Intentionally not documented.\n    drawFrame() {\n        try {\n            this.drawContext.frameStatistics.beginFrame();\n            this.beginFrame();\n\n            if (this.drawContext.globe.is2D() && this.drawContext.globe.continuous) {\n                this.do2DContiguousRepaint();\n            } else {\n                this.doNormalRepaint();\n            }\n\n        } finally {\n            this.endFrame();\n            this.drawContext.frameStatistics.endFrame();\n            //console.log(this.drawContext.frameStatistics.frameTime);\n        }\n    };\n\n    doNormalRepaint() {\n        this.createTerrain();\n        this.clearFrame();\n        this.deferOrderedRendering = false;\n        if (this.drawContext.pickingMode) {\n            if (this.drawContext.makePickFrustum()) {\n                this.doPick();\n                this.resolvePick();\n            }\n        } else {\n            this.doDraw();\n            if (this.subsurfaceMode && this.hasStencilBuffer) {\n                this.redrawSurface();\n                this.drawScreenRenderables();\n            }\n        }\n    };\n\n    do2DContiguousRepaint() {\n        this.createTerrain2DContiguous();\n        this.clearFrame();\n        if (this.drawContext.pickingMode) {\n            if (this.drawContext.makePickFrustum()) {\n                this.pick2DContiguous();\n                this.resolvePick();\n            }\n        } else {\n            this.draw2DContiguous();\n        }\n    };\n\n    resolvePick() {\n        if (this.drawContext.pickTerrainOnly) {\n            this.resolveTerrainPick();\n        } else if (this.drawContext.regionPicking) {\n            this.resolveRegionPick();\n        } else {\n            this.resolveTopPick();\n        }\n    };\n\n    // Internal function. Intentionally not documented.\n    beginFrame() {\n        var gl = this.drawContext.currentGlContext;\n        gl.enable(gl.BLEND);\n        gl.enable(gl.CULL_FACE);\n        gl.enable(gl.DEPTH_TEST);\n        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        gl.depthFunc(gl.LEQUAL);\n\n        if (this.drawContext.pickingMode) {\n            this.drawContext.makePickFramebuffer();\n            this.drawContext.bindFramebuffer(this.drawContext.pickFramebuffer);\n        }\n    };\n\n    // Internal function. Intentionally not documented.\n    endFrame() {\n        var gl = this.drawContext.currentGlContext;\n        gl.disable(gl.BLEND);\n        gl.disable(gl.CULL_FACE);\n        gl.disable(gl.DEPTH_TEST);\n        gl.blendFunc(gl.ONE, gl.ZERO);\n        gl.depthFunc(gl.LESS);\n        gl.clearColor(0, 0, 0, 1);\n\n        this.drawContext.bindFramebuffer(null);\n        this.drawContext.bindProgram(null);\n    };\n\n    // Internal function. Intentionally not documented.\n    clearFrame() {\n        var dc = this.drawContext,\n            gl = dc.currentGlContext;\n\n        gl.clearColor(dc.clearColor.red, dc.clearColor.green, dc.clearColor.blue, dc.clearColor.alpha);\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n    };\n\n    // Internal function. Intentionally not documented.\n    doDraw() {\n        this.drawContext.renderShapes = true;\n\n        if (this.subsurfaceMode && this.hasStencilBuffer) {\n            // Draw the surface and collect the ordered renderables.\n            this.drawContext.currentGlContext.disable(this.drawContext.currentGlContext.STENCIL_TEST);\n            this.drawContext.surfaceShapeTileBuilder.clear();\n            this.drawLayers(true);\n            this.drawSurfaceRenderables();\n            this.drawContext.surfaceShapeTileBuilder.doRender(this.drawContext);\n\n            if (!this.deferOrderedRendering) {\n                // Clear the depth and stencil buffers prior to rendering the ordered renderables. This allows\n                // sub-surface renderables to be drawn beneath the terrain. Turn on stenciling to capture the\n                // fragments that ordered renderables draw. The terrain and surface shapes will be subsequently\n                // drawn again, and the stencil buffer will ensure that they are drawn only where they overlap\n                // the fragments drawn by the ordered renderables.\n                this.drawContext.currentGlContext.clear(\n                    this.drawContext.currentGlContext.DEPTH_BUFFER_BIT | this.drawContext.currentGlContext.STENCIL_BUFFER_BIT);\n                this.drawContext.currentGlContext.enable(this.drawContext.currentGlContext.STENCIL_TEST);\n                this.drawContext.currentGlContext.stencilFunc(this.drawContext.currentGlContext.ALWAYS, 1, 1);\n                this.drawContext.currentGlContext.stencilOp(\n                    this.drawContext.currentGlContext.REPLACE, this.drawContext.currentGlContext.REPLACE, this.drawContext.currentGlContext.REPLACE);\n                this.drawOrderedRenderables();\n            }\n        } else {\n            this.drawContext.surfaceShapeTileBuilder.clear();\n            this.drawLayers(true);\n            this.drawSurfaceRenderables();\n            this.drawContext.surfaceShapeTileBuilder.doRender(this.drawContext);\n\n            if (!this.deferOrderedRendering) {\n                this.drawOrderedRenderables();\n                this.drawScreenRenderables();\n            }\n        }\n    };\n\n    redrawSurface() {\n        // Draw the terrain and surface shapes but only where the current stencil buffer is non-zero.\n        // The non-zero fragments are from drawing the ordered renderables previously.\n        this.drawContext.currentGlContext.enable(this.drawContext.currentGlContext.STENCIL_TEST);\n        this.drawContext.currentGlContext.stencilFunc(this.drawContext.currentGlContext.EQUAL, 1, 1);\n        this.drawContext.currentGlContext.stencilOp(\n            this.drawContext.currentGlContext.KEEP, this.drawContext.currentGlContext.KEEP, this.drawContext.currentGlContext.KEEP);\n        this.drawContext.surfaceShapeTileBuilder.clear();\n        this.drawLayers(false);\n        this.drawSurfaceRenderables();\n        this.drawContext.surfaceShapeTileBuilder.doRender(this.drawContext);\n        this.drawContext.currentGlContext.disable(this.drawContext.currentGlContext.STENCIL_TEST);\n    };\n\n    // Internal function. Intentionally not documented.\n    doPick() {\n        if (this.drawContext.terrain) {\n            this.drawContext.terrain.pick(this.drawContext);\n        }\n\n        if (!this.drawContext.pickTerrainOnly) {\n            if (this.subsurfaceMode && this.hasStencilBuffer) {\n                // Draw the surface and collect the ordered renderables.\n                this.drawContext.currentGlContext.disable(this.drawContext.currentGlContext.STENCIL_TEST);\n                this.drawContext.surfaceShapeTileBuilder.clear();\n                this.drawLayers(true);\n                this.drawSurfaceRenderables();\n                this.drawContext.surfaceShapeTileBuilder.doRender(this.drawContext);\n\n                if (!this.deferOrderedRendering) {\n                    // Clear the depth and stencil buffers prior to rendering the ordered renderables. This allows\n                    // sub-surface renderables to be drawn beneath the terrain. Turn on stenciling to capture the\n                    // fragments that ordered renderables draw. The terrain and surface shapes will be subsequently\n                    // drawn again, and the stencil buffer will ensure that they are drawn only where they overlap\n                    // the fragments drawn by the ordered renderables.\n                    this.drawContext.currentGlContext.clear(\n                        this.drawContext.currentGlContext.DEPTH_BUFFER_BIT | this.drawContext.currentGlContext.STENCIL_BUFFER_BIT);\n                    this.drawContext.currentGlContext.enable(this.drawContext.currentGlContext.STENCIL_TEST);\n                    this.drawContext.currentGlContext.stencilFunc(this.drawContext.currentGlContext.ALWAYS, 1, 1);\n                    this.drawContext.currentGlContext.stencilOp(\n                        this.drawContext.currentGlContext.REPLACE, this.drawContext.currentGlContext.REPLACE, this.drawContext.currentGlContext.REPLACE);\n                    this.drawOrderedRenderables();\n                    this.drawContext.terrain.pick(this.drawContext);\n                    this.drawScreenRenderables();\n                }\n            } else {\n                this.drawContext.surfaceShapeTileBuilder.clear();\n\n                this.drawLayers(true);\n                this.drawSurfaceRenderables();\n\n                this.drawContext.surfaceShapeTileBuilder.doRender(this.drawContext);\n\n                if (!this.deferOrderedRendering) {\n                    this.drawOrderedRenderables();\n                    this.drawScreenRenderables();\n                }\n            }\n        }\n    };\n\n    // Internal function. Intentionally not documented.\n    createTerrain() {\n        var dc = this.drawContext;\n        dc.terrain = this.globe.tessellator.tessellate(dc);\n        dc.frameStatistics.setTerrainTileCount(dc.terrain ? dc.terrain.surfaceGeometry.length : 0);\n    };\n\n    makeCurrent(offset) {\n        var dc = this.drawContext;\n        dc.globe.offset = offset;\n        dc.globeStateKey = dc.globe.stateKey;\n\n        switch (offset) {\n            case -1:\n                dc.terrain = this.terrainLeft;\n                break;\n\n            case 0:\n                dc.terrain = this.terrainCenter;\n                break;\n\n            case 1:\n                dc.terrain = this.terrainRight;\n                break;\n        }\n    };\n\n    createTerrain2DContiguous() {\n        var dc = this.drawContext;\n\n        this.terrainCenter = null;\n        dc.globe.offset = 0;\n        dc.globeStateKey = dc.globe.stateKey;\n        if (dc.globe.intersectsFrustum(dc.frustumInModelCoordinates)) {\n            this.terrainCenter = dc.globe.tessellator.tessellate(dc);\n        }\n\n        this.terrainRight = null;\n        dc.globe.offset = 1;\n        dc.globeStateKey = dc.globe.stateKey;\n        if (dc.globe.intersectsFrustum(dc.frustumInModelCoordinates)) {\n            this.terrainRight = dc.globe.tessellator.tessellate(dc);\n        }\n\n        this.terrainLeft = null;\n        dc.globe.offset = -1;\n        dc.globeStateKey = dc.globe.stateKey;\n        if (dc.globe.intersectsFrustum(dc.frustumInModelCoordinates)) {\n            this.terrainLeft = dc.globe.tessellator.tessellate(dc);\n        }\n    };\n\n    draw2DContiguous() {\n        var drawing = \"\";\n\n        if (this.terrainCenter) {\n            drawing += \" 0 \";\n            this.makeCurrent(0);\n            this.deferOrderedRendering = this.terrainLeft || this.terrainRight;\n            this.doDraw();\n        }\n\n        if (this.terrainRight) {\n            drawing += \" 1 \";\n            this.makeCurrent(1);\n            this.deferOrderedRendering = this.terrainLeft || this.terrainLeft;\n            this.doDraw();\n        }\n\n        this.deferOrderedRendering = false;\n\n        if (this.terrainLeft) {\n            drawing += \" -1 \";\n            this.makeCurrent(-1);\n            this.doDraw();\n        }\n        //\n        //console.log(drawing);\n\n        if (this.subsurfaceMode && this.hasStencilBuffer) {\n            this.deferOrderedRendering = true;\n\n            if (this.terrainCenter) {\n                drawing += \" 0 \";\n                this.makeCurrent(0);\n                this.redrawSurface();\n            }\n\n            if (this.terrainRight) {\n                drawing += \" 1 \";\n                this.makeCurrent(1);\n                this.redrawSurface();\n            }\n\n            if (this.terrainLeft) {\n                drawing += \" -1 \";\n                this.makeCurrent(-1);\n                this.redrawSurface();\n            }\n        }\n\n        this.drawScreenRenderables();\n    };\n\n    pick2DContiguous() {\n        if (this.terrainCenter) {\n            this.makeCurrent(0);\n            this.deferOrderedRendering = this.terrainLeft || this.terrainRight;\n            this.doPick();\n        }\n\n        if (this.terrainRight) {\n            this.makeCurrent(1);\n            this.deferOrderedRendering = this.terrainLeft || this.terrainLeft;\n            this.doPick();\n        }\n\n        this.deferOrderedRendering = false;\n\n        if (this.terrainLeft) {\n            this.makeCurrent(-1);\n            this.doPick();\n        }\n    };\n\n    // Internal function. Intentionally not documented.\n    drawLayers(accumulateOrderedRenderables) {\n        // Draw all the layers attached to this WorldWindow.\n\n        var beginTime = Date.now(),\n            dc = this.drawContext,\n            layers = dc.layers,\n            layer;\n\n        dc.accumulateOrderedRenderables = accumulateOrderedRenderables;\n\n        for (var i = 0, len = layers.length; i < len; i++) {\n            layer = layers[i];\n            if (layer) {\n                dc.currentLayer = layer;\n                try {\n                    layer.render(dc);\n                } catch (e) {\n                    Logger.log(Logger.LEVEL_SEVERE, \"Error while rendering layer \" + layer.displayName + \".\\n\"\n                        + e.toString());\n                    // Keep going. Render the rest of the layers.\n                }\n            }\n        }\n        dc.currentLayer = null;\n        var now = Date.now();\n        dc.frameStatistics.layerRenderingTime = now - beginTime;\n    };\n\n    /**\n     * Adds a specified layer to the end of this WorldWindow.\n     * @param {Layer} layer The layer to add. May be null or undefined, in which case this WorldWindow is not\n     * modified.\n     */\n    addLayer(layer) {\n        if (layer) {\n            this.layers.push(layer);\n        }\n    };\n\n    /**\n     * Removes the first instance of a specified layer from this WorldWindow.\n     * @param {Layer} layer The layer to remove. May be null or undefined, in which case this WorldWindow is not\n     * modified. This WorldWindow is also not modified if the specified layer does not exist in this WorldWindow's\n     * layer list.\n     */\n    removeLayer(layer) {\n        var index = this.indexOfLayer(layer);\n        if (index >= 0) {\n            this.layers.splice(index, 1);\n        }\n    };\n\n    /**\n     * Inserts a specified layer at a specified position in this WorldWindow.\n     * @param {Number} index The index at which to insert the layer. May be negative to specify the position\n     * from the end of the array.\n     * @param {Layer} layer The layer to insert. May be null or undefined, in which case this WorldWindow is not\n     * modified.\n     */\n    insertLayer(index, layer) {\n        if (layer) {\n            this.layers.splice(index, 0, layer);\n        }\n    };\n\n    /**\n     * Returns the index of a specified layer in this WorldWindow.\n     * @param {Layer} layer The layer to search for.\n     * @returns {Number} The index of the specified layer or -1 if it doesn't exist in this WorldWindow.\n     */\n    indexOfLayer(layer) {\n        return this.layers.indexOf(layer);\n    };\n\n    // Internal function. Intentionally not documented.\n    drawSurfaceRenderables() {\n        var dc = this.drawContext,\n            sr;\n\n        dc.reverseSurfaceRenderables();\n\n        while (sr = dc.popSurfaceRenderable()) {\n            try {\n                sr.renderSurface(dc);\n            } catch (e) {\n                Logger.logMessage(Logger.LEVEL_WARNING, \"WorldWindow\", \"drawSurfaceRenderables\",\n                    \"Error while rendering a surface renderable.\\n\" + e.message);\n                // Keep going. Render the rest of the surface renderables.\n            }\n        }\n    };\n\n    // Internal function. Intentionally not documented.\n    drawOrderedRenderables() {\n        var beginTime = Date.now(),\n            dc = this.drawContext,\n            or;\n\n        dc.sortOrderedRenderables();\n\n        if (this._orderedRenderingFilters) {\n            for (var f = 0; f < this._orderedRenderingFilters.length; f++) {\n                this._orderedRenderingFilters[f](this.drawContext);\n            }\n        }\n\n        dc.orderedRenderingMode = true;\n\n        while (or = dc.popOrderedRenderable()) {\n            try {\n                or.renderOrdered(dc);\n            } catch (e) {\n                Logger.logMessage(Logger.LEVEL_WARNING, \"WorldWindow\", \"drawOrderedRenderables\",\n                    \"Error while rendering an ordered renderable.\\n\" + e.message);\n                // Keep going. Render the rest of the ordered renderables.\n            }\n        }\n\n        dc.orderedRenderingMode = false;\n        dc.frameStatistics.orderedRenderingTime = Date.now() - beginTime;\n    };\n\n    drawScreenRenderables() {\n        var dc = this.drawContext,\n            or;\n\n        while (or = dc.nextScreenRenderable()) {\n            try {\n                or.renderOrdered(dc);\n            } catch (e) {\n                Logger.logMessage(Logger.LEVEL_WARNING, \"WorldWindow\", \"drawOrderedRenderables\",\n                    \"Error while rendering a screen renderable.\\n\" + e.message);\n                // Keep going. Render the rest of the screen renderables.\n            }\n        }\n    };\n\n    // Internal function. Intentionally not documented.\n    resolveTopPick() {\n        if (this.drawContext.objectsAtPickPoint.objects.length == 0) {\n            return; // nothing picked; avoid calling readPickColor unnecessarily\n        }\n\n        // Make a last reading to determine what's on top.\n\n        var pickedObjects = this.drawContext.objectsAtPickPoint,\n            pickColor = this.drawContext.readPickColor(this.drawContext.pickPoint),\n            topObject = null,\n            terrainObject = null;\n\n        if (pickColor) {\n            // Find the picked object with the top color code and set its isOnTop flag.\n            for (var i = 0, len = pickedObjects.objects.length; i < len; i++) {\n                var po = pickedObjects.objects[i];\n\n                if (po.isTerrain) {\n                    terrainObject = po;\n                }\n\n                if (po.color.equals(pickColor)) {\n                    po.isOnTop = true;\n                    topObject = po;\n\n                    if (terrainObject) {\n                        break; // no need to search for more than the top object and the terrain object\n                    }\n                }\n            }\n\n            // In single-pick mode provide only the top-most object and the terrain object, if any.\n            if (!this.drawContext.deepPicking) {\n                pickedObjects.clear();\n                if (topObject) {\n                    pickedObjects.add(topObject);\n                }\n                if (terrainObject && terrainObject != topObject) {\n                    pickedObjects.add(terrainObject);\n                }\n            }\n        } else {\n            pickedObjects.clear(); // nothing drawn at the pick point\n        }\n    };\n\n    // Internal. Intentionally not documented.\n    resolveTerrainPick() {\n        var pickedObjects = this.drawContext.objectsAtPickPoint,\n            po;\n\n        // Mark the first picked terrain object as \"on top\". The picked object list should contain only one entry\n        // indicating the picked terrain object, but we iterate over the list contents anyway.\n        for (var i = 0, len = pickedObjects.objects.length; i < len; i++) {\n            po = pickedObjects.objects[i];\n            if (po.isTerrain) {\n                po.isOnTop = true;\n                break;\n            }\n        }\n    };\n\n    // Internal. Intentionally not documented.\n    resolveRegionPick() {\n        if (this.drawContext.objectsAtPickPoint.objects.length == 0) {\n            return; // nothing picked; avoid calling readPickColors unnecessarily\n        }\n\n        // Mark every picked object with a color in the pick buffer as \"on top\".\n\n        var pickedObjects = this.drawContext.objectsAtPickPoint,\n            uniquePickColors = this.drawContext.readPickColors(this.drawContext.pickRectangle),\n            po,\n            color;\n\n        for (var i = 0, len = pickedObjects.objects.length; i < len; i++) {\n            po = pickedObjects.objects[i];\n            if (!po) continue;\n            var poColor = po.color.toByteString();\n            color = uniquePickColors[poColor];\n            if (color) {\n                po.isOnTop = true;\n            } else if (po.userObject instanceof SurfaceShape) {\n                // SurfaceShapes ALWAYS get added to the pick list, since their rendering is deferred\n                // until the tile they are cached by is rendered. So a SurfaceShape may be in the pick list\n                // but is not seen in the pick rectangle.\n                //\n                // Remove the SurfaceShape that was not visible to the pick rectangle.\n                pickedObjects.objects.splice(i, 1);\n                i -= 1;\n            }\n        }\n    };\n\n    // Internal. Intentionally not documented.\n    callRedrawCallbacks(stage) {\n        for (var i = 0, len = this._redrawCallbacks.length; i < len; i++) {\n            try {\n                this._redrawCallbacks[i](this, stage);\n            } catch (e) {\n                Logger.log(Logger.LEVEL_SEVERE, \"Exception calling redraw callback.\\n\" + e.toString());\n                // Keep going. Execute the rest of the callbacks.\n            }\n        }\n    };\n\n    /**\n     * Moves this WorldWindow's navigator to a specified location or position.\n     * @param {Location | Position} position The location or position to move the navigator to. If this\n     * argument contains an \"altitude\" property, as {@link Position} does, the end point of the navigation is\n     * at the specified altitude. Otherwise the end point is at the current altitude of the navigator.\n     *\n     * This function uses this WorldWindow's {@link GoToAnimator} property to perform the move. That object's\n     * properties can be specified by the application to modify its behavior during calls to this function.\n     * It's cancel method can also be used to cancel the move initiated by this function.\n     * @param {Function} completionCallback If not null or undefined, specifies a function to call when the\n     * animation completes. The completion callback is called with a single argument, this animator.\n     * @throws {ArgumentError} If the specified location or position is null or undefined.\n     */\n    goTo(position, completionCallback) {\n        this.goToAnimator.goTo(position, completionCallback);\n    };\n\n    /**\n     * Declutters the current ordered renderables with a specified group ID. This function is not called by\n     * applications directly. It's meant to be invoked as an ordered rendering filter in this WorldWindow's\n     * [orderedRenderingFilters]{@link WorldWindow#orderedRenderingFilters} property.\n     * <p>\n     * The function operates by setting the target visibility of occluded shapes to 0 and unoccluded shapes to 1.\n     * @param {DrawContext} dc The current draw context.\n     * @param {Number} groupId The ID of the group to declutter. Must not be null, undefined or 0.\n     * @throws {ArgumentError} If the specified group ID is null, undefined or 0.\n     */\n    declutter(dc, groupId) {\n        if (!groupId) {\n            throw new ArgumentError(\n                Logger.logMessage(Logger.LEVEL_SEVERE, \"WorldWindow\", \"declutter\",\n                    \"Group ID is null, undefined or 0.\"));\n        }\n\n        // Collect all the declutterables in the specified group.\n        var declutterables = [];\n        for (var i = 0; i < dc.orderedRenderables.length; i++) {\n            var orderedRenderable = dc.orderedRenderables[i].orderedRenderable;\n            if (orderedRenderable.declutterGroup === groupId) {\n                declutterables.push(orderedRenderable);\n            }\n        }\n\n        // Filter the declutterables by determining which are partially occluded. Since the ordered renderable\n        // list was already sorted from front to back, the front-most will represent an entire occluded group.\n        var rects = [];\n        for (var j = 0; j < declutterables.length; j++) {\n            var declutterable = declutterables[j],\n                screenBounds = declutterable.screenBounds;\n\n            if (screenBounds && screenBounds.intersectsRectangles(rects)) {\n                declutterable.targetVisibility = 0;\n            } else {\n                declutterable.targetVisibility = 1;\n                if (screenBounds) {\n                    rects.push(screenBounds);\n                }\n            }\n        }\n    };\n\n    /**\n     * Computes a ray originating at the eyePoint and extending through the specified point in window\n     * coordinates.\n     * <p>\n     * The specified point is understood to be in the window coordinate system of the WorldWindow, with the origin\n     * in the top-left corner and axes that extend down and to the right from the origin point.\n     * <p>\n     * The results of this method are undefined if the specified point is outside of the WorldWindow's\n     * bounds.\n     *\n     * @param {Vec2} point The window coordinates point to compute a ray for.\n     * @returns {Line} A new Line initialized to the origin and direction of the computed ray, or null if the\n     * ray could not be computed.\n     */\n    rayThroughScreenPoint(point) {\n        if (!point) {\n            throw new ArgumentError(Logger.logMessage(Logger.LEVEL_SEVERE, \"WorldWindow\", \"rayThroughScreenPoint\",\n                \"missingPoint\"));\n        }\n\n        // Convert the point's xy coordinates from window coordinates to WebGL screen coordinates.\n        var screenPoint = new Vec3(point[0], this.viewport.height - point[1], 0),\n            nearPoint = new Vec3(0, 0, 0),\n            farPoint = new Vec3(0, 0, 0);\n\n        this.computeViewingTransform(this.scratchProjection, this.scratchModelview);\n        var modelviewProjection = Matrix.fromIdentity();\n        modelviewProjection.setToMultiply(this.scratchProjection, this.scratchModelview);\n        var modelviewProjectionInv = Matrix.fromIdentity();\n        modelviewProjectionInv.invertMatrix(modelviewProjection);\n\n        // Compute the model coordinate point on the near clip plane with the xy coordinates and depth 0.\n        if (!modelviewProjectionInv.unProject(screenPoint, this.viewport, nearPoint)) {\n            return null;\n        }\n\n        // Compute the model coordinate point on the far clip plane with the xy coordinates and depth 1.\n        screenPoint[2] = 1;\n        if (!modelviewProjectionInv.unProject(screenPoint, this.viewport, farPoint)) {\n            return null;\n        }\n\n        var eyePoint = this.scratchModelview.extractEyePoint(new Vec3(0, 0, 0));\n\n        // Compute a ray originating at the eye point and with direction pointing from the xy coordinate on the near\n        // plane to the same xy coordinate on the far plane.\n        var origin = new Vec3(eyePoint[0], eyePoint[1], eyePoint[2]),\n            direction = new Vec3(farPoint[0], farPoint[1], farPoint[2]);\n\n        direction.subtract(nearPoint);\n        direction.normalize();\n\n        return new Line(origin, direction);\n    };\n}\n\nexport default WorldWindow;","/*\n * Copyright 2015-2017 WorldWind Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport WorldWind from 'webworldwind-esa';\nconst {\n    Angle,\n    ArgumentError,\n    Logger\n} = WorldWind;\n\n/**\n * Provides utilities for determining the Sun geographic and celestial location.\n * @exports SunPosition\n */\nconst SunPosition = {\n\n    /**\n     * Computes the geographic location of the sun for a given date\n     * @param {Date} date\n     * @throws {ArgumentError} if the date is missing\n     * @return {{latitude: Number, longitude: Number}} the geographic location\n     */\n    getAsGeographicLocation: function (date) {\n        if (date instanceof Date === false) {\n            throw new ArgumentError(\n                Logger.logMessage(Logger.LEVEL_SEVERE, \"SunPosition\", \"getAsGeographicLocation\",\n                    \"missingDate\"));\n        }\n\n        let celestialLocation = this.getAsCelestialLocation(date);\n        return this.celestialToGeographic(celestialLocation, date);\n    },\n\n    /**\n     * Computes the celestial location of the sun for a given julianDate\n     * @param {Date} date\n     * @throws {ArgumentError} if the date is missing\n     * @return {{declination: Number, rightAscension: Number}} the celestial location\n     */\n    getAsCelestialLocation: function (date) {\n        if (date instanceof Date === false) {\n            throw new ArgumentError(\n                Logger.logMessage(Logger.LEVEL_SEVERE, \"SunPosition\", \"getAsCelestialLocation\",\n                    \"missingDate\"));\n        }\n\n        let julianDate = this.computeJulianDate(date);\n\n        //number of days (positive or negative) since Greenwich noon, Terrestrial Time, on 1 January 2000 (J2000.0)\n        let numDays = julianDate - 2451545;\n\n        let meanLongitude = this.normalizeAngle360(280.460 + 0.9856474 * numDays);\n\n        let meanAnomaly = this.normalizeAngle360(357.528 + 0.9856003 * numDays) * Angle.DEGREES_TO_RADIANS;\n\n        let eclipticLongitude = meanLongitude + 1.915 * Math.sin(meanAnomaly) + 0.02 * Math.sin(2 * meanAnomaly);\n        let eclipticLongitudeRad = eclipticLongitude * Angle.DEGREES_TO_RADIANS;\n\n        let obliquityOfTheEcliptic = (23.439 - 0.0000004 * numDays) * Angle.DEGREES_TO_RADIANS;\n\n        let declination = Math.asin(Math.sin(obliquityOfTheEcliptic) * Math.sin(eclipticLongitudeRad)) *\n            Angle.RADIANS_TO_DEGREES;\n\n        let rightAscension = Math.atan(Math.cos(obliquityOfTheEcliptic) * Math.tan(eclipticLongitudeRad)) *\n            Angle.RADIANS_TO_DEGREES;\n\n        //compensate for atan result\n        if (eclipticLongitude >= 90 && eclipticLongitude < 270) {\n            rightAscension += 180;\n        }\n        rightAscension = this.normalizeAngle360(rightAscension);\n\n        return {\n            declination: declination,\n            rightAscension: rightAscension\n        };\n    },\n\n    /**\n     * Converts from celestial coordinates (declination and right ascension) to geographic coordinates\n     * (latitude, longitude) for a given julian date\n     * @param {{declination: Number, rightAscension: Number}} celestialLocation\n     * @param {Date} date\n     * @throws {ArgumentError} if celestialLocation or julianDate are missing\n     * @return {{latitude: Number, longitude: Number}} the geographic location\n     */\n    celestialToGeographic: function (celestialLocation, date) {\n        if (!celestialLocation) {\n            throw new ArgumentError(\n                Logger.logMessage(Logger.LEVEL_SEVERE, \"SunPosition\", \"celestialToGeographic\",\n                    \"missingCelestialLocation\"));\n        }\n        if (date instanceof Date === false) {\n            throw new ArgumentError(\n                Logger.logMessage(Logger.LEVEL_SEVERE, \"SunPosition\", \"celestialToGeographic\", \"missingDate\"));\n        }\n\n        let julianDate = this.computeJulianDate(date);\n\n        //number of days (positive or negative) since Greenwich noon, Terrestrial Time, on 1 January 2000 (J2000.0)\n        let numDays = julianDate - 2451545;\n\n        //Greenwich Mean Sidereal Time\n        let GMST = this.normalizeAngle360(280.46061837 + 360.98564736629 * numDays);\n\n        //Greenwich Hour Angle\n        let GHA = this.normalizeAngle360(GMST - celestialLocation.rightAscension);\n\n        let longitude = Angle.normalizedDegreesLongitude(-GHA);\n\n        return {\n            latitude: celestialLocation.declination,\n            longitude: longitude\n        };\n    },\n\n    /**\n     * Computes the julian date from a javascript date object\n     * @param {Date} date\n     * @throws {ArgumentError} if the date is missing\n     * @return {Number} the julian date\n     */\n    computeJulianDate: function (date) {\n        if (date instanceof Date === false) {\n            throw new ArgumentError(\n                Logger.logMessage(Logger.LEVEL_SEVERE, \"SunPosition\", \"computeJulianDate\", \"missingDate\"));\n        }\n\n        let year = date.getUTCFullYear();\n        let month = date.getUTCMonth() + 1;\n        let day = date.getUTCDate();\n        let hour = date.getUTCHours();\n        let minute = date.getUTCMinutes();\n        let second = date.getUTCSeconds();\n\n        let dayFraction = (hour + minute / 60 + second / 3600) / 24;\n\n        if (month <= 2) {\n            year -= 1;\n            month += 12;\n        }\n\n        let A = Math.trunc(year / 100);\n        let B = 2 - A + Math.trunc(A / 4);\n        let JD0h = Math.trunc(365.25 * (year + 4716)) + Math.trunc(30.6001 * (month + 1)) + day + B - 1524.5;\n\n        return JD0h + dayFraction;\n    },\n\n    /**\n     * Restricts an angle to the range [0, 360] degrees, wrapping angles outside the range.\n     * Wrapping takes place as though traversing the edge of a unit circle;\n     * angles less than 0 wrap back to 360, while angles greater than 360 wrap back to 0.\n     *\n     * @param {Number} degrees the angle to wrap in degrees\n     *\n     * @return {Number} the specified angle wrapped to [0, 360] degrees\n     */\n    normalizeAngle360: function(degrees) {\n        let angle = degrees % 360;\n        return angle >= 0 ? angle : (angle < 0 ? 360 + angle : 360 - angle);\n    }\n\n};\n\nexport default SunPosition;","import WorldWind from 'webworldwind-esa';\nimport SunPosition from './SunPosition';\nconst {\n    Angle\n} = WorldWind;\n\nconst Celestial = {\n\n    SUN: 0,\n    MERCURY: 1,\n    VENUS: 2,\n    MARS: 4,\n    JUPITER: 5,\n    SATURN: 6,\n    URANUS: 7,\n    NEPTUNE: 8,\n\n    getCelestialLocation(id, date) {\n        let orbitalElements;\n        const julianDate = SunPosition.computeJulianDate(date);\n        let d = julianDate - 2451543.5;\n        //d = -3543.0;\n\n        switch (id) {\n            case this.SUN:\n                orbitalElements = this.computeSun(d);\n                break;\n\n            case this.MERCURY:\n                orbitalElements = this.computeMercury(d);\n                break;\n\n            case this.VENUS:\n                orbitalElements = this.computeVenus(d);\n                break;\n\n            case this.MARS:\n                orbitalElements = this.computeMars(d);\n                break;\n\n            case this.JUPITER:\n                orbitalElements = this.computeJupiter(d);\n                break;\n\n            case this.SATURN:\n                orbitalElements = this.computeSaturn(d);\n                break;\n\n            case this.URANUS:\n                orbitalElements = this.computeUranus(d);\n                break;\n\n            case this.NEPTUNE:\n                orbitalElements = this.computeNeptune(d);\n                break;\n        }\n\n        return this.computePosition(d, orbitalElements);\n    },\n\n    computeMercury(d) {\n        const N = 48.3313 + 3.24587E-5 * d;\n        const i = 7.0047 + 5.00E-8 * d;\n        const w = 29.1241 + 1.01444E-5 * d;\n        const a = 0.387098;  //(AU)\n        const e = 0.205635 + 5.59E-10 * d;\n        const M = 168.6562 + 4.0923344368 * d;\n\n        return {N, i, w, a, e, M};\n    },\n\n    computeVenus(d) {\n        const N = 76.6799 + 2.46590E-5 * d;\n        const i = 3.3946 + 2.75E-8 * d;\n        const w = 54.8910 + 1.38374E-5 * d;\n        const a = 0.723330;//  (AU)\n        const e = 0.006773 - 1.302E-9 * d;\n        const M = 48.0052 + 1.6021302244 * d;\n\n        return {N, i, w, a, e, M};\n    },\n\n    computeMars(d) {\n        const N = 49.5574 + 2.11081E-5 * d;\n        const i = 1.8497 - 1.78E-8 * d;\n        const w = 286.5016 + 2.92961E-5 * d;\n        const a = 1.523688;  //(AU)\n        const e = 0.093405 + 2.516E-9 * d;\n        const M = 18.6021 + 0.5240207766 * d;\n\n        return {N, i, w, a, e, M};\n    },\n\n    computeJupiter(d) {\n        const N = 100.4542 + 2.76854E-5 * d;\n        const i = 1.3030 - 1.557E-7 * d;\n        const w = 273.8777 + 1.64505E-5 * d;\n        const a = 5.20256;  //(AU)\n        const e = 0.048498 + 4.469E-9 * d;\n        const M = 19.8950 + 0.0830853001 * d;\n\n        return {N, i, w, a, e, M};\n    },\n\n    computeSaturn(d) {\n        const N = 113.6634 + 2.38980E-5 * d;\n        const i = 2.4886 - 1.081E-7 * d;\n        const w = 339.3939 + 2.97661E-5 * d;\n        const a = 9.55475;  //(AU)\n        const e = 0.055546 - 9.499E-9 * d;\n        const M = 316.9670 + 0.0334442282 * d;\n\n        return {N, i, w, a, e, M};\n    },\n\n    computeUranus(d) {\n        const N = 74.0005 + 1.3978E-5 * d;\n        const i = 0.7733 + 1.9E-8 * d;\n        const w = 96.6612 + 3.0565E-5 * d;\n        const a = 19.18171 - 1.55E-8 * d;//  (AU)\n        const e = 0.047318 + 7.45E-9 * d;\n        const M = 142.5905 + 0.011725806 * d;\n\n        return {N, i, w, a, e, M};\n    },\n\n    computeNeptune(d) {\n        const N = 131.7806 + 3.0173E-5 * d;\n        const i = 1.7700 - 2.55E-7 * d;\n        const w = 272.8461 - 6.027E-6 * d;\n        const a = 30.05826 + 3.313E-8 * d;//  (AU)\n        const e = 0.008606 + 2.15E-9 * d;\n        const M = 260.2471 + 0.005995147 * d;\n\n        return {N, i, w, a, e, M};\n    },\n\n    computeSun(d) {\n        const N = 0.0;\n        const i = 0.0;\n        const w = 282.9404 + 4.70935E-5 * d;\n        const a = 1.000000;  //(AU)\n        const e = 0.016709 - 1.151E-9 * d;\n        const M = 356.0470 + 0.9856002585 * d;\n\n        return {N, i, w, a, e, M};\n    },\n\n    computePosition(d, {N, i, w, a, e, M}) {\n        N = SunPosition.normalizeAngle360(N) * Angle.DEGREES_TO_RADIANS;\n        i = SunPosition.normalizeAngle360(i) * Angle.DEGREES_TO_RADIANS;\n        w = SunPosition.normalizeAngle360(w) * Angle.DEGREES_TO_RADIANS;\n        //e = SunPosition.normalizeAngle360(e) * Angle.DEGREES_TO_RADIANS;\n        M = SunPosition.normalizeAngle360(M) * Angle.DEGREES_TO_RADIANS;\n\n        let E = M + e * Math.sin(M) * (1.0 + e * Math.cos(M));\n\n        if (e >= 0.06) {\n            for (var aa = 0; aa < 10; aa++) {\n                var E1 = E - (E - e * Math.sin(E) - M) / (1 - e * Math.cos(E));\n                if (Math.abs(E1 - E) < 0.001) {\n                    E = E1;\n                    break;\n                }\n                E = E1;\n            }\n        }\n\n        const xv = a * (Math.cos(E) - e);\n        const yv = a * (Math.sqrt(1.0 - e * e) * Math.sin(E));\n\n        const v = Math.atan2(yv, xv);\n        const r = Math.sqrt(xv * xv + yv * yv);\n\n        let xh = r * (Math.cos(N) * Math.cos(v + w) - Math.sin(N) * Math.sin(v + w) * Math.cos(i));\n        let yh = r * (Math.sin(N) * Math.cos(v + w) + Math.cos(N) * Math.sin(v + w) * Math.cos(i));\n        let zh = r * (Math.sin(v + w) * Math.sin(i));\n\n        const Epoch = 2000.0;\n        const lon_corr = 3.82394E-5 * (365.2422 * (Epoch - 2000.0) - d) * Angle.DEGREES_TO_RADIANS;\n\n        const lonecl = Math.atan2(yh, xh) + lon_corr;\n        const latecl = Math.atan2(zh, Math.sqrt(xh * xh + yh * yh));\n\n\n        /*** perturbations ***/\n        /*** not implemented ***/\n\n\n        xh = r * Math.cos(lonecl) * Math.cos(latecl);\n        yh = r * Math.sin(lonecl) * Math.cos(latecl);\n        zh = r * Math.sin(latecl);\n\n        let {lonsun, rsun} = this.getLonSun(d, this.computeSun(d));\n        lonsun *= Angle.RADIANS_TO_DEGREES;\n        lonsun = SunPosition.normalizeAngle360(lonsun) * Angle.DEGREES_TO_RADIANS;\n\n        const xs = rsun * Math.cos(lonsun);\n        const ys = rsun * Math.sin(lonsun);\n\n        const xg = xh + xs;\n        const yg = yh + ys;\n        const zg = zh;\n\n        const ecl = SunPosition.normalizeAngle360(23.4393 - 3.563E-7 * d) * Angle.DEGREES_TO_RADIANS;\n\n        const xe = xg;\n        const ye = yg * Math.cos(ecl) - zg * Math.sin(ecl);\n        const ze = yg * Math.sin(ecl) + zg * Math.cos(ecl);\n\n        const ra = SunPosition.normalizeAngle360(Math.atan2(ye, xe) * Angle.RADIANS_TO_DEGREES);\n        const dec = Math.atan2(ze, Math.sqrt(xe * xe + ye * ye)) * Angle.RADIANS_TO_DEGREES;\n\n        return {ra, dec};\n    },\n\n    getLonSun(d, {w, e, M}) {\n        w = SunPosition.normalizeAngle360(w) * Angle.DEGREES_TO_RADIANS;\n        //e = SunPosition.normalizeAngle360(e) * Angle.DEGREES_TO_RADIANS;\n        M = SunPosition.normalizeAngle360(M) * Angle.DEGREES_TO_RADIANS;\n\n        const E = M + e * Math.sin(M) * (1.0 + e * Math.cos(M));\n\n        const xv = Math.cos(E) - e;\n        const yv = Math.sqrt(1.0 - e * e) * Math.sin(E);\n\n        const v = Math.atan2(yv, xv);\n        const rsun = Math.sqrt(xv * xv + yv * yv);\n\n        const lonsun = v + w;\n\n        return {lonsun, rsun};\n    },\n\n};\n\nexport default Celestial;","/**\n * @exports StarFieldProgram\n */\nimport WorldWind from 'webworldwind-esa';\n\nconst {\n    ArgumentError,\n    GpuProgram,\n    Logger,\n    Matrix,\n    Color\n} = WorldWind;\n\n/**\n * Constructs a new program.\n * Initializes, compiles and links this GLSL program with the source code for its vertex and fragment shaders.\n * <p>\n * This method creates WebGL shaders for the program's shader sources and attaches them to a new GLSL program.\n * This method then compiles the shaders and then links the program if compilation is successful.\n * Use the bind method to make the program current during rendering.\n *\n * @alias StarFieldProgram\n * @constructor\n * @augments GpuProgram\n * @classdesc StarFieldProgram is a GLSL program that draws points representing stars.\n * @param {WebGLRenderingContext} gl The current WebGL context.\n * @throws {ArgumentError} If the shaders cannot be compiled, or linking of the compiled shaders into a program\n * fails.\n */\nclass StarFieldProgram extends GpuProgram {\n    constructor(gl) {\n        super(gl, 'attribute vec4 vertexPoint;\\n' +\n\n            'uniform mat4 mvpMatrix;\\n' +\n            //number of days (positive or negative) since Greenwich noon, Terrestrial Time,\n            // on 1 January 2000 (J2000.0)\n            'uniform float numDays;\\n' +\n            'uniform vec2 magnitudeRange;\\n' +\n\n            'varying float magnitudeWeight;\\n' +\n\n            //normalizes an angle between 0.0 and 359.0\n            'float normalizeAngle(float angle) {\\n' +\n            '   float angleDivisions = angle / 360.0;\\n' +\n            '   return 360.0 * (angleDivisions - floor(angleDivisions));\\n' +\n            '}\\n' +\n\n            //transforms declination and right ascension in cartesian coordinates\n            'vec3 computePosition(float dec, float ra) {\\n' +\n            '   float GMST = normalizeAngle(280.46061837 + 360.98564736629 * numDays);\\n' +\n            '   float GHA = normalizeAngle(GMST - ra);\\n' +\n            '   float lon = -GHA + 360.0 * step(180.0, GHA);\\n' +\n            '   float latRad = radians(dec);\\n' +\n            '   float lonRad = radians(lon);\\n' +\n            '   float radCosLat = cos(latRad);\\n' +\n            '   return vec3(radCosLat * sin(lonRad), sin(latRad), radCosLat * cos(lonRad));\\n' +\n            '}\\n' +\n\n            //normalizes a value between 0.0 and 1.0\n            'float normalizeScalar(float value, float minValue, float maxValue){\\n' +\n            '   return (value - minValue) / (maxValue - minValue);\\n' +\n            '}\\n' +\n\n            'void main() {\\n' +\n            '   vec3 vertexPosition = computePosition(vertexPoint.x, vertexPoint.y);\\n' +\n            '   gl_Position = mvpMatrix * vec4(vertexPosition.xyz, 1.0);\\n' +\n            '   gl_Position.z = gl_Position.w - 0.00001;\\n' +\n            '   gl_PointSize = vertexPoint.z;\\n' +\n            '   magnitudeWeight = normalizeScalar(vertexPoint.w, magnitudeRange.x, magnitudeRange.y);\\n' +\n            '}', 'precision mediump float;\\n' +\n\n            'uniform sampler2D textureSampler;\\n' +\n            'uniform int fragMode;\\n' +\n            'uniform vec4 color;\\n' +\n\n            'varying float magnitudeWeight;\\n' +\n\n            'const vec4 white = vec4(1.0, 1.0, 1.0, 1.0);\\n' +\n            'const vec4 grey = vec4(0.5, 0.5, 0.5, 1.0);\\n' +\n\n            'void main() {\\n' +\n            '   if (fragMode == 1) {\\n' +\n            '       gl_FragColor = texture2D(textureSampler, gl_PointCoord);\\n' +\n            '   }\\n' +\n            '   else if (fragMode == 0) {\\n' +\n            //paint the starts in shades of grey, where the brightest star is white and the dimmest star is grey\n            '       gl_FragColor = mix(white, grey, magnitudeWeight);\\n' +\n            '   }\\n' +\n            '   else if (fragMode == 2) {\\n' +\n            '       gl_FragColor = color;\\n' +\n            '   }\\n' +\n            '}', [\"vertexPoint\"]);\n\n        this.FRAG_MODE_MIX_COLOR = 0;\n        this.FRAG_MODE_TEXTURE = 1;\n        this.FRAG_MODE_COLOR = 2;\n\n        /**\n         * The WebGL location for this program's 'vertexPoint' attribute.\n         * @type {Number}\n         * @readonly\n         */\n        this.vertexPointLocation = this.attributeLocation(gl, \"vertexPoint\");\n\n        /**\n         * The WebGL location for this program's 'mvpMatrix' uniform.\n         * @type {WebGLUniformLocation}\n         * @readonly\n         */\n        this.mvpMatrixLocation = this.uniformLocation(gl, \"mvpMatrix\");\n\n        /**\n         * The WebGL location for this program's 'numDays' uniform.\n         * @type {WebGLUniformLocation}\n         * @readonly\n         */\n        this.numDaysLocation = this.uniformLocation(gl, \"numDays\");\n\n        /**\n         * The WebGL location for this program's 'magnitudeRangeLocation' uniform.\n         * @type {WebGLUniformLocation}\n         * @readonly\n         */\n        this.magnitudeRangeLocation = this.uniformLocation(gl, \"magnitudeRange\");\n\n        /**\n         * The WebGL location for this program's 'textureSampler' uniform.\n         * @type {WebGLUniformLocation}\n         * @readonly\n         */\n        this.textureUnitLocation = this.uniformLocation(gl, \"textureSampler\");\n\n        /**\n         * The WebGL location for this program's 'textureEnabled' uniform.\n         * @type {WebGLUniformLocation}\n         * @readonly\n         */\n        this.fragModeLocation = this.uniformLocation(gl, \"fragMode\");\n\n        this.colorLocation = this.uniformLocation(gl, \"color\");\n\n        this.localState = {\n            mvpMatrix: null,\n            numDays: null,\n            magnitudeRange: null,\n            textureUnit: null,\n            fragMode: null,\n            color: null,\n        };\n    }\n\n    /**\n     * Loads the specified matrix as the value of this program's 'mvpMatrix' uniform variable.\n     *\n     * @param {WebGLRenderingContext} gl The current WebGL context.\n     * @param {Matrix} matrix The matrix to load.\n     * @throws {ArgumentError} If the specified matrix is null or undefined.\n     */\n    loadModelviewProjection(gl, matrix) {\n        if (!matrix) {\n            throw new ArgumentError(\n                Logger.logMessage(Logger.LEVEL_SEVERE, \"StarFieldProgram\", \"loadModelviewProjection\", \"missingMatrix\"));\n        }\n\n        let forceLoad = false;\n        if (this.localState.mvpMatrix === null) {\n            forceLoad = true;\n            this.localState.mvpMatrix = Matrix.fromIdentity();\n        }\n\n        if (forceLoad || !this.localState.mvpMatrix.equals(matrix)) {\n            this.loadUniformMatrix(gl, matrix, this.mvpMatrixLocation);\n            this.localState.mvpMatrix.copy(matrix);\n        }\n    }\n\n    /**\n     * Loads the specified number as the value of this program's 'numDays' uniform variable.\n     *\n     * @param {WebGLRenderingContext} gl The current WebGL context.\n     * @param {Number} numDays The number of days (positive or negative) since Greenwich noon, Terrestrial Time,\n     * on 1 January 2000 (J2000.0)\n     * @throws {ArgumentError} If the specified number is null or undefined.\n     */\n    loadNumDays(gl, numDays) {\n        if (numDays == null) {\n            throw new ArgumentError(\n                Logger.logMessage(Logger.LEVEL_SEVERE, \"StarFieldProgram\", \"loadNumDays\", \"missingNumDays\"));\n        }\n        if (this.localState.numDays !== numDays) {\n            gl.uniform1f(this.numDaysLocation, numDays);\n            this.localState.numDays = numDays;\n        }\n    }\n\n    /**\n     * Loads the specified numbers as the value of this program's 'magnitudeRange' uniform variable.\n     *\n     * @param {WebGLRenderingContext} gl The current WebGL context.\n     * @param {Number} minMag\n     * @param {Number} maxMag\n     * @throws {ArgumentError} If the specified numbers are null or undefined.\n     */\n    loadMagnitudeRange(gl, minMag, maxMag) {\n        if (minMag == null) {\n            throw new ArgumentError(\n                Logger.logMessage(Logger.LEVEL_SEVERE, \"StarFieldProgram\", \"loadMagRange\", \"missingMinMag\"));\n        }\n        if (maxMag == null) {\n            throw new ArgumentError(\n                Logger.logMessage(Logger.LEVEL_SEVERE, \"StarFieldProgram\", \"loadMagRange\", \"missingMaxMag\"));\n        }\n        let forceLoad = false;\n        if (this.localState.magnitudeRange === null) {\n            forceLoad = true;\n            this.localState.magnitudeRange = [minMag, maxMag];\n        }\n\n        if (forceLoad || this.localState.magnitudeRange[0] !== minMag || this.localState.magnitudeRange[1] !== maxMag) {\n            gl.uniform2f(this.magnitudeRangeLocation, minMag, maxMag);\n            this.localState.magnitudeRange[0] = minMag;\n            this.localState.magnitudeRange[1] = maxMag;\n        }\n    }\n\n    /**\n     * Loads the specified number as the value of this program's 'textureSampler' uniform variable.\n     * @param {WebGLRenderingContext} gl The current WebGL context.\n     * @param {Number} unit The texture unit.\n     */\n    loadTextureUnit(gl, unit) {\n        if (this.localState.textureUnit !== unit) {\n            gl.uniform1i(this.textureUnitLocation, unit - gl.TEXTURE0);\n            this.localState.textureUnit = unit;\n        }\n    }\n\n    loadFragMode(gl, mode) {\n        if (this.localState.fragMode !== mode) {\n            gl.uniform1i(this.fragModeLocation, mode);\n            this.localState.fragMode = mode;\n        }\n    }\n\n    loadColor(gl, color) {\n        let forceLoad = false;\n        if (this.localState.color === null) {\n            forceLoad = true;\n            this.localState.color = new Color(0, 0, 0, 0);\n        }\n\n        if (forceLoad || !this.localState.color.equals(color)) {\n            this.loadUniformColor(gl, color, this.colorLocation);\n            this.localState.color.copy(color);\n        }\n    }\n}\n\n/**\n * A string that uniquely identifies this program.\n * @type {string}\n * @readonly\n */\nStarFieldProgram.key = \"WorldWindGpuStarFieldFullProgram\";\n\nexport default StarFieldProgram;","/**\n * @exports StarFieldLayer\n */\nimport Celestial from './Celestial';\nimport StarFieldProgram from './StarFieldProgram';\nimport SunPosition from './SunPosition';\n\nimport WorldWind from 'webworldwind-esa';\nconst {\n    Color,\n    Layer,\n    Logger,\n    Matrix,\n    REDRAW_EVENT_TYPE\n} = WorldWind;\n\n\n/**\n * Constructs a layer showing stars and the Sun around the Earth.\n * If used together with the AtmosphereLayer, the StarFieldLayer must be inserted before the AtmosphereLayer.\n *\n * If you want to use your own star data, the file provided must be .json\n * and the fields 'ra', 'dec' and 'vmag' must be present in the metadata.\n * ra and dec must be expressed in degrees.\n *\n * This layer uses J2000.0 as the ref epoch.\n *\n * If the star data .json file is too big, consider enabling gzip compression on your web server.\n * For more info about enabling gzip compression consult the configuration for your web server.\n *\n *\n -- output format : json\n SELECT \"I/239/hip_main\".HIP,  \"I/239/hip_main\".Vmag as vmag, \"I/239/hip_main\".\"_RA.icrs\" as ra,  \"I/239/hip_main\".\"_DE.icrs\" as dec\n FROM \"I/239/hip_main\"\n WHERE \"I/239/hip_main\".Vmag <=6.5\n *\n * @alias StarFieldLayer\n * @constructor\n * @classdesc Provides a layer showing stars, and the Sun around the Earth\n * @param {URL} starDataSource optional url for the stars data\n * @augments Layer\n */\nclass StarFieldLayer extends Layer {\n    constructor(starDataSource) {\n        super('StarField');\n\n        // The StarField Layer is not pickable.\n        this.pickEnabled = false;\n\n        /**\n         * The size of the Sun in pixels.\n         * This can not exceed the maximum allowed pointSize of the GPU.\n         * A warning will be given if the size is too big and the allowed max size will be used.\n         * @type {Number}\n         * @default 128\n         */\n        this.sunSize = 128;\n\n        /**\n         * Indicates weather to show or hide the Sun\n         * @type {Boolean}\n         * @default true\n         */\n        this.showSun = true;\n\n        //Documented in defineProperties below.\n        this._starDataSource = starDataSource || WorldWind.configuration.baseUrl + 'data/stars.json';\n        this._sunImageSource = WorldWind.configuration.baseUrl + 'images/sunTexture.png';\n\n        //Internal use only.\n        //The MVP matrix of this layer.\n        this._matrix = Matrix.fromIdentity();\n\n        //Internal use only.\n        //gpu cache key for the stars vbo.\n        this._starsPositionsVboCacheKey = null;\n\n        //Internal use only.\n        this._numStars = 0;\n\n        //Internal use only.\n        this._starData = null;\n\n        //Internal use only.\n        this._minMagnitude = Number.MAX_VALUE;\n        this._maxMagnitude = Number.MIN_VALUE;\n\n        //Internal use only.\n        //A flag to indicate the star data is currently being retrieved.\n        this._loadStarted = false;\n\n        //Internal use only.\n        this._minScale = 30e6;\n        this._scale = Number.MAX_SAFE_INTEGER || Math.pow(2, 53) - 1;\n        //this._scale = 50e6;\n\n        //Internal use only.\n        this._sunPositionsCacheKey = '';\n        this._sunBufferView = new Float32Array(4);\n\n        //Internal use only.\n        this._MAX_GL_POINT_SIZE = 0;\n\n        this.showPlanets = true;\n\n        const jupiterSize = 32;\n\n        this.planets = [\n            {\n                id: Celestial.MERCURY,\n                url: 'images/Mercury64.png',\n                size: jupiterSize / 4,\n                ra: null,\n                dec: null,\n            },\n            {\n                id: Celestial.VENUS,\n                url: 'images/Venus64.png',\n                size: jupiterSize / 4,\n                ra: null,\n                dec: null,\n            },\n            {\n                id: Celestial.MARS,\n                url: 'images/Mars64.png',\n                size: jupiterSize / 4,\n                ra: null,\n                dec: null,\n            },\n            {\n                id: Celestial.JUPITER,\n                url: 'images/Jupiter64.png',\n                size: jupiterSize,\n                ra: null,\n                dec: null,\n            },\n            {\n                id: Celestial.SATURN,\n                url: 'images/Saturn64.png',\n                size: jupiterSize,\n                ra: null,\n                dec: null,\n            },\n            {\n                id: Celestial.URANUS,\n                url: 'images/Uranus64.png',\n                size: jupiterSize / 2,\n                ra: null,\n                dec: null,\n            },\n            {\n                id: Celestial.NEPTUNE,\n                url: 'images/Neptune64.png',\n                size: jupiterSize / 2,\n                ra: null,\n                dec: null,\n            },\n        ];\n\n        this._planetsBufferView = null;\n\n        this._cacheKeys = {\n            sunPosition: '',\n            planetPositions: '',\n            starPositions: ''\n        };\n    }\n\n    /**\n     * Url for the stars data.\n     * @memberof StarFieldLayer.prototype\n     * @type {URL}\n     */\n    get starDataSource() {\n        return this._starDataSource;\n    }\n    \n    set starDataSource(value) {\n        this._starDataSource = value;\n        this.invalidateStarData();\n    }\n\n    /**\n     * Url for the sun texture image.\n     * @memberof StarFieldLayer.prototype\n     * @type {URL}\n     */\n    get sunImageSource() {\n        return this._sunImageSource;\n    }\n    \n    set sunImageSource(value) {\n        this._sunImageSource = value;\n    }\n\n    // Documented in superclass.\n    doRender(dc) {\n        if (dc.globe.is2D()) {\n            return;\n        }\n\n        if (!this.haveResources(dc)) {\n            this.loadResources(dc);\n            return;\n        }\n\n        this.beginRendering(dc);\n        try {\n            this.doDraw(dc);\n        }\n        finally {\n            this.endRendering(dc);\n        }\n    }\n\n    // Internal. Intentionally not documented.\n    haveResources(dc) {\n        let sunTexture = dc.gpuResourceCache.resourceForKey(this._sunImageSource);\n        let planetTextures = this.planets.every(planet => {\n            const texture = dc.gpuResourceCache.resourceForKey(planet.url);\n            return !!texture;\n        });\n        return (\n            this._starData != null &&\n            sunTexture != null &&\n            planetTextures\n        );\n    }\n\n    // Internal. Intentionally not documented.\n    loadResources(dc) {\n        let gl = dc.currentGlContext;\n        let gpuResourceCache = dc.gpuResourceCache;\n\n        if (!this._starData) {\n            this.fetchStarData();\n        }\n\n        let sunTexture = gpuResourceCache.resourceForKey(this._sunImageSource);\n        if (!sunTexture) {\n            gpuResourceCache.retrieveTexture(gl, this._sunImageSource);\n        }\n\n        this.planets.forEach(planet => {\n            const texture = gpuResourceCache.resourceForKey(planet.url);\n            if (!texture) {\n                gpuResourceCache.retrieveTexture(gl, planet.url);\n            }\n        });\n    }\n\n    // Internal. Intentionally not documented.\n    beginRendering(dc) {\n        let gl = dc.currentGlContext;\n        dc.findAndBindProgram(StarFieldProgram);\n        gl.enableVertexAttribArray(0);\n        gl.depthMask(false);\n    }\n\n    // Internal. Intentionally not documented.\n    doDraw(dc) {\n        this.loadCommonUniforms(dc);\n\n        this.renderStars(dc);\n\n        if (this.showSun) {\n            this.renderSun(dc);\n        }\n\n        if (this.showPlanets) {\n            this.renderPlanets(dc);\n        }\n    }\n\n    // Internal. Intentionally not documented.\n    loadCommonUniforms(dc) {\n        let gl = dc.currentGlContext;\n        let program = dc.currentProgram;\n\n        let mvp = dc.modelviewProjection || dc.navigatorState.modelviewProjection;\n        this._matrix.copy(mvp);\n        this._matrix.multiplyByScale(this._scale, this._scale, this._scale);\n\n        program.loadModelviewProjection(gl, this._matrix);\n\n        //this subtraction does not work properly on the GPU, it must be done on the CPU\n        //possibly due to precision loss\n        //number of days (positive or negative) since Greenwich noon, Terrestrial Time, on 1 January 2000 (J2000.0)\n        let julianDate = SunPosition.computeJulianDate(this.time || new Date());\n        program.loadNumDays(gl, julianDate - 2451545.0);\n    }\n\n    // Internal. Intentionally not documented.\n    renderStars(dc) {\n        let gl = dc.currentGlContext;\n        let gpuResourceCache = dc.gpuResourceCache;\n        let program = dc.currentProgram;\n\n        if (!this._starsPositionsVboCacheKey) {\n            this._starsPositionsVboCacheKey = gpuResourceCache.generateCacheKey();\n        }\n        let vboId = gpuResourceCache.resourceForKey(this._starsPositionsVboCacheKey);\n        if (!vboId) {\n            vboId = gl.createBuffer();\n            let positions = this.createStarsGeometry();\n            gpuResourceCache.putResource(this._starsPositionsVboCacheKey, vboId, positions.length * 4);\n            gl.bindBuffer(gl.ARRAY_BUFFER, vboId);\n            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(positions), gl.STATIC_DRAW);\n        }\n        else {\n            gl.bindBuffer(gl.ARRAY_BUFFER, vboId);\n        }\n        dc.frameStatistics.incrementVboLoadCount(1);\n\n        gl.vertexAttribPointer(0, 4, gl.FLOAT, false, 0, 0);\n\n        program.loadMagnitudeRange(gl, this._minMagnitude, this._maxMagnitude);\n        program.loadFragMode(gl, program.FRAG_MODE_MIX_COLOR);\n\n        gl.drawArrays(gl.POINTS, 0, this._numStars);\n    }\n\n    // Internal. Intentionally not documented.\n    renderPlanets(dc) {\n        let gl = dc.currentGlContext;\n        let program = dc.currentProgram;\n        let gpuResourceCache = dc.gpuResourceCache;\n\n        if (!this._MAX_GL_POINT_SIZE) {\n            this._MAX_GL_POINT_SIZE = gl.getParameter(gl.ALIASED_POINT_SIZE_RANGE)[1];\n        }\n        if (this.sunSize > this._MAX_GL_POINT_SIZE) {\n            Logger.log(Logger.LEVEL_WARNING, 'StarFieldLayer - sunSize is to big, max size allowed is: ' +\n                this._MAX_GL_POINT_SIZE);\n        }\n\n        this.planets.forEach(planet => {\n            const {ra, dec} = Celestial.getCelestialLocation(planet.id, this.time || new Date());\n            planet.ra = ra;\n            planet.dec = dec;\n        }, this);\n\n        if (!this._planetsBufferView) {\n            this._planetsBufferView = new Float32Array(this.planets.length * 4);\n        }\n\n        for (let i = 0; i < this.planets.length; i++) {\n            let planet = this.planets[i];\n            this._planetsBufferView[i * 4 + 0] = planet.dec;\n            this._planetsBufferView[i * 4 + 1] = planet.ra;\n            this._planetsBufferView[i * 4 + 2] = Math.min(planet.size, this._MAX_GL_POINT_SIZE);\n            this._planetsBufferView[i * 4 + 3] = 1;\n        }\n\n        if (!this._planetsPositionsVboCacheKey) {\n            this._planetsPositionsVboCacheKey = gpuResourceCache.generateCacheKey();\n        }\n        let vboId = gpuResourceCache.resourceForKey(this._planetsPositionsVboCacheKey);\n        if (!vboId) {\n            vboId = gl.createBuffer();\n            gpuResourceCache.putResource(this._planetsPositionsVboCacheKey, vboId, this._planetsBufferView.length * 4);\n            gl.bindBuffer(gl.ARRAY_BUFFER, vboId);\n            gl.bufferData(gl.ARRAY_BUFFER, this._planetsBufferView, gl.DYNAMIC_DRAW);\n        }\n        else {\n            gl.bindBuffer(gl.ARRAY_BUFFER, vboId);\n            gl.bufferSubData(gl.ARRAY_BUFFER, 0, this._planetsBufferView);\n        }\n        dc.frameStatistics.incrementVboLoadCount(1);\n        gl.vertexAttribPointer(0, 4, gl.FLOAT, false, 0, 0);\n\n        program.loadFragMode(gl, program.FRAG_MODE_TEXTURE);\n\n        for (let i = 0; i < this.planets.length; i++) {\n            let textureSrc = this.planets[i].url;\n            let texture = dc.gpuResourceCache.resourceForKey(textureSrc);\n            texture.bind(dc);\n            gl.drawArrays(gl.POINTS, i, 1);\n        }\n    }\n\n    // Internal. Intentionally not documented.\n    renderSun(dc) {\n        let gl = dc.currentGlContext;\n        let program = dc.currentProgram;\n        let gpuResourceCache = dc.gpuResourceCache;\n\n        if (!this._MAX_GL_POINT_SIZE) {\n            this._MAX_GL_POINT_SIZE = gl.getParameter(gl.ALIASED_POINT_SIZE_RANGE)[1];\n        }\n        if (this.sunSize > this._MAX_GL_POINT_SIZE) {\n            Logger.log(Logger.LEVEL_WARNING, 'StarFieldLayer - sunSize is to big, max size allowed is: ' +\n                this._MAX_GL_POINT_SIZE);\n        }\n\n        let sunCelestialLocation = SunPosition.getAsCelestialLocation(this.time || new Date());\n\n        this._sunBufferView[0] = sunCelestialLocation.declination;\n        this._sunBufferView[1] = sunCelestialLocation.rightAscension;\n        this._sunBufferView[2] = Math.min(this.sunSize, this._MAX_GL_POINT_SIZE);\n        this._sunBufferView[3] = 1;\n\n        if (!this._sunPositionsCacheKey) {\n            this._sunPositionsCacheKey = gpuResourceCache.generateCacheKey();\n        }\n        let vboId = gpuResourceCache.resourceForKey(this._sunPositionsCacheKey);\n        if (!vboId) {\n            vboId = gl.createBuffer();\n            gpuResourceCache.putResource(this._sunPositionsCacheKey, vboId, this._sunBufferView.length * 4);\n            gl.bindBuffer(gl.ARRAY_BUFFER, vboId);\n            gl.bufferData(gl.ARRAY_BUFFER, this._sunBufferView, gl.DYNAMIC_DRAW);\n        }\n        else {\n            gl.bindBuffer(gl.ARRAY_BUFFER, vboId);\n            gl.bufferSubData(gl.ARRAY_BUFFER, 0, this._sunBufferView);\n        }\n        dc.frameStatistics.incrementVboLoadCount(1);\n        gl.vertexAttribPointer(0, 4, gl.FLOAT, false, 0, 0);\n\n        program.loadFragMode(gl, program.FRAG_MODE_TEXTURE);\n\n        let sunTexture = dc.gpuResourceCache.resourceForKey(this._sunImageSource);\n        sunTexture.bind(dc);\n\n        gl.drawArrays(gl.POINTS, 0, 1);\n    }\n\n    // Internal. Intentionally not documented.\n    endRendering(dc) {\n        let gl = dc.currentGlContext;\n        gl.depthMask(true);\n        gl.disableVertexAttribArray(0);\n    }\n\n    // Internal. Intentionally not documented.\n    fetchStarData() {\n        if (this._loadStarted) {\n            return;\n        }\n\n        this._loadStarted = true;\n        let self = this;\n        let xhr = new XMLHttpRequest();\n\n        xhr.onload = function () {\n            if (this.status >= 200 && this.status < 300) {\n                try {\n                    self._starData = JSON.parse(this.response);\n                    self.sendRedrawRequest();\n                }\n                catch (e) {\n                    Logger.log(Logger.LEVEL_SEVERE, 'StarFieldLayer unable to parse JSON for star data ' +\n                        e.toString());\n                }\n            }\n            else {\n                Logger.log(Logger.LEVEL_SEVERE, 'StarFieldLayer unable to fetch star data. Status: ' +\n                    this.status + ' ' + this.statusText);\n            }\n            self._loadStarted = false;\n        };\n\n        xhr.onerror = function () {\n            Logger.log(Logger.LEVEL_SEVERE, 'StarFieldLayer unable to fetch star data');\n            self._loadStarted = false;\n        };\n\n        xhr.ontimeout = function () {\n            Logger.log(Logger.LEVEL_SEVERE, 'StarFieldLayer fetch star data has timeout');\n            self._loadStarted = false;\n        };\n\n        xhr.open('GET', this._starDataSource, true);\n        xhr.send();\n    }\n\n    // Internal. Intentionally not documented.\n    createStarsGeometry() {\n        let indexes = this.parseStarsMetadata(this._starData.metadata);\n\n        if (indexes.raIndex === -1) {\n            throw new Error(\n                Logger.logMessage(Logger.LEVEL_SEVERE, 'StarFieldLayer', 'createStarsGeometry',\n                    'Missing ra field in star data.'));\n        }\n        if (indexes.decIndex === -1) {\n            throw new Error(\n                Logger.logMessage(Logger.LEVEL_SEVERE, 'StarFieldLayer', 'createStarsGeometry',\n                    'Missing dec field in star data.'));\n        }\n        if (indexes.magIndex === -1) {\n            throw new Error(\n                Logger.logMessage(Logger.LEVEL_SEVERE, 'StarFieldLayer', 'createStarsGeometry',\n                    'Missing vmag field in star data.'));\n        }\n\n        let data = this._starData.data;\n        let positions = [];\n\n        this._minMagnitude = Number.MAX_VALUE;\n        this._maxMagnitude = Number.MIN_VALUE;\n\n        for (let i = 0, len = data.length; i < len; i++) {\n            let starInfo = data[i];\n            let declination = starInfo[indexes.decIndex]; //for latitude\n            let rightAscension = starInfo[indexes.raIndex]; //for longitude\n            let magnitude = starInfo[indexes.magIndex];\n            let pointSize = magnitude < 2 ? 2 : 1;\n            positions.push(declination, rightAscension, pointSize, magnitude);\n\n            this._minMagnitude = Math.min(this._minMagnitude, magnitude);\n            this._maxMagnitude = Math.max(this._maxMagnitude, magnitude);\n        }\n        this._numStars = Math.floor(positions.length / 4);\n\n        return positions;\n    }\n\n    // Internal. Intentionally not documented.\n    parseStarsMetadata(metadata) {\n        let raIndex = -1,\n            decIndex = -1,\n            magIndex = -1;\n        for (let i = 0, len = metadata.length; i < len; i++) {\n            let starMetaInfo = metadata[i];\n            if (starMetaInfo.name === 'ra') {\n                raIndex = i;\n            }\n            if (starMetaInfo.name === 'dec') {\n                decIndex = i;\n            }\n            if (starMetaInfo.name === 'vmag') {\n                magIndex = i;\n            }\n        }\n        return {\n            raIndex: raIndex,\n            decIndex: decIndex,\n            magIndex: magIndex\n        };\n    }\n\n    // Internal. Intentionally not documented.\n    invalidateStarData() {\n        this._starData = null;\n        this._starsPositionsVboCacheKey = null;\n    }\n\n    // Internal. Intentionally not documented.\n    sendRedrawRequest() {\n        let e = document.createEvent('Event');\n        e.initEvent(REDRAW_EVENT_TYPE, true, true);\n        window.dispatchEvent(e);\n    }\n}\n\nexport default StarFieldLayer;\n","import WorldWind from 'webworldwind-esa';\nconst {\n    Color\n} = WorldWind;\n\nconst satConfig = [\n    {\n        key: 's1a',\n        name: 'SENTINEL-1A',\n        shortName: 'S-1A',\n        satIndex: 0,\n        swathTypes: ['black', 'red', 'green', 'white'],\n        swathColors: [\n            Color.colorFromKmlHex('ff000000'), //black\n            Color.colorFromKmlHex('ff0000ff'), //red\n            Color.colorFromKmlHex('ff00ff00'), //green\n            Color.colorFromKmlHex('ffffffff')  //white\n        ],\n        swatModes: ['IW', 'EW', 'SM'],\n        // tleLineOne: '1 39634U 14016A   18124.03591006  .00000001  00000-0  10014-4 0  9998',\n        // tleLineTwo: '2 39634  98.1819 132.0838 0001369  78.7198 281.4156 14.59198520217480',\n        tleLineOne: '1 39634U 14016A   22206.03053888  .00000001  00000+0  98653-5 0  9990',\n        tleLineTwo: '2 39634  98.1828 213.0548 0001302  81.4946 278.6403 14.59197888442509',\n        hasModel: true,\n        filePath: './satellites/sentinel1/s1.json',\n        rotations: {\n            x: 0,\n            y: 0,\n            z: 0,\n            headingAxis: [0, 0, 1],\n            headingAdd: -90,\n            headingMultiply: 1\n        },\n        preRotations: {\n            x: 0,\n            y: 0,\n            z: 0\n        },\n        scale: 500000,\n        translations: {\n            x: -0.1,\n            y: -0.1,\n            z: 0\n        },\n        ignoreLocalTransforms: true,\n        launchDate: new Date('2014-04-03T21:02:00.000Z'),\n    },\n    {\n        key: 's2a',\n        name: 'SENTINEL-2A',\n        shortName: 'S-2A',\n        satIndex: 1,\n        swathTypes: ['red', 'purple', 'white', 'darkGrey', 'green', 'greener'],\n        swathColors: [\n            Color.colorFromKmlHex('ff0000ff'), //red\n            Color.colorFromKmlHex('ffff00ff'), //purple\n            Color.colorFromKmlHex('ffffffff'), //white\n            Color.colorFromKmlHex('ff7f7f7f'), //dark grey\n            Color.colorFromKmlHex('ff00ff00'),  //green\n            Color.colorFromKmlHex('ff00fff7')  //greener\n        ],\n        swatModes: ['NOBS'],\n        tleLineOne: '1 40697U 15028A   22209.03279834  .00000059  00000+0  39204-4 0  9998',\n        tleLineTwo: '2 40697  98.5679 283.2380 0001239  91.6336 268.4979 14.30822892370656',\n        hasModel: true,\n        filePath: './satellites/senti2version6/s2.json',\n        rotations: {\n            x: 0,\n            y: 0,\n            z: 0,\n            headingAxis: [0, 0, 1],\n            headingAdd: -90,\n            headingMultiply: 1\n        },\n        preRotations: {\n            x: 0,\n            y: 0,\n            z: 0\n        },\n        scale: 1000000,\n        translations: {\n            x: 0.1,\n            y: 0.385,\n            z: 0.02\n        },\n        ignoreLocalTransforms: true,\n        launchDate: new Date('2015-06-23T01:52:00.000Z'),\n    },\n    {\n        key: 's3a',\n        name: 'SENTINEL-3A',\n        shortName: 'S-3A',\n        satIndex: 2,\n        tleLineOne: '1 41335U 16011A   22209.15666111  .00000036  00000+0  32851-4 0  9998',\n        tleLineTwo: '2 41335  98.6209 275.8640 0001147  97.0294 263.1017 14.26737212335576',\n        hasModel: true,\n        filePath: './satellites/Sentinel3/s3.json',\n        rotations: {\n            x: 0, //0\n            y: 0, //180\n            z: 0, //165\n            headingAxis: [0, 0, 1], //0,0,1\n            headingAdd: 180, //-20\n            headingMultiply: 1 //1\n        },\n        preRotations: {\n            x: 0,\n            y: 180,\n            z: 0\n        },\n        scale: 1000000,\n        translations: {\n            x: 0.01, //-0.01\n            y: 1.98, //1.9\n            z: 0.07 //-0.07\n        },\n        ignoreLocalTransforms: true,\n        launchDate: new Date('2016-02-16T17:57:00.000Z'),\n    },\n    {\n        key: 's1b',\n        name: 'SENTINEL-1B',\n        shortName: 'S-1B',\n        satIndex: 3,\n        swathTypes: ['black', 'red', 'green', 'white'],\n        swathColors: [\n            Color.colorFromKmlHex('ff000000'), //black\n            Color.colorFromKmlHex('ff0000ff'), //red\n            Color.colorFromKmlHex('ff00ff00'), //green\n            Color.colorFromKmlHex('ffffffff')  //white\n        ],\n        swatModes: ['IW', 'EW', 'SM'],\n        tleLineOne: '1 41456U 16025A   22209.21862431  .00000042  00000+0  18606-4 0  9996',\n        tleLineTwo: '2 41456  98.1829 216.0238 0001369  88.6708 271.4653 14.59198877333137',\n        hasModel: true,\n        filePath: './satellites/sentinel1/s1.json',\n        rotations: {\n            x: 0,\n            y: 0,\n            z: 0,\n            headingAxis: [0, 0, 1],\n            headingAdd: -90,\n            headingMultiply: 1\n        },\n        preRotations: {\n            x: 0,\n            y: 0,\n            z: 0\n        },\n        scale: 500000,\n        translations: {\n            x: -0.1,\n            y: -0.1,\n            z: 0\n        },\n        ignoreLocalTransforms: true,\n        launchDate: new Date('2016-04-25T21:02:00.000Z'),\n        retirementDate: new Date('2022-04-01T21:55:00.000Z'),\n    },\n    {\n        key: 's2b',\n        name: 'SENTINEL-2B',\n        shortName: 'S-2B',\n        satIndex: 4,\n        swathTypes: ['blue'],\n        swathColors: [\n            Color.colorFromKmlHex('ffffff00'),\n        ],\n        swatModes: ['NOBS'],\n        tleLineOne: '1 42063U 17013A   22209.13764023  .00000067  00000+0  42146-4 0  9991',\n        tleLineTwo: '2 42063  98.5689 283.3111 0001478  92.7207 267.4142 14.30818304281580',\n        groundPosition: {latitude: 5.2079, longitude: -52.7724, altitude: 0},\n        hasModel: true,\n        filePath: './satellites/senti2version6/s2.json',\n        rotations: {\n            x: 0,\n            y: 0,\n            z: 0,\n            headingAxis: [0, 0, 1],\n            headingAdd: -90,\n            headingMultiply: 1\n        },\n        preRotations: {\n            x: 0,\n            y: 0,\n            z: 0\n        },\n        scale: 1000000,\n        translations: {\n            x: 0.1,\n            y: 0.385,\n            z: 0.02\n        },\n        ignoreLocalTransforms: true,\n        launchDate: new Date('2017-03-07T01:49:00.000Z'),\n    },\n    {\n        key: 's5p',\n        name: 'SENTINEL-5P',\n        shortName: 'S-5P',\n        satIndex: 5,\n        swathTypes: [],\n        swathColors: [],\n\n        tleLineOne: '1 42969U 17064A   22208.78956647 -.00000001  00000+0  20275-4 0  9995',\n        tleLineTwo: '2 42969  98.7323 147.9939 0001240  83.7357 276.3960 14.19543785248044',\n\n        groundPosition: {latitude: 62.927860, longitude: 40.574830, altitude: 0},\n        hasModel: true,\n        filePath: './satellites/sentinel5p/s5p.json',\n        rotations: {\n            x: 0,\n            y: 0,\n            z: 0,\n            headingAxis: [0, 0, 1],\n            headingAdd: -90,\n            headingMultiply: 1\n        },\n        preRotations: {\n            x: 180 + 30,\n            y: 0,\n            z: 0\n        },\n        scale: 70000,\n        translations: {\n            x: 0.5,\n            y: 0.4,\n            z: -1.2\n        },\n        ignoreLocalTransforms: true,\n        launchDate: new Date('2017-10-13T09:27:00.000Z'),\n    },\n    {\n        key: 's3b',\n        name: 'SENTINEL-3B',\n        shortName: 'S-3B',\n        satIndex: 6,\n        tleLineOne: '1 43437U 18039A   22208.77883229  .00000033  00000+0  31691-4 0  9991',\n        tleLineTwo: '2 43437  98.6268 275.5208 0001599 102.2196 257.9163 14.26737935221584',\n        groundPosition: {\n            latitude: 62.925556,\n            longitude: 40.577778,\n            altitude: 0,\n        },\n        hasModel: true,\n        filePath: 'satellites/Sentinel3/s3.json',\n        rotations: {\n            x: 0, //0\n            y: 0, //180\n            z: 0, //165\n            headingAxis: [0, 0, 1], //0,0,1\n            headingAdd: 180, //-20\n            headingMultiply: 1 //1\n        },\n        preRotations: {\n            x: 0,\n            y: 180,\n            z: 0\n        },\n        scale: 1000000,\n        translations: {\n            x: 0.01, //-0.01\n            y: 1.98, //1.9\n            z: 0.07 //-0.07\n        },\n        ignoreLocalTransforms: true,\n        launchDate: new Date('2018-04-25T17:57:00.000Z'),\n    },\n    {\n        key: 'env',\n        name: 'ENVISAT',\n        shortName: 'Envisat',\n        satIndex: 0,\n        swathTypes: ['black', 'red', 'green', 'white'],\n        swathColors: [\n            Color.colorFromKmlHex('ff000000'), //black\n            Color.colorFromKmlHex('ff0000ff'), //red\n            Color.colorFromKmlHex('ff00ff00'), //green\n            Color.colorFromKmlHex('ffffffff')  //white\n        ],\n        swatModes: ['IW', 'EW', 'SM'],\n        // tleLineOne: '1 39634U 14016A   18124.03591006  .00000001  00000-0  10014-4 0  9998',\n        // tleLineTwo: '2 39634  98.1819 132.0838 0001369  78.7198 281.4156 14.59198520217480',\n        tleLineOne: '1 27386U 02009A   22208.94689716  .00000035  00000+0  24922-4 0  9991',\n        tleLineTwo: '2 27386  98.1855 188.1604 0001389  88.0150 331.3538 14.38141701 69354',\n        hasModel: true,\n        filePath: './satellites/sentinel1/s1.json',\n        rotations: {\n            x: 0,\n            y: 0,\n            z: 0,\n            headingAxis: [0, 0, 1],\n            headingAdd: -90,\n            headingMultiply: 1\n        },\n        preRotations: {\n            x: 0,\n            y: 0,\n            z: 0\n        },\n        scale: 500000,\n        translations: {\n            x: -0.1,\n            y: -0.1,\n            z: 0\n        },\n        ignoreLocalTransforms: true,\n        launchDate: new Date('2002-03-01T21:02:00.000Z'),\n        retirementDate: new Date('2012-05-09T21:55:00.000Z'),\n\n    }\n];\n\nexport const getSatConfigByKey = (satKey) => {\n    return satConfig.find((s) => s.key === satKey);\n};\n\n\nexport default satConfig;","/*\n * Copyright 2003-2006, 2009, 2017, United States Government, as represented by the Administrator of the\n * National Aeronautics and Space Administration. All rights reserved.\n *\n * The NASAWorldWind/WebWorldWind platform is licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @exports ColladaScene\n */\nimport WorldWind from 'webworldwind-esa';\n\nconst {\n    ArgumentError,\n    BasicTextureProgram,\n    Color,\n    Logger,\n    Matrix,\n    Position,\n    PickedObject,\n    Renderable,\n    Vec3\n} = WorldWind;\n\n\n/**\n * Constructs a collada scene\n * @alias ColladaScene\n * @constructor\n * @augments Renderable\n * @classdesc Represents a scene. A scene is a collection of nodes with meshes, materials and textures.\n * @param {Position} position The scene's geographic position.\n * @param {Object} sceneData The scene's data containing the nodes, meshes, materials, textures and other\n * info needed to render the scene.\n */\nvar ColladaScene = function (position, sceneData) {\n    if (!position) {\n        throw new ArgumentError(\n            Logger.logMessage(Logger.LEVEL_SEVERE, \"ColladaScene\", \"constructor\", \"missingPosition\"));\n    }\n\n    Renderable.call(this);\n\n    // Documented in defineProperties below.\n    this._position = position;\n\n    // Documented in defineProperties below.\n    this._nodes = [];\n    this._meshes = {};\n    this._materials = {};\n    this._images = {};\n    this._upAxis = '';\n    this._dirPath = '';\n\n    // Documented in defineProperties below.\n    this._xRotation = 0;\n    this._yRotation = 0;\n    this._zRotation = 0;\n\n    this.preX = 0;\n    this.preY = 0;\n    this.preZ = 0;\n\n    // Documented in defineProperties below.\n    this._xTranslation = 0;\n    this._yTranslation = 0;\n    this._zTranslation = 0;\n\n    // Documented in defineProperties below.\n    this._scale = 1;\n\n    // Documented in defineProperties below.\n    this._altitudeMode = WorldWind.ABSOLUTE;\n\n    // Documented in defineProperties below.\n    this._localTransforms = true;\n\n    // Documented in defineProperties below.\n    this._useTexturePaths = true;\n\n    // Documented in defineProperties below.\n    this._nodesToHide = [];\n    this._hideNodes = false;\n\n    // Documented in defineProperties below.\n    this._placePoint = new Vec3(0, 0, 0);\n\n    // Documented in defineProperties below.\n    this._transformationMatrix = Matrix.fromIdentity();\n    this._mvpMatrix = Matrix.fromIdentity();\n\n    // Documented in defineProperties below.\n    this._normalTransformMatrix = Matrix.fromIdentity();\n    this._normalMatrix = Matrix.fromIdentity();\n    this._texCoordMatrix = Matrix.fromIdentity().setToUnitYFlip();\n\n    //Internal. Intentionally not documented.\n    this._entities = [];\n\n    //Internal. Intentionally not documented.\n    this._activeTexture = null;\n\n    //Internal. Intentionally not documented.\n    this._tmpVector = new Vec3(0, 0, 0);\n    this._tmpColor = new Color(1, 1, 1, 1);\n\n    //Internal. Intentionally not documented.\n    this._vboCacheKey = '';\n    this._iboCacheKey = '';\n\n    this.setSceneData(sceneData);\n};\n\nColladaScene.prototype = Object.create(Renderable.prototype);\nColladaScene.prototype.constructor = ColladaScene;\n\nObject.defineProperties(ColladaScene.prototype, {\n\n    /**\n     * The scene's geographic position.\n     * @memberof ColladaScene.prototype\n     * @type {Position}\n     */\n    position: {\n        get: function () {\n            return this._position;\n        },\n        set: function (value) {\n            this._position = value;\n        }\n    },\n\n    /**\n     * An array of nodes extracted from the collada file.\n     * @memberof ColladaScene.prototype\n     * @type {ColladaNode[]}\n     */\n    nodes: {\n        get: function () {\n            return this._nodes;\n        },\n        set: function (value) {\n            this._nodes = value;\n        }\n    },\n\n    /**\n     * An object with meshes extracted from the collada file.\n     * @memberof ColladaScene.prototype\n     * @type {{ColladaMesh}}\n     */\n    meshes: {\n        get: function () {\n            return this._meshes;\n        },\n        set: function (value) {\n            this._meshes = value;\n        }\n    },\n\n    /**\n     * An object with materials and their effects extracted from the collada file.\n     * @memberof ColladaScene.prototype\n     * @type {ColladaMaterial}\n     */\n    materials: {\n        get: function () {\n            return this._materials;\n        },\n        set: function (value) {\n            this._materials = value;\n        }\n    },\n\n    /**\n     * An object with images extracted from the collada file.\n     * @memberof ColladaScene.prototype\n     * @type {ColladaImage}\n     */\n    images: {\n        get: function () {\n            return this._images;\n        },\n        set: function (value) {\n            this._images = value;\n        }\n    },\n\n    /**\n     * The up axis of the collada model extracted from the collada file.\n     * @memberof ColladaScene.prototype\n     * @type {String}\n     */\n    upAxis: {\n        get: function () {\n            return this._upAxis;\n        },\n        set: function (value) {\n            this._upAxis = value;\n        }\n    },\n\n    /**\n     * The path to the directory of the collada file.\n     * @memberof ColladaScene.prototype\n     * @type {String}\n     */\n    dirPath: {\n        get: function () {\n            return this._dirPath;\n        },\n        set: function (value) {\n            this._dirPath = value;\n        }\n    },\n\n    /**\n     * The scene's rotation angle in degrees for the x axis.\n     * @memberof ColladaScene.prototype\n     * @type {Number}\n     */\n    xRotation: {\n        get: function () {\n            return this._xRotation;\n        },\n        set: function (value) {\n            this._xRotation = value;\n        }\n    },\n\n    /**\n     * The scene's rotation angle in degrees for the x axis.\n     * @memberof ColladaScene.prototype\n     * @type {Number}\n     */\n    yRotation: {\n        get: function () {\n            return this._yRotation;\n        },\n        set: function (value) {\n            this._yRotation = value;\n        }\n    },\n\n    /**\n     * The scene's rotation angle in degrees for the x axis.\n     * @memberof ColladaScene.prototype\n     * @type {Number}\n     */\n    zRotation: {\n        get: function () {\n            return this._zRotation;\n        },\n        set: function (value) {\n            this._zRotation = value;\n        }\n    },\n\n    /**\n     * The scene's translation for the x axis.\n     * @memberof ColladaScene.prototype\n     * @type {Number}\n     */\n    xTranslation: {\n        get: function () {\n            return this._xTranslation;\n        },\n        set: function (value) {\n            this._xTranslation = value;\n        }\n    },\n\n    /**\n     * The scene's translation for the y axis.\n     * @memberof ColladaScene.prototype\n     * @type {Number}\n     */\n    yTranslation: {\n        get: function () {\n            return this._yTranslation;\n        },\n        set: function (value) {\n            this._yTranslation = value;\n        }\n    },\n\n    /**\n     * The scene's translation for the z axis.\n     * @memberof ColladaScene.prototype\n     * @type {Number}\n     */\n    zTranslation: {\n        get: function () {\n            return this._zTranslation;\n        },\n        set: function (value) {\n            this._zTranslation = value;\n        }\n    },\n\n    /**\n     * The scene's scale.\n     * @memberof ColladaScene.prototype\n     * @type {Number}\n     */\n    scale: {\n        get: function () {\n            return this._scale;\n        },\n        set: function (value) {\n            this._scale = value;\n        }\n    },\n\n    /**\n     * The scene's Cartesian point on the globe for the specified position.\n     * @memberof ColladaScene.prototype\n     * @type {Vec3}\n     */\n    placePoint: {\n        get: function () {\n            return this._placePoint;\n        },\n        set: function (value) {\n            this._placePoint = value;\n        }\n    },\n\n    /**\n     * The scene's altitude mode. May be one of\n     * <ul>\n     *  <li>[WorldWind.ABSOLUTE]{@link WorldWind#ABSOLUTE}</li>\n     *  <li>[WorldWind.RELATIVE_TO_GROUND]{@link WorldWind#RELATIVE_TO_GROUND}</li>\n     *  <li>[WorldWind.CLAMP_TO_GROUND]{@link WorldWind#CLAMP_TO_GROUND}</li>\n     * </ul>\n     * @default WorldWind.ABSOLUTE\n     * @memberof ColladaScene.prototype\n     * @type {String}\n     */\n    altitudeMode: {\n        get: function () {\n            return this._altitudeMode;\n        },\n        set: function (value) {\n            this._altitudeMode = value;\n        }\n    },\n\n    /**\n     * The scene's transformation matrix containing the scale, rotations and translations\n     * @memberof ColladaScene.prototype\n     * @type {Matrix}\n     */\n    transformationMatrix: {\n        get: function () {\n            return this._transformationMatrix;\n        },\n        set: function (value) {\n            this._transformationMatrix = value;\n        }\n    },\n\n    /**\n     * The scene's normal matrix\n     * @memberof ColladaScene.prototype\n     * @type {Matrix}\n     */\n    normalMatrix: {\n        get: function () {\n            return this._normalMatrix;\n        },\n        set: function (value) {\n            this._normalMatrix = value;\n        }\n    },\n\n    /**\n     * Force the use of the nodes transformation info. Some 3d software may break the transformations when\n     * importing/exporting models to collada format. Set to false to ignore the the nodes transformation.\n     * Only use this option if the model does not render properly.\n     * @memberof ColladaScene.prototype\n     * @default true\n     * @type {Boolean}\n     */\n    localTransforms: {\n        get: function () {\n            return this._localTransforms;\n        },\n        set: function (value) {\n            this._localTransforms = value;\n        }\n    },\n\n    /**\n     * Force the use of the texture path specified in the collada file. Set to false to ignore the paths of the\n     * textures in the collada file and instead get the textures from the same dir as the collada file.\n     * @memberof ColladaScene.prototype\n     * @default true\n     * @type {Boolean}\n     */\n    useTexturePaths: {\n        get: function () {\n            return this._useTexturePaths;\n        },\n        set: function (value) {\n            this._useTexturePaths = value;\n        }\n    },\n\n    /**\n     * An array of node id's to not render.\n     * @memberof ColladaScene.prototype\n     * @type {String[]}\n     */\n    nodesToHide: {\n        get: function () {\n            return this._nodesToHide;\n        },\n        set: function (value) {\n            this._nodesToHide = value;\n        }\n    },\n\n    /**\n     * Set to true to force the renderer to not draw the nodes passed to the nodesToHide list.\n     * @memberof ColladaScene.prototype\n     * @default false\n     * @type {Boolean}\n     */\n    hideNodes: {\n        get: function () {\n            return this._hideNodes;\n        },\n        set: function (value) {\n            this._hideNodes = value;\n        }\n    }\n\n});\n\n// Internal. Intentionally not documented.\nColladaScene.prototype.setSceneData = function (sceneData) {\n    if (sceneData) {\n        this._nodes = sceneData.root.children;\n        this._meshes = sceneData.meshes;\n        this._materials = sceneData.materials;\n        this._images = sceneData.images;\n        this._upAxis = sceneData.metadata.up_axis;\n        this._dirPath = sceneData.dirPath;\n\n        this.flattenModel();\n    }\n};\n\n// Internal. Intentionally not documented.\nColladaScene.prototype.flattenModel = function () {\n    for (var i = 0, nodesLen = this._nodes.length; i < nodesLen; i++) {\n        this.flattenNode(this._nodes[i]);\n    }\n\n    this._entities.sort(function (a, b) {\n        var va = (a.imageKey === null) ? \"\" : \"\" + a,\n            vb = (b.imageKey === null) ? \"\" : \"\" + b;\n        return va > vb ? 1 : (va === vb ? 0 : -1);\n    });\n};\n\n// Internal. Intentionally not documented.\nColladaScene.prototype.flattenNode = function (node) {\n    if (node.mesh) {\n        var meshKey = node.mesh;\n        var buffers = this._meshes[meshKey].buffers;\n\n        for (var i = 0, bufLen = buffers.length; i < bufLen; i++) {\n            var materialBuf = buffers[i].material;\n\n            for (var j = 0; j < node.materials.length; j++) {\n                if (materialBuf === node.materials[j].symbol) {\n                    var materialKey = node.materials[j].id;\n                    break;\n                }\n            }\n\n            var material = this._materials[materialKey];\n            var imageKey = null;\n            var hasTexture = material && material.textures && buffers[i].uvs && buffers[i].uvs.length > 0;\n            if (hasTexture) {\n                if (material.textures.diffuse) {\n                    imageKey = material.textures.diffuse.mapId;\n                } else if (material.textures.reflective) {\n                    imageKey = material.textures.reflective.mapId;\n                }\n            }\n\n            this._entities.push({\n                mesh: buffers[i],\n                material: material,\n                node: node,\n                imageKey: imageKey\n            });\n        }\n    }\n\n    for (var k = 0; k < node.children.length; k++) {\n        this.flattenNode(node.children[k]);\n    }\n};\n\n// Internal. Intentionally not documented.\nColladaScene.prototype.render = function (dc) {\n    var orderedScene;\n    var frustum = dc.frustumInModelCoordinates;\n\n    if (!this.enabled) {\n        return;\n    }\n\n    if (this.lastFrameTime !== dc.timestamp) {\n        orderedScene = this.makeOrderedRenderable(dc);\n    }\n\n    if (!orderedScene) {\n        return;\n    }\n\n    if (!frustum.containsPoint(this._placePoint)) {\n        return;\n    }\n\n    orderedScene.layer = dc.currentLayer;\n\n    this.lastFrameTime = dc.timestamp;\n\n    dc.addOrderedRenderable(orderedScene);\n};\n\n// Internal. Intentionally not documented.\nColladaScene.prototype.makeOrderedRenderable = function (dc) {\n    dc.surfacePointForMode(this._position.latitude, this._position.longitude, this._position.altitude,\n        this._altitudeMode, this._placePoint);\n\n    this.eyeDistance = dc.eyePoint.distanceTo(this._placePoint);\n\n    return this;\n};\n\n// Internal. Intentionally not documented.\nColladaScene.prototype.renderOrdered = function (dc) {\n    this.drawOrderedScene(dc);\n\n    if (dc.pickingMode) {\n        var po = new PickedObject(this.pickColor.clone(), this, this._position, this.layer, false);\n        dc.resolvePick(po);\n    }\n};\n\n// Internal. Intentionally not documented.\nColladaScene.prototype.drawOrderedScene = function (dc) {\n    try {\n        this.beginDrawing(dc);\n    } finally {\n        this.endDrawing(dc);\n    }\n};\n\n// Internal. Intentionally not documented.\nColladaScene.prototype.beginDrawing = function (dc) {\n    var gl = dc.currentGlContext;\n    var gpuResourceCache = dc.gpuResourceCache;\n\n    var vboId = gpuResourceCache.resourceForKey(this._vboCacheKey);\n    var iboId = gpuResourceCache.resourceForKey(this._iboCacheKey);\n\n    if (!vboId) {\n        this.setupBuffers(dc);\n        vboId = gpuResourceCache.resourceForKey(this._vboCacheKey);\n        iboId = gpuResourceCache.resourceForKey(this._iboCacheKey);\n    }\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, vboId);\n    if (iboId) {\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, iboId);\n    }\n\n    dc.findAndBindProgram(BasicTextureProgram);\n    gl.enableVertexAttribArray(0);\n\n    if (dc.pickingMode) {\n        this.pickColor = dc.uniquePickColor();\n    }\n\n    this.computeTransformationMatrix(dc.globe);\n\n    for (var i = 0, len = this._entities.length; i < len; i++) {\n        var mustRenderNode = this.mustRenderNode(this._entities[i].node.id);\n        if (mustRenderNode) {\n            this.draw(dc, this._entities[i]);\n        }\n    }\n};\n\n// Internal. Intentionally not documented.\nColladaScene.prototype.setupBuffers = function (dc) {\n    var gl = dc.currentGlContext;\n    var sizeOfFloat32 = Float32Array.BYTES_PER_ELEMENT || 4;\n    var sizeOfUint16 = Uint16Array.BYTES_PER_ELEMENT || 2;\n    var sizeOfUint32 = Uint32Array.BYTES_PER_ELEMENT || 4;\n    var is32BitIndices = false;\n    var numIndices = 0;\n    var numVertices = 0;\n\n    for (var i = 0, len = this._entities.length; i < len; i++) {\n        var mesh = this._entities[i].mesh;\n        if (mesh.indexedRendering) {\n            numIndices += mesh.indices.length;\n            if (mesh.indices instanceof Uint32Array) {\n                is32BitIndices = true;\n            }\n        }\n        numVertices += mesh.vertices.length;\n        if (this._entities[i].imageKey) {\n            numVertices += mesh.uvs.length;\n        }\n        if (mesh.normals && mesh.normals.length) {\n            numVertices += mesh.normals.length;\n        }\n    }\n\n    var vbo = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, vbo);\n    gl.bufferData(gl.ARRAY_BUFFER, numVertices * sizeOfFloat32, gl.STATIC_DRAW);\n\n    var offset = 0;\n    for (i = 0, len = this._entities.length; i < len; i++) {\n        var data = this._entities[i].mesh.vertices;\n        this._entities[i].vertexOffset = offset;\n        gl.bufferSubData(gl.ARRAY_BUFFER, offset * sizeOfFloat32, data);\n        offset += data.length;\n    }\n\n    for (i = 0, len = this._entities.length; i < len; i++) {\n        if (this._entities[i].imageKey) {\n            data = this._entities[i].mesh.uvs;\n            this._entities[i].uvOffset = offset;\n            gl.bufferSubData(gl.ARRAY_BUFFER, offset * sizeOfFloat32, data);\n            offset += data.length;\n        }\n    }\n\n    for (i = 0, len = this._entities.length; i < len; i++) {\n        data = data = this._entities[i].mesh.normals;\n        if (data && data.length) {\n            this._entities[i].normalOffset = offset;\n            gl.bufferSubData(gl.ARRAY_BUFFER, offset * sizeOfFloat32, data);\n            offset += data.length;\n        }\n    }\n\n    var indexSize = sizeOfUint16;\n    var indexBufferSize = numIndices * indexSize;\n    var uIntExt;\n    if (is32BitIndices) {\n        uIntExt = dc.getExtension('OES_element_index_uint');\n\n        if (!uIntExt) {\n            Logger.log(Logger.LEVEL_SEVERE,\n                'The 3D model is too big and might not render properly. \\n' +\n                'Your browser does not support the \"OES_element_index_uint\" extension, ' +\n                'required to render large models.'\n            );\n        } else {\n            indexSize = sizeOfUint32;\n            indexBufferSize = numIndices * indexSize;\n        }\n    }\n\n    if (numIndices) {\n        var ibo = gl.createBuffer();\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, ibo);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, indexBufferSize, gl.STATIC_DRAW);\n\n        offset = 0;\n        for (i = 0, len = this._entities.length; i < len; i++) {\n            mesh = this._entities[i].mesh;\n            if (mesh.indexedRendering) {\n                data = mesh.indices;\n                if (data instanceof Uint32Array && !uIntExt) {\n                    data = new Uint16Array(data);\n                }\n                this._entities[i].indexOffset = offset;\n                this._entities[i].indexSize = indexSize;\n                gl.bufferSubData(gl.ELEMENT_ARRAY_BUFFER, offset * indexSize, data);\n                offset += data.length;\n            }\n        }\n    }\n\n    this._vboCacheKey = dc.gpuResourceCache.generateCacheKey();\n    dc.gpuResourceCache.putResource(this._vboCacheKey, vbo, numVertices * sizeOfFloat32);\n\n    if (numIndices) {\n        this._iboCacheKey = dc.gpuResourceCache.generateCacheKey();\n        dc.gpuResourceCache.putResource(this._iboCacheKey, ibo, indexBufferSize);\n    }\n};\n\n// Internal. Intentionally not documented.\nColladaScene.prototype.draw = function (dc, entity) {\n    var gl = dc.currentGlContext;\n    var program = dc.currentProgram;\n    var gpuResourceCache = dc.gpuResourceCache;\n\n    var buffers = entity.mesh;\n    var material = entity.material;\n\n    var nodeWorldMatrix = entity.node.worldMatrix;\n    var nodeNormalMatrix = entity.node.normalMatrix;\n\n    var hasLighting = buffers.normals && buffers.normals.length;\n\n    var imageKey = entity.imageKey;\n\n    this.applyColor(dc, material);\n\n    if (imageKey) {\n        var imagePath = this._useTexturePaths ? this._images[imageKey].path : this._images[imageKey].filename;\n        var textureCacheKey = this._dirPath + imagePath;\n        this._activeTexture = gpuResourceCache.resourceForKey(textureCacheKey);\n        if (!this._activeTexture) {\n            var wrapMode = buffers.isClamp ? gl.CLAMP_TO_EDGE : gl.REPEAT;\n            this._activeTexture = gpuResourceCache.retrieveTexture(gl, textureCacheKey, wrapMode);\n        }\n        var textureBound = this._activeTexture && this._activeTexture.bind(dc);\n        if (textureBound) {\n            program.loadTextureEnabled(gl, true);\n            gl.vertexAttribPointer(2, 2, gl.FLOAT, false, 8, entity.uvOffset * 4);\n            gl.enableVertexAttribArray(2);\n            program.loadModulateColor(gl, dc.pickingMode);\n        } else {\n            program.loadTextureEnabled(gl, false);\n            gl.disableVertexAttribArray(2);\n        }\n    } else {\n        program.loadTextureEnabled(gl, false);\n        gl.disableVertexAttribArray(2);\n    }\n\n    if (hasLighting && !dc.pickingMode) {\n        program.loadApplyLighting(gl, 1);\n        gl.vertexAttribPointer(1, 3, gl.FLOAT, false, 12, entity.normalOffset * 4);\n        gl.enableVertexAttribArray(1);\n    } else {\n        program.loadApplyLighting(gl, 0);\n        gl.disableVertexAttribArray(1);\n    }\n\n    this.applyMatrix(dc, hasLighting, textureCacheKey, nodeWorldMatrix, nodeNormalMatrix);\n\n    gl.vertexAttribPointer(0, 3, gl.FLOAT, false, 12, entity.vertexOffset * 4);\n\n    if (buffers.indexedRendering) {\n        var indexOffsetBytes = entity.indexOffset * entity.indexSize;\n        if (buffers.indices instanceof Uint32Array && dc.getExtension('OES_element_index_uint')) {\n            gl.drawElements(gl.TRIANGLES, buffers.indices.length, gl.UNSIGNED_INT, indexOffsetBytes);\n        } else {\n            gl.drawElements(gl.TRIANGLES, buffers.indices.length, gl.UNSIGNED_SHORT, indexOffsetBytes);\n        }\n    } else {\n        gl.drawArrays(gl.TRIANGLES, 0, Math.floor(buffers.vertices.length / 3));\n    }\n};\n\n// Internal. Intentionally not documented.\nColladaScene.prototype.applyColor = function (dc, material) {\n    var gl = dc.currentGlContext,\n        program = dc.currentProgram;\n\n    if (material) {\n        if (material.techniqueType === 'constant') {\n            var diffuse = material.reflective;\n        } else {\n            diffuse = material.diffuse;\n        }\n    }\n\n    var opacity;\n    var r = 1, g = 1, b = 1, a = 1;\n\n    if (diffuse) {\n        r = diffuse[0];\n        g = diffuse[1];\n        b = diffuse[2];\n        a = diffuse[3] != null ? diffuse[3] : 1;\n    }\n\n    this._tmpColor.set(r, g, b, a);\n    opacity = a * this.layer.opacity;\n    gl.depthMask(opacity >= 1 || dc.pickingMode);\n    program.loadColor(gl, dc.pickingMode ? this.pickColor : this._tmpColor);\n    program.loadOpacity(gl, dc.pickingMode ? (opacity > 0 ? 1 : 0) : opacity);\n};\n\n// Internal. Intentionally not documented.\nColladaScene.prototype.applyMatrix = function (dc, hasLighting, hasTexture, nodeWorldMatrix, nodeNormalMatrix) {\n    this._mvpMatrix.copy(dc.modelviewProjection);\n    this._mvpMatrix.multiplyMatrix(this._transformationMatrix);\n\n    if (nodeWorldMatrix && this._localTransforms) {\n        this._mvpMatrix.multiplyMatrix(nodeWorldMatrix);\n    }\n\n    if (hasLighting && !dc.pickingMode) {\n        this._normalMatrix.copy(dc.modelviewNormalTransform);\n        this._normalMatrix.multiplyMatrix(this._normalTransformMatrix);\n        if (nodeNormalMatrix && this._localTransforms) {\n            this._normalMatrix.multiplyMatrix(nodeNormalMatrix);\n        }\n\n        dc.currentProgram.loadModelviewInverse(dc.currentGlContext, this._normalMatrix);\n    }\n\n    if (hasTexture && this._activeTexture) {\n        dc.currentProgram.loadTextureMatrix(dc.currentGlContext, this._texCoordMatrix);\n        this._activeTexture = null;\n    }\n\n    dc.currentProgram.loadModelviewProjection(dc.currentGlContext, this._mvpMatrix);\n};\n\n// Internal. Intentionally not documented.\nColladaScene.prototype.endDrawing = function (dc) {\n    var gl = dc.currentGlContext;\n    var program = dc.currentProgram;\n\n    gl.disableVertexAttribArray(1);\n    gl.disableVertexAttribArray(2);\n    program.loadApplyLighting(gl, 0);\n    program.loadTextureEnabled(gl, false);\n};\n\n// Internal. Intentionally not documented.\nColladaScene.prototype.computeTransformationMatrix = function (globe) {\n    this._transformationMatrix.setToIdentity();\n\n    this._transformationMatrix.multiplyByLocalCoordinateTransform(this._placePoint, globe);\n\n    this._transformationMatrix.multiplyByRotation(1, 0, 0, this._xRotation);\n    this._transformationMatrix.multiplyByRotation(0, 1, 0, this._yRotation);\n    this._transformationMatrix.multiplyByRotation(0, 0, 1, this._zRotation);\n\n    this._transformationMatrix.multiplyByScale(this._scale, this._scale, this._scale);\n\n    this._transformationMatrix.multiplyByTranslation(this._xTranslation, this._yTranslation, this._zTranslation);\n\n    this._transformationMatrix.multiplyByRotation(1, 0, 0, this.preX);\n    this._transformationMatrix.multiplyByRotation(0, 1, 0, this.preY);\n    this._transformationMatrix.multiplyByRotation(0, 0, 1, this.preZ);\n\n    this.computeNormalMatrix();\n};\n\n// Internal. Intentionally not documented.\nColladaScene.prototype.computeNormalMatrix = function () {\n    this._transformationMatrix.extractRotationAngles(this._tmpVector);\n    this._normalTransformMatrix.setToIdentity();\n    this._normalTransformMatrix.multiplyByRotation(-1, 0, 0, this._tmpVector[0]);\n    this._normalTransformMatrix.multiplyByRotation(0, -1, 0, this._tmpVector[1]);\n    this._normalTransformMatrix.multiplyByRotation(0, 0, -1, this._tmpVector[2]);\n};\n\n// Internal. Intentionally not documented.\nColladaScene.prototype.mustRenderNode = function (nodeId) {\n    var draw = true;\n    if (this._hideNodes) {\n        var pos = this._nodesToHide.indexOf(nodeId);\n        draw = (pos === -1);\n    }\n    return draw;\n};\n\nexport default ColladaScene;","// import WorldWind from 'webworldwind-esa';\nimport wwx from 'webworldwind-x';\nimport satConfig from './satConfig'\n// import SatelliteModel from './wwwx/shapes/satellites/Model';\nimport SatelliteModelLayer from './wwwxx/layer/SatelliteModelLayer'\n\n// const Location = WorldWind.Location,\n//     Sector = WorldWind.Sector,\n//     WmsLayer = WorldWind.WmsLayer;\n\n// class modelsLayer extends Layer {\n//     constructor(){\n//         super({\n//             service: \"https://tiles.maps.eox.at/wms\",\n//             layerNames: \"s2cloudless-2018\",\n//             title: \"Sentinel Cloudless Layer\",\n//             sector: new Sector(-90, 90, -180, 180),\n//             levelZeroDelta: new Location(45, 45),\n//             numLevels: 19,\n//             format: \"image/jpg\",\n//             opacity: 1,\n//             size: 256,\n//             version: \"1.3.0\"\n//         });\n//     }\n// }\n// const options = {\n//     rotations: layerConfig.satData.rotations,\n//     preRotations: layerConfig.satData.preRotations,\n//     scale: layerConfig.satData.scale,\n//     translations: layerConfig.satData.translations,\n//     ignoreLocalTransforms: layerConfig.satData.ignoreLocalTransforms,\n// }\n// const layer = new SatelliteModelLayer({key: layerKey, time: time, onLayerChanged}, options);\n// layer.setRerender(() => wwd.redraw());\n// getModel(`${layerConfig.satData.filePath}${layerConfig.satData.fileName}`, layerKey).then(\n//     (model) => {\n//         const satrec = EoUtils.computeSatrec(layerConfig.satData.tleLineOne, layerConfig.satData.tleLineTwo);\n//         const position = EoUtils.getOrbitPosition(satrec, new Date(time));\n//         layer.setModel(model, options, position)\n//         layer.setTle([layerConfig.satData.tleLineOne, layerConfig.satData.tleLineTwo]);\n//     }\n// );\n\n// export default SentinelCloudlessLayer;\n// const {\n//     Position,\n// } = WorldWind;\nconst {\n    EoUtils,\n} = wwx;\n\nvar satelliteLayers = []\n\nlet satend, satstart = null\n\n    for(let i=0 ; i<satConfig.length ; i++) {\n        console.log(satConfig[i].name)\n\n        const options = {\n            rotations: satConfig[i].rotations,\n            preRotations: satConfig[i].preRotations,\n            scale: satConfig[i].scale,\n            translations: satConfig[i].translations,\n            ignoreLocalTransforms: satConfig[i].ignoreLocalTransforms\n        }\n        satstart = new Date(satConfig[i].launchDate.getTime())\n        \n        if(satConfig[i].retirementDate == null) {\n            satend = new Date(satstart.getTime())\n            satend.setUTCFullYear( satend.getUTCFullYear()+20 )\n        } else {\n            satend = new Date(satConfig[i].retirementDate.getTime())\n        }\n        let layer = new SatelliteModelLayer({key: satConfig[i].key, time: new Date() }, options)\n\n        layer.timeRange = [satstart, satend]\n\n        const satrec = EoUtils.computeSatrec(satConfig[i].tleLineOne, satConfig[i].tleLineTwo);\n        const position = EoUtils.getOrbitPosition(satrec, new Date());\n\n        fetch(satConfig[i].filePath).then(response => {\n            return response.json();\n        }).then(satelliteData => {\n            layer.setModel(satelliteData, {\n                rotations: satConfig[i].rotations,\n                preRotations: satConfig[i].preRotations,\n                scale: satConfig[i].scale,\n                translations: satConfig[i].translations,\n                ignoreLocalTransforms: satConfig[i].ignoreLocalTransforms\n            }, position );\n        });\n\n        // layer.setModel(model, options, position)\n        layer.setTle([satConfig[i].tleLineOne, satConfig[i].tleLineTwo]);\n\n\n        satelliteLayers.push(layer)\n    }\n\n\nexport default satelliteLayers","import WorldWind from 'webworldwind-esa';\r\nimport ColladaScene from \"../../collada/ColladaScene\";\r\n\r\nconst {\r\n    Matrix,\r\n    Renderable\r\n} = WorldWind;\r\n\r\n/**\r\n * @exports Model\r\n */\r\nclass Model extends Renderable {\r\n    /**\r\n     * Constructs model of the satellite on the given position.\r\n     * @param model {Object} Model information. Collada information.\r\n     * @param satellite {Object} The details about the satellite and the way it should be transformed and presented.\r\n     * @param position {Position} The exact position of the center of the satellite.\r\n     */\r\n    constructor(model, satellite, position) {\r\n        super();\r\n\r\n        this._satellite = satellite;\r\n        const satelliteModel = this.parse(model);\r\n        this.draw(position, satelliteModel);\r\n    }\r\n\r\n    /**\r\n     * Updates the position of the model.\r\n     * @param position {Position} Current position of the model.\r\n     */\r\n    position(position) {\r\n        this._model.position = position;\r\n    }\r\n\r\n    /**\r\n     * Draws the collada model into a Collada Scene.\r\n     * @param position {Position} Position of the satellite.\r\n     * @param modelData Collada Model Information.\r\n     */\r\n    draw(position, modelData) {\r\n        const nodesToHide = [\r\n            'PlatformCircleAndName', 'SolarWingsCircleAndName', 'C-SarCircleAndName',\r\n            'PlatformTextsAndArrows', 'SolarWingsTextsAndArrows', 'C-SarTextsAndArrows',\r\n\r\n            'SolarArrayGroup', 'WingsDetailsGroup', 'Group004', 'MsiGroup', 'SatelliteGroup',\r\n\r\n            'SatelliteDimensionsGroup', 'MWRGroup', 'SRALGroup', 'OLCIGroup', 'SLSTRGroup'\r\n        ];\r\n        const {\r\n            rotations,\r\n            translations,\r\n            preRotations,\r\n            scale,\r\n            shortName,\r\n            ignoreLocalTransforms\r\n        } = this._satellite;\r\n\r\n        const model = new ColladaScene(position, modelData);\r\n        model.type = this.type;\r\n        model.satShortName = shortName;\r\n\r\n        model.nodesToHide = nodesToHide;\r\n        model.hideNodes = true;\r\n        model.useTexturePaths = false;\r\n        model.localTransforms = ignoreLocalTransforms;\r\n        model.scale = scale;\r\n        model.xRotation = rotations.x;\r\n        model.yRotation = rotations.y;\r\n        model.zRotation = rotations.z;\r\n        model.xTranslation = translations.x;\r\n        model.yTranslation = translations.y;\r\n        model.zTranslation = translations.z;\r\n        model.preX = preRotations.x;\r\n        model.preY = preRotations.y;\r\n        model.preZ = preRotations.z;\r\n\r\n        this._model = model;\r\n        modelData = null;\r\n    }\r\n\r\n    /**\r\n     * Parses the collada model and update the information relevant to the satellites.\r\n     * @param {{ meshes:Object, root:Object, materials:{reflective:Array, diffuse:Array} }} jsonData\r\n     * @return {Object} Collada model.\r\n     */\r\n    parse(jsonData) {\r\n        const meshes = jsonData.meshes;\r\n        const nodes = jsonData.root.children;\r\n        const materials = jsonData.materials;\r\n\r\n        for (let key in meshes) {\r\n            if (meshes.hasOwnProperty(key)) {\r\n                const buffers = meshes[key].buffers;\r\n\r\n                for (let i = 0; i < buffers.length; i++) {\r\n                    const vertices = buffers[i].vertices || [];\r\n                    const normals = buffers[i].normals || [];\r\n                    const uvs = buffers[i].uvs || [];\r\n                    const indices = buffers[i].indices || [];\r\n\r\n                    const eVertices = new Float32Array(vertices);\r\n                    const eNormals = new Float32Array(normals);\r\n                    const eUvs = new Float32Array(uvs);\r\n                    const eIndices = new Uint16Array(indices);\r\n\r\n                    buffers[i].vertices = eVertices;\r\n                    buffers[i].normals = eNormals;\r\n                    buffers[i].uvs = eUvs;\r\n                    buffers[i].indices = eIndices;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < nodes.length; i++) {\r\n            const node = nodes[i];\r\n            if (node.mesh) {\r\n                const worldMatrix = node.worldMatrix.slice(0);\r\n                node.worldMatrix = Matrix.fromIdentity();\r\n                node.worldMatrix.copy(worldMatrix);\r\n\r\n                if (node.children.length) {\r\n                    console.info('node has children', node);\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let key in materials) {\r\n            if (materials.hasOwnProperty(key)) {\r\n                const material = materials[key];\r\n\r\n                if (material.id === '_3_-_Default-material') {\r\n                    if (material.reflective) {\r\n                        material.reflective[0] = 0.289219;\r\n                        material.reflective[1] = 0.713497;\r\n                        material.reflective[2] = 0.870753;\r\n                        material.reflective[3] = 1;\r\n                    }\r\n                } else if (material.id === '_1_-_Default_004-material') {\r\n                    material.diffuse[3] = 0;\r\n                } else if (material.id === '_1_-_Default-material') {\r\n                    material.diffuse[3] = 0;\r\n                } else if (material.id === 'Chrome-material') {\r\n                    material.textures = null;\r\n                    material.diffuse[0] = 0.3137;\r\n                    material.diffuse[1] = 0.3137;\r\n                    material.diffuse[2] = 0.3137;\r\n                } else if (material.id === 'Satellite_panel-material') {\r\n                    material.textures.reflective.mapId = 'image9';\r\n                } else if (material.id === '_3_-_Default') {\r\n                    material.textures.reflective.mapId = 'image4';\r\n                } else if (material.id === '_4_-_Default-material') {\r\n                    material.textures.reflective.mapId = 'image5';\r\n                } else if (material.id === '_5_-_Default_002-material') {\r\n                    material.textures.reflective.mapId = 'image6';\r\n                } else if (material.id === '_5_-_Default-material') {\r\n                    material.textures.reflective.mapId = 'image5';\r\n                }\r\n            }\r\n        }\r\n\r\n        return jsonData;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    render(dc) {\r\n        if(!this._model || !this.enabled) {\r\n            return;\r\n        }\r\n\r\n        this._model.render(dc);\r\n    }\r\n}\r\n\r\nexport default Model;","import WorldWind from 'webworldwind-esa';\nimport WorldWindX from 'webworldwind-x';\nimport Model from '../shapes/satellites/Model';\n\nconst {\n    RenderableLayer,\n    Position,\n} = WorldWind;\n\nconst {\n    EoUtils\n} = WorldWindX;\n\n\nconst DEFAULT_MODEL_OPTIONS = {\n    rotations: {\n        x: 0,\n        y: 0,\n        z: 0,\n        headingAxis: [0, 0, 1],\n        headingAdd: -90,\n        headingMultiply: 1\n    },\n    preRotations: {\n        x: 0,\n        y: 0,\n        z: 0\n    },\n    scale: 500000,\n    translations: {\n        x: -0.1,\n        y: -0.1,\n        z: 0\n    },\n    ignoreLocalTransforms: true\n}\n\n/**\n * Class extending WorldWind.RenderableLayer. Layer can render only one model of satellite. It`s possible to set position data of model.\n * @param options {Object}\n * @param options.key {String}\n * @param options.time {Date} Time of the satellite.\n * @param options.onLayerChanged {func}\n * @augments WorldWind.RenderableLayer\n * @constructor\n */\nclass SatelliteModelLayer extends RenderableLayer {\n\tconstructor(options, satelliteOptions) {\n        super(options);\n        this.type = 'SatelliteModelLayer';\n        this._satelliteOptions = satelliteOptions;\n        this._rerenderMap = null;\n        this.key = options.key;\n        this.model = null;\n        this.time = options.time;\n        this.Tle = null;\n        this.heading = null;\n        this.onLayerChanged = options.onLayerChanged || null;\n    };\n    \n    /**\n     * \n     * @param {Object} collada model \n     * @param {Object} options\n     * @param {Position} position\n     */\n    setModel(model, options = DEFAULT_MODEL_OPTIONS, position) {\n        if(model) {\n            this.model = new Model(model, options, position);\n\n            this.removeAllRenderables();\n            this.addRenderable(this.model);\n            this.doRerender();\n        }\n    }\n\n    /**\n     * @param position {Position} Position of the satellite.\n     */\n    setPosition(position) {\n        if(position && this.model) {\n            this.model.position(position);\n        }\n    }\n\n    \n    /**\n     * @param position {Array.<lte>} Lte.\n     */\n    setTle(Tle) {\n        if(Tle) {\n            this.Tle = Tle;\n            this.update();\n        }\n    }\n    \n    /**\n     * @param position {Array.<lte>} Lte.\n     */\n    update() {\n        if(this.Tle && this.time) {\n            const satrec = EoUtils.computeSatrec(...this.Tle);\n            const position = EoUtils.getOrbitPosition(satrec, new Date(this.time));\n            this.setPosition(new Position(position.latitude, position.longitude, position.altitude));\n            if(this.model) {\n                this.alignWithOrbit(this.time, position, EoUtils.computeSatrec(...this.Tle), this._satelliteOptions.rotations, this.model._model);\n            }\n            this.doRerender();\n        }\n    }\n\n    alignWithOrbit(date, currentPosition, satrec, rotations, model) {\n        const now = date.getTime();\n        const nextPosition = EoUtils.getOrbitPosition(satrec, new Date(now + 10000));\n        const headingRad = EoUtils.headingAngleRadians(currentPosition.latitude, currentPosition.longitude, nextPosition.latitude, nextPosition.longitude);\n        const heading = EoUtils.rad2deg(headingRad);\n        this.heading = heading;\n\n        if(typeof this.onLayerChanged === 'function') {\n            this.onLayerChanged({\n                satKey: this.satName,\n                layerKey: this.key,\n                type: this.type,\n            }, {update: {\n                heading: this.heading\n            }});\n        }\n\n        const angle = (heading + rotations.headingAdd) * rotations.headingMultiply;\n\n        if (heading !== 0) {\n            if (rotations.headingAxis[0] === 1) {\n                model.xRotation = angle;\n            }\n            else if (rotations.headingAxis[1] === 1) {\n                model.yRotation = angle;\n            }\n            else if (rotations.headingAxis[2] === 1) {\n                model.zRotation = angle;\n            }\n        }\n    }\n\n    /**\n     * @param time {Date} Time of the satellite.\n     */\n    setTime(time) {\n        if(time) {\n            this.time = time;\n            this.update();\n        }\n    }\n    \n\tsetRerender(rerenderer) {\n\t\tif(typeof rerenderer === 'function') {\n\t\t\tthis._rerenderMap = rerenderer;\n\t\t}\n\t}\n\n\tdoRerender() {\n\t\tif(typeof this._rerenderMap === 'function') {\n\t\t\tthis._rerenderMap();\n\t\t}\n\t}\n}\n\nexport default SatelliteModelLayer;\n\n","// import WorldWind from 'webworldwind-esa';\nimport wwwx from 'webworldwind-x';\nimport satConfig from './satConfig'\nimport OrbitLayer from './OrbitLayer'\n// import Orbits from './wwwxx/util/Orbits';\n// import Orbits from './wwwxx/shapes/Orbits'\n\n\nconst {\n    EoUtils,\n} = wwwx;\n\nvar orbitLayers = []\n    let satstart, satend = null\n    for(let i=0 ; i<satConfig.length ; i++) {\n        satstart = new Date(satConfig[i].launchDate.getTime())\n        if(satConfig[i].retirementDate == null) {\n            satend = new Date(satstart.getTime())\n            satend.setUTCFullYear( satend.getUTCFullYear()+20 )\n        } else {\n            satend = new Date(satConfig[i].retirementDate.getTime())\n        }\n\n\n        let layerKey = satConfig[i].key\n        let satrec = EoUtils.computeSatrec(satConfig[i].tleLineOne, satConfig[i].tleLineTwo);\n        // let satrec = {tle1: satConfig[i].tleLineOne, tle2: satConfig[i].tleLineTwo}\n        let layer = new OrbitLayer({key: layerKey, satRec: satrec, time: new Date(), currentTime: new Date(), opacity: 0.7})\n        \n        layer.timeRange = [satstart, satend]\n        layer.displayName = 'Orbit'\n        orbitLayers.push(layer)\n    }\n\n\nexport default orbitLayers","import WorldWind from 'webworldwind-esa';\nimport WordWindX from 'webworldwind-x';\nconst {\n    EoUtils,\n} = WordWindX;\n\nconst {\n    ABSOLUTE,\n    Color,\n    Renderable,\n    Path,\n    ShapeAttributes\n} = WorldWind;\n\n\n/**\n * @exports Orbits\n */\nclass Orbits extends Renderable {\n    /**\n     * Constructs Orbits displaying the past and future position. The positions are calculated from the satrec. The\n     * orbits are displayed from now back to past and\n     * @param satrec {Object} SDG format representing the satellite.\n     * @param time {Date} Date for which the orbits will be displayed.\n     * @param timeWindow {Number} Amount of milliseconds for the time window.\n     * @param orbitPoints {Number} Amount of the Panther.\n     */\n    constructor(satrec, startTime = new Date(), endTime = new Date(), color, orbitPoints = 120) {\n        super();\n\n        if(!satrec) {\n            throw new Error('Orbits#constructor Satellite Record is missing.');\n        }\n\n        this._satrec = satrec;\n\n        // this._timeWindow = timeWindow;\n        this._orbitPoints = orbitPoints;\n\n        this._trail = this.trail(this.trailAttributes(color));\n        // this._futureTrail = this.trail(this.trailAttributes(new Color(1, 1, 0, 1)));\n\n        if(endTime.getTime() === startTime.getTime()) {\n            this._currentEndTime = new Date(startTime.getTime() + orbitPoints * 1000);\n            this._previousEndTime = new Date(startTime.getTime() + orbitPoints * 1000);\n        } else {\n            this._currentEndTime = endTime;\n            this._previousEndTime = endTime;\n        }\n\n        this._currentStartTime = startTime;\n        this._previousStartTime = startTime;\n\n        this.populate();\n    }\n\n    /**\n     * Update information about when and where the satellite was. It fully rebuilds the positions for the trails.\n     * @param satelliteRecord SPG format representing the satellite.\n     */\n    satrec(satelliteRecord, preventPopulate) {\n        if(!satelliteRecord) {\n            throw Error('No satellite record was provided');\n        }\n        this._satrec = satelliteRecord;\n        // This must signalize somehow that it needs to be recalculated.\n\n        if(preventPopulate !== true) {\n            this.populate();\n        }\n    }\n\n    /**\n     * Update current time for this set of orbits.\n     * @param startTime {Date} Start date for the orbit.\n     * @param endTime {Date} End date for the orbit.\n     */\n    time(startTime, endTime, preventUpdate) {\n        if(!startTime) {\n            throw Error('No startTime was provided');\n        }\n        if(!endTime) {\n            throw Error('No endTime was provided');\n        }\n        this._previousStartTime = this._currentStartTime;\n        this._previousEndTime = this._currentEndTime;\n        this._currentStartTime = startTime;\n        this._currentEndTime = endTime;\n\n        if(preventUpdate !== true) {\n            this.update();\n        }\n    }\n\n    /**\n     * Renders all trails belonging to this Orbit if it is enabled.\n     * @param dc {DrawContext} Shared state for one rendering.\n     */\n    render(dc) {\n        if(!this.enabled) {\n            return;\n        }\n\n        this._trail.render(dc);\n        // this._futureTrail.render(dc);\n    }\n\n    /**\n     * Updates the trails associated with this Orbit based on the current time and satrec. If there is no change in\n     * either of these parameters nothing changes.\n     * @param force {Boolean} If force, recalculate all positions\n     * @private\n     */\n    update(force = false) {\n        const startDate = this._currentStartTime.getTime();\n        const now = startDate;\n        const previousStartTime = this._previousStartTime.getTime();\n        const previousTime = previousStartTime;\n        const changeStart = startDate - previousStartTime;\n        const endDate = this._currentEndTime.getTime();\n        const previousEndTime = this._previousEndTime.getTime();\n        const changeEnd = endDate - previousEndTime;\n        if(changeStart === 0 && changeEnd === 0 && !force) {\n            return;\n        }\n\n        if(force) {\n            this.populate();\n            return;\n        }\n\n        const timeWindow = endDate - startDate;\n\n        const tick = Math.floor(timeWindow / this._orbitPoints);\n        let positionsToReplace = (Math.ceil(Math.abs(now - previousTime) / tick)) + Math.ceil(Math.abs(endDate - previousEndTime) / tick);\n        if(positionsToReplace > this._orbitPoints) {\n            this.populate();\n            return;\n        }\n\n        //if start change\n        //update start\n        if(changeStart) {\n            //change to future\n            if(changeStart > 0) {\n                //remove olded possitions than current startDate\n                let i = 0;\n                while (this._trail.positions[i].time < startDate) {\n                    this._trail.positions.shift();\n                }\n            }\n\n            if(changeStart < 0) {\n                //add possitions to startDate\n                const positionsToReplace = Math.ceil(Math.abs(now - previousTime) / tick);\n                for(let positionIndex = 0; positionIndex < positionsToReplace; positionIndex++) {\n                    const time = new Date(previousTime - positionIndex * tick);\n                    const position = EoUtils.getOrbitPositionWithPositionalData(this._satrec, time).position;\n                    position.time = time.getTime();\n                    this._trail.positions = [position, ...this._trail.positions];\n                }\n            }\n        }\n        \n\n        //if end change\n        //update end\n        if(changeEnd) {\n            //change to future\n            if(changeEnd > 0) {\n                //change to future\n                const positionsToReplace = Math.ceil(Math.abs(endDate - previousEndTime) / tick);\n                for(let positionIndex = 0; positionIndex < positionsToReplace; positionIndex++) {\n                    const time = new Date(previousEndTime + positionIndex * tick);\n                    const position = EoUtils.getOrbitPositionWithPositionalData(this._satrec, time).position;\n                    position.time = time.getTime();\n                    this._trail.positions.push(position);\n                }\n            }\n\n            if(changeEnd < 0) {\n                //remove olded possitions than current endDate\n                let i = this._trail.positions.length - 1;\n                while (this._trail.positions[i].time > endDate) {\n                    this._trail.positions.pop();\n                    i = this._trail.positions.length - 1;\n                }\n            }\n        }\n        this._trail.positions = [...this._trail.positions];\n    }\n\n    populate() {\n        const startDate = this._currentStartTime.getTime();\n        const endDate = this._currentEndTime.getTime();\n        const timeWindow = endDate - startDate;\n        const tick = Math.floor(timeWindow / this._orbitPoints);\n\n        const positions = [];\n        for(let positionIndex = 0; positionIndex < this._orbitPoints; positionIndex++) {\n            const time = new Date(startDate + positionIndex * tick);\n            const position = EoUtils.getOrbitPositionWithPositionalData(this._satrec, time).position;\n            position.time = time.getTime();\n            positions.push(position);\n        }\n        this._trail.positions = [...positions];\n    }\n\n    /**\n     * Create the relevant shape which is used to display the orbit on the globe.\n     * @private\n     * @param attributes\n     */\n    trail(attributes) {\n        const trail = new Path([]);\n        trail.enabled = true;\n        trail.altitudeMode = ABSOLUTE;\n        trail.numSubSegments = 1;\n        trail.attributes = attributes;\n        // trail.extrude = true\n        return trail;\n    }\n\n    /**\n     * Create attributes for the proper visualization of the Orbit in more than one color.\n     * @private\n     * @param color\n     */\n    trailAttributes(color) {\n        const attributes = new ShapeAttributes(null);\n        attributes.outlineColor = color;\n        attributes.outlineWidth = 2;\n        attributes.drawOutline = true;\n        attributes.drawInterior = true;\n        return attributes;\n    }\n}\n\nexport default Orbits;","import WorldWind from 'webworldwind-esa';\nimport Orbits from './wwwxx/shapes/Orbits';\nconst {\n    RenderableLayer,\n    Color\n} = WorldWind;\n\n/**\n * Class extending WorldWind.RenderableLayer. It`s possible to set time of orbit.\n * @param options {Object}\n * @param options.key {String}\n * @param options.time {Date} Selected time\n * @param options.currentTime {Date} \n * @param options.opacity {Number} \n * @augments WorldWind.RenderableLayer\n * @constructor\n */\nclass OrbitLayer extends RenderableLayer {\n\tconstructor(options) {\n        super(options);\n        this._rerenderMap = null;\n        this.satRec = null;\n        this.key = options.key;\n        this.timeWindow = 1000 * 60 * 15\n        this.opacity = Number.isFinite(options.opacity) && options.opacity > -1 && options.opacity < 101 ? options.opacity : 100;\n        this._beforeCurrentOrbit = new Orbits(options.satRec, new Date(), new Date(), new Color(213 / 255, 214  / 255, 210 / 255, 0.5));\n        this._afterCurrentOrbit = new Orbits(options.satRec, new Date(), new Date(), new Color(1, 1, 0, 0.5));\n        this.addRenderable(this._beforeCurrentOrbit);\n        // this.addRenderable(this._afterCurrentOrbit);\n        this.currentTime = null;\n        this.selectTime = null;\n        this.endTime = null;\n        this.endTime = null;\n        this.satRec = null;\n        this.setSatRec(options.satRec);\n        this.setTime(options.currentTime, options.time);\n        \n    };\n\n    \n    /**\n     * @param {Array.<lte>} satRec  Lte.\n     */\n    setSatRec(satRec, preventUpdate) {\n        if(satRec) {\n            // this.satRec = satRec;\n            // console.log(satRec)\n\n            this._beforeCurrentOrbit.satrec(satRec, true);\n            if(preventUpdate !== true) {\n                this._beforeCurrentOrbit.update(true);\n            }\n            this._afterCurrentOrbit.satrec(satRec, true);\n            if(preventUpdate !== true) {\n                this._afterCurrentOrbit.update(true);\n            }\n            this.doRerender();\n        }\n    }\n\n    /**\n     * @param {Date} time Time of the orbit.\n     */\n     setTime(selectTime) {\n        if(selectTime) {\n            // this.currentTime = currentTime;\n            this.selectTime = selectTime;\n\n            this.startTime = new Date(selectTime.getTime() - this.timeWindow);\n            this.endTime = new Date(selectTime.getTime() + this.timeWindow);\n\n            // this.removeRenderable(this._beforeCurrentOrbit);\n            // this.removeRenderable(this._afterCurrentOrbit);\n\n            this._beforeCurrentOrbit.time(this.startTime, this.selectTime, false);\n            // this._afterCurrentOrbit.time(this.selectTime, this.endTime, false);\n            // this.addRenderable(this._beforeCurrentOrbit);\n            // this.addRenderable(this._afterCurrentOrbit);\n\n            this.doRerender();\n        }\n    }\n\n    setTime2(currentTime, selectTime, preventUpdate) {\n        if(currentTime && selectTime) {\n            this.currentTime = currentTime;\n            this.selectTime = selectTime;\n\n            this.startTime = new Date(selectTime.getTime() - this.timeWindow);\n            this.endTime = new Date(selectTime.getTime() + this.timeWindow);\n\n            this.removeRenderable(this._beforeCurrentOrbit);\n            this.removeRenderable(this._afterCurrentOrbit);\n\n            if(currentTime.getTime() < this.startTime.getTime()) {\n                //all in future\n                this._afterCurrentOrbit.time(this.startTime, this.endTime, preventUpdate);\n                this.addRenderable(this._afterCurrentOrbit);\n            } else if(this.startTime.getTime() < currentTime.getTime() && currentTime.getTime() < this.endTime.getTime()) {\n                //select time visible\n                this._beforeCurrentOrbit.time(this.startTime, currentTime, preventUpdate);\n                this._afterCurrentOrbit.time(currentTime, this.endTime, preventUpdate);\n                this.addRenderable(this._beforeCurrentOrbit);\n                this.addRenderable(this._afterCurrentOrbit);\n            } else if(currentTime.getTime() > this.endTime.getTime()) {\n                //all in past\n                this._beforeCurrentOrbit.time(this.startTime, this.endTime, preventUpdate);\n                this.addRenderable(this._beforeCurrentOrbit);\n            }\n\n            this.doRerender();\n        }\n    }\n\n    forceUpdate() {\n        this._afterCurrentOrbit.update(true);\n        this._beforeCurrentOrbit.update(true);\n    }\n    \n\tsetRerender(rerenderer) {\n\t\tif(typeof rerenderer === 'function') {\n\t\t\tthis._rerenderMap = rerenderer;\n\t\t}\n\t}\n\n\tdoRerender() {\n\t\tif(typeof this._rerenderMap === 'function') {\n\t\t\tthis._rerenderMap();\n\t\t}\n\t}\n}\n\nexport default OrbitLayer;\n\n","import WorldWind from \"webworldwind-esa\";\n\nexport const bgLayers = [\n    {\n        service: \"https://tiles.maps.eox.at/wms\",\n        layerNames: \"s2cloudless-2018\",\n        title: \"s2cloudless-2018\",\n        numLevels: 19,\n        format: \"image/png\",\n        size: 256,\n        sector: WorldWind.Sector.FULL_SPHERE,\n        levelZeroDelta: new WorldWind.Location(90, 90)\n    },\n    {\n        service: \"https://tiles.esa.maps.eox.at/wms\",\n        layerNames: \"s2cloudless-2018\",\n        title: \"s2cloudless-2018 esa\",\n        numLevels: 19,\n        format: \"image/png\",\n        size: 256,\n        sector: WorldWind.Sector.FULL_SPHERE,\n        levelZeroDelta: new WorldWind.Location(90, 90)\n    },\n    {\n        service: \"https://tiles.esa.maps.eox.at/wms\",\n        layerNames: \"osm\",\n        title: \"osm\",\n        numLevels: 19,\n        format: \"image/png\",\n        size: 256,\n        sector: WorldWind.Sector.FULL_SPHERE,\n        levelZeroDelta: new WorldWind.Location(90, 90)\n    },\n    {\n        service: \"https://tiles.esa.maps.eox.at/wms\",\n        layerNames: \"terrain-light\",\n        title: \"terrain-light\",\n        numLevels: 19,\n        format: \"image/png\",\n        size: 256,\n        sector: WorldWind.Sector.FULL_SPHERE,\n        levelZeroDelta: new WorldWind.Location(90, 90)\n    },\n    {\n        service: \"https://tiles.maps.eox.at/wms\",\n        layerNames: \"terrain\",\n        title: \"terrain\",\n        numLevels: 19,\n        format: \"image/png\",\n        size: 256,\n        sector: WorldWind.Sector.FULL_SPHERE,\n        levelZeroDelta: new WorldWind.Location(90, 90)\n    }\n]\nexport const ovLayers = [\n\n    {\n        service: \"https://tiles.maps.eox.at/wms\",\n        layerNames: \"hydrography\",\n        title: \"hydrography\",\n        numLevels: 19,\n        format: \"image/png\",\n        size: 256,\n        sector: WorldWind.Sector.FULL_SPHERE,\n        levelZeroDelta: new WorldWind.Location(90, 90)\n    },\n    {\n        service: \"https://tiles.maps.eox.at/wms\",\n        layerNames: \"overlay_bright\",\n        title: \"overlay_bright\",\n        numLevels: 19,\n        format: \"image/png\",\n        size: 256,\n        sector: WorldWind.Sector.FULL_SPHERE,\n        levelZeroDelta: new WorldWind.Location(90, 90)\n    },\n    {\n        service: \"https://tiles.esa.maps.eox.at/wms\",\n        layerNames: \"overlay\",\n        title: \"overlay\",\n        numLevels: 19,\n        format: \"image/png\",\n        size: 256,\n        sector: WorldWind.Sector.FULL_SPHERE,\n        levelZeroDelta: new WorldWind.Location(90, 90)\n    }\n]\n\n\n","import WorldWind from \"webworldwind-esa\";\nimport './wwwxx/www-overrides/DrawContext';\nimport './wwwxx/www-overrides/SurfaceShapeTileBuilder';\nimport './wwwxx/www-overrides/SurfaceShapeTile';\nimport './wwwxx/www-overrides/TiledImageLayer';\nimport './wwwxx/www-overrides/GeoJSONParser';\nimport  WorldWindow  from './wwwxx/WorldWindow';\nimport  { useState, useEffect, useRef } from \"react\";\nimport StarFieldLayer from \"./wwwxx/layer/starfield/StarFieldLayer\" // import a custom one as the base url is not set when using wwwx\nimport TexturedSurfacePolygon from './wwwxx/textured/TexturedSurfacePolygon'\n// import wwwx from \"webworldwind-x\";\n\n// import modelsLayer from './satelliteLayer';\nimport satelliteLayers from './satelliteLayers';\nimport orbitLayers from './orbitLayers';\n\nimport {bgLayers, ovLayers} from './layerConfig'; \n\nexport function useEww({ id }) {\n    \n    // const TRAIL_PRODUCT = 1000 * 60 * 60 * 24 //1 day\n    const TRAIL_PRODUCT = 1000 * 60 * 60 * 24 * 10000 //1 day\n    const HEAD_PRODUCT = 1000 * 60 * 60 * 24 * 10000 //1 day\n    const TRAIL_QUICKLOOK = 1000 * 60 * 60 * 24  //1 hour\n    const TRAIL_QUICKLOOKWMS = 1000 * 60 * 60 * 24 //1 day\n\n    const ProductTrail = useRef(1000 * 60 * 60 * 24 * 10000)\n    const QLTrail = useRef(1000 * 60 * 60 )\n    const ProductHead = useRef(1000 * 60 * 60 * 24 * 10000)\n\n    const ZINDEX_QUICKLOOKWMS = 900\n    const ZINDEX_QUICKLOOKS = 800\n    const ZINDEX_STARFIELD = 100\n    const ZINDEX_ATMOSPHERE = 600\n    const ZINDEX_PRODUCTS = 700\n    const ZINDEX_BACKGROUND = 500\n    const ZINDEX_OVERLAY = 1000\n    const ZINDEX_SATELLITE = 200\n  \n    const eww = useRef(null)\n   \n    // const [aoi, setAoi] = useState({type: null, value: null})\n    const [aoi, setAoi] = useState('')\n    const [ewwstate, setEwwState] = useState({})\n    const bg = useRef(1)\n    const ov = useRef(0)\n    const modelOn = useRef(false)\n    const satList = useRef([])\n    const atm = useRef(false)\n    const star = useRef(false)\n    const na = useRef(false)\n    const ge = useRef(false)\n    const qu = useRef(false)\n    const qw = useRef(false)\n    const dem = useRef(false)\n    const proj = useRef(0)\n    // const filter = useRef([])\n    // const [filter,setfilter] = useState(true)\n\n    const s2lut = useRef([])\n\n    const lastepoch = useRef(new Date())\n    const lastclosestitemindex = useRef(-1)\n\n    const color = useRef()\n\n    // Initialise mapsettings\n    function initMap({ clon, clat, alt, atmosphere, starfield, satellites, overlay, satelliteList, background, names, dem, projection}) {\n        eww.current.navigator.range = alt\n        toggleAtmosphere(atmosphere)\n        toggleStarfield(starfield)\n        toggleModel(satellites,satelliteList)\n        toggleBg(background)\n        toggleNames(names)\n        toggleOv(overlay)\n        toggleDem(dem)\n        toggleProjection(projection)\n        moveTo(clat, clon, alt)\n        // eww.current.redraw();\n        setTime()\n    }\n\n    // Turn the globe up north\n    function northUp() {\n        const wwd = eww.current\n        let headingIncrement = wwd.navigator.heading / -20;\n        let runOperation = () => {\n            if (Math.abs(wwd.navigator.heading) > Math.abs(headingIncrement)) {\n                wwd.navigator.heading += headingIncrement;\n                setTimeout(runOperation, 10);\n            } else {\n                wwd.navigator.heading = 0;\n            }\n            wwd.redraw();\n        };\n        setTimeout(runOperation, 10);\n    }\n\n    //toggle atmosphere\n    function toggleAtmosphere(bool) {\n        console.log('toggleAtmosphere: '+bool)\n        let la = getLayerByName('Atmosphere')\n        atm.current = (bool!== null)?bool:!atm.current\n        la.enabled = atm.current\n        eww.current.redraw();\n    }\n\n    //toggle model\n    function toggleModel(bool, satelliteList) {\n        // if(satelliteList)\n        modelOn.current = (bool!= null)?bool:!modelOn.current\n        satList.current = satelliteList\n\n        enableSatelliteLayers(lastepoch.current,modelOn.current,satList.current)\n        enableOrbitLayers(lastepoch.current,modelOn.current,satList.current)\n\n        eww.current.redraw();\n    }\n\n    //toggle starField\n    function toggleStarfield(bool) {\n        console.log('toggleStarfield: '+bool)\n        let ls = getLayerByName('StarField')\n        star.current = (bool!= null)?bool:!star.current\n        ls.enabled = star.current\n        eww.current.redraw();\n    }\n\n    //toggle name overlay\n    function toggleNames(bool) {\n        // console.log('toggleNames: '+bool)\n        let lo = getLayerByName('overlay_bright')\n        na.current = (bool !== null)?bool:!na.current\n        lo.enabled = na.current\n        sortLayers()\n\n        eww.current.redraw()\n    }\n\n    //toggle products and quicklooks layers\n    function toggleGeojson(bool) {\n        // console.log('toggleGeojson: '+bool)\n        let lp = getLayerByName('Products')\n        ge.current = (bool !== null)?bool:!ge.current\n        lp.enabled = ge.current\n        eww.current.redraw()\n    }\n\n    function toggleQuicklooks(bool) {\n        // console.log('toggleQuicklooks: '+bool)\n        let ql = getLayerByName('Quicklooks')\n        qu.current = (bool !== null)?bool:!qu.current\n        ql.enabled = qu.current\n        eww.current.redraw()\n    }\n\n    function setColor(value) {\n        color.current = WorldWind.Color.colorFromHex(value.substring(1)+'99')\n        let products = getLayerByName('Products').renderables\n        for( let i = 0; i < products.length; i++) {\n            products[i].highlightAttributes.interiorColor = color.current\n        }\n        eww.current.redraw()\n    }\n\n    function setMode(value) {\n        // console.log('set mode'+value)\n        switch (value) {\n            case \"point\":\n                ProductHead.current = 0\n                ProductTrail.current = 1000 * 60 * 60 * 24\n                // QLTrail.current = 1000 * 60 * 60 * 24 *12\n                break;\n            case \"global\":\n                ProductHead.current = 1000 * 60 * 60 * 24 * 10000\n                ProductTrail.current =  1000 * 60 * 60 * 24 * 10000\n                break;\n            case \"animated\":\n                ProductHead.current = 0\n                ProductTrail.current =  1000 * 60 * 60 * 24 * 60\n                break;\n            default:\n                ProductHead.current = 1000 * 60 * 60 * 24 * 10000\n                ProductTrail.current =  1000 * 60 * 60 * 24 * 10000\n        }\n    }\n\n\n\n    function toggleBg(background) {\n        let bgindex = -1\n        background = (background === null)?  (bg.current + 1)%bgLayers.length : background % bgLayers.length\n        bg.current = background\n        for(let i=0 ; i<eww.current.layers.length ; i++) {\n            if(eww.current.layers[i].type === 'background' && eww.current.layers[i].type) {\n                bgindex += 1\n                eww.current.layers[i].enabled = (bgindex === background) ? true : false\n            }\n        }\n        eww.current.redraw();\n    }\n\n\n    // to be redone!!\n    function toggleOv(overlay) {\n        // console.log(overlay+' '+(ovLayers.length+1)+' '+ov.current)\n        // console.log((ov.current + 1)%(ovLayers.length+1))\n        let ovindex = -1\n        ov.current = (overlay == null)?  (ov.current + 1)%(ovLayers.length+1) : overlay % (ovLayers.length+1)\n        \n        for(let i=0 ; i<eww.current.layers.length ; i++) {\n            if(eww.current.layers[i].type === 'overlay' && eww.current.layers[i].type) {\n                ovindex +=1\n                eww.current.layers[i].enabled = (ovindex === ov.current) ? true : false\n            }\n        }\n        eww.current.redraw();\n    }\n    \n    //toggle DEM \n    function toggleDem(bool) {\n        // console.log('toogleDem: '+bool)\n        dem.current = (bool !== null)?bool:!dem.current\n        var elevationModel\n        if(dem.current) {\n            console.log('Switching to Copernicus Dem')\n            elevationModel = new WorldWind.ElevationModel();\n            elevationModel.addCoverage(new WorldWind.TiledElevationCoverage({\n                coverageSector: WorldWind.Sector.FULL_SPHERE,\n                resolution: 0.008333333333333,\n                retrievalImageFormat: \"image/tiff\",\n                minElevation: -11000,\n                maxElevation: 8850,\n                urlBuilder: new WorldWind.WcsTileUrlBuilder(\"https://dem.esa.maps.eox.at/elevation\", \"copdem\", \"2.0.1\")\n                }));    \n            \n        } else {\n            console.log('Switching to NASA Dem')\n            elevationModel = new WorldWind.EarthElevationModel()\n        }\n        eww.current.globe.elevationModel = elevationModel\n        eww.current.redraw();\n    }\n\n    function toggleProjection(projection) {\n\n        let supportedProjections = [ \"3D\", \"Equirectangular\", \"Mercator\",\"North Polar\",\"South Polar\"]\n        let nbproj = supportedProjections.length\n        proj.current = (projection === null) ? (proj.current + 1)%nbproj : projection%nbproj\n\n        switch (supportedProjections[proj.current]) {\n            case \"3D\":\n                eww.current.globe.projection = new WorldWind.ProjectionWgs84();\n                break;\n            case \"Equirectangular\":\n                eww.current.globe.projection = new WorldWind.ProjectionEquirectangular();\n                break;\n            case \"Mercator\":\n                eww.current.globe.projection = new WorldWind.ProjectionMercator();\n                break;\n            case \"North Polar\":\n                eww.current.globe.projection = new WorldWind.ProjectionPolarEquidistant(\"North\");\n                break;\n            case \"South Polar\":\n                eww.current.globe.projection = new WorldWind.ProjectionPolarEquidistant(\"South\");\n                break;\n            default:\n            eww.current.globe.projection = new WorldWind.ProjectionWgs84();\n        }\n        eww.current.redraw() \n    }\n\n    const sortLayers = ()=>{\n        eww.current.layers.sort((a, b) => {\n            return a.zIndex - b.zIndex;\n        })\n    }\n    \n    const setFilter = (filter)=>{\n        console.log(filter)\n        // setfilter(filter)\n        let layer = getLayerByName('Products')\n        for (let j = 0; j < layer.renderables.length; j++) {\n            layer.renderables[j].filtered = !filterRenderable(layer.renderables[j],filter)\n        }\n        enableRenderables(layer, lastepoch.current, ProductHead.current, ProductTrail.current)\n\n        let tics = getTics(layer)\n\n        layer = getLayerByName('Quicklooks')\n        for (let j = 0; j < layer.renderables.length; j++) {\n            layer.renderables[j].filtered = !filterRenderable(layer.renderables[j],filter)\n        }\n        enableRenderables(layer, lastepoch.current, 0, QLTrail.current)\n\n\n        setEwwState((ewwstate) => { return {...ewwstate, tics: tics}})\n        eww.current.redraw() \n    }\n \n    function  getViewPolygon () {\n        let view = eww.current.viewport\n        let area = {}\n        let polygon = ''\n        // console.log('view: ' + view.x + '/' + view.y + '/' + view.width + '/' + view.height);\n\n        let bl ;\n        try { \n            bl =  eww.current.pickTerrain(eww.current.canvasCoordinates(view.x, view.y + view.height)).terrainObject().position\n            bl.latitude = Math.round(bl.latitude * 10000)/10000\n            bl.longitude = Math.round(bl.longitude * 10000)/10000\n        }\n        catch(err) {bl = null;}\n\n\n        let tr ;\n        try { \n            tr = eww.current.pickTerrain(eww.current.canvasCoordinates(view.x + view.width, view.y)).terrainObject().position\n            tr.latitude = Math.round(tr.latitude * 10000)/10000\n            tr.longitude = Math.round(tr.longitude * 10000)/10000\n        }\n        catch(err) {tr = null;}\n\n        //console.log(bl.longitude+'/'+bl.latitude+'/'+tr.longitude+'/'+tr.latitude);\n        if(bl == null || tr == null )  {\n            //   area = {type:\"bbox\", value:\"-180,-90,180,90\"};\n              polygon = ''\n        } else {\n              area = {\n                    type: \"bbox\",\n                    value:\n                           bl.longitude +','\n                          + bl.latitude +','\n                          +tr.longitude +','\n                          +tr.latitude\n              };\n\n              polygon = 'POLYGON((' \n                + bl.longitude + ' ' + bl.latitude + ',' \n                + tr.longitude + ' ' + bl.latitude + ',' \n                + tr.longitude + ' ' + tr.latitude + ',' \n                + bl.longitude + ' ' + tr.latitude + ',' \n                + bl.longitude + ' ' + bl.latitude + '))' \n        }\n        return polygon\n\n    }\n    \n    const addGeojson = (url,epoch) => {\n\n        console.log('adding geo: ')\n\n        function shapeConfigurationCallback(geometry, properties) {\n            let configuration = {};\n            configuration.userProperties = properties\n    \n            let placemarkAttributes = new WorldWind.PlacemarkAttributes(null);\n            placemarkAttributes.imageScale = 10;\n            placemarkAttributes.imageColor = new WorldWind.Color(0, 1, 1, 0.2);\n            placemarkAttributes.labelAttributes.offset = new WorldWind.Offset(\n                WorldWind.OFFSET_FRACTION, 5,\n                WorldWind.OFFSET_FRACTION, 5);\n            //placemarkAttributes.imageSource = whiteDot;\n    \n    \n            if (geometry.isPointType() || geometry.isMultiPointType()) {\n                configuration.attributes = new WorldWind.PlacemarkAttributes(placemarkAttributes);\n                \n            } else if (geometry.isLineStringType() || geometry.isMultiLineStringType()) {\n                configuration.attributes = new WorldWind.ShapeAttributes(null);\n                configuration.attributes.drawOutline = true;\n                configuration.attributes.outlineColor = new WorldWind.Color(\n                    0.1 * configuration.attributes.interiorColor.red,\n                    0.3 * configuration.attributes.interiorColor.green,\n                    0.7 * configuration.attributes.interiorColor.blue,\n                    1\n                );\n                configuration.attributes.outlineWidth = 1;\n            } else if (geometry.isPolygonType() || geometry.isMultiPolygonType()) {\n                configuration.attributes = new WorldWind.ShapeAttributes(null);\n                configuration.attributes.interiorColor = new WorldWind.Color(1, 0, 0, 0.2);\n                configuration.attributes.interiorColor = new WorldWind.Color(1, 0, 0, 0.2);\n                // configuration.attributes.outlineColor = new WorldWind.Color(1, 0, 1, 0.3);\n                // configuration.attributes.outlineWidth = 5;\n\n                configuration.highlightAttributes = new WorldWind.ShapeAttributes(configuration.attributes);\n                configuration.highlightAttributes.interiorColor = color.current;\n                // configuration.highlightAttributes.outlineColor = new WorldWind.Color(1, 0, 0, 1);\n                // configuration.highlightAttributes.outlineWidth = 5;\n                // configuration.attributes.drawOutline = true\n\n                // configuration.attributes.applyLighting = true;\n                // configuration.attributes.imageSource = properties.quicklookUrl\n\n            }\n    \n            //console.log(configuration.attributes);\n            return configuration;\n        }\n\n        function setProductTimeRange(productlayer) {\n            for(let i=0; i<productlayer.renderables.length; i++) {\n                let acq = productlayer.renderables[i].userProperties.earthObservation.acquisitionInformation[0].acquisitionParameter\n                let start = new Date(acq.acquisitionStartTime.getTime() )\n                let end = new Date(acq.acquisitionStopTime.getTime())\n                productlayer.renderables[i].timeRange = [start, end]\n            }\n        }\n        \n        function loadCompleteCallback() {\n            // console.log(renderableLayer)\n            setProductTimeRange(productlayer)\n            let closestrenderable = enableRenderables(productlayer, epoch, ProductHead.current, ProductTrail.current)\n            let tics = getTics(productlayer)\n            // let newtics = []\n            // newtics = state.geojson.features.map( (item) => {\n            // return item.properties.earthObservation.acquisitionInformation[0].acquisitionParameter.acquisitionStartTime.getTime()\n            sortLayers()\n            setEwwState((ewwstate) => { return {...ewwstate, closestRenderable: closestrenderable, tics: tics}})\n\n\n            eww.current.redraw();\n        }\n    \n        let productlayer = getLayerByName('Products')\n        // we use a custom version of GeoJson Parser which only creates TexturedSurfacePolygon renderables extending our custom SurfaceShape\n        // !!! Only Polygon and multi-Polygon geometries are supported. Other types will cause the worldwind engine to crash in endless loops...\n        let geoJson = new WorldWind.GeoJSONParser(url);\n        geoJson.load(loadCompleteCallback, shapeConfigurationCallback, productlayer);\n    }\n\n    function removeGeojson() {\n\n        getLayerByName('Products').removeAllRenderables()\n        eww.current.redraw();\n      }\n\n    function addWMS() {\n    }\n\n    async function addQuicklookWMS(renderable) {\n        // console.log(renderable)\n        // console.log(renderable.computeSectors(eww.current.drawContext))\n        // console.log(WorldWind.Sector.FULL_SPHERE)\n\n        // for S2:  \n        // https://view.onda-dias.eu/instance00/ows?&service=WMS&request=GetMap&layers=S2L1C_TRUE_COLOR&styles=&format=image/png&transparent=true&version=1.1.1&width=1500&height=1000&srs=EPSG:4326&bbox=12.357903,41.800495,12.625694,41.984760\n\n        // for S1:  \n        // https://view.onda-dias.eu/instance00/ows?&service=WMS&request=GetMap&layers=S1B_IW_GRDH_1SDV_20190520T050758_20190520T050823_016323_01EB81_6EB6&styles=&format=image%2Fpng&transparent=true&version=1.1.1&width=256&height=256&srs=EPSG%3A3857&bbox=2035059.441064533,7044436.526761846,2191602.4749925737,7200979.560689885\n        let layername = null\n        if(renderable.userProperties.title.indexOf('MSIL1C') >= 0) layername = 'S2L1C_TRUE_COLOR'\n        if(renderable.userProperties.title.indexOf('MSIL2A') >= 0) layername = 'S2L2A_TRUE_COLOR'\n        if(renderable.userProperties.title.indexOf('GRD') >= 0) layername = 'S1_IW_GRDH_FullResolution'\n\n        if (layername === null) return\n\n        let wmsConfigQL = {\n            service: \"https://view.onda-dias.eu/instance00/ows\",\n            // layerNames: renderable.userProperties.title,\n            layerNames: layername,\n            // layerNames: 'S1_IW_GRDH_FullResolution',\n            \n            // title: renderable.userProperties.title,\n            title: 'QuicklookWMS',\n            numLevels: 19,\n            format: \"image/png\",\n            size: 256,\n            sector: renderable.sector,\n            // sector: renderable.sector,\n            // sector: WorldWind.Sector.FULL_SPHERE,\n            levelZeroDelta: new WorldWind.Location(90, 90)\n        }\n\n        // eww.current.removeLayer(getLayerByName('quicklookWMS') )\n        removeQuicklookWMS()\n        let qllayer =  new WorldWind.WmsLayer(wmsConfigQL, renderable.timeRange[1].toJSON())\n        let timerange = []\n        timerange[1] = renderable.timeRange[1]\n        timerange[0] = new Date(timerange[1].getTime() - TRAIL_QUICKLOOKWMS)\n        qllayer.timeRange = timerange\n        qllayer.zIndex = ZINDEX_QUICKLOOKWMS \n        qllayer.maxActiveAltitude = 3000000\n        eww.current.addLayer(qllayer)\n        sortLayers()\n        eww.current.redraw()\n        console.log(eww.current.layers)\n    }\n\n    function removeQuicklookWMS() {\n        eww.current.removeLayer(getLayerByName('QuicklookWMS'))\n        eww.current.redraw()\n    }\n\n\n    function toggleQuicklookWMS(bool) {\n        console.log('QuicklookWMS: '+bool)\n        let ql = getLayerByName('QuicklookWMS')\n        if (!ql) return\n        qw.current = (bool !== null)?bool:!qw.current\n        ql.enabled = qw.current\n        eww.current.redraw()\n    }\n\n\n    function getLayerByName(name) {\n        for (let i = 0; i < eww.current.layers.length; i++) {\n            // console.log('display name: '+eww.current.layers[i].displayName)\n            if (eww.current.layers[i].displayName === name) return eww.current.layers[i]\n        }\n        return null\n    }\n\n    function getIndexOfRenderable(renderable,layer) {\n        for (let j = 0; j < layer.renderables.length; j++) {\n            if (layer.renderables[j].userProperties.title === renderable.userProperties.title) return j\n        }\n        return null\n    }\n\n    function enableSatelliteLayers(epoch,bool,satlist) {\n        for(let l=0 ; l<satelliteLayers.length ; l++) {\n            if(satelliteLayers[l].timeRange[0].getTime() > epoch || satelliteLayers[l].timeRange[1].getTime() < epoch) {\n                satelliteLayers[l].enabled = false\n\n                // console.log('satstart: '+satelliteLayers[l].timeRange[0]+'  /  '+(new Date(epoch)))\n            } else {\n                satelliteLayers[l].setTime(new Date(epoch))\n                satelliteLayers[l].enabled = satlist.includes(satelliteLayers[l].key) && bool\n            }\n        }\n        // console.log(satelliteLayers)\n    }\n\n    function enableOrbitLayers(epoch,bool,satlist) {\n        for(let l=0 ; l<orbitLayers.length ; l++) {\n            if(orbitLayers[l].timeRange[0].getTime() > epoch || orbitLayers[l].timeRange[1].getTime() < epoch) {\n                orbitLayers[l].enabled = false\n                // console.log('satstart: '+satelliteLayers[l].timeRange[0]+'  /  '+(new Date(epoch)))\n            } else {\n                orbitLayers[l].setTime(new Date(epoch))\n                orbitLayers[l].enabled = satlist.includes(satelliteLayers[l].key) && bool\n            }\n        }\n    }\n\n    function enableLayer(layer, epoch, trailduration) {\n        return\n        if(layer === null) return\n        if(epoch !== 0) {\n            let visibilityend = layer.timeRange[1].getTime()\n            layer.enabled = (epoch-trailduration < visibilityend && visibilityend <= epoch) ? true : false   \n        } else {\n            layer.enabled = false\n        }         \n    }\n\n    function getTics(layer) {\n        let newtics = []\n        for(let i = 0 ; i < layer.renderables.length ; i++) {\n            if(!layer.renderables[i].filtered || layer.renderables[i].filtered !== true ) {\n                newtics.push(layer.renderables[i].userProperties.earthObservation.acquisitionInformation[0].acquisitionParameter.acquisitionStartTime.getTime())\n            }\n        }\n        // console.log(newtics)\n        return newtics\n    }\n\n    function filterRenderable(renderable,filter) {\n        // let newtics = []\n        // if(!state.geojson) return\n        // newtics = state.geojson.features.map( (item) => {\n        //     return item.properties.earthObservation.acquisitionInformation[0].acquisitionParameter.acquisitionStartTime.getTime()\n        // })\n        let test = true\n        if(!renderable.userProperties) return true\n        // console.log(renderable)\n        for(let i = 0; i < filter.length; i++) {\n\n            if(filter[i].attribute === 'relativePassNumber' ) {\n                test *= renderable.userProperties.earthObservation.acquisitionInformation[0].acquisitionParameter.relativePassNumber === filter[i].value\n            }\n        }\n        // console.log(test)\n        return test\n    }\n\n    function enableRenderables(layer, time, head, trail) {\n        // console.log('enabling '+time+' ' +head+'/'+trail)\n        // console.log(layer)\n        if(layer.renderables.length === 0) {\n            return null\n        }\n        let closestrenderableindex = -1\n        let lastdistance = 99999999999999999\n\n        let start, end, filtered\n        for (let j = 0; j < layer.renderables.length; j++) {\n            start = layer.renderables[j].timeRange[0].getTime()\n            end = layer.renderables[j].timeRange[1].getTime()\n            filtered = layer.renderables[j].filtered?layer.renderables[j].filtered:false\n\n\n\n            if ( end  >= (time.getTime() - trail) && start <= (time.getTime() + head) && !filtered) {\n                layer.renderables[j].enabled = true\n                layer.renderables[j].highlighted = false \n            } else {\n                layer.renderables[j].enabled = false\n                layer.renderables[j].highlighted = false\n            }\n\n            //find closest in the past\n            if( start <= time.getTime() && Math.abs(start - time.getTime()) < lastdistance && !filtered) {\n                closestrenderableindex = j\n                lastdistance = Math.abs(start - time.getTime())\n            }\n                            \n\n        }\n\n        if(closestrenderableindex == -1) {\n            // console.log(\"closest not found\")\n            closestrenderableindex = layer.renderables.length - 1\n        }\n        // make the closest one always visible \n        layer.renderables[closestrenderableindex].enabled = true\n        layer.renderables[closestrenderableindex].highlighted = true\n\n        return (layer.renderables[closestrenderableindex])\n    }\n\n    function enableRenderables_old(layer, time, trailduration) {\n        if(layer.renderables.length === 0) {\n            return null\n        }\n        let closestrenderableindex = -1\n        let oldestrenderableindex = -1\n        let youngestrenderableindex = -1\n        let youngestrenderableepoch= 0\n        let oldestrenderableepoch = (new Date(2100,0)).getTime()\n        let closestrenderableepoch = 0\n        for (let j = 0; j < layer.renderables.length; j++) {\n            let renderable = layer.renderables[j]\n            if (time !== 0) {\n\n                let visibilityend = renderable.timeRange[1].getTime() + HEAD_PRODUCT\n                let filtered = layer.renderables[j].filtered?layer.renderables[j].filtered:false\n\n                // find closest\n                if( visibilityend > closestrenderableepoch && visibilityend <= time && !filtered) {\n                    closestrenderableindex = j\n                    closestrenderableepoch = visibilityend\n                } \n                if( visibilityend <= oldestrenderableepoch && !filtered) {\n                    oldestrenderableindex = j\n                    oldestrenderableepoch = visibilityend\n                }\n\n                if( visibilityend >= youngestrenderableepoch && !filtered) {\n                    youngestrenderableindex = j\n                    youngestrenderableepoch = visibilityend\n                }\n\n\n                renderable.enabled = (time-trailduration < visibilityend && visibilityend <= time) ? !filtered : false   \n            } else {\n                renderable.enabled = false\n            }         \n        }\n        // make the closest one always visible \n        if(closestrenderableindex !== -1) {\n            console.log('closet not found')\n            layer.renderables[closestrenderableindex].enabled = true\n            layer.renderables[closestrenderableindex].highlighted = true\n            // if(lastclosestitemindex.current !== -1) layer.renderables[lastclosestitemindex.current].highlighted = false\n\n        } else {\n            closestrenderableindex = oldestrenderableindex\n        }\n        console.log('last closest index:'+ lastclosestitemindex.current)\n        console.log('closest index:'+ closestrenderableindex)\n        lastclosestitemindex.current = closestrenderableindex\n\n        // make the youngest one visible if closest not found\n        // if(time <= oldestrenderableepoch && closestrenderableindex === -1) {\n        //     layer.renderables[oldestrenderableindex].enabled = true\n        //     closestrenderableindex = oldestrenderableindex\n        // } \n        return (layer.renderables[closestrenderableindex])\n    }\n\n\n\n\n    const controller = useRef([])\n\n    const flipImage = (srcBase64, callback) => {\n        const img = new Image();\n    \n        // https://stackoverflow.com/questions/20600800/js-client-side-exif-orientation-rotate-and-mirror-jpeg-images\n        // https://stackoverflow.com/questions/7584794/accessing-jpeg-exif-rotation-data-in-javascript-on-the-client-side/32490603#32490603\n        const srcOrientation = 4;\n        img.onload = function() {\n            var width = img.width,\n                height = img.height,\n                canvas = document.createElement('canvas'),\n                ctx = canvas.getContext(\"2d\");\n        \n            // set proper canvas dimensions before transform & export\n            if (4 < srcOrientation && srcOrientation < 9) {\n              canvas.width = height;\n              canvas.height = width;\n            } else {\n              canvas.width = width;\n              canvas.height = height;\n            }\n            // transform context before drawing image\n            switch (srcOrientation) {\n              case 2: ctx.transform(-1, 0, 0, 1, width, 0); break;\n              case 3: ctx.transform(-1, 0, 0, -1, width, height); break;\n              case 4: ctx.transform(1, 0, 0, -1, 0, height); break;\n            //   case 4: ctx.scale(1,-1); break;\n              case 5: ctx.transform(0, 1, 1, 0, 0, 0); break;\n              case 6: ctx.transform(0, 1, -1, 0, height, 0); break;\n              case 7: ctx.transform(0, -1, -1, 0, height, width); break;\n              case 8: ctx.transform(0, -1, 1, 0, 0, width); break;\n              default: break;\n            }\n        \n            // draw image\n            ctx.drawImage(img, 0, 0);\n        \n            // export base64\n            callback(canvas.toDataURL());\n\n          };\n    \n          img.src = srcBase64;\n        //   return(img)\n          \n    }\n\n\n    const getS2LUT = async (url) => {\n        try {\n            \n            let response = await fetch (url, {cache: \"force-cache\"})\n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n            let text = await response.text()\n\n            let templut= text.split('\\n')\n            let lut = []\n            let extract = []\n            for( let i= 0; i< templut.length; i++) {\n                extract = templut[i].split(':')\n                lut[i] = {tile:extract[0], footprint: extract[1]}\n\n            }\n            // console.log(s2lut)\n            s2lut.current = lut\n        }\n        catch (err) {\n            console.log('error getting LUT')\n        }\n    }\n\n    const getPolygonbyS2tile = (tile) => {\n        let i= 0\n        while(s2lut.current[i].tile !== tile) {\n            i++\n        }\n        let coordstring = s2lut.current[i].footprint.slice(15,s2lut.current[i].footprint.length-3)\n        let coordlist = coordstring.split(',')\n        let boundaries = []\n        for(let j = 0; j < coordlist.length; j++) {\n            let coord = coordlist[j].split(' ')\n            let lat = coord[1]\n            let lon = coord[0]\n            boundaries.push({latitude: lat, longitude: lon})\n        }\n        let multiboundaries = []\n        multiboundaries[0] = boundaries\n        return multiboundaries\n    }\n\n    const createQL = async (url, footprint, timerange, attributes, userProperties, quicklookLayer, renderable, credentials) => {\n\n        async function createImage(url) {\n            return new Promise((resolve, reject) => {\n                flipImage(url, (base64src) => {\n                    const imageOfQuickLook = new Image();\n                    imageOfQuickLook.addEventListener('load', () => {\n                        resolve(imageOfQuickLook);\n                    }, false);\n                    imageOfQuickLook.src = base64src;\n                });\n            });\n        }\n    \n\n        let abortcontroller = new AbortController()\n        controller.current.push(abortcontroller)\n\n        // if quicklook is already there, do nothing\n        for(let i = 0; i < quicklookLayer.renderables.length; i++) {\n            if(quicklookLayer.renderables[i].displayName === timerange[1].toUTCString()) {\n                console.log('QL already there')\n                enableRenderables(quicklookLayer, lastepoch.current, 0, QLTrail.current)\n    \n                return\n            }\n        }\n\n        try {\n            \n            let response = await fetch (url, \n                {mode: 'cors', \n                credentials: 'include', \n                signal: abortcontroller.signal, \n                headers: {\n                    \"Content-Type\": \"text/plain\",\n                    'Authorization': 'Basic ' + window.btoa(credentials.user+\":\"+credentials.pass),\n                },\n                cache: \"force-cache\"})\n            if (!response.ok) {\n                throw new Error(`HTTP error (QL)! status: ${response.status}`);\n            }\n            \n            let blob = await response.blob()\n            let objectURL = URL.createObjectURL(blob)\n            let image = await createImage(objectURL)\n            \n            let quicklook =  new TexturedSurfacePolygon(footprint,attributes)\n            // quicklook.maxImageWidth = 64\n            // quicklook.maxImageHeight = 64\n            quicklook.maximumNumEdgeIntervals = 2;\n            quicklook.polarThrottle = 1;\n            quicklook.timeRange = timerange\n            quicklook.displayName = timerange[1].toUTCString()\n            quicklook.zIndex = ZINDEX_QUICKLOOKS\n            quicklook.userProperties = userProperties\n            // quicklook.enabled = renderable.enabled\n            \n            quicklook.image = image\n\n            // setEwwState((ewwstate) => { return {...ewwstate, image: image}})\n            quicklookLayer.addRenderable(quicklook)\n\n            // keep the last 20\n            // while (quicklookLayer.renderables.length > 20) {\n            //     quicklookLayer.renderables.shift()\n            // }\n    \n            URL.revokeObjectURL(objectURL)\n            sortLayers()\n            // console.log(eww.current.layers)\n            enableRenderables(quicklookLayer, lastepoch.current, 0, QLTrail.current)\n            eww.current.redraw()\n            \n        } catch(err) {\n            console.log(\"Error contacting server (QL)...\")\n            // console.log(err)\n        }\n    }\n\n    const addQuicklook_old = async (renderable) => {\n        if(renderable) {\n            // add1Quicklook(renderable)\n            let prodlayer = getLayerByName('Products')\n            let idx = getIndexOfRenderable(renderable,prodlayer)\n            // console.log(idx)\n            let j = 0\n            for(let i = idx ; idx < prodlayer.renderables.length && j < 10 ; idx++) {\n                if(!prodlayer.renderables[idx].filtered || prodlayer.renderables[idx].filtered !== true ) {\n                    add1Quicklook(prodlayer.renderables[idx])\n                    j+=1\n                }\n            }\n        }\n    }\n\n    const addQuicklook =  (renderable, credentials) => {\n        if(renderable) {\n            // add1Quicklook(renderable)\n            let prodlayer = getLayerByName('Products')\n            let idx = getIndexOfRenderable(renderable,prodlayer)\n            // console.log(idx)\n            abortAddQuicklooks()\n            let j = 0\n            let renderables = []\n            for(let i = idx ; idx < prodlayer.renderables.length && j < 10 ; idx++) {\n                if(!prodlayer.renderables[idx].filtered || prodlayer.renderables[idx].filtered !== true ) {\n                    j+=1\n                    renderables.push(prodlayer.renderables[idx])\n                }\n            }\n            const abortController = new AbortController();\n            controller.current.push(abortController)\n            addQuicklooks(renderables, credentials, abortController.signal)\n\n        }\n    }\n\n    const addQuicklooks = async (renderables, credentials, abortsignal) => {\n        return new Promise( ( resolve, reject ) => {\n            // console.log(renderables)\n\n            abortsignal.addEventListener( 'abort', () => { \n                // console.log('aborting QL')\n                reject()\n            })\n\n            for(let i = 0; i < renderables.length; i++) {\n\n                // do something slow\n                // const timeout = setTimeout( ()=> {\n                //     console.log('doing QL');\n                //   }, 5000 );\n                  add1Quicklook(renderables[i], credentials)\n    \n            }\n            resolve()\n        } )\n    }\n\n    const add1Quicklook = async (renderable, credentials) => {\n        if(renderable) {\n\n            let url = renderable.userProperties.quicklookUrl\n            if (url == null) {\n                console.log(\"no QL\")\n                return\n            }\n            // console.log(renderable)\n            let footprint \n            // console.log(renderable.boundaries[0])\n\n            // hack to replace the S2 footprints by the LUT footprints (UMS tile coordinates)\n            if(renderable.userProperties.earthObservation.productInformation.tile) {\n                footprint = getPolygonbyS2tile(renderable.userProperties.earthObservation.productInformation.tile)\n            } else {\n                footprint = renderable.boundaries[0]\n            }\n            \n            let highestlat = 0\n            for(let i = 0 ; i < footprint.length ; i++) {\n                if(Math.abs(footprint[i].latitude) > highestlat) highestlat = footprint[i].latitude\n            }\n            // try to filter the quicklook that crashes the shape\n            if(highestlat > 84) {\n                console.log('I refuse')\n                console.log(renderable.boundaries[0])\n                return\n            }\n\n            let timerange =[]\n            timerange[1] = renderable.timeRange[1]\n            timerange[0] = renderable.timeRange[0]\n            let attributes = renderable.attributes\n            let userProperties = renderable.userProperties\n            let quicklookLayer = getLayerByName('Quicklooks')\n            let enabled = renderable.enabled\n\n            await createQL(url, footprint, timerange, attributes, userProperties, quicklookLayer, renderable, credentials)\n        }\n    }\n\n    function abortQLUrls() {\n        // abort ongoing QL calls\n        for (let i = 0; i < controller.current.length; i++) {\n            controller.current[i].abort()\n\n        }\n        controller.current = []\n    }\n\n    function abortAddQuicklooks() {\n        // abort ongoing QL calls\n        for (let i = 0; i < controller.current.length; i++) {\n            controller.current[i].abort()\n        }\n        controller.current = []\n    }\n\n    function removeQuicklooks() {        \n        // abort ongoing QL calls\n        for (let i = 0; i < controller.current.length; i++) {\n            controller.current[i].abort()\n\n        }\n        controller.current = []\n\n        getLayerByName('Quicklooks').removeAllRenderables()\n\n        eww.current.redraw()\n    }\n\n    async function setTime(epoch) {\n        epoch = (epoch)?epoch:lastepoch.current\n        // console.log(epoch)\n\n        if(star.current) {\n            getLayerByName('StarField').time = new Date(epoch)\n        }\n        if(atm.current) {\n            getLayerByName('Atmosphere').time = new Date(epoch)\n        }\n        if(qu.current) {\n            enableRenderables(getLayerByName('Quicklooks'), epoch, 0, QLTrail.current)\n        }\n\n        let closestrenderable = null\n        closestrenderable = enableRenderables(getLayerByName('Products'), epoch, ProductHead.current, ProductTrail.current)\n        \n        if(qw.current) {\n            enableLayer(getLayerByName('QuicklookWMS'), epoch, 0,  QLTrail.current)\n        }\n\n        if(modelOn.current) {\n            enableSatelliteLayers(epoch,modelOn.current,satList.current)\n            enableOrbitLayers(epoch,modelOn.current,satList.current)\n        }\n\n        eww.current.redraw();\n        lastepoch.current = epoch\n        setEwwState((ewwstate) => { return {...ewwstate, closestRenderable: closestrenderable}})\n    }\n\n    async function moveTo(lat, lon, alt) {\n        // setTimeout(() => {\n            //  console.log('move to: '+alt)\n\n            // check if lat/lon is same as last time.\n            if(lat === ewwstate.latitude && lon === ewwstate.longitude) {\n                console.log('already moved there...')\n                return\n            }\n            eww.current.goToAnimator.travelTime = 1300;\n\n            try { \n                eww.current.goTo(new WorldWind.Position(lat, lon, lat));\n                // if(alt) {\n                //     eww.current.goTo(new WorldWind.Position(lat, lon, alt));\n                // } else {\n                //     eww.current.goTo(new WorldWind.Position(lat, lon));\n                // }\n            } catch(e) {console.log(e)}\n\n            eww.current.navigator.range = alt;\n            // console.log(eww.current.navigator.range)\n            eww.current.navigator.camera.applyLimits()\n            eww.current.redraw();\n            setTime()\n\n            // }, 1000)\n        }\n\n\n    function getRenderables(x,y) {\n        let pickList = eww.current.pick(eww.current.canvasCoordinates(x, y))\n        let pickedItems = []\n        for (let i = 0; i < pickList.objects.length; i++) {\n            if (pickList.objects[i].userObject instanceof TexturedSurfacePolygon && pickList.objects[i].parentLayer.displayName==='Products') {\n                pickedItems.push(pickList.objects[i].userObject) \n            }\n        }\n        return pickedItems\n    }\n\n    // callback from eww   \n    const setGlobeStates = (wwd ,stage) => {\n\n        if (stage === WorldWind.AFTER_REDRAW) {\n            let lo = wwd.navigator.lookAtLocation.longitude\n            let la = wwd.navigator.lookAtLocation.latitude\n            let al = wwd.navigator.range\n            let vp = (al < 2000000?getViewPolygon():'')\n            let vpp = 'POINT('+lo.toFixed(4)+' '+la.toFixed(4)+')' \n            setEwwState((ewwstate) => { return {...ewwstate, longitude:lo, latitude: la, altitude: al, viewpolygon: vp, viewpoint:vpp}}) \n        }\n\n    }\n\n    // handler for tap/click\n\n    const handleClick  = (recognizer) => {\n        // console.log('click')\n        let x = recognizer.clientX\n        let y = recognizer.clientY\n        // Perform the pick. Must first convert from window coordinates to canvas coordinates, which are\n        // relative to the upper left corner of the canvas rather than the upper left corner of the page.\n        let pickList = eww.current.pick(eww.current.canvasCoordinates(x, y));\n        // console.log(pickList)\n        if (pickList.terrainObject()) {\n            // position = pickList.terrainObject().position;\n            // store list of selected footprints in a string for later comparison\n            eww.current.removeLayer(getLayerByName('quicklook') )\n            // de-highlight all rendereables\n            for (let i = 0; i < eww.current.layers.length; i++) {\n                if (eww.current.layers[i].displayName.includes('Products:')) {                    \n                    for (let j = 0; j < eww.current.layers[i].renderables.length; j++) {\n                        let renderable = eww.current.layers[i].renderables[j]\n                        renderable.highlighted = false\n                    }\n                }\n            }\n    \n            // ... and now highlight all picked rendereables\n            let pickedItems = []\n            for (let i = 0; i < pickList.objects.length; i++) {\n                if (pickList.objects[i].userObject instanceof WorldWind.SurfaceShape) {\n                    pickedItems.push(pickList.objects[i].userObject) \n                    pickList.objects[i].userObject.highlighted = !pickList.objects[i].userObject.highlighted\n                    \n                    addQuicklookWMS(pickList.objects[i].userObject)\n                }\n            }\n            // console.log(pickedItems)\n            setEwwState((ewwstate) => { return {...ewwstate, pickedItems: pickedItems}})\n            eww.current.redraw()\n        } else {\n            console.log('No position !');\n            return;\n        }\n\n\n    }\n    const handleDoubleClick  = (recognizer) => {\n        console.log('double click')\n    }\n\n    const handleDoubleClick2  = (recognizer) => {\n        console.log('double click')\n        let x = recognizer.clientX\n        let y = recognizer.clientY\n        let pickList = eww.current.pick(eww.current.canvasCoordinates(x, y));\n\n        let position;\n  \n  \n        // Get coordinates of clicked point and list of selected footprints. Do nothing if click done outside the globe.\n        if (pickList.terrainObject()) {\n            position = pickList.terrainObject().position;\n            // eww.current.goTo(new WorldWind.Location(position.latitude, position.longitude));\n\n            let point = \"POINT(\"+position.longitude+' '+position.latitude+\")\"\n            \n            setEwwState((ewwstate) => { return {...ewwstate, aoi: point}}) \n    \n        } else {\n              console.log('No position !');\n              setEwwState((ewwstate) => { return {...ewwstate, aoi: ''}})\n        }\n    }\n\n\n    // didMount effect\n    useEffect(() => {\n        console.log(\"Creating the world...\")\n\n        // to use DEM from Eox ESA Map server\n        var elevationModel = new WorldWind.ElevationModel();\n        elevationModel.removeAllCoverages()\n        elevationModel.addCoverage(new WorldWind.TiledElevationCoverage({\n            coverageSector: WorldWind.Sector.FULL_SPHERE,\n            resolution: 0.008333333333333,\n            retrievalImageFormat: \"image/tiff\",\n            minElevation: -11000,\n            maxElevation: 8850,\n            urlBuilder: new WorldWind.WcsTileUrlBuilder(\"https://dem.esa.maps.eox.at/elevation\", \"copdem\", \"2.0.1\")\n            }));\n        // eww.current = new WorldWind.WorldWindow(id, elevationModel);\n\n\n        eww.current = new WorldWindow(id);\n\n        \n\n        // eww.current.worldWindowController = null;\n        eww.current.redrawCallbacks().push(setGlobeStates)\n\n        // better do it after the layers are altered manually\n        // eww.current.redrawCallbacks().push( (wwd, stage) => {\n        //     console.log(stage)\n        //     if (stage === WorldWind.BEFORE_REDRAW) {\n        //         wwd.layers.sort(function (a, b) {\n        //             return a.zIndex - b.zIndex;\n        //         });\n        //     }\n        // })\n        \n        WorldWind.configuration.baseUrl = window.location.href\n\n        let starFieldLayer = new StarFieldLayer();\n\n        let atmosphereLayer = new WorldWind.AtmosphereLayer('images/BlackMarble_2016_01deg.jpg');\n        // let atmosphereLayer = new WorldWind.AtmosphereLayer('images/BlackMarble_2016_3km.jpg');\n        //atmosphereLayer.minActiveAltitude = 5000000\n\n        let quicklookLayer = new WorldWind.RenderableLayer('Quicklooks')\n        quicklookLayer.pickEnabled = false\n\n        let productLayer =  new WorldWind.RenderableLayer('Products')\n\n    \n        let layers = [\n            // { layer: new WorldWind.WmsLayer(wmsConfigBg_s2, \"\"), enabled: true },\n            // { layer: new WorldWind.WmsLayer(wmsConfigBg_terrain, \"\"), enabled: false },\n            // { layer: new WorldWind.WmsLayer(wmsConfigNames, \"\"), enabled: names },\n            { layer: starFieldLayer, enabled: false, zIndex: ZINDEX_STARFIELD },\n            { layer: atmosphereLayer, enabled: false, zIndex: ZINDEX_ATMOSPHERE },\n            { layer: productLayer, enabled: true, zIndex: ZINDEX_PRODUCTS },\n            { layer: quicklookLayer, enabled: true, zIndex: ZINDEX_QUICKLOOKS },\n        ];\n    \n        for (let l = 0; l < bgLayers.length; l++) {\n            let layer = new WorldWind.WmsLayer(bgLayers[l], \"\")\n            layer.enabled = false\n            layer.zIndex= ZINDEX_BACKGROUND+l\n            layer.type='background'\n            eww.current.addLayer(layer, \"\")\n        }\n        for (let l = 0; l < ovLayers.length; l++) {\n            let layer = new WorldWind.WmsLayer(ovLayers[l], \"\")\n            layer.enabled = false\n            layer.type='overlay'\n            layer.zIndex= ZINDEX_OVERLAY+l\n            eww.current.addLayer(layer, \"\")\n        }\n\n        for (let l = 0; l < layers.length; l++) {\n            layers[l].layer.enabled = layers[l].enabled;\n            layers[l].layer.zIndex = layers[l].zIndex;\n            eww.current.addLayer(layers[l].layer);\n        }\n        for (let l = 0; l < satelliteLayers.length; l++) {\n            satelliteLayers[l].enabled = modelOn.current\n            satelliteLayers[l].zIndex= ZINDEX_SATELLITE+l\n            eww.current.addLayer(satelliteLayers[l]);\n        }\n\n        for (let l = 0; l < orbitLayers.length; l++) {\n            orbitLayers[l].enabled = modelOn.current\n            // orbitLayers[l].zIndex= ZINDEX_SATELLITE+l\n            eww.current.addLayer(orbitLayers[l]);\n        }\n\n\n        sortLayers()\n        console.log(eww.current.layers)\n    \n        eww.current.redraw();\n        getS2LUT('./data/s2lut.txt')\n        // eww.current.deepPicking = true;\n        // eww.current.orderedRenderingFilters.push(declutterByTime)\n    }, []); // effect runs only once\n        \n  return { \n      eww, \n      ewwstate, \n      initMap, \n      moveTo, \n      removeGeojson, \n      addGeojson,\n      toggleGeojson,\n      getRenderables, \n      addQuicklookWMS, \n      removeQuicklookWMS,\n      toggleQuicklookWMS,\n      removeQuicklooks, \n      addQuicklook, \n      toggleQuicklooks,\n      toggleStarfield, \n      toggleAtmosphere, \n      setTime, \n      setFilter,\n      toggleProjection, \n      toggleNames, \n      toggleModel, \n      toggleBg, \n      toggleOv, \n      toggleDem, \n      northUp,\n      setMode,\n      setColor\n    }\n}\n","import React, {useState, useRef, useEffect} from \"react\";\nimport {useSpring, animated} from 'react-spring'\nimport { useDrag } from 'react-use-gesture'\nimport \"./LogPanel.css\"\n\n\n\n// import MissionSelector from \"./missionselector\";\n\n\n\n\n\nfunction LogPanel({items}) {\n\n    const debug = useRef()\n    const [debugtext,setdebugtext] = useState([])\n\n    const [{ x, y }, api] = useSpring(() => ({ x: 0, y: 0 }))\n    const bind2 = useDrag(({ offset: [x, y] }) => api.start({ x, y }))\n\n\n    const logdebug = (items) => {\n        let dd = []\n        debug.current = {...debug.current,...items}\n        // debugtext.current = []\n        for (let [key, value] of Object.entries(debug.current)) {\n            // console.log(`${key}: ${value}`);\n            dd.push([key,value])\n          }\n          setdebugtext( dd.map( (item) => <div key={item[0]}>{item[0]}: {item[1]}</div> ))\n    }   \n    \n    useEffect(() => {\n        logdebug(items)\n        console.log(items)\n    },[items])\n\n\n\n    return   (\n\n        <animated.div {...bind2()} style={{ x, y }}  className='Debug'>\n        {debugtext}\n    </animated.div>\n\n\n    )\n    \n}\n\nexport default LogPanel\n","import React, {useState, useEffect, useRef, memo} from 'react'\nimport WorldWind from 'webworldwind-esa';\nimport { useGesture, useDrag } from 'react-use-gesture'\nimport {useSpring, config, animated} from 'react-spring'\nimport { add, sub, scale } from 'vec-la'\nimport './Earth.css'\nimport LogPanel from '../logpanel';\n\n\n// todo:\n//      set limits to the navigator.camera\n\n\nexport const FluidWorldWindowController = memo( ({world, onSimpleClick}) => {\n\n    const controllerRef = useRef()\n    const MAX_ALT = 100000000\n    const EYE_ALT = 2\n    // to detect double taps\n    const lastTap = useRef()\n    const doubleTap = useRef()\n    const longclickdetected = useRef(null)\n    const button = useRef()\n    const clicktimeout = useRef()\n    const tilttimeout = useRef()\n    const dragtimeout = useRef()\n\n    //\n    const gesturestartposition = useRef()\n    // const [dragenabled, setdragenabled] = useState(true)\n    const dragenabled = useRef(true)\n    const rotationmode = useRef(false)\n    const pinchmode = useRef('undefined')\n    // const [logitems,setlogitems] = useState({})\n\n    // debug snippet\n    // add {debughtml} in returned dom\n    // use with: logdebug({key:value,...})\n    const debug = useRef()\n    const [debugtext,setdebugtext] = useState([])\n    const [{ x, y }, api] = useSpring(() => ({ x: 0, y: 0 }))\n    const bind2 = useDrag(({ offset: [x, y] }) => api.start({ x, y }))\n    const debughtml =     (      <animated.div {...bind2()} style={{ x, y }}  className='Debug'>{debugtext}</animated.div>)\n    const logdebug = (items) => {\n        let dd = []\n        debug.current = {...debug.current,...items}\n        // debugtext.current = []\n        for (let [key, value] of Object.entries(debug.current)) {\n            // console.log(`${key}: ${value}`);\n            dd.push([key,value])\n          }\n          setdebugtext( dd.map( (item) => <div key={item[0]}>{item[0]}: {item[1]}</div> ))\n    }    \n    // end debug snippet  \n    \n    const detectDoubleTap = (e) => {\n        // console.log(e)\n        button.current = e.button\n        e.preventDefault()\n        if (lastTap.current && (e.timeStamp - lastTap.current) < 300) {\n            doubleTap.current = true\n        } else {\n            lastTap.current = e.timeStamp\n            doubleTap.current = false\n        }\n    }\n\n\n    const bind = useGesture({\n        onDrag: ({  event, xy, vxvy, previous, first, down, initial, delta, movement, offset, velocity, direction, tap, scrolling, touches, pinching, origin}) => {\n\n            if(first) {\n                longclickdetected.current = null\n                gesturestartposition.current = positionAtPickPoint(xy[0],xy[1])\n                if(!gesturestartposition.current) {\n                    gesturestartposition.current = positionAtPickPoint(world.current.canvas.clientWidth/2,world.current.canvas.clientHeight/2)\n                }\n\n                detectDoubleTap(event)\n                if(doubleTap.current) clearTimeout(clicktimeout.current)\n                // console.log('double:'+doubleTap.current+' tap: '+tap)\n            }\n\n            switch (true) {\n\n                // case (touches === 2):\n                //     // 2 finger tap: tilt\n                //     handletilt(down, delta, false, first, vxvy)\n                //     // tilttimeout.current = setTimeout(() => {\n                //     //     handletilt(down, delta, false, first)\n                //     // }, 300);                \n                //     break\n\n\n                case (!doubleTap.current && tap):  \n                    // simple click or tap\n                    clicktimeout.current = setTimeout(() => {\n                        if(event.timeStamp - lastTap.current < 800) {\n                            handleSimpleClick(event)\n                        } else {\n                            handleLongClick(event)\n                        }\n                    }, 300);\n                    break\n                case (doubleTap.current && tap): {\n                    clearTimeout(clicktimeout.current)\n\n                    // double click or tap\n                    console.log(\"double click\")\n                    northUp()\n                    break\n                }\n                case ((!doubleTap.current && !tap) && button.current != 2 && touches !=2  ):\n                    // Pan\n                    // console.log('pan')\n                    if(!dragenabled.current) return\n\n                    if(event.timeStamp - lastTap.current < 800) {\n                    }\n\n                    zoomspring.stop()\n                    pinchzoomspring.stop()\n                    pinchrotatespring.stop()\n                    pinchtiltspring.stop()\n                    if (world.current.globe.is2D()) {\n                        handlepan2d(event,initial,down,delta,offset,movement,velocity, direction, xy, previous,first,scrolling)\n                    } else {\n                        handlepan3d(event,initial,down,delta,offset,vxvy,velocity, direction, xy, previous,first,scrolling,touches,pinching)\n                    }\n                    break\n                case (doubleTap.current && !tap):\n                    // zoom\n                    zoomspring.stop()\n                    handlezoom(event,initial,down,delta,offset,movement,velocity, direction, xy, previous,first,scrolling)\n                    break\n\n                case (!doubleTap.current && !tap && button.current == 2):\n                    // right click button: tilt and rotate\n                    handletilt(down, delta, true)\n                    break\n    \n        \n                default:\n                // console.log(\"default \")\n\n            }\n\n        },\n        onDragend: () => {\n            console.log('drag end')\n        },\n        onWheel: ({event, xy, previous, first, down, initial, delta, movement, offset, velocity, direction, tap, wheeling}) => {\n            if(first) {\n                gesturestartposition.current = positionAtPickPoint(event.clientX,event.clientY)\n            }\n            // delta[1] *= 0.1         \n            // delta[0] *= 0.1         \n            handlezoom(event,initial,down,delta,offset,movement,velocity, direction, xy, previous,first,wheeling)\n        },\n        onPinchStart: (origin)=>{\n            dragenabled.current = false\n            panspring.stop()\n            zoomspring.stop()\n            pinchzoomspring.stop()\n            pinchrotatespring.stop()\n            pinchzoomrotatespring.stop()\n            pinchtiltspring.stop()\n            // memo.lastY = origin[1]\n            // gesturestartposition.current = positionAtPickPoint(origin[0],origin[1])\n            pinchmode.current = 'undefined'\n\n            // tilttimeout.current = setTimeout(() => {\n            //     pinchmode.current = 'tilt'\n            //     }, 300);        \n                \n        },\n        onPinch: ({event, da, vdva, origin, pinching, delta, first, initial, direction, previous, elapsedTime, memo = {lastY:0} }) => {\n            handlepinch(event, da, vdva, origin, pinching, delta, first, initial, direction, previous, memo, elapsedTime)\n            memo.lastY = origin[1]\n            return memo\n        },\n        onPinchEnd: () => { \n            clearTimeout(dragtimeout.current)\n            dragtimeout.current = setTimeout(() => {\n                dragenabled.current = true\n                // logdebug({drag: (dragenabled.current)?'true':'false'})\n                }, 300);\n            pinchmode.current = 'undefined'\n            \n            //    console.log('pinch end')\n        }\n    },\n    // {reset: false, drag: {useTouch: true}, filterTaps: true }\n    {\n        domTarget: controllerRef,\n        drag: {useTouch: true},\n        pinch: {useTouch: true},\n        eventOptions: {passive: false}\n    }\n    )\n\n    const normalize = (val,min,max)=> {\n        var delta = max - min;\n        return (val - min) / delta\n    }\n\n\n    function handleSimpleClick(event) {\n        console.log('simple click')\n        onSimpleClick(event)\n    }\n\n    function handleLongClick(event) {\n        console.log('long click')\n        onSimpleClick(event)\n    }\n    // north up\n    // todo: spring ?\n    function northUp() {\n        let headingIncrement = world.current.navigator.heading / -20;\n        let runOperation = () => {\n            if (Math.abs(world.current.navigator.heading) > Math.abs(headingIncrement)) {\n                world.current.navigator.heading += headingIncrement;\n                setTimeout(runOperation, 10);\n            } else {\n                world.current.navigator.heading = 0;\n                rotationmode.current = false\n            }\n            world.current.redraw();\n        };\n        setTimeout(runOperation, 10);\n    }\n\n    // pinching\n    const handlepinch = (event, da, vdva, origin, pinching, delta, first, initial, direction, previous, memo, elapsedTime) => {\n        // if(first) console.log(event)\n        // console.log(elapsedTime)\n        if(pinchmode.current === 'undefined' && elapsedTime >= 100) {\n            // console.log(initial)\n            // pinchmode.current = (Math.abs(direction[0]) > Math.abs(direction[1]*1.2))?'zoom':'rotation'\n            if(Math.abs(origin[1]-memo.lastY) > 4) {\n                pinchmode.current = 'tilt' \n            } else pinchmode.current = 'zoomrotate' \n            // console.log(origin)\n            // if(da[1]>3) pinchmode.current = 'rotation'\n            // else if(da[0]>10) pinchmode.current = 'zoom'\n        } \n        // if(pinchmode.current === 'undefined' && !first) {\n        //     pinchmode.current = (Math.abs(direction[0]) > Math.abs(direction[1]*1.2))?'zoom':'rotation'\n        //     clearTimeout(tilttimeout.current)    \n        // }\n\n        switch (pinchmode.current) {\n\n            case 'tilt':\n                handlepinchtilt(pinching, delta, origin, initial, memo)\n                break\n\n            // case 'zoom':\n            //     // handlezoomrotate(pinching,delta)\n            //     handlepinchzoom(pinching,delta,vdva)\n            //     break\n\n            // case 'rotation':\n            //     handlepinchrotate(pinching, delta, vdva)\n            //     break\n\n            case 'zoomrotate':\n                handlezoomrotate(pinching, delta, origin, vdva)\n                break\n\n            default:\n\n            break\n        }\n\n    }\n\n    const [{ pinchtiltvalue }, pinchtiltspring] = useSpring(() => ({ pinchtiltvalue: [0,0] }))\n    const handlepinchtilt = (pinching, delta, origin, initial, memo ) => {\n        pinchtiltspring.start({\n            // pinchtiltvalue: delta,\n            pinchtiltvalue: sub(origin,[0,memo.lastY]),\n            immediate: pinching,\n            // config: config.stiff,\n            config: { mass: 1, tension: 100, friction: 40 },\n            onChange: ()=>{\n                let enabler = 1\n                if(!pinching) pinchmode.current = 'undefined'\n                // if (!pinching) enabler = (pinchtiltvalue.get()[1] < 0.2)?0:1\n                let tiltfactor = (pinching)?0.5:0.2 \n                world.current.navigator.tilt -= pinchtiltvalue.get()[1] * tiltfactor * enabler\n                applyLimits()\n                world.current.redraw()\n\n            }\n        })\n    }\n\n\n\n    const [{ pinchzoomrotatevalue }, pinchzoomrotatespring] = useSpring(() => ({ pinchzoomrotatevalue: [0,0] }))\n    const handlezoomrotate = (pinching,delta,origin, vdva) => {\n        let zenabler = 1\n        let tenabler = 1\n        if (!pinching) {\n            zenabler = (Math.abs(vdva[0]) < 0.2)?0:1\n            tenabler = (Math.abs(vdva[1]) < 0.2)?0:1\n        }\n        pinchzoomrotatespring.start({\n            pinchzoomrotatevalue: delta,\n            immediate: pinching,\n            config: config.molasses,\n            // config: {...config.molasses},\n            // config: { mass: 1, tension: 100, friction: 40, duration: 200 },\n            onChange: ()=>{\n                let rangefactor = 1-pinchzoomrotatevalue.get()[0]/300 * zenabler\n                moveZoom(gesturestartposition.current,rangefactor )\n                world.current.navigator.range *= rangefactor \n                // logdebug({angle: pinchzoomrotatevalue.get()[1]})\n                // logdebug({dist: pinchzoomrotatevalue.get()[0]})\n                \n                world.current.navigator.heading -= pinchzoomrotatevalue.get()[1] * tenabler\n                if(world.current.navigator.heading !== 0) rotationmode.current = true\n\n                // world.current.navigator.heading -= hpinchval.get()  \n                applyLimits()\n\n                world.current.redraw()\n\n            }\n        })        \n    }\n\n    const [{ pinchzoomvalue }, pinchzoomspring] = useSpring(() => ({ pinchzoomvalue: 0 }))\n    const handlepinchzoom = (pinching,delta,vdva) => {\n        let enabler = 1\n        if (!pinching) enabler = (Math.abs(vdva[0]) < 0.2)?0:1\n        pinchzoomspring.start({\n            pinchzoomvalue: delta[0],\n            immediate: pinching,\n            // config: config.stiff,\n            // config: {...config.molasses},\n            config: { mass: 1, tension: 100, friction: 40 },\n            onChange: ()=>{\n                if(!pinching) pinchmode.current = 'undefined'\n                let rangefactor = 1-pinchzoomvalue.get()/300 * enabler\n                moveZoom(gesturestartposition.current,rangefactor)\n                world.current.navigator.range *= rangefactor\n                // world.current.navigator.heading -= hpinchval.get()  \n                applyLimits()\n\n                world.current.redraw()\n\n            }\n        })        \n    }\n\n\n    const [{ pinchrotatevalue }, pinchrotatespring] = useSpring(() => ({ pinchrotatevalue: 0 }))\n    const handlepinchrotate = (pinching,delta,vdva) => {\n        let enabler = 1\n        if (!pinching) enabler = (Math.abs(vdva[1]) < 0.2)?0:1\n        pinchrotatespring.start({\n            pinchrotatevalue: delta[1],\n            immediate: pinching,\n            // config: config.stiff,\n            config: { mass: 1, tension: 100, friction: 40 },\n            // config: { mass: 1, tension: 100, friction: 40, duration: 200 },\n            onChange: ()=>{\n                    world.current.navigator.heading -= pinchrotatevalue.get() * enabler \n                    if(world.current.navigator.heading !== 0) rotationmode.current = true\n                    applyLimits()\n\n                    world.current.redraw()\n\n            }\n        })\n    \n    }\n\n\n     // tilting\n    const [{ tiltvalue }, tiltspring] = useSpring(() => ({ tiltvalue: [0,0] }))\n\n    const handletilt = (down, delta, dorotation ) => {\n        // let enabler = 1\n        // if (!pinching) enabler = (Math.abs(vdva[1]) < 0.2)?0:1\n        tiltspring.start({\n            to: {tiltvalue: delta},\n            immediate: down,\n            // config: config.stiff,\n            config: { mass: 1, tension: 100, friction: 40 },\n            onChange: ()=>{\n                let tiltoffset = -90 * tiltvalue.get()[1]*2 / world.current.canvas.clientHeight\n                let headingoffset = -90 * tiltvalue.get()[0]*2 / world.current.canvas.clientWidth\n                // world.current.navigator.tilt += tiltvalue.get()[1]/8\n                world.current.navigator.tilt -= tiltoffset \n                if(dorotation) {\n                    world.current.navigator.heading -= headingoffset\n                    if(world.current.navigator.heading !== 0) rotationmode.current = true\n                }\n                applyLimits()\n                world.current.redraw()\n\n            }\n        })\n    }\n\n    // panning\n    const [{ panvalue }, panspring] = useSpring(() => ({ panvalue: [0,0] }))\n\n    const handlepan2d = (event,initial,down,delta,offset,movement,velocity, direction, xy, previous,first,wheeling) => {\n        let enabler = 1\n        if (!down) enabler = (velocity < 0.2)?0:1\n        let correction = (event.type === 'touchmove')?1:1\n        // logdebug({pinching: pinching})\n        panspring.start({\n            panvalue: delta,\n            // to: {panvalue: (down)?movement:add(movement,scale(movement,velocity))},\n            // to: {panvalue: (down)?movement:movement[1]+movement[1]*velocity*5},\n            immediate: down,\n            // config: config.stiff,\n            config: { mass: 1, tension: 150, friction: 80 },\n            onChange: ()=>{\n                let lookatxy = [world.current.canvas.clientWidth/2, world.current.canvas.clientHeight/2]\n                let nextlookatxy = sub(lookatxy,scale(panvalue.get(),correction*enabler))\n                let currentposition = positionAtPickPoint(lookatxy[0],lookatxy[1])\n                if(!currentposition) console.log('no currentpos !')\n                let nextposition = positionAtPickPoint(nextlookatxy[0],nextlookatxy[1])\n                if(!nextposition) console.log('no nextposition !')\n\n                let currentpoint = new WorldWind.Vec3(0,0,0)\n                let nextpoint = new WorldWind.Vec3(0,0,0)\n                if(!world.current.globe.computePointFromPosition(currentposition.latitude, currentposition.longitude, currentposition.altitude, currentpoint)) return\n                if(!world.current.globe.computePointFromPosition(nextposition.latitude, nextposition.longitude, nextposition.altitude, nextpoint)) return\n\n                let viewMatrix = WorldWind.Matrix.fromIdentity();\n                world.current.computeViewingTransform(null, viewMatrix)\n                viewMatrix.multiplyByTranslation(currentpoint[0] - nextpoint[0], currentpoint[1] - nextpoint[1], currentpoint[2] - nextpoint[2])\n\n                // Compute the globe point at the screen center from the perspective of the transformed navigator state.\n                var ray = world.current.rayThroughScreenPoint(world.current.canvasCoordinates(xy[0], xy[1]))\n\n                viewMatrix.extractEyePoint(ray.origin);\n                viewMatrix.extractForwardVector(ray.direction);\n\n                let origin = new WorldWind.Vec3(0, 0, 0);\n\n                if (!world.current.globe.intersectsLine(ray, origin)) {\n                    return;\n                }\n\n                // Convert the transformed modelview matrix to a set of navigator properties, then apply those\n                // properties to this navigator.\n                let params = viewMatrix.extractViewingParameters(origin, world.current.navigator.roll, world.current.globe, {});\n                world.current.navigator.lookAtLocation.copy(params.origin);\n                world.current.navigator.range = params.range;\n                world.current.navigator.heading = params.heading;\n                world.current.navigator.tilt = params.tilt;\n                world.current.navigator.roll = params.roll;\n                applyLimits();\n                world.current.redraw();\n\n\n            },\n            onRest: () => {\n                // logdebug({status: 'finsished: '})\n            }\n        })\n    }\n       \n\n    const handlepan3d = (event,initial,down,delta,offset,vxvy,velocity, direction, xy, previous,first,wheeling, touches,pinching) => {\n        try {\n            if(first){\n                // console.log('first drag')\n                // can crash the drag:\n                // if(Math.abs(gesturestartposition.current.latitude) > 85 || world.current.navigator.heading > 2 ) {\n                if(Math.abs(gesturestartposition.current.latitude) > 80 || world.current.navigator.heading > 2 ) {\n                    rotationmode.current = true\n                }\n            }\n        } catch {\n            console.log('Position at start not detected')\n        }\n\n\n        let enabler = 1\n        if (!down) enabler = (velocity < 0.2)?0:1\n        let correction = (event.type === 'touchmove')?1:1\n        if(!down) correction *= 1\n\n        panspring.start({\n            panvalue: delta,\n            // to: {panvalue: (down)?movement:add(movement,scale(movement,velocity))},\n            // to: {panvalue: (down)?movement:movement[1]+movement[1]*velocity*5},\n            immediate: down,\n            // config: config.stiff,\n            // config: { mass: 1, tension: 150, friction: 80 },\n            config: { mass: 1, tension: 100, friction: 40 },\n            onChange: ()=>{\n                if(!longclickdetected.current) {\n                    longclickdetected.current = (event.timeStamp - lastTap.current < 400)\n                }\n                try{\n                    let lookatxy = [world.current.canvas.clientWidth/2, world.current.canvas.clientHeight/2]\n                    let nextlookatxy = sub(lookatxy,scale(panvalue.get(),correction*enabler))\n                    let currentposition = positionAtPickPoint2(lookatxy[0],lookatxy[1])\n                    if(!currentposition) console.log('no currentpos !')\n                    let nextposition = positionAtPickPoint2(nextlookatxy[0],nextlookatxy[1])\n                    if(!nextposition) console.log('no nextposition !')\n\n                    let currentpoint = new WorldWind.Vec3(0,0,0)\n                    let nextpoint = new WorldWind.Vec3(0,0,0)\n                    if(!world.current.globe.computePointFromPosition(currentposition.latitude, currentposition.longitude, currentposition.altitude, currentpoint)) return\n                    if(!world.current.globe.computePointFromPosition(nextposition.latitude, nextposition.longitude, nextposition.altitude, nextpoint)) return\n\n                    let rotationVector = new WorldWind.Vec3(0, 0, 0)\n                    let rotationAngle = computeRotationVectorAndAngle( nextpoint,currentpoint, rotationVector);\n                    // logdebug({delta: panvalue.get()[1]})\n\n                    if(nextposition && (nextposition.latitude > 80 || nextposition.latitude < -80) && rotationmode.current === false) {\n                        console.log('out')\n                        panspring.stop()\n                        return\n                    }\n                    // nextposition.latitude = WorldWind.WWMath.clamp(nextposition.latitude,-80,80)\n\n\n                    rotateShpere(rotationVector, rotationAngle, nextpoint, nextposition)\n                    if(rotationmode.current === false) world.current.navigator.heading = 0\n                    world.current.redraw()\n                }\n                catch {\n                    console.log('probl !')\n                }\n            },\n            onRest: () => {\n                // logdebug({status: 'finsished: '})\n            }\n        })\n    }\n\n\n    // zooming\n    const [{ range }, zoomspring] = useSpring(() => ({ range: [0,0] }))\n    const handlezoom = (event,initial,down,delta,offset,movement,velocity, direction, xy, previous,first,wheeling) => {\n\n        let enabler = 1\n        if (!down) enabler = (velocity < 0.2)?0:0.5\n\n        zoomspring.start({\n            // to: {range: [1-delta[1]/200,0]},\n            range: delta,\n            immediate: (down||wheeling),\n            // immediate: (down),\n            // config: config.stiff,\n            config: { mass: 1, tension: 100, friction: 40 },\n            onChange: ()=>{\n                    // logdebug({rangefactor: spring.value.range})\n                    // let rangefactor = (enabler === 0)?1:range.get()[0]\n                    let rangefactor = (enabler === 0)?1:1-range.get()[1]/(wheeling?300:300)\n                    moveZoom(gesturestartposition.current,rangefactor)\n                    world.current.navigator.range *= rangefactor\n                    applyLimits()\n\n                    world.current.redraw()\n\n            },\n            onRest: () => {\n                // logdebug({status: 'finsished: '+world.current.navigator.range})\n            }\n        })\n\n    }\n\n    const moveZoom = function (refposition, amount) {\n        if (!refposition || amount >= 1) return\n        let lookAtLocation = world.current.navigator.lookAtLocation;\n        let lookatAltitude = world.current.globe.elevationAtLocation(lookAtLocation.latitude, lookAtLocation.longitude)\n        let lookAtPosition = new WorldWind.Position(lookAtLocation.latitude, lookAtLocation.longitude, lookatAltitude)\n        let position\n        if(amount <1) {\n            position = WorldWind.Position.interpolateGreatCircle(\n                amount, \n                refposition,\n                lookAtPosition, \n                new WorldWind.Position(0, 0, 0)\n                )\n    \n        } \n        else { // may be better to do nothing...\n            return\n            let intermediatePosition = WorldWind.Position.interpolateGreatCircle(\n                1/amount, \n                refposition,\n                lookAtPosition, \n                new WorldWind.Location(0, 0)\n            )\n            let distanceRadians = WorldWind.Location.greatCircleDistance(lookAtPosition, intermediatePosition)\n            let greatCircleAzimuthDegrees = WorldWind.Location.greatCircleAzimuth(lookAtPosition, intermediatePosition)\n            let location =  WorldWind.Location.greatCircleLocation(lookAtPosition, greatCircleAzimuthDegrees ,\n                    distanceRadians, new WorldWind.Location(0, 0));\n            position = new WorldWind.Position(location.latitude, location.longitude, intermediatePosition.altitude)\n        }\n\n        lookAtLocation.latitude = position.latitude;\n        lookAtLocation.longitude = position.longitude;\n        lookAtLocation.altitude = position.altitude;\n    }\n\n\n    const locationAtPickPoint = (x, y) => {\n        var coordinates = world.current.canvasCoordinates(x, y)\n        var pickList = world.current.pickTerrain(coordinates);\n\n        for (var i = 0; i < pickList.objects.length; i++) {\n            var pickedObject = pickList.objects[i];\n            if (pickedObject.isTerrain) {\n                var pickedPosition = pickedObject.position;\n                if (pickedPosition) {\n                    return new WorldWind.Location(pickedPosition.latitude, pickedPosition.longitude);\n                }\n            }\n        }\n    };\n\n    \n    const positionAtPickPoint2 = (x, y) => {\n\n        // another way to do it (but no altitude):\n        let ray = world.current.rayThroughScreenPoint(world.current.canvasCoordinates(x, y))\n        let position = new WorldWind.Position(0,0,0)\n        let intersectpoint = [0,0,0]\n        if (world.current.globe.intersectsLine(ray, intersectpoint)) {\n            world.current.globe.computePositionFromPoint(intersectpoint[0], intersectpoint[1], intersectpoint[2], position)\n            return(position)\n        }\n        return null\n    }\n\n    const positionAtPickPoint = (x, y) => {\n\n        let coordinates = world.current.canvasCoordinates(x, y)\n        let pickList = world.current.pickTerrain(coordinates);\n\n        for (let i = 0; i < pickList.objects.length; i++) {\n            let pickedObject = pickList.objects[i];\n            if (pickedObject.isTerrain) {\n                let pickedPosition = pickedObject.position;\n                if (pickedPosition) {\n                    return new WorldWind.Position(pickedPosition.latitude, pickedPosition.longitude, pickedPosition.altitude);\n                }\n            }\n        }\n\n    };\n\n    const computeRotationVectorAndAngle = function (vec1, vec2, rotationVector) {\n        var angleRad = WorldWind.MeasurerUtils.angleBetweenVectors(vec1, vec2);\n        var angle = angleRad * WorldWind.Angle.RADIANS_TO_DEGREES;\n        rotationVector.copy(vec1);\n        rotationVector.cross(vec2);\n        rotationVector.normalize();\n        return angle;\n    };\n\n    const rotateShpere = function (rotationVector, angle, nextpoint, nextposition) {\n        if (!isFinite(angle) || !isFinite(rotationVector[0]) || !isFinite(rotationVector[1]) || !isFinite(rotationVector[2])) {\n            return false;\n        }\n\n        var wwd = world.current;\n        var navigator = wwd.navigator;\n        var viewMatrix = WorldWind.Matrix.fromIdentity();\n        var altitude = navigator.lookAtLocation.altitude;\n        var tilt = navigator.tilt;\n        var scratchRay = new WorldWind.Line(new WorldWind.Vec3(0, 0, 0), new WorldWind.Vec3(0, 0, 0));\n        \n        navigator.tilt = 0;\n        wwd.computeViewingTransform(null, viewMatrix);\n        viewMatrix.multiplyByRotation(rotationVector[0], rotationVector[1], rotationVector[2], angle);\n\n        viewMatrix.extractEyePoint(scratchRay.origin);\n        viewMatrix.extractForwardVector(scratchRay.direction);\n        if (!wwd.globe.intersectsLine(scratchRay, nextpoint)) {\n            navigator.tilt = tilt;\n            return false;\n        }\n\n        var params = viewMatrix.extractViewingParameters(nextpoint, navigator.roll, wwd.globe, {});\n        // if (Math.abs(navigator.heading) < 5 && Math.abs(navigator.lookAtLocation.latitude < 70) && Math.abs(nextposition.latitude) < 70) {\n        //     navigator.heading = Math.round(params.heading);\n        //     console.log('rounding')\n        // }\n        // else {\n        //     navigator.heading = params.heading;\n        // }\n\n        navigator.heading = params.heading;\n\n        navigator.lookAtLocation.copy(params.origin);\n        navigator.lookAtLocation.altitude = altitude;\n        navigator.tilt = tilt;\n\n        return true;\n    }\n\n\n    const applyLimits = () => {\n        let nav = world.current.navigator\n        nav.camera.applyLimits() // not sure if not done by default by www\n        nav.range = WorldWind.WWMath.clamp(\n            nav.range, \n            world.current.globe.elevationAtLocation(nav.lookAtLocation.latitude, nav.lookAtLocation.longitude) + EYE_ALT, \n            MAX_ALT \n        )\n        nav.tilt = WorldWind.WWMath.clamp(nav.tilt,0,80)\n        // logdebug({\n        //     range: nav.range, \n        //     lookAtlat: nav.lookAtLocation.latitude, \n        //     lookAtlon: nav.lookAtLocation.longitude, \n        //     lookAtalt: nav.lookAtLocation.altitude, \n        //     clookAtalt: world.current.globe.elevationAtLocation(nav.lookAtLocation.latitude, nav.lookAtLocation.longitude),\n        //     // initlat: gesturestartposition.current.latitude,\n        //     // initlon: gesturestartposition.current.longitude,\n        // })\n    \n    }\n\n    useEffect(() => {\n        // this prevents the browser from intercepting the right click\n        window.addEventListener(\"contextmenu\", e => e.preventDefault());\n    },[])\n\n\n    return (\n        <div>\n            <div className={'EarthController'} ref={controllerRef}></div>\n            {/* <div  className='Debug'>\n                {debugtext.current}\n            </div> */}\n            {/* <animated.div {...bind2()} style={{ x, y }}  className='Debug'>\n                {debugtext}\n            </animated.div> */}\n            {/* {debughtml} */}\n            {/* <LogPanel items={logitems}/> */}\n        </div>\n    )\n\n    \n})","import React from 'react';\nimport './LookAtWidget.css' \n// npm install --save-dev @iconify/react @iconify-icons/ic\nimport { Icon } from '@iconify/react';\n// import baselineFlare from '@iconify-icons/ic/baseline-flare';\nimport focusIcon from '@iconify-icons/et/focus';\n\n\n\n\n\nfunction LookAtWidget({active}) {\n\n    return (\n        <div className='LookAtWidget' style={{display:active?'flex':'none'}}>\n            <div className='Mire'>\n                <Icon icon={focusIcon} width='30px' height='40px'/>\n            </div>\n            \n        </div>\n     )\n}\n\nexport default LookAtWidget;\n","import React, {useCallback} from 'react'\nimport { Icon } from '@iconify/react';\nimport {AppContext} from '../app/context'\n\nimport outlineRemoveRedEye from '@iconify-icons/ic/outline-remove-red-eye';\n\nimport './ViewProductControl.css' \n\nfunction ViewProductControl({active}) {\n\n    const [ state, dispatch ] = React.useContext(AppContext)\n    \n    const handleClick = useCallback( (event) => {\n        event.stopPropagation()\n        dispatch({type:'gotoclosestitem'})\n    }, [])\n\n    return (\n        <div className={state.leftHanded?'ViewProductControlL':'ViewProductControl'} style={{display:active?'flex':'none'}}>\n            <Icon icon={outlineRemoveRedEye} width='40px' onClick={handleClick}/>            \n        </div>\n     )\n}\n\nexport default ViewProductControl\n","import React, {useState, useEffect, useCallback} from 'react'\nimport { Icon } from '@iconify/react';\nimport {AppContext} from '../app/context'\nimport outlineFilterAlt from '@iconify-icons/ic/outline-filter-alt';\nimport baselineFilterAlt from '@iconify-icons/ic/baseline-filter-alt';\n\n\n\n\n\nimport './FilterProductControl.css' \n\nfunction FilterProductControl({active}) {\n\n    const [ state, dispatch ] = React.useContext(AppContext)\n    const [ filter, setfilter ] = useState(state.filter)\n    \n    const handleClick = useCallback( (event) => {\n        event.stopPropagation()\n        dispatch({type:'set_filter'})\n    },[])\n\n    useEffect(() => {\n        console.log('filter')\n        setfilter(state.filter)\n    },[state.filter])\n\n\n    return (\n        <div className={state.leftHanded?'FilterProductControlL':'FilterProductControl'} style={{display:active?'flex':'none'}}>\n            <Icon icon={filter.length === 0 || filter == null ?outlineFilterAlt:baselineFilterAlt} width='40px' onClick={handleClick}/>            \n        </div>\n     )\n}\n\nexport default FilterProductControl\n","import React, {useEffect} from 'react';\nimport {AppContext} from '../app/context'\n\nimport './Earth.css'\nimport { useEww } from \"./useEww\"\nimport { useDebounce } from '../../hooks/useDebounce';\nimport {FluidWorldWindowController} from './FluidWorldWindowController'\n// import InfoPanel from \"../infopanel\"\nimport LookAtWidget from './LookAtWidget'\nimport ViewProductControl from '../viewproductcontrol/ViewProductControl'\nimport FilterProductControl from './FilterProductControl'\nimport { useKey } from 'rooks'\n\nconst Earth = ({ id }) => {\n\n    const [ state, dispatch ] = React.useContext(AppContext)\n\n\n\n    const handleSimpleClick = (e) => {\n        let selection = getRenderables(e.pageX,e.pageY)\n        if (selection.length === 0) return\n        // selection[0].highlighted = true\n        console.log('items clicked: '+selection.length)\n        dispatch({type: 'set_selectedProduct', value: selection[0]})\n    }\n\n\n    const {\n        eww,\n        ewwstate,\n        initMap,\n        moveTo,\n        addGeojson,\n        removeGeojson,\n        toggleGeojson,\n        toggleQuicklooks,\n        addQuicklook,\n        removeQuicklooks,\n        getRenderables,\n        addQuicklookWMS,\n        removeQuicklookWMS,\n        toggleQuicklookWMS,\n        toggleProjection,\n        toggleAtmosphere,\n        toggleStarfield,\n        toggleBg,\n        toggleNames,\n        toggleOv,\n        toggleModel,\n        setTime,\n        setFilter,\n        toggleDem,\n        northUp,\n        setMode,\n        setColor\n    } = useEww({\n        id: id\n    })\n\n    const debouncedclosestItem = useDebounce(state.closestItem, 500)\n    // const debouncedewwstate = useDebounce(ewwstate, 100)\n\n\n    useKey(['p'],() => dispatch({ type: \"toggle_projection\" }))\n    useKey(['c'],removeGeojson)\n    useKey(['u'],northUp)\n    useKey(['w'],()=>toggleQuicklookWMS(null))\n    useKey(['b'],() => dispatch({ type: \"toggle_background\" }))\n    useKey(['m'],() => dispatch({ type: \"toggle_satellites\" }))\n    useKey(['d'],() => dispatch({ type: \"toggle_dem\" }))\n    useKey(['o'],() => dispatch({ type: \"toggle_overlay\" }))\n    useKey(['a'],() => dispatch({ type: \"toggle_atmosphere\" }))\n    useKey(['s'],() => dispatch({ type: \"toggle_starfield\" }))\n    useKey(['n'],() => dispatch({ type: \"toggle_names\" }))\n\n    useEffect(() => {\n        // console.log('set_altitude')\n        if(ewwstate.altitude) {\n            // console.log('set_altitude: '+ewwstate.altitude)\n            dispatch({ type: \"set_altitude\", value: ewwstate.altitude})\n        }\n    },[ewwstate.altitude, dispatch])\n\n    useEffect(() => {\n        // console.log('set_searchPoint')\n        dispatch({ type: \"set_searchPoint\", value: ewwstate.viewpoint})\n    },[ewwstate.viewpoint, dispatch])\n\n    useEffect(() => {\n        // console.log('set_position')\n        dispatch({ type: \"set_position\", value: {lat:ewwstate.latitude, lon:ewwstate.longitude}})\n    },[ewwstate.longitude, ewwstate.latitude, dispatch])\n\n\n    useEffect(() => {\n        dispatch({ type: \"set_tics\", value: ewwstate.tics})\n    },[ewwstate.tics, dispatch])\n\n\n\n    useEffect(() => {\n        setTime(new Date(state.viewDate))\n    },[state.viewDate])\n\n    useEffect(() => {\n        setColor(state.appColor)\n    },[state.appColor])\n\n    useEffect(() => {\n        if(!state.productOn) return\n        toggleGeojson(state.productOn)\n        toggleQuicklooks(state.productOn)\n        toggleQuicklookWMS(!state.productOn)\n    },[state.productOn])\n\n    useEffect(() => {\n        if(state.geojson !== null) {\n            addGeojson(state.geojson,new Date(state.viewDate))\n        } \n    },[state.geojson])\n\n    useEffect(() => {\n        if(state.filter !== null) {\n            setFilter(state.filter)\n        } \n    },[state.filter])\n\n    useEffect(() => {\n        removeGeojson()\n        removeQuicklooks()\n        removeQuicklookWMS()\n        // dispatch({type: 'set_selectedProduct', value: null})\n\n        // dispatch({ type: \"set_closestitem\", value: null})\n        // dispatch({ type: \"set_goToDate\", value: null})\n        // dispatch({ type: \"set_tics\", value: []})\n    }, [state.clearResultsTrigger]);\n\n    useEffect(() => {\n        toggleAtmosphere(state.mapSettings.atmosphere)\n        setTime()\n    }, [state.mapSettings.atmosphere]);\n\n    useEffect(() => {\n        if(state.mapSettings.satelliteList) toggleModel(state.mapSettings.satellites, state.mapSettings.satelliteList)\n    }, [state.mapSettings.satellites, state.mapSettings.satelliteList]);\n\n    // useEffect(() => {\n    //     console.log(state.mapSettings.satelliteList)\n    // }, [state.mapSettings.satelliteList]);\n\n    useEffect(() => {\n        toggleStarfield(state.mapSettings.starfield)\n        setTime()\n\n    }, [state.mapSettings.starfield]);\n\n    useEffect(() => {\n        console.log(state.mapSettings.names)\n        toggleNames(state.mapSettings.names)\n    }, [state.mapSettings.names]);\n\n    useEffect(() => {\n        toggleProjection(state.mapSettings.projection)\n    }, [state.mapSettings.projection]);\n\n    useEffect(() => {\n        toggleBg(state.mapSettings.background)\n    }, [state.mapSettings.background]);\n\n    useEffect(() => {\n        console.log('Overlay: '+state.mapSettings.overlay)\n        toggleOv(state.mapSettings.overlay)\n    }, [state.mapSettings.overlay]);\n\n    useEffect(() => {\n        toggleDem(state.mapSettings.dem)\n    }, [state.mapSettings.dem]);\n\n    useEffect(() => {\n        toggleQuicklooks(state.mapSettings.quicklooks)\n    }, [state.mapSettings.quicklooks]);\n\n    useEffect(() => {\n        // console.log('closest item changed')\n        dispatch({ type: \"set_closestitem\", value: ewwstate.closestRenderable})\n    },[ewwstate.closestRenderable])\n\n    useEffect(() => {\n        if(state.mapSettings.quicklooks) {\n            addQuicklook(debouncedclosestItem, state.credentials)\n        }\n    }, [debouncedclosestItem]);\n\n    useEffect(() => {\n        if(state.closestItem != null && state.goToPos != null) {\n            moveTo(state.goToPos.lat, state.goToPos.lon, state.goToPos.alt)\n        }\n    }, [state.goToPos])\n \n    useEffect(() => {\n        if(state.addQuicklookWMSTrigger !== null) {\n            addQuicklookWMS(state.selectedProduct)\n        }\n    }, [state.addQuicklookWMSTrigger]);\n \n    useEffect(() => {\n        if(state.animated) {\n            setMode('animated')\n        } else {\n            setMode(state.browseMode)\n        }\n    }, [state.browseMode, state.animated]);\n \n    \n    useEffect(() => {\n        console.log(\"world created\"+' / '+state.position.clat+' / '+state.position.clon+' / '+state.altitude)\n        setTimeout(() => {\n            initMap({\n                clat: state.position.clat,\n                clon: state.position.clon,\n                alt: state.altitude,\n                starfield: state.mapSettings.starfield,\n                atmosphere: state.mapSettings.atmosphere,\n                background: state.mapSettings.background,\n                overlay: state.mapSettings.overlay,\n                satellites: state.mapSettings.satellites,\n                satelliteList: state.mapSettings.satelliteList,\n                names: state.mapSettings.names,\n                projection: state.mapSettings.projection,\n                dem: state.mapSettings.dem\n            })\n            setTime(new Date(state.viewDate))\n            // moveTo(state.position.clat, state.position.clon, state.altitude) \n        }, 1000)\n\n    }, []);\n    \n\n\n    let globeStyle = {\n        background: 'black',\n        position: \"fixed\",\n        left: 0,\n        top: 10,\n        width: '100%',\n        height: '100%'\n    };\n\n    let globeControllerStyle = {\n        background: 'red',\n        position: \"fixed\",\n        left: '100px',\n        bottom:'100px',\n        width: '100%',\n        height: '200px',\n    };\n\n        \n    return (\n        <div>\n            {/* {useMemo(\n                () => { return(<canvas className={'Earth'} id={id} />)},\n                [id]\n            )} */}\n            <canvas id={id} className={'Earth'} />\n            <FluidWorldWindowController world={eww} onSimpleClick={handleSimpleClick}/>\n            <LookAtWidget active={(state.searchMode === 'point')}/>\n            <ViewProductControl active={state.closestItem != null}/>\n            <FilterProductControl active={state.closestItem != null}/>\n            {/* <InfoPanel top= '100px' left= '5px'>\n                <div className='Quiklook'><img src={QLimage?QLimage.src:''}  alt='' width='150px'/></div>\n            </InfoPanel> */}\n        </div>\n    );\n}\n\nexport default Earth\n","import React, {useState} from \"react\";\nimport {useSpring, animated} from 'react-spring'\nimport { useGesture } from 'react-use-gesture'\nimport \"./controlpanel.css\"\n// npm install --save-dev @iconify/react @iconify-icons/ic\nimport { Icon } from '@iconify/react';\n// import baselineExplore from '@iconify-icons/ic/baseline-explore';\nimport baselinePalette from '@iconify-icons/ic/baseline-palette';\nimport {AppContext} from '../app/context'\n\n\n\n\n\n// import MissionSelector from \"./missionselector\";\n\n\n\n\n\nfunction ControlPanel(props) {\n\n    const [open, setOpen] = useState(false)\n    const [mask, setMask] = useState(false)\n    const panelcontrol = React.useRef(null)\n\n    const [ state,  ] = React.useContext(AppContext)\n\n\n    const [{ mr },set] = useSpring(() =>({ mr:  -300 }))\n    const bind = useGesture( {\n        onDragStart: ()=>setMask(true),\n        onDrag: ({ down, delta, vxvy, movement }) => {\n            // if(vxvy[1]>1 ) {\n            //     openPanel()\n            //     // set.start({\n            //     //     mr: -300,\n            //     //     immediate: false,\n            //     //     onRest: ()=>{setTimeout(()=>setOpen( true),2000)} \n            //     // })\n                \n            // } else {\n                set.start({\n                    mr: down?-movement[1]:(movement[1]>100)?-300:open?-300:0,\n                    immediate: false,\n                    onChange: ()=>{ \n                        setOpen( (mr.get() === 0)?true:false)\n                    },\n                    onRest: ()=> {\n                        if(!down) {\n                            setOpen( (mr.get() === 0)?true:false)\n                        }\n                    }\n                })\n            // }\n        },\n        onDragEnd: () => {\n            setTimeout( ()=>setMask(false), 600)\n        },\n    },\n    {\n        // domTarget: panelcontrol,\n        drag: {useTouch: true},\n        pinch: {useTouch: true},\n    })\n\n    return   (\n\n        <animated.div  style={{ bottom: mr, left:0 }} className='ControlPanel'>\n            <div ref={panelcontrol} {...bind()} className={state.leftHanded?'PanelControlL shadow':'PanelControl shadow'} >\n                {/* <img id='logo'className='Logo' src='./images/EOi_logo.png' alt='' onClick={()=>!open?set({mr:-300}):set({mr:0})} /> */}\n                {/* <div className='PanelControl' alt='' onClick={()=>!open?set({mr:-300}):set({mr:0})}></div> */}\n                <Icon icon={baselinePalette} width='100%'/>\n            </div>\n            <div className='ControlPanelMask' style={{display: !mask?'none':'block'}}/>\n            <div className='ControlPanelBlend'>\n                {props.children}\n                </div>\n        \n        </animated.div>\n\n\n    )\n    \n}\n\nexport default ControlPanel\n","import React from \"react\";\nimport {useSpring, animated} from 'react-spring'\nimport { useDrag } from 'react-use-gesture'\nimport \"./InfoPanel.css\"\n\n\n\n// import MissionSelector from \"./missionselector\";\n\n\n\n\n\nfunction InfoPanel(props) {\n\n    const [{ x, y }, api] = useSpring(() => ({ x: 0, y: 0 }))\n    const bind2 = useDrag(({ offset: [x, y] }) => api.start({ x, y }))\n\n\n    return   (\n\n        <animated.div {...bind2()} style={{ x, y }}  className='Infopanel'>\n        {props.children}\n    </animated.div>\n\n\n    )\n    \n}\n\nexport default InfoPanel\n","import React  from 'react';\nimport {AppContext} from '../app/context'\nimport { useKey } from 'rooks'\n\n\nimport './Mood.css' \nimport { useEffect, useState } from 'react';\n\nfunction Mood() {\n\n    // const [altitude, ] = useGlobal('altitude')\n    const [ state, dispatch  ] = React.useContext(AppContext)\n\n\n    const [mood, setmood] =  useState('🙂')\n    const [defmood, setdefmood] =  useState('🙂')\n\n    useKey(['l'],()=>{\n        dispatch({type:'toggle_lefthanded'})\n    })\n\n\n\n    useEffect(() => {\n        setdefmood(state.animated?'🥵':'🙂')\n        setmood(state.animated?'🥵':'🙂')\n    }, [state.animated]);\n\n    useEffect(() => {\n        console.log('searching...')\n        console.log('searching: '+state.searching)\n        setmood(state.searching?'🧐':defmood)\n    }, [state.searching]);\n\n\n    return (\n        <div className='Mood'>\n            <div className='offset'>{mood}</div>\n        </div>\n     )\n}\n\nexport default Mood;\n","import React, {useCallback} from 'react'\nimport { Icon } from '@iconify/react';\nimport {AppContext} from '../app/context'\nimport JSONCrush from \"jsoncrush\"\n\n\nimport outlineIosShare from '@iconify/icons-ic/outline-ios-share';\n\nimport './Share.css' \n\nfunction Share({active}) {\n\n    const [ state, dispatch ] = React.useContext(AppContext)\n    \n    const handleClick = useCallback( (event) => {\n        let newloc = window.location.href.split('?')[0]\n        let savedstate = JSON.parse(window.localStorage.getItem(\"eoi_state\"))\n        newloc = newloc + '?s=' + encodeURIComponent(JSONCrush.crush(JSON.stringify(savedstate)))\n        console.log(newloc)\n        navigator.share({url:newloc, text:'Care for the Earth...'})\n    }, [])\n\n    return (\n        <div className={state.leftHanded?'ShareL':'Share'} >\n            <Icon icon={outlineIosShare} width='40px' onClick={handleClick}/>            \n        </div>\n     )\n}\n\nexport default Share\n","import React, { useState, useEffect } from \"react\";\nimport {AppContext} from '../app/context'\n\n\nimport './DatasetSelector.css'\n\n\n// should use a prop\n\nfunction DatasetSelector() {\n\n    const [ state, dispatch ] = React.useContext(AppContext)\n\n    \n\n    return (\n        <div className='DatasetSelectorContainer'>\n            <div className='DatasetSelector'>\n                {state.collections.map( (coll)  => (\n                    <div key={coll.code} className={(state.dataset === coll.code)?'CircleButtonSelected':'CircleButton'}><img className='DatasetIcon' src={coll.logo} alt='' onClick={() => dispatch({ type: \"set_dataset\", value: [coll.code,coll.satellites]})} /></div>\n                    ))}\n                </div>\n        </div>\n        \n    )\n\n}\n\nexport default DatasetSelector;\n","import React from \"react\";\nimport {AppContext} from '../app/context'\n\nimport './MapSelector.css'\n\n\n// should use a prop\n\nfunction MapSelector() {\n\n    const [ state, dispatch ] = React.useContext(AppContext)\n\n    const toggleAtmosphere = () => dispatch({ type: \"toggle_atmosphere\" })\n    const toggleStarfield = () => dispatch({ type: \"toggle_starfield\" })\n    const toggleNames = () => dispatch({ type: \"toggle_names\" })\n    const toggleOverlay = () => dispatch({ type: \"toggle_overlay\" })\n    const toggleBg = () => dispatch({ type: \"toggle_background\" })\n    const togglePr = () => dispatch({ type: \"toggle_projection\" })\n\n\n    \n    //console.log('mission rendering')\n    return (\n        <div className='MapSelectorContainer'>\n            <div className='MapSelector'>\n                <div className={(state.mapSettings.atmosphere)?'CircleButtonSelected':'CircleButton'}><img className='MapIcon' draggable=\"false\" src='./images/atmosphere.png' alt='' onClick={toggleAtmosphere} /></div>\n                <div className={(state.mapSettings.starfield)?'CircleButtonSelected':'CircleButton'}><img className='MapIcon' draggable=\"false\" src='./images/starfield.png' alt='' onClick={toggleStarfield} /></div>\n                <div className={(state.mapSettings.names)?'CircleButtonSelected':'CircleButton'}><img className='MapIcon' draggable=\"false\" src='./images/names.png' alt='' onClick={toggleNames} /></div>\n                <div className='CircleButton'><img className='MapIcon' draggable=\"false\" src='./images/names.png' alt='' onClick={toggleBg} /></div>\n                <div className='CircleButton'><img className='MapIcon' draggable=\"false\" src='./images/names.png' alt='' onClick={toggleOverlay} /></div>\n                <div className='CircleButton'><img className='MapIcon' draggable=\"false\" src='./images/names.png' alt='' onClick={togglePr} /></div>\n            </div>\n        </div>\n    )\n}\n\nexport default MapSelector;\n","\nimport React, { useEffect } from \"react\";\nimport {AppContext} from '../components/app/context'\n\nimport './ColorSelector.css'\nimport { HexColorPicker } from \"react-colorful\";\n\nfunction ColorSelectorContainer() {\n\n\n    const [ state, dispatch ] = React.useContext(AppContext)\n\n\n    useEffect(() => {\n        document.documentElement.style.setProperty('--color', state.appColor);\n        document.documentElement.style.setProperty('--colort', state.appColor+'66');\n    }, [state.appColor]);\n    \n    const handleChangeComplete = (color) => {\n        if(color !== null) dispatch({type: 'set_color', value: color})\n        // document.documentElement.style.setProperty('--color', color);\n         \n        // document.documentElement.style.setProperty('--colort', color+'66');\n        // setappColor(color );\n        // console.log(appColor)\n\n      };\n\n    //   useEffect(() => {\n    //     document.documentElement.style.setProperty('--color', state.appColor);\n    //     document.documentElement.style.setProperty('--colort', state.appColor+'66');\n    // }, []);\n\n    \n    //console.log('mission rendering')\n    return (\n        <div className='ColorSelector'>\n            <HexColorPicker color={state.appColor} onChange={handleChangeComplete} style={{height:'150px', width:'140px'}}/>\n        </div>\n    )\n    // <AlphaPicker />  \n}\n\nexport default ColorSelectorContainer;\n\n\n\n","\nimport React from \"react\";\nimport {AppContext} from '../app/context'\nimport { useKey } from 'rooks'\n\n\nimport './OptionsSelector.css'\nimport Switch from \"react-switch\";\n\nfunction OptionsSelector() {\n\n  useKey(['0'],()=>dispatch({ type: \"set_dataset\", value: [state.dataset,['s1a','s1b','s2a','s2b','s3a','s3b','s5p']]}))\n  useKey(['1'],()=>dispatch({ type: \"set_dataset\", value: [state.dataset,['s1a','s1b']]}))\n  useKey(['2'],()=>dispatch({ type: \"set_dataset\", value: [state.dataset,['s2a','s2b']]}))\n  useKey(['3'],()=>dispatch({ type: \"set_dataset\", value: [state.dataset,['s3a','s3b']]}))\n  useKey(['5'],()=>dispatch({ type: \"set_dataset\", value: [state.dataset,['s5p']]}))\n\n\n\n    const [ state, dispatch ] = React.useContext(AppContext)\n\n    \n    const handleDemChange = (checked) => {\n      dispatch({ type: \"set_dem\", value: checked})\n    }\n    const handleSatChange = (checked) => {\n      dispatch({ type: \"toggle_satellites\",  value: checked})\n    }\n    const handleConstellationChange = (checked) => {\n      dispatch({ type: \"set_constellation\", value: [['s1a','s1b','s2a','s2b','s3a','s3b','s5p'],checked]})\n    }\n    const handleStarfieldChange = (checked) => {\n      dispatch({ type: \"toggle_starfield\"})\n    }\n    const handleAtmosphereChange = (checked) => {\n      dispatch({ type: \"toggle_atmosphere\"})\n    }\n    const handleQuicklooksChange = (checked) => {\n      dispatch({ type: \"toggle_quicklooks\"})\n    }\n    \n    const handleLeftHanded = (checked) => {\n      dispatch({ type: \"toggle_lefthanded\"})\n    }\n    \n    //console.log('mission rendering')\n    return (\n        <div className='DemSelectorContainer'>\n          <div className='verticalContainer DemSelector' >\n          <div className='Selector horizontalContainer'>\n                <Switch id='satellites' onChange={handleSatChange} checked={state.mapSettings.satellites} />\n                <span className='Label'>Satellites in Dataset</span>\n            </div>\n            <div className='Selector horizontalContainer'>\n                <Switch id='constellation' onChange={handleConstellationChange} checked={state.mapSettings.constellation} />\n                <span className='Label'>Constellation</span>\n            </div>\n            <div className='Selector horizontalContainer'>\n              <Switch id='dem' onChange={handleDemChange} checked={state.mapSettings.dem} />\n                <span className='Label'>Copernicus DEM</span>\n            </div>\n            <div className='Selector horizontalContainer'>\n              <Switch id='starfield' onChange={handleStarfieldChange} checked={state.mapSettings.starfield} />\n                <span className='Label'>Stars and Planets</span>\n            </div>\n            <div className='Selector horizontalContainer'>\n              <Switch id='atmosphere' onChange={handleAtmosphereChange} checked={state.mapSettings.atmosphere} />\n                <span className='Label'>Sun and Atmosphere</span>\n            </div>\n            <div className='Selector horizontalContainer'>\n              <Switch id='quicklooks' onChange={handleQuicklooksChange} checked={state.mapSettings.quicklooks} />\n                <span className='Label'>Quicklooks</span>\n            </div>\n            <div className='Selector horizontalContainer'>\n              <Switch id='lefthanded' onChange={handleLeftHanded} checked={state.leftHanded} />\n                <span className='Label'>Left Handed UI</span>\n            </div>\n            <div height='200px' flexgrow='2'>&nbsp;</div>\n          </div>\n        </div>\n    )\n}\n\nexport default OptionsSelector\n\n\n\n","import React from 'react';\nimport {AppContext} from '../app/context'\n\nimport './GenericLabel.css' \n\nfunction CollectionLabel() {\n\n    // const [altitude, ] = useGlobal('altitude')\n    const [ state,  ] = React.useContext(AppContext)\n\n    return (\n        <div className='GenericLabel'>{state.dataset}</div>\n     )\n}\n\nexport default CollectionLabel;\n","import React from 'react';\nimport {AppContext} from '../app/context'\n\nimport './GenericLabel.css' \n\nfunction AltitudeLabel() {\n\n    // const [altitude, ] = useGlobal('altitude')\n    const [ state,  ] = React.useContext(AppContext)\n\n\n    const formatLat = (lat) => {\n        return (state.altitude >= 10000)?Math.floor(state.altitude / 1000)+ ' Km' : Math.floor(state.altitude)+ ' m'\n    }\n\n    return (\n        <div className='GenericLabel'>{formatLat(state.altitude)}</div>\n     )\n}\n\nexport default AltitudeLabel;\n","import React from 'react';\nimport {AppContext} from '../app/context'\n\nimport './GenericLabel.css' \n\nfunction SearchLabel() {\n\n    const [ state,  ] = React.useContext(AppContext)\n\n    return (\n        <div className='GenericLabel'>{state.resultDesc.totalLoaded === 0?'':state.resultDesc.totalLoaded+'/'+state.resultDesc.totalResults}</div>\n     )\n}\n\nexport default SearchLabel\n","import React, {useRef, useMemo} from 'react';\nimport {AppContext} from '../app/context'\nimport GeocoderGeonames from 'geocoder-geonames'\n\nimport './GeoName.css' \n\nfunction GeoName() {\n\n    const [ state,  ] = React.useContext(AppContext)\n\n    const geocoder = useRef(new GeocoderGeonames({\n        username:      'esaeoi',\n      })\n    )\n\n\n    const search = useMemo( (value) => {\n        console.log('searching: ')\n        console.log(value)\n        // geocoder.current.get('search',{\n        //     q: 'Berlin'\n        //   })\n        //   .then(function(response){\n        //     console.log(response);\n        //   })\n        //   .catch(function(error){\n        //     console.log(error);\n        //   })\n    },[]) \n\n    return (\n        <div>\n            {/* <form onInput={search} > */}\n                <input className='GeoName' type=\"text\" onInput={search}></input>\n            {/* </form> */}\n        </div>\n     )\n}\n\nexport default GeoName\n","import React from 'react';\nimport dateFormat from \"dateformat\"\nimport './DateLabelCard.css';\n\nfunction DateLabel({date, highlight, handleLabelClick}) {\n\n    return (\n        <div className='LabelContainer' >\n            <span className={highlight ==='year'?'Highlighted':'NotHighlighted'} onClick={()=>handleLabelClick('year')}>{date.getUTCFullYear()}</span>-\n            <span className={highlight ==='month'?'Highlighted':'NotHighlighted'} onClick={()=>handleLabelClick('month')}>{dateFormat(date,'UTC:mmm').toUpperCase()}</span>-\n            <span className={highlight ==='day'?'Highlighted':'NotHighlighted'} onClick={()=>handleLabelClick('day')}>{dateFormat(date,'UTC:dd')}</span>\n            <span>&nbsp;&nbsp;&nbsp;</span> \n            <span className={highlight ==='hour'?'Highlighted':'NotHighlighted'} onClick={()=>handleLabelClick('hour')}>{dateFormat(date,'UTC:HH')}</span>:\n            <span className={highlight ==='minute'?'Highlighted':'NotHighlighted'} onClick={()=>handleLabelClick('minute')}>{dateFormat(date,'UTC:MM')}</span>:\n            <span className={highlight ==='second'?'Highlighted':'NotHighlighted'} onClick={()=>handleLabelClick('second')}>{dateFormat(date,'UTC:ss')}</span>  \n            <span>&nbsp;&nbsp;</span> \n        </div>\n    )\n}\nexport default DateLabel\n","\n    import { useState, useRef } from \"react\"\n    \n    export default function useHandleDoubleTap(tapCallback,doubleTapCallback) {\n\n        const [lastTap, setLasttap] = useState()\n        const clicktimeout = useRef()\n    \n        const handleTap = (event) => {\n            // console.log(event)\n            event.stopPropagation()\n            event.preventDefault()\n            const now = Date.now();\n            if (lastTap && (now - lastTap) < 300) {\n                clearTimeout(clicktimeout.current)   \n                doubleTapCallback();\n            } else {\n                setLasttap(now)    \n                clicktimeout.current = setTimeout(() => {\n                    tapCallback()\n                }, 300);\n            }\n\n        }\n\n        return {handleTap}\n\n\n    }\n    \n","import React, {useEffect, useState } from 'react';\nimport { useClock } from \"./useClock\"\nimport { useKey } from 'rooks'\nimport { Icon } from '@iconify/react'\n\n// npm install --save-dev @iconify/react @iconify-icons/ic\nimport roundFastForward from '@iconify-icons/ic/round-fast-forward';\nimport roundFastRewind from '@iconify-icons/ic/round-fast-rewind';\n\nimport roundPlayArrow from '@iconify-icons/ic/round-play-arrow';\nimport roundPause from '@iconify-icons/ic/round-pause';\n\nimport useHandleDoubleTap from '../../../../hooks/useHandleDoubleTap'\n\n\n\n\nimport './DateController.css';\n\nfunction DateController({startdate, onDateChange, onStateChange, animated, lefthanded}) {\n\n    // useClock must be redone to support real time increments\n    const {\n        date,\n        speed,\n        start,\n        stop,\n        reset,\n        increaseSpeed,\n        decreaseSpeed,\n        forceDate\n    } = useClock({\n        initdate: startdate\n    })\n\n    const [playing, setplaying ] = useState(animated) \n\n    useKey([\"t\"],()=>{setplaying((state)=>!state) })\n    useKey([\"r\"],()=>{reset() })\n    useKey([\".\"],()=>{increaseSpeed() })\n    useKey([\",\"],()=>{decreaseSpeed() })\n\n    \n    useEffect(() => {\n        onStateChange(playing)\n        if(playing === true) {\n            start()\n         } else stop()\n    },[playing, onStateChange, start, stop]);\n\n    useEffect(() => {\n        console.log('animated: '+animated)\n    },[animated]);\n\n    // useEffect(() => {\n    //     console.log('lefthanded: '+lefthanded)\n    // },[lefthanded]);\n\n    useEffect(() => {\n        // console.log(\"date from useclock :\"+date)\n        onDateChange(date)\n        //forceDate(date)\n        //setAppdate({appdate: new Date(date)})\n    },[date, onDateChange]);\n\n    useEffect(() => {\n        // console.log(\" force date: \"+startdate)\n        if(startdate !== null) forceDate(startdate)\n        \n        //forceDate(date)\n        //setAppdate({appdate: new Date(date)})\n    },[startdate, forceDate]);\n\n    const {handleTap} = useHandleDoubleTap(()=>{setplaying((state)=>!state)}, reset)\n\n//     <div className='buttoncontainer'>\n//     <Icon icon={roundFastRewind} onClick={decreaseSpeed} className='smallcontrolbutton shadow' style={{display:playing?'block':'none'}}/>\n// </div>\n// <div className='buttoncontainer'>\n//     <Icon icon={roundPlayArrow} onClick={handleTap} className='controlbutton shadow'/>\n// </div>\n// <div className='buttoncontainer'>\n//     <Icon icon={roundFastForward} onClick={increaseSpeed} className='smallcontrolbutton shadow' style={{display:playing?'block':'none'}}/>\n// </div>\n\n\n    return (\n        <div className={lefthanded?'DateControllerL':'DateController'} >\n                <div className={speed>0?'controlbutton shadow':'controlbutton shadow flipped'}>\n                    <Icon icon={playing?roundPause:roundPlayArrow} onClick={handleTap} className='controlbutton shadow'/>\n                </div>\n                <div className={lefthanded?'speedbarL':'speedbar'}>\n                    <Icon icon={roundFastRewind} onClick={decreaseSpeed} className='smallcontrolbutton shadow Backward' style={{display:playing?'block':'none'}}/>\n                    <span className='Speed' style={{display:playing?'block':'none'}}>x{Math.abs(speed)}</span>\n                    <Icon icon={roundFastForward} onClick={increaseSpeed} className='smallcontrolbutton shadow Forward' style={{display:playing?'block':'none'}}/>\n                </div>\n        </div>\n    )\n}\nexport default DateController\n\n\n","import { useState, useRef, useCallback } from \"react\";\n\n\nexport function useClock({  initdate }) {\n    // console.log('useClock renders')\n    //const { autoStart, duration } = settings || {};\n  \n    // let initDate = startdate\n    const [date, setDate] = useState(initdate)\n    const [speed, setSpeed] = useState(1)\n    const [playing, setplaying] = useState(false)\n    // const [stepstate, setStepstate] = useState(1000*60*60)\n    // const [refreshrate, setrefreshrate] = useState(200)\n    // const playing = useRef()\n    const step = useRef() \n    const refreshrate = useRef() \n    refreshrate.current = 200\n    // step.current = refreshrate.current\n    \n    const ldate = useRef()\n\n      // Control functions\n    const intervalRef = useRef()\n    const timeoutRef = useRef()\n    \n\n    function increaseSpeed() {\n        // stop()\n        step.current = (step.current > 0)? step.current *= 2:step.current /= 2\n        if(Math.abs(step.current) < refreshrate.current) step.current = refreshrate.current\n        console.log('step: '+step.current)\n        setSpeed(step.current/200)\n        // setStepstate((st)=>st*2)\n        // start()\n    }\n    function decreaseSpeed() {\n        step.current = (step.current > 0)? step.current /= 2:step.current *= 2\n        if(Math.abs(step.current) < refreshrate.current) step.current = -1 * refreshrate.current\n        console.log('step: '+step.current)\n        setSpeed(step.current/200)\n        // setStepstate((st)=>st/2)\n    }\n\n    function togglePause() {\n        if (playing) {\n            stop()\n        } else {\n            start()\n        }\n    }\n    \n    const start = useCallback( () => {\n        console.log('start clock')\n        if(!step.current) step.current = refreshrate.current\n        if (!playing) {\n            intervalRef.current = setInterval( ()=>{\n                ldate.current += step.current\n                setDate(new Date(ldate.current))\n            },refreshrate.current)\n        }\n        setplaying(true)\n    }, [])\n    \n    const stop = useCallback( () => {\n        console.log('stop clock')\n        if(timeoutRef.current) clearTimeout(timeoutRef.current)\n        if (intervalRef.current) clearInterval(intervalRef.current)\n        setplaying(false)\n    }, [])\n    \n\n    function reset() {\n        ldate.current = new Date().getTime()\n        setDate(new Date(ldate.current))\n\n    }\n\n     \n    const forceDate = useCallback( (newdate) => {\n        // console.log('forcedate useclock: '+newdate.toJSON())\n        ldate.current = newdate.getTime()\n        setDate(new Date(ldate.current))\n    }, [])\n\n    // useEffect(() => {\n    //     console.log('init start useclock '+initdate.toJSON())\n    //     ldate.current = initdate.getTime()\n    //     setDate(new Date(ldate.current))\n    // }, [initdate])\n\n\n\n  \n  return { date, speed, playing, togglePause, start, stop, reset, increaseSpeed, decreaseSpeed, forceDate };\n}\n","import React, {useState, useEffect, useRef} from 'react';\nimport './DateSelector.css';\n\nfunction DateSelectorScale({date, zoomfactor, resulttics, lefthanded}) {\n\n    const scale = useRef(0)\n    const canvas = useRef(null)\n    const [timescale, setTimescale] = useState('')   \n    const leftHanded = useRef(lefthanded)   \n    // const [resultepochs, ] = useState(resulttics)   \n    \n    // saves the current zoom and date to handle the widow resize\n    const izoom = useRef(zoomfactor)    \n    const idate = useRef(date)    \n    const itics = useRef(resulttics)    \n\n\n        \n    const scaleText = (_start, _zoom, _resulttics) => {\n        // console.log('_start: '+_start.toJSON()+'  zoom: '+_zoom)\n        // if(!scale.current) return\n\n        let ctx = canvas.current.getContext(\"2d\");\n        ctx.font = \"14px Arial\"\n        ctx.shadowColor = \"rgba(0,0,0,0.8\"\n        ctx.shadowOffsetX = 1\n        ctx.shadowOffsetY = 1\n        ctx.shadowBlur = 2\n        ctx.fillStyle = \"red\";\n        ctx.clearRect(0, 0, window.innerWidth, window.innerHeight)\n\n            \n        const monthcode = ['JAN','FEB','MAR','APR','MAY','JUN','JUL','AUG','SEP','OCT','NOV','DEC']\n        const YEAR_LEVEL = 1000*60*60*24*30*3\n        const MONTH4_LEVEL = 1000*60*60*24*4\n        const MONTH_LEVEL = 1000*60*60*24*2\n        const DAY5_LEVEL = 1000*60*60*8\n        const DAY_LEVEL = 1000*60*70\n        const DAY_HOUR_LEVEL = 1000*60*30\n        const HOUR6_LEVEL = 1000*60*20\n        const HOUR3_LEVEL = 1000*60*7\n        const HOUR_LEVEL = 1000*60*3\n        const MIN20_LEVEL = 1000*60\n        const MIN10_LEVEL = 1000*30\n        const MIN2_LEVEL = 1000*5\n        const MIN_LEVEL = 1000*3\n\n        function pad(number, length) {  \n            var str = '' + number;\n            while (str.length < length) {\n                str = '0' + str;\n            }           \n            return str;        \n        }\n\n        function lefthand(classname)  {\n            return leftHanded.current?classname+'L':classname\n        }\n\n        let day, month, hour, year, minute = 0\n        let lastday =0\n        let lastmonth = 0\n        let lastyear = 0\n        let lasthour = 0\n        let lastminute = 0\n        let tics = []\n        let lastticslength = 0   \n        let labeloffset = 0\n\n        // let skip = parseInt(scale.current.style.fontSize)\n        // let iteration = 0\n        for ( let i=0 ; i < scale.current.offsetHeight ; i+=1 ) {\n            let refdate = new Date( (i- scale.current.offsetHeight/2) * _zoom + _start.getTime()  )\n            day = refdate.getUTCDate()\n            month = refdate.getUTCMonth()\n            hour = refdate.getUTCHours()\n            year = refdate.getUTCFullYear()\n            minute = refdate.getUTCMinutes()\n            \n\n            switch (true) {\n                case _zoom < MIN_LEVEL:\n                    labeloffset = 60000\n                    if(minute !== lastminute && i!==0) {\n                        if (minute !== 0 || hour !== 0) {\n                            tics.push({class:lefthand('HourTic'), pos: i, label: pad(hour,2)+':'+pad(minute,2)})\n                            // ctx.fillText(pad(hour,2)+':'+pad(minute,2), 2, i);\n                        } else {\n                            if (minute === 0 && hour === 0) {\n                                tics.push({class:lefthand('DayTic_h'), pos: i, label: pad(day,2)})\n                                tics.push({class:lefthand('MonthTic_h2'), pos: i, label: monthcode[month]})\n                                //tics.push({class:'YearTic_h', pos: i, label: year})\n\n                            }     \n                        }\n                    }\n                break\n\n                case _zoom < MIN2_LEVEL:\n                    labeloffset = 60000*2\n                    if(minute !== lastminute  && i!==0) {\n                        if( (minute !== 0 || hour !==0) && minute % 2 === 0) {\n                            tics.push({class:lefthand('HourTic'), pos: i, label: pad(hour,2)+':'+pad(minute,2)})\n                        } else {\n                            if (minute === 0 && hour === 0) {\n                                tics.push({class:lefthand('DayTic_h'), pos: i, label: pad(day,2)})\n                                tics.push({class:lefthand('MonthTic_h2'), pos: i, label: monthcode[month]})\n                                //tics.push({class:'YearTic_h', pos: i, label: year})\n                            }     \n                        }\n                    }\n                break\n\n\n                case _zoom < MIN10_LEVEL:\n                    labeloffset = 60000*10\n                    if(minute !== lastminute  && i!==0) {\n                        if( (minute !== 0 || hour !==0) && minute % 10 === 0) {\n                            tics.push({class:lefthand('HourTic'), pos: i, label: pad(hour,2)+':'+pad(minute,2)})\n                        } else {\n                            if (minute === 0 && hour === 0) {\n                                tics.push({class:lefthand('DayTic_h'), pos: i, label: pad(day,2)})\n                                tics.push({class:'MonthTic_h2', pos: i, label: monthcode[month]})\n                                //tics.push({class:'YearTic_h', pos: i, label: year})\n                            }     \n                        }\n                    }\n                break\n\n                case _zoom < MIN20_LEVEL:\n                    labeloffset = 60000*20\n                    if(minute !== lastminute && i!==0) {\n                        if( (minute !== 0 || hour !==0) && minute % 20 === 0) {\n                            tics.push({class:lefthand('HourTic'), pos: i, label: pad(hour,2)+':'+pad(minute,2)})\n                        } else {\n                            if (minute === 0 && hour === 0) {\n                                tics.push({class:lefthand('DayTic_h'), pos: i, label: pad(day,2)})\n                                tics.push({class:lefthand('MonthTic_h2'), pos: i, label: monthcode[month]})\n                                //tics.push({class:'YearTic_h', pos: i, label: year})\n                            }     \n                        }\n                    }\n                break\n\n                case _zoom < HOUR_LEVEL:\n                    labeloffset = 60000*60\n                    if(hour !== lasthour && i!==0) {\n                        if (hour !== 0) {\n                            tics.push({class:lefthand('HourTic'), pos: i, label: pad(hour,2)+':00'})\n                        \n                        } else  {\n                            tics.push({class:lefthand('DayTic_h'), pos: i, label: pad(day,2)})\n                            tics.push({class:lefthand('MonthTic_h2'), pos: i, label: monthcode[month]})\n                            // tics.push({class:'YearTic_h', pos: i, label: year})            \n                        }\n                    }\n                break\n\n                case _zoom < HOUR3_LEVEL:\n                    labeloffset = 60000*60*3\n                    if(hour !== lasthour && i!==0) {\n                        if (hour !== 0 &&  (hour % 3 === 0 )) {\n                            tics.push({class:lefthand('HourTic'), pos: i, label: pad(hour,2)+':00'})\n                        } else  {\n                            if (hour === 0) {\n                                tics.push({class:lefthand('DayTic_h'), pos: i, label: pad(day,2)})\n                                tics.push({class:lefthand('MonthTic_h2'), pos: i, label: monthcode[month]})\n                                // tics.push({class:'YearTic_h', pos: i, label: year})            \n                            }\n                        }\n                    }    \n                break\n\n                case _zoom < HOUR6_LEVEL:\n                    labeloffset = 60000*60*6\n                    if(hour !== lasthour && i!==0) {\n                        if (hour !== 0 &&  (hour % 6 === 0 )) {\n                            tics.push({class:lefthand('HourTic'), pos: i, label: pad(hour,2)+':00'})\n                        } else  {\n                            if (hour === 0) {\n                                tics.push({class:lefthand('DayTic_h'), pos: i, label: pad(day,2)})\n                                tics.push({class:lefthand('MonthTic_h2'), pos: i, label: monthcode[month]})\n                                // tics.push({class:'YearTic_h', pos: i, label: year})            \n                            }\n                        }\n                    }    \n                break\n\n\n\n                case _zoom < DAY_HOUR_LEVEL:\n                    labeloffset = 60000*60*24\n                    if(day !== lastday && i!==0) {\n                        tics.push({class:lefthand('DayTic_h'), pos: i, label: pad(day,2)})\n                        tics.push({class:lefthand('MonthTic_h2'), pos: i, label: monthcode[month]})\n\n                    }    \n                break\n\n\n                case _zoom < DAY_LEVEL:\n                    labeloffset = 60000*60*24\n                    if(day !== lastday && i!==0) {\n                        if ( day !== 1 ) {\n                            tics.push({class:lefthand('DayTic'), pos: i, label: day})\n                        } else {\n                            tics.push({class:lefthand('MonthTic_h'), pos: i, label: monthcode[month]})\n                            if (month === 0) tics.push({class:lefthand('YearTic_h2'), pos: i, label: year})\n                            // tics.push({class:'YearTic_h2', pos: i, label: year})\n                         }\n                        \n                    }    \n                break\n\n                case _zoom < DAY5_LEVEL:\n                    labeloffset = 60000*60*24*5\n                    if(day !== lastday && i!==0) {\n                        if ( day !== 1 && day !== 30 && day % 5 === 0 ) {\n                            tics.push({class:lefthand('DayTic'), pos: i, label: day})\n                        } else {\n                            if (day === 1) {\n                                // tics.push({class:'DayTic', pos: i, label: day})\n                                tics.push({class:lefthand('MonthTic_h'), pos: i, label: monthcode[month]})\n                                if (month === 0) tics.push({class:lefthand('YearTic_h2'), pos: i, label: year})\n                                // tics.push({class:'YearTic_h2', pos: i, label: year})\n                            }\n                         }\n                        \n                    }    \n\n                break\n\n                case _zoom < MONTH_LEVEL:\n                    labeloffset = 60000*60*24*28\n                    if( month !== lastmonth  && i!==0) {\n                        if (month !== 0) {\n                            tics.push({class:lefthand('MonthTic'), pos: i, label: monthcode[month]})\n                        } else {\n                            tics.push({class:lefthand('MonthTic_h'), pos: i, label: monthcode[month]})\n                            tics.push({class:lefthand('YearTic_h2'), pos: i, label: year})\n                        }\n                    }\n    \n                break\n\n                case _zoom < MONTH4_LEVEL:\n                    labeloffset = 60000*60*24*28*3\n                    if( month !== lastmonth  && i!==0) {\n                        if (month !== 0 && month !== 11 && (month) % 3 === 0 ) {\n                            tics.push({class:lefthand('MonthTic'), pos: i, label: monthcode[month]})\n                        } else {\n                            if (month === 0) {\n                                tics.push({class:lefthand('MonthTic_h'), pos: i, label: monthcode[month]})\n                                tics.push({class:lefthand('YearTic_h2'), pos: i, label: year})\n                            }\n                        }\n                    }\n    \n                break\n\n                case _zoom < YEAR_LEVEL:\n                    labeloffset = 60000*60*24*30*12\n                    if(year !== lastyear  && i!==0) {\n                        if (month !== 0) {\n                            tics.push({class:lefthand('MonthTic'), pos: i, label: monthcode[month]})\n                        } else {\n                            // tics.push({class:'MonthTic', pos: i, label: month})\n                            tics.push({class:lefthand('YearTic'), pos: i, label: year})\n                        }\n                    }\n    \n                break\n\n                default:\n                break\n            }\n            lastday = day\n            lastyear = year\n            lastmonth = month\n            lasthour = hour\n            lastminute = minute\n            // optimisation to skip a fontsize number of pixels\n            if (tics.length !== lastticslength) {\n                // console.log('off: '+labeloffset/_zoom+'   labeloffset: '+labeloffset)\n                i+=labeloffset/_zoom - 4\n            }\n            lastticslength = tics.length\n            // iteration +=1\n        }\n        if(_resulttics) {\n            _resulttics.sort((a,b)=>b-a)\n            let lastticpos = -10\n            for ( let i=_resulttics.length ; i >= 0  ; i-=1 ) {\n            // for ( let i=0 ; i < _resulttics.length  ; i+=1 ) {\n            \n                let ticpos = (_resulttics[i] - _start.getTime() ) / _zoom + scale.current.offsetHeight/2\n                if(ticpos > 0 && ticpos < scale.current.offsetHeight) {\n                    // tics.push({class:'ResultTic', pos: ticpos, label: ''})\n                    // ctx.shadowColor = null\n                    // ctx.shadowOffsetX = null\n                    // ctx.shadowOffsetY = null\n                    // ctx.shadowBlur = null\n                    ctx.font = \"30px Arial\"\n                    if(ticpos - lastticpos > 3) {\n                        lastticpos = ticpos\n                        ctx.fillText('.', leftHanded.current?0:scale.current.offsetWidth -8, ticpos +5);\n                    }\n            \n                    \n\n                }\n            }\n        \n        }\n\n    //   console.log('iterations: '+iteration)\n        return tics.map(item => ( <div className={item.class} key={item.class+item.pos} style={{top:item.pos,opacity:1}}>{item.label}</div>))\n    }\n\n\n    // useEffect(() => {\n    //     console.log('zoomfactor / date: '+zoomfactor + '/ ' + date)\n    //     console.log(resulttics)\n    //     izoom.current = zoomfactor\n    //     idate.current = date\n    //     itics.current = resulttics\n    //     setTimescale(scaleText(idate.current,izoom.current,itics.current))\n    // },[ zoomfactor,date,resulttics])\n\n    useEffect(() => {\n        // console.log(zoomfactor)\n        izoom.current = zoomfactor\n        setTimescale(scaleText(idate.current,izoom.current,itics.current))\n    },[zoomfactor])\n\n    useEffect(() => {\n        // console.log(date)\n        idate.current = date\n        setTimescale(scaleText(idate.current,izoom.current,itics.current))\n    },[date])\n\n    useEffect(() => {\n        leftHanded.current = lefthanded\n        setTimescale(scaleText(idate.current,izoom.current,itics.current))\n    },[lefthanded])\n\n    useEffect(() => {\n        // console.log(resulttics)\n        itics.current = resulttics\n        setTimescale(scaleText(idate.current,izoom.current,itics.current))\n    },[resulttics])\n\n    useEffect(() => {\n        const handleResize =  (e) => {\n            e.preventDefault()\n            e.stopPropagation()\n            // console.log('resize')\n            setTimescale(scaleText(idate.current,izoom.current,itics.current))\n        }\n        window.addEventListener('resize', handleResize)\n        return ()=>{window.removeEventListener('resize', handleResize)}\n    },[])\n\n\n    return (\n        <div>\n            <canvas ref={canvas} className='DateSelectorCanvas' width='{window.innerWidth}' height={window.innerHeight}></canvas>\n            <div ref={scale} className='DateSelectorScale' id='DateSelectorScale' style={{fontSize:'14px'} }>\n                {timescale}\n            </div>\n        </div>\n    )\n}\nexport default DateSelectorScale\n","import React, {useState, useEffect, useRef, useCallback} from 'react'\nimport {useSpring} from 'react-spring'\nimport { useGesture } from 'react-use-gesture'\n// import { add, scale } from 'vec-la'\nimport DateSelectorScale from './DateSelectorScale'\n// import useLog from '../../../../hooks/useLog.js';\n\n\n\nimport './DateSelector.css';\n// import { start } from 'repl';\n\nfunction DateSelector({startdate, resetToStartDateTrigger, tics, gotoscalezoom, onDateChange, onFinalDateChange, onStepChange, leftHanded}) {\n\n\n    // const [ setlog, renderlog] = useLog()\n    // const [ setlog2, renderlog2] = useLog()\n\n    // zoomfactor of the date scale: ms/pixel\n    const MAXZOOM = 1000*60*60*24*15\n    const MINZOOM = 1000\n    const DEFZOOM = 1000*60*60\n    const ZOOMDIR = -1\n    const lastZoom = useRef(DEFZOOM)\n    const [zoomfactor, setZoomfactor ] = useState(DEFZOOM)\n\n    const selector = useRef()\n\n    const [scaledate, setScaledate ] = useState(startdate)\n    // const debouncedScaledate = useDebounce(scaledate, 10);\n\n    \n    const isActive = useRef(false)\n    const [step, setStep ] = useState([60000])\n    const [stepLabel, setStepLabel ] = useState('hour')\n\n    // to detect double taps\n    const lastTap = useRef()\n    const lastTapdate = useRef(new Date(0))\n    const doubleTap = useRef()\n    const button = useRef()\n\n    const startingdate = useRef(startdate)\n    const discreetdate = useRef(startdate)\n\n    const detectDoubleTap = (e) => {\n        const now = Date.now();\n        button.current = e.button\n        // console.log(lastTapdate.current.getTime()-discreetdate.current.getTime())\n        // if (lastTap.current && (now - lastTap.current) < 300  && Math.abs(lastTapdate.current.getTime()-scaledate.getTime()) < 1 ) {\n        if (lastTap.current && (now - lastTap.current) < 300 ) {\n            doubleTap.current = true\n        } else {\n            lastTap.current = now\n            lastTapdate.current = scaledate\n            doubleTap.current = false\n        }\n    }\n\n\n    const [{ posy_wheel }, setyOnWheel] = useSpring(() => ({posy_wheel: 0 }))\n    const [{ zoom }, springzoom] = useSpring(() => ({ zoom: 0 }))\n\n    const [{ test }, springtest] = useSpring(() => ({ test: 0 }))\n    \n    const bind = useGesture({\n\n        // onWheelEnd: () => { \n        //     isActive.current = false\n        //     onFinalDateChange(discreetdate.current)\n        //     console.log('finaldate')\n        //         // lastZoom.current = zoomfactor\n        // },\n\n        onWheel: ( {active, delta, first, down, direction, velocity, xy, movement, wheeling, ctrlKey, shiftKey } ) => {\n            // console.log(down)\n            // console.log(first)\n            \n            if (first) {\n                springtest.stop()\n            //   isActive.current = true\n              discreetdate.current = scaledate\n            }\n\n            if (ctrlKey || shiftKey) {\n\n                springzoom.start({\n                    zoom: delta[1],\n                    immediate: true,\n                    config: { mass: 1, tension: 100, friction: 25, precision: 0.1 },\n                    onChange: () => {\n                        let newzoom = lastZoom.current + lastZoom.current / 300 * zoom.get() * ZOOMDIR\n                        // let newzoom = lastZoom.current + zoom.get() * ZOOMDIR *5000\n                        if (newzoom < MINZOOM) newzoom = MINZOOM\n                        if (newzoom > MAXZOOM) newzoom = MAXZOOM\n                        setZoomfactor(newzoom)\n                        lastZoom.current = newzoom\n        \n                    }\n                })\n                return\n            }\n\n            setyOnWheel.start({                 \n                posy_wheel: delta[1], \n                immediate: true, \n                config: { mass: 1, tension: 100, friction: 40},\n                onChange: ()=>{\n                    isActive.current = true\n                    let newdate\n                    const rounder = (posy_wheel.get() < 0)?Math.ceil:Math.floor\n                    let nbstep = rounder(posy_wheel.get() * zoomfactor  / step[0])\n                    if(nbstep === 0) {\n                        // onFinalDateChange(discreetdate.current)\n                        // isActive.current = false\n                        setyOnWheel.stop()\n                        // return\n                    }\n                    if(stepLabel==='month') {\n                        \n                        // setlog({olddate:discreetdate.current.toJSON()})\n                        newdate = new Date(discreetdate.current.getTime())\n                        newdate.setUTCMonth( newdate.getUTCMonth()-nbstep )\n                        // setlog({newdate:discreetdate.current.toJSON()})\n                    } else { \n                        newdate = new Date(discreetdate.current.getTime() - nbstep * step[0]) \n                    }\n                    discreetdate.current = newdate\n                    setScaledate(newdate)\n                    onDateChange(newdate)\n                },\n                onRest: ()=>{\n                    if (!wheeling) {\n                        onFinalDateChange(discreetdate.current)\n                        isActive.current = false\n                    }\n                }\n            })\n        },\n        onDragStart: ()=>{\n            isActive.current = true\n        },\n\n        onDrag: ({  event, active, first, down, touches, offset, delta, initial, distance, velocity, direction, shiftKey, ctrlKey, xy, movement,vxvy, wheeling}) => {\n            event.preventDefault()\n            if (first) {\n                setyOnWheel.stop()\n                detectDoubleTap(event)\n                startingdate.current = discreetdate.current\n                // setlog2({ startingdate: startingdate.current.toJSON()  })\n\n   \n            }\n\n\n\n            // setlog2({velocity1: velocity})\n            velocity = (velocity < 0.2)?0:velocity\n\n            if ((doubleTap.current || shiftKey || ctrlKey || button.current === 2) ) {\n                // let zoom = lastZoom.current + lastZoom.current / 50 *  delta[1] * ZOOMDIR\n                // if (zoom < MINZOOM) zoom = MINZOOM\n                // if (zoom > MAXZOOM) zoom = MAXZOOM\n                // setZoomfactor(zoom)\n                // lastZoom.current = zoom\n\n                handleZoom(delta,down,velocity,false)\n                // handleZoom2(delta,down,velocity,offset,wheeling,movement,vxvy)\n                \n                // \n                return\n                // if(!down) setActive(false)\n            }\n\n \n\n            // Working !!\n            springtest.start({  \n                // test: scale(delta,[0,zoomfactor]),\n                // test: delta[1]*zoomfactor,\n                test: (down)?movement[1]:movement[1]+movement[1]*velocity*5,\n                immediate: down,\n                config: { mass: 1, tension: 100, friction: 25, precision: 0.1 },\n                onChange: () => {\n                    isActive.current = true\n                    \n\n                    // if(Math.floor(Math.abs(test.get()*zoomfactor   / step[0]))==0) test.stop()\n\n                    // let even = (test.get()<0 ? Math.ceil:Math.floor)\n                        // setlog({anim:test.get(), velocity: velocity*5})\n\n                        // this avoids the double tap to be detected while touch dragging fast\n                        if(Math.abs(movement[1]) > 5) lastTap.current = new Date(0)\n\n\n                        if(stepLabel==='month') {\n                            let nbstep = Math.ceil(test.get() * zoomfactor  / step[0])\n                            // setlog({olddate:discreetdate.current.toJSON()})\n                            let adate = new Date(startingdate.current.getTime())\n                            adate.setUTCMonth( adate.getUTCMonth()-nbstep )\n                            discreetdate.current = adate\n                            // setlog({newdate:discreetdate.current.toJSON()})\n                        } else {\n                            discreetdate.current = new Date(startingdate.current.getTime() - Math.ceil(test.get()*zoomfactor   / step[0]) * step[0])\n                        }\n                        \n                    \n                    setScaledate(discreetdate.current)\n                    onDateChange(discreetdate.current)\n                    // lastTapdate.current = new Date(0)\n                },\n                onRest: () => {\n                    if (!down) {\n                        // console.log('rest')\n                        onFinalDateChange(discreetdate.current)\n                        isActive.current = false\n                    }\n                },\n                // stop: (spring)=>{\n                //     let even = (test.get()<0 ? Math.ceil:Math.floor)\n                //     return (even(test.get()*zoomfactor   / step[0])<=0)\n                // }\n            }) \n\n\n        },\n        onDragEnd: (down) => { \n            // isActive.current = false\n            onFinalDateChange(discreetdate.current)\n            isActive.current = false\n\n\n                // lastZoom.current = zoomfactor\n        }\n    },\n    // {initial: ()=> [0,test.get()],drag: {useTouch: true} }\n    {drag: {useTouch: true} }\n    )\n\n    const handleZoom = (delta,down,velocity,wheeling) => {\n        let enabler = 1\n        if (!down) enabler = (velocity < 0.2)?0:0.5\n\n        springzoom.start({\n            zoom: delta[1],\n            immediate: down,\n            config: { mass: 1, tension: 100, friction: 25, precision: 0.1 },\n            onChange: () => {\n                let newzoom = lastZoom.current + lastZoom.current / 50 *  zoom.get() * ZOOMDIR * enabler\n                if (newzoom < MINZOOM) newzoom = MINZOOM\n                if (newzoom > MAXZOOM) newzoom = MAXZOOM\n                setZoomfactor(newzoom)\n                lastZoom.current = newzoom\n\n            }\n        })\n    }\n\n    // // new approach where spring value is the actual zoom value\n    // const [ {zoom2} , springzoom2] = useSpring(() => ( {zoom2: 0} ))\n    // const handleZoom2 = (delta,down,velocity,offset,wheeling,movement,vxvy) => {\n    //     // console.log('delta / vy: '+delta[1]+ ' / '+vxvy[1])\n    //     let deltadest = down?delta[1]:vxvy[1]*1000\n    //     let newzoom = zoomfactor - deltadest * zoomfactor/100\n    //     let zoomdest = Math.max(newzoom,MINZOOM)\n    //     zoomdest = Math.min(zoomdest,MAXZOOM)\n    //     springzoom2.start({\n    //         zoom2: zoomdest,\n    //         immediate: down,\n    //         config: { mass: 1, tension: 170, friction: 25},\n    //         onChange: () => {\n    //             setZoomfactor(zoom2.get())\n    //             // console.log(zoom.get())\n    //         },\n    //         onProps: ()=> {\n\n    //         }\n    //     })\n        \n    // }\n\n    const [{ xy2 }, sety2] = useSpring(() => ({ xy2: [0,0] }))\n    const moveToDate = useCallback( (newdate) => {\n        // console.log('go from: '+discreetdate.current.toJSON()+' to: '+newdate.toJSON())\n        if(newdate.getTime() === discreetdate.current.getTime()) return\n        let fromtime = discreetdate.current.getTime()\n        // sety2.stop()\n        // if (!isActive.current) {\n            let deltaoffset = [0,(fromtime - newdate.getTime())  ]\n\n            sety2.start({ \n                from: {xy2: [0,0]},\n                to: {xy2: deltaoffset},\n                immediate: false, \n                config: {reset: true, duration: 300 },\n                // config: { mass: 1, tension: 100, friction: 25, precision: 0.1 },\n                onChange: ()=>{\n                    // setlog(({animgoto: xy2.get()[1]}))\n                    // isActive.current = true\n\n                    let adate = new Date(fromtime - xy2.get()[1] )\n                    // console.log('adate: '+adate.toJSON() )\n                    discreetdate.current = adate\n                    setScaledate(adate)\n                    onDateChange(adate)\n                },\n                // onRest: ()=>{\n                //     // isActive.current = false\n                // console.log(\"rest move\")\n                //     // onFinalDateChange(discreetdate.current)\n                // }\n            })\n        // }\n\n    }, [])\n\n    useEffect(() => {\n        if(!isActive.current) {\n            moveToDate(startdate)\n        } \n    },[startdate, moveToDate])\n\n    useEffect(() => {\n        if(gotoscalezoom) setZoomfactor(gotoscalezoom)\n        switch (gotoscalezoom) {\n            case 'year':\n                setZoomfactor(1029135270)\n                lastZoom.current = 1029135270\n                break\n            case 'month':\n                setZoomfactor(167184283)\n                lastZoom.current = 167184283\n                break\n            case 'day':\n                setZoomfactor(17046262)\n                lastZoom.current = 17046262\n                break\n            case 'hour':\n                setZoomfactor(735260)\n                lastZoom.current = 735260\n                break\n            case 'minute':\n                setZoomfactor(32276)\n                lastZoom.current = 32276\n                break\n            case 'second':\n                setZoomfactor(1058)\n                lastZoom.current = 1058\n                break\n        }\n\n    },[gotoscalezoom])\n\n\n// },[startdate, resetToStartDateTrigger])\n\n    // useEffect(() => {\n    //     console.log('laststartdate changed: '+lastStartdate.toJSON())\n    // },[lastStartdate])\n\n    // useEffect(() => {\n    //     console.log('Selector active: '+isActive.current)\n    // },[isActive.current])\n\n\n    useEffect(() => {\n        onStepChange(stepLabel)\n    },[stepLabel,onStepChange])\n\n    // useEffect(() => {\n    //     setlefthanded(stepLabel)\n    // },[leftHanded])\n\n    \n    useEffect(() => {\n        // console.log(zoomfactor)\n        switch (true) {\n            case zoomfactor > 120426316:\n                setStep([\n                    1000*60*60*24*31,\n                    1000*60*60*24*28,\n                    1000*60*60*24*31,\n                    1000*60*60*24*30,\n                    1000*60*60*24*31,\n                    1000*60*60*24*30,\n                    1000*60*60*24*31,\n                    1000*60*60*24*31,\n                    1000*60*60*24*30,\n                    1000*60*60*24*31,\n                    1000*60*60*24*30,\n                    1000*60*60*24*31,\n                    ])\n                setStepLabel('month')\n                break\n            case zoomfactor > 94544702:\n                setStep([1000*60*60*24*12])\n                setStepLabel('cycle')\n                break\n            case zoomfactor > 14544702:\n                setStep([1000*60*60*24])\n                setStepLabel('day')\n                break\n            case zoomfactor > 735259:\n                setStep([1000*60*60])\n                setStepLabel('hour')\n                break\n            case zoomfactor > 32274:\n                setStep([1000*60])\n                setStepLabel('minute')\n                break\n            default:\n                setStep([1000])\n                setStepLabel('second')\n        }\n    },[zoomfactor])\n\n    \n\n\n    return (\n        <div>\n            <div className={leftHanded?'DateSelectorL':'DateSelector'} ref={selector} >\n            <div {...bind()} className={leftHanded?\"touchMaskL\":\"touchMask\"}> </div>\n            <div className=\"Mask\"  >\n\n                    <DateSelectorScale className={leftHanded?'scale lefthanded':'scale'} date={scaledate} zoomfactor={zoomfactor} resulttics={tics} lefthanded={leftHanded}></DateSelectorScale>\n                    \n                    <div className={leftHanded?'TriangleContainerL':'TriangleContainer'} >\n                        <svg height=\"40\" width=\"20\" className=\"Triangle\">\n                            <polygon points=\"20,5 20,35 12,20\" />   \n                        </svg> \n                    </div>        \n                </div>\n            </div>\n            {/* {renderlog()}\n            {renderlog2()} */}\n        </div>\n                                   )\n}\nexport default DateSelector\n","import React, { useState, useCallback} from 'react';\nimport DateLabel from './components/datelabel'\nimport DateController from './components/datecontroller'\nimport DateSelector from './components/dateselector'\n\n\nfunction DateManager({ onDateChange, onFinalDateChange, onStateChange, animated, searching, startdate, resetstartdatetrigger, tics, gotoscalezoom, leftHanded}) {\n\n    // if(!startdate) startdate = new Date()\n    const [selectorStartdate, setselectorStartdate] = useState(startdate)\n    const [labeldate, setLabelDate] = useState(startdate)\n    const [scalezoom, setscalezoom] = useState(gotoscalezoom)\n    const [dateLabelHighlight,setDateLabelHighlight] = useState(1)\n\n    const handleSelectorDateChange = useCallback( (date) => {\n        // console.log('handleSelectorDateChange:' + date.toJSON())\n        setLabelDate(date)\n        onDateChange(date)\n        // setscontrollerStartdate(date)\n    }, [onDateChange])\n\n    const handleSelectorFinalDateChange = useCallback( (date) => {\n        // console.log('handleSelectorFinalDateChange:' + date.toJSON())\n        // setcontrollerStartdate(date)\n        onFinalDateChange(date)\n    }, [onFinalDateChange])\n    \n    const handleControllerDateChange = useCallback( (date) => {\n        // console.log('handleControllerDateChange' + date.toJSON())\n        setselectorStartdate(date)\n        // onFinalDateChange(date)\n    }, [])\n\n    const handleSelectorStepChange = useCallback( (step) => {\n        console.log('handleSelectorStepChange' + step)\n        setDateLabelHighlight(step)\n    },[])\n\n    const handleLabelClick = useCallback( (zoom) => {\n        console.log(zoom)\n        setscalezoom(zoom)\n    },[])\n\n    // useEffect(() => {\n    //     console.log(tics)\n    // }, [tics]);\n\n\n\n    return (\n        <div >\n          <DateController startdate={startdate}  onDateChange={handleControllerDateChange} onStateChange={onStateChange} animated={animated} lefthanded={leftHanded}/>\n          <DateLabel date={labeldate} highlight={dateLabelHighlight} handleLabelClick={handleLabelClick}/>\n          <DateSelector startdate={selectorStartdate} resetToStartDateTrigger={resetstartdatetrigger} tics={tics} gotoscalezoom={scalezoom}\n                onDateChange={handleSelectorDateChange} \n                onFinalDateChange={handleSelectorFinalDateChange} \n                onStepChange={handleSelectorStepChange}\n                leftHanded={leftHanded}/>\n        </div>\n    ) \n}\nexport default DateManager","import React, {  useEffect, useState, useCallback } from 'react';\nimport {AppContext} from '../components/app/context'\n\nimport DateManager from \"../components/datemanager\"\n\nfunction DateManagerContainer() {\n\n    const [ state, dispatch ] = React.useContext(AppContext)\n\n\n    const [tics, settics] = useState(state.tics)\n    const [startdate, setstartdate] = useState(new Date(state.goToDate))\n\n    const handleFinalDate =  useCallback( (finaldate) => {\n        dispatch({type:'set_searchDate', value: finaldate})\n    },[dispatch])\n\n    const handleDateChanged = useCallback( (date) => {\n        // console.log('handleDateChanged')\n        // console.log(date)\n        dispatch({type:'set_viewDate', value: date})\n    },[dispatch])\n\n    const handleStateChange = useCallback( (animated) => {\n        dispatch({type:'set_animated', value: animated})\n    },[dispatch])\n\n    // useEffect(() => {\n    //     let newtics = []\n    //     if(!state.geojson) return\n    //     newtics = state.geojson.features.map( (item) => {\n    //         return item.properties.earthObservation.acquisitionInformation[0].acquisitionParameter.acquisitionStartTime.getTime()\n    //     })\n    //     settics((tics)=>[...tics,...newtics])\n    // }, [state.geojson]);\n\n    useEffect(() => {\n        console.log('set tics ')\n        settics(state.tics)\n    }, [state.tics]);\n\n    useEffect(() => {\n        // console.log('state.goToDate:')\n        // console.log(new Date(state.goToDate))\n        setstartdate((state.goToDate === null)?null:new Date(state.goToDate))\n    }, [state.goToDate]);\n\n    // let startDate = (state.goToDate === null)?null:new Date(state.goToDate)\n    // console.log(startDate)\n\n    return (\n        <DateManager onDateChange={handleDateChanged} onFinalDateChange={handleFinalDate} startdate={startdate} tics={tics} gotoscalezoom={state.zoomScale} onStateChange={handleStateChange} animated={state.animated} searching={state.searching} leftHanded={state.leftHanded}/> \n     )\n}\n\nexport default DateManagerContainer;\n","import wellknown from 'wellknown';\n\nexport default function dhusToGeojson(response) {\n\n    function gmlToWkt(gmlfootprint) {\n        let coord = gmlfootprint.slice(gmlfootprint.indexOf('<gml:coordinates>')+17,gmlfootprint.indexOf('</gml:coordinates>'))\n        let coordlist = coord.replaceAll(',',' ')\n        let coordarray = coordlist.split(' ')\n        let wkt = 'MULTIPOLYGON((('\n        for(let i=0; i< coordarray.length; i+=2) {\n            wkt = wkt + coordarray[i+1] + ' ' + coordarray[i] + ','\n        }\n        wkt = wkt.slice(0,-1)\n        wkt = wkt+')))'\n        return wkt\n    }\n    \n    function mapFromHubOpenSearch(item) {    \n        function reshuffle(array) {\n            let json = {};\n            for(let i=0; i < array.length; i++) {\n                json[array[i].name] =  array[i].content;\n            }\n            return json;\n        }\n\n        try {\n            let hubItem = {};\n            if(item.date) Object.assign(hubItem,reshuffle(item.date));\n            if(item.int) Object.assign(hubItem,reshuffle(item.int));\n            if(item.double) Object.assign(hubItem,reshuffle(item.double));\n            if(item.str) Object.assign(hubItem,reshuffle(item.str));\n\n\n            var sizeArray = hubItem.size.split(\" \");\n            var sizeInBytes;\n            switch (sizeArray[1]) {\n                case \"B\":\n                    sizeInBytes = Math.round(parseFloat(sizeArray[0]));\n                    break;\n                case \"MB\":\n                    sizeInBytes = Math.round(parseFloat(sizeArray[0])*1024);\n                    break;\n                case \"GB\":\n                    sizeInBytes = Math.round(parseFloat(sizeArray[0])*1024*1024);\n                    break;\n                case \"TB\":\n                    sizeInBytes = Math.round(parseFloat(sizeArray[0])*1024*1024*1024);\n                    break;\n                default: \n                    sizeInBytes = Math.round(parseFloat(sizeArray[0]));\n                    break;\n\n            }\n            \n            // console.log(gmlToWkt(hubItem.gmlfootprint))\n\n            var newItem = {\n                id: item.title,\n                geometry: wellknown(gmlToWkt(hubItem.gmlfootprint)),\n                type: \"Feature\",\n                properties: {\n                    updated: new Date(hubItem.ingestiondate),\n                    title: item.title,\n                    name: item.title,\n                    uuid: item.id,\n                    date: hubItem.beginposition  +'/'+  hubItem.endposition,\n                    downloadUrl: item.link[0].href,\n                    quicklookUrl: (item.link.length >= 2) ? item.link[2].href: null,\n                    // links: {\n                    //     data: [{\n                    //         href: item.link[0].href,\n                    //     }]\n                    // },\n                    earthObservation: {\n                        parentIdentifier: \"\",\n                        status: \"ARCHIVED\",\n                        acquisitionInformation: [{\n                            platform: {\n                                platformShortName: hubItem.platformname,\n                                platformSerialIdentifier: hubItem.platformserialidentifier\n                            },\n                            sensor: {\n                                instrument: hubItem.instrumentshortname,\n                                operationalMode: hubItem.sensoroperationalmode\n                            },\n                            acquisitionParameter: {\n                                acquisitionStartTime: new Date(hubItem.beginposition),\n                                acquisitionStopTime: new Date(hubItem.endposition),\n                                relativePassNumber: parseInt(hubItem.relativeorbitnumber),\n                                orbitNumber: parseInt(hubItem.orbitnumber),\n                                startTimeFromAscendingNode: null,\n                                stopTimeFromAscendingNode: null,\n                                orbitDirection: hubItem.orbitdirection\n\n                            }\n                        }],\n                        productInformation: {\n                            productType: hubItem.producttype,\n                            //timeliness: indexes[\"product\"][\"Timeliness Category\"],\n                            tile: hubItem.tileid,\n                            size: sizeInBytes\n                        }\n                    }\n                }\n            }\n        \n            return newItem;\n        } catch (err) {\n            console.log(\"error parsing item from dhus: \"+err.message);\n            return {};\n        }\n    }\n\n    let features = [];\n    try {\n        if( response.feed.entry ) {\n            if(Array.isArray(response.feed.entry)) {\n                // console.log('entry is an  array')\n                features = response.feed.entry.map( item =>  mapFromHubOpenSearch(item)).filter(item => item !== {});\n            } else {\n                features = [mapFromHubOpenSearch(response.feed.entry)]\n            }\n                \n        } else {\n            features = []\n        }\n        \n    } catch (err) {\n        console.log(response);\n        console.log(\"Error: \");\n        console.log(err);\n        features = []\n    }\n    //console.log(JSON.stringify(features));\n    let geojson = {   \n            type: \"FeatureCollection\",\n            id: \"search\",\n            properties: {\n                totalResults: response.feed[\"opensearch:totalResults\"],\n                startIndex: (response.feed[\"opensearch:startIndex\"])?response.feed[\"opensearch:startIndex\"]:1,\n                itemsPerPage: response.feed[\"opensearch:itemsPerPage\"],\n                title: \"DHuS search response\",\n                updated: new Date()\n            },\n            features: features\n        };\n\n    return geojson\n\n}\n","\nexport default function eocatToGeojson(response) {\n\n    \n    function mapFromHubOpenSearch(item) {    \n\n        try {\n            var downloadurl = null\n            var quicklookurl = null\n            for (let i = 0; i < item.properties.link.length; i++) {\n                if (item.properties.link[i]['@']['title'] === 'Download') downloadurl = item.properties.link[i]['@']['href']\n                if (item.properties.link[i]['@']['title'] === 'Quicklook') quicklookurl = item.properties.link[i]['@']['href']\n            }\n            \n\n            var newItem = {\n                id: item.id,\n                geometry: item.geometry,\n                type: \"Feature\",\n                properties: {\n                    updated: item.properties.updated,\n                    title: item.properties.title,\n                    name: item.title,\n                    uuid: item.properties.identifier,\n                    date: item.properties.date,\n                    downloadUrl: downloadurl,\n                    quicklookUrl: quicklookurl,\n                    // links: {\n                    //     data: [{\n                    //         href: item.link[0].href,\n                    //     }]\n                    // },\n                    earthObservation: {\n                        parentIdentifier: item.properties.EarthObservation.metaDataProperty.EarthObservationMetaData.parentIdentifier,\n                        status: \"ARCHIVED\",\n                        acquisitionInformation: [{\n                            platform: {\n                                platformShortName: item.properties.EarthObservation.procedure.EarthObservationEquipment.platform.Platform.shortName,\n                                platformSerialIdentifier: null\n                            },\n                            sensor: {\n                                instrument: item.properties.EarthObservation.procedure.EarthObservationEquipment.instrument.Instrument.shortName,\n                                operationalMode: item.properties.EarthObservation.procedure.EarthObservationEquipment.sensor.Sensor.operationalMode\n                            },\n                            acquisitionParameter: {\n                                acquisitionStartTime: new Date(item.properties.EarthObservation.phenomenonTime.TimePeriod.beginPosition),\n                                acquisitionStopTime: new Date(item.properties.EarthObservation.phenomenonTime.TimePeriod.endPosition),\n                                relativePassNumber: null,\n                                orbitNumber: item.properties.EarthObservation.procedure.EarthObservationEquipment.acquisitionParameters.Acquisition.orbitNumber,\n                                startTimeFromAscendingNode: null,\n                                stopTimeFromAscendingNode: null,\n                                orbitDirection: item.properties.EarthObservation.procedure.EarthObservationEquipment.acquisitionParameters.Acquisition.orbitDirection\n\n                            }\n                        }],\n                        productInformation: {\n                            productType: item.properties.EarthObservation.metaDataProperty.EarthObservationMetaData.productType,\n                            //timeliness: indexes[\"product\"][\"Timeliness Category\"],\n                            downloadUrl: downloadurl,\n                            quicklookUrl: quicklookurl,\n        \n                            size: null\n                        }\n                    }\n                }\n            }\n        \n            return newItem;\n        } catch (err) {\n            console.log(\"error parsing item from dhus: \"+err.message);\n            return {};\n        }\n    }\n\n    let features = [];\n    try {\n        if( response.features ) {\n            if(Array.isArray(response.features)) {\n                console.log('features is an  array')\n                features = response.features.map( item =>  mapFromHubOpenSearch(item)).filter(item => item !== {});\n            } \n                \n        } else {\n            features = []\n        }\n        \n    } catch (err) {\n        console.log(response);\n        console.log(\"Error: \");\n        console.log(err);\n        features = []\n    }\n    //console.log(JSON.stringify(features));\n    let geojson = {   \n            type: \"FeatureCollection\",\n            id: \"search\",\n            properties: {\n                totalResults: response.properties.totalResults,\n                startIndex: response.properties.startIndex,\n                itemsPerPage: response.properties.itemsPerPage,\n                title: response.properties.title,\n                updated: response.properties.updated\n            },\n            features: features\n        };\n\n    return geojson\n\n}\n","import wellknown from 'wellknown';\n\nexport default function PRIPToGeojson(response,startIndex) {\n\n    function gmlToWkt(gmlfootprint) {\n        let coord = gmlfootprint.slice(gmlfootprint.indexOf('<gml:coordinates>')+17,gmlfootprint.indexOf('</gml:coordinates>'))\n        let coordlist = coord.replaceAll(',',' ')\n        let coordarray = coordlist.split(' ')\n        let wkt = 'MULTIPOLYGON((('\n        for(let i=0; i< coordarray.length; i+=2) {\n            wkt = wkt + coordarray[i+1] + ' ' + coordarray[i] + ','\n        }\n        wkt = wkt.slice(0,-1)\n        wkt = wkt+')))'\n        return wkt\n    }\n    \n    function mapFromHubOpenSearch(item) {    \n        function reshuffle(array) {\n            let json = {};\n            for(let i=0; i < array.length; i++) {\n                json[array[i].name] =  array[i].content;\n            }\n            return json;\n        }\n\n        try {\n            // let hubItem = {};\n            // if(item.date) Object.assign(hubItem,reshuffle(item.date));\n            // if(item.int) Object.assign(hubItem,reshuffle(item.int));\n            // if(item.double) Object.assign(hubItem,reshuffle(item.double));\n            // if(item.str) Object.assign(hubItem,reshuffle(item.str));\n\n\n            // var sizeArray = hubItem.size.split(\" \");\n            // var sizeInBytes;\n            // switch (sizeArray[1]) {\n            //     case \"B\":\n            //         sizeInBytes = Math.round(parseFloat(sizeArray[0]));\n            //         break;\n            //     case \"MB\":\n            //         sizeInBytes = Math.round(parseFloat(sizeArray[0])*1024);\n            //         break;\n            //     case \"GB\":\n            //         sizeInBytes = Math.round(parseFloat(sizeArray[0])*1024*1024);\n            //         break;\n            //     case \"TB\":\n            //         sizeInBytes = Math.round(parseFloat(sizeArray[0])*1024*1024*1024);\n            //         break;\n            //     default: \n            //         sizeInBytes = Math.round(parseFloat(sizeArray[0]));\n            //         break;\n\n            // }\n            \n\n            // console.log(gmlToWkt(hubItem.gmlfootprint))\n\n\n                // ignore items without a geometry\n                let geometry = {}\n                if (item.Footprint == null) {\n                    return null\n                } else {\n                    geometry = item.Footprint\n                    if(geometry.type == \"LineString\") return null\n                    delete geometry.crs\n                    // console.log(item.Footprint.type+\":\")\n                    // console.log(geometry.coordinates)\n                }\n\n            var newItem = {\n                id: item.Id,\n                geometry: geometry,\n                type: \"Feature\",\n                properties: {\n                    updated: new Date(item.PublicationDate),\n                    title: item.Name,\n                    name: item.Name,\n                    uuid: item.Id,\n                    date: item.ContentDate.Start  +'/'+ item.ContentDate.End,\n                    downloadUrl: null,\n                    quicklookUrl: null,\n                    // links: {\n                    //     data: [{\n                    //         href: item.link[0].href,\n                    //     }]\n                    // },\n                    earthObservation: {\n                        parentIdentifier: \"\",\n                        status: \"ARCHIVED\",\n                        acquisitionInformation: [{\n                            platform: {\n                                platformShortName: \"any\",\n                                platformSerialIdentifier: \"any\"\n                            },\n                            sensor: {\n                                instrument: \"any\",\n                                operationalMode: \"any\"\n                            },\n                            acquisitionParameter: {\n                                acquisitionStartTime: new Date(item.ContentDate.Start),\n                                acquisitionStopTime: new Date(item.ContentDate.End),\n                                relativePassNumber: 0,\n                                orbitNumber: 0,\n                                startTimeFromAscendingNode: null,\n                                stopTimeFromAscendingNode: null,\n                                orbitDirection: null\n\n                            }\n                        }],\n                        productInformation: {\n                            productType: null,\n                            //timeliness: indexes[\"product\"][\"Timeliness Category\"],\n                            tile: null,\n                            size: item.ContentLength\n                        }\n                    }\n                }\n            }\n            \n            return newItem;\n        } catch (err) {\n            console.log(\"error parsing item from PRIP: \"+err.message);\n            return null;\n        }\n    }\n\n    let features = [];\n    try {\n            if(Array.isArray(response.value)) {\n                console.log(\"first: \")\n                // console.log(response.value[0])\n                features = response.value.filter(it => it !== null).map( item =>  mapFromHubOpenSearch(item)).filter(it => it !== null);\n            } else {\n                features = []\n            }\n                \n\n        \n    } catch (err) {\n        console.log(response);\n        console.log(\"Error: \");\n        console.log(err);\n        // features = []\n    }\n    //console.log(JSON.stringify(features));\n    let geojson = {   \n            type: \"FeatureCollection\",\n            id: \"search\",\n            properties: {\n                totalResults: response[\"@odata.count\"] - (response.value.length - features.length),\n                // totalResults: response.value.length,\n                startIndex: startIndex,\n                itemsPerPage: response.value.length,\n                title: \"PRIP search response\",\n                updated: new Date()\n            },\n            features: features\n        };\n        // console.log(JSON.stringify(geojson))\n    return geojson\n\n}\n","import { useState, useRef, useContext } from \"react\";\nimport dhusToGeojson from \"./dhusToGeojson\";\nimport eocatToGeojson from \"./eocatToGeojson\"\nimport PRIPToGeojson from \"./PRIPToGeojson\"\nimport OAuth2 from \"fetch-mw-oauth2\"\nimport {AppContext} from '../app/context'\n\n// export default function useDatahub({searchdate, dataset, searchpoint})  {\nexport default function useDatahub()  {\n\n    // const searchparam = useRef({})\n    const controller = useRef(null)\n\n    const MAX_ITEMS = 1000\n\n    const [geojsonResults, setGeojsonResults] = useState(null)\n    const [loading, setLoading] = useState(false)\n    const [status, setStatus] = useState('')\n    // const [credentials,setCredentials] = useState('')\n    const [ state, dispatch ] = useContext(AppContext)\n\n\n    const getcollection = (code) => {\n        for(let i=0; i < state.collections.length; i++) {\n            if(state.collections[i].code === code) {\n                return state.collections[i]\n            }\n        }\n        return null\n    }\n\n    const getServerUrl = (url) => {\n        return url.split(\"/\")[2]\n    }\n\n    const buildUrl = ({code, polygon, start, end, startindex}) => {\n\n\n        let target = getcollection(code)\n        if(!target) return null\n        let newurl = target.templateUrl\n\n        if(polygon != null) {\n            newurl = newurl.replace(\"{polygon}\", polygon)\n        } else {\n            newurl = newurl.replace(target.areaOff, '')\n        }\n\n        if (start != null  && end != null) {\n            newurl = newurl.replace(\"{start}\", start)\n            newurl = newurl.replace(\"{end}\", end)\n        } else {\n            newurl = newurl.replace(target.dateOff, '')\n        }\n        \n        // startindex = startindex == 0 ? startindex : startindex + target.startIndexOrigin\n        // newurl = newurl.replace(\"{startindex}\",target.startIndexOrigin)\n\n\n        return newurl\n    }\n\n    const fetchURL = async (url,index,coll_type,user,pass) => {\n        setLoading(true)\n        controller.current = new AbortController()\n        let newurl = url\n        newurl = newurl.replace(\"{startindex}\",index)\n        // console.log('Search: '+newurl)\n        let paging = {totalresults:0, startindex:0, itemsperpage:0}\n        console.log(coll_type)\n\n        try {\n            let response\n            if(coll_type == 'PRIP') {\n\n                const oauth2 = new OAuth2({\n                    grantType: 'password',\n                    // clientId: 'admin-cli',\n                    clientId: 's1pro-user-web-client',\n                    userName: user,\n                    password: pass,\n                    clientSecret: '',\n                    tokenEndpoint: 'https:/iam.platform.ops-csc.com/auth/realms/RS/protocol/openid-connect/token',\n                  })\n        \n\n                response = await oauth2.fetch(newurl, \n                    {\n                    mode: 'cors', \n                    credentials: 'include', \n                    signal: controller.current.signal\n                    })\n                    console.log(response)\n                if (!response.ok) {\n                    window.alert(`HTTP error! status: ${response.status}`)\n                    if(response.status == '401') {\n                        setStatus(newurl)\n                        // dispatch({ type: \"reset_credentials\", value: {}})\n                    }\n                    throw new Error(`HTTP error! status: ${response.status}`)\n                }\n            }\n    \n            if(coll_type != 'PRIP') {\n                response = await fetch(newurl, \n                    {\n                    mode: 'cors', \n                    credentials: 'include', \n                    headers: {\n                        \"Content-Type\": \"text/plain\",\n                        'Authorization': 'Basic ' + window.btoa(user+\":\"+pass),\n                    },\n                    signal: controller.current.signal\n                    })\n                if (!response.ok) {\n                    // window.alert(`HTTP error! status: ${response.status}`)\n                    if(response.status == 401) {\n                        // setStatus(newurl)\n                        throw new Error('401')\n                    } else {\n                        throw new Error(`HTTP error! status: ${response.status}`)\n                    }\n                    \n                }\n            }\n    \n        \n            try {\n                const json = await response.json()\n\n                let geoJson\n                // console.log(coll_type)\n                switch(coll_type) {\n                    case \"DHUS\":\n                        console.log( \"DHUS\")\n                        geoJson = dhusToGeojson(json)\n                        break;\n                    case \"PRIP\":\n                        console.log(\"PRIP\")\n                        geoJson = PRIPToGeojson(json,index)\n                        break;\n                    case \"EOCAT\":\n                        console.log(\"EOCAT\")\n                        geoJson = eocatToGeojson(json)\n                        break;\n                    default:\n                        setLoading(false)\n                        \n    \n                }\n\n                // console.log('totalResults: ' + geoJson.properties.totalResults)\n                paging = {\n                    totalresults: geoJson.properties.totalResults == null ? 0 : Number(geoJson.properties.totalResults) ,\n                    startindex:  Number(geoJson.properties.startIndex), \n                    itemsperpage:  Number(geoJson.properties.itemsPerPage)\n                }\n                console.log(paging)\n\n                // setPagination(paging)\n                if(paging.totalresults>0) setGeojsonResults(geoJson) \n\n                if (paging.startindex + paging.itemsperpage < Math.min(paging.totalresults,MAX_ITEMS) ) {\n                    console.log(\"There's More...\")  \n                    // uncomment to get other pages\n                    fetchURL(url,(paging.startindex + paging.itemsperpage),coll_type,user,pass)\n                } else {\n                    setLoading(false)  \n                }\n\n            } catch (err) {\n                console.log(\"Didn't receive a json !\")\n                console.log(err)\n                setLoading(false);\n            }\n        } catch(err) {\n            console.log(\"Error contacting server...\")\n            console.log(err.message)\n            if(err.message === '401' || err.message.indexOf('Invalid user credentials') > 0) {\n                console.log('detected 401')\n                setStatus(url)\n            }\n            setLoading(false)   \n        }\n    }\n\n    const abort = () => {\n        if(controller && controller.current) {\n            controller.current.abort()\n        }\n    }\n\n    const search = ({searchdate, dataset, searchpoint}, credentials) => {\n        // console.log(' in search')\n        // console.log(searchdate+' / '+ dataset+' / '+ searchpoint)\n        // console.log(credentials)\n        let startdate, enddate = ''\n        let target = getcollection(dataset)\n        if(!target) return null\n\n        if(loading) controller.current.abort()\n        if(searchdate) {\n            let julianstart = Math.floor(searchdate.getTime()/target.windowSize) * target.windowSize\n            startdate = (new Date(julianstart)).toJSON()\n            enddate = (new Date(julianstart + target.windowSize - 1000)).toJSON()\n            // startdate = (new Date(searchdate.getTime() - offset)).toJSON()\n            // // console.log('start date: '+startdate)\n            \n            // enddate = (new Date(searchdate.getTime() + offset - 1000)).toJSON()\n        }\n        let url = buildUrl({\n            code: dataset,\n            polygon: searchpoint, \n            start: startdate,\n            end: enddate\n        })\n        let coll_type = target.type\n        // searchparam.current.searchdate = searchdate\n        // searchparam.current.dataset = dataset\n        // searchparam.current.searchpoint = searchpoint\n\n        let startindex = target.startIndexOrigin\n\n\n        fetchURL(url,startindex,coll_type,credentials.user,credentials.pass)\n        \n    }\n    \n\n\n    return {geojsonResults, loading, status, search, abort}\n}\n","import React, { useState, useEffect, useRef } from \"react\";\n\nimport { useKey } from 'rooks'\nimport './SearchManager.css'\nimport useDatahub from \"./useDatahub\"\nimport useHandleDoubleTap from '../../hooks/useHandleDoubleTap'\n\n \n// npm install --save-dev @iconify/react @iconify-icons/ic\nimport { Icon } from '@iconify/react';\nimport outlineRefresh from '@iconify-icons/ic/outline-refresh';\n\n\n\nfunction SearchManager({searchdate, searchpoint, searchmode, credentials, dataset, altitude, onSearchStart, onPageSearch, onSearchComplete, on401, lefthanded}) {\n\n\n    const [ searching, setsearching ] = useState(false);\n    const [ searchtrigger, setsearchtrigger ] = useState(0);\n    const firstresultdate = useRef(new Date(0))\n    const lastresultdate = useRef(new Date())\n    const totalresults = useRef(0)\n    const totalloaded = useRef(0)\n\n\n    const [param, setparam] = useState({})\n\n\n\n    const { geojsonResults, loading, status, search, abort } = useDatahub({});\n    \n    const {handleTap} = useHandleDoubleTap( ()=>{setsearchtrigger(Math.random())}, onSearchStart )\n\n\n    useKey([\"x\"],()=>setsearchtrigger(Math.random())) \n\n    useEffect(() => {\n        if(geojsonResults) {\n            console.log(geojsonResults)\n\n            // saves first and last item dates\n            let firstitemdate = (new Date(geojsonResults.features[0].properties.earthObservation.acquisitionInformation[0].acquisitionParameter.acquisitionStartTime))\n            if(firstresultdate.current.getTime() < firstitemdate.getTime() || firstresultdate.current === null) {\n                firstresultdate.current = firstitemdate\n            }\n            let lastitemdate = (new Date(geojsonResults.features[geojsonResults.features.length-1].properties.earthObservation.acquisitionInformation[0].acquisitionParameter.acquisitionStartTime))\n            if(lastresultdate.current.getTime() > lastitemdate.getTime() || lastitemdate.current === null) {\n                lastresultdate.current = lastitemdate\n            }\n            totalloaded.current += geojsonResults.features.length\n            totalresults.current = Number(geojsonResults.properties.totalResults)\n            let resultdesc = {\n                totalResults: totalresults.current, \n                totalLoaded: totalloaded.current\n            }\n            onPageSearch(geojsonResults, resultdesc)\n\n        }\n    }, [geojsonResults]);\n\n    useEffect(() => {\n        setsearching(loading)\n        if(loading === false && firstresultdate.current.getTime() !== 0 ) {\n            onSearchComplete({\n                firstResultDate: firstresultdate.current, \n                lastResultDate: lastresultdate.current,\n                totalResults: totalresults.current,\n                totalLoaded: totalloaded.current\n            })\n        }\n    }, [loading])\n\n    useEffect(() => {\n        console.log('status: '+status)\n        if(status !== '') on401(status)\n    }, [status]);\n\n    useEffect(() => {\n        console.log('searchtrigger')\n        console.log(searchtrigger)\n        if(!searchtrigger || searchtrigger == 0) return\n        if(loading) {\n            abort()\n        } else {\n            firstresultdate.current = new Date(0)\n            lastresultdate.current = new Date()\n            totalloaded.current = 0\n            totalresults.current = 0\n\n            onSearchStart()\n            search(param,credentials)    \n        }\n\n    }, [searchtrigger]);\n\n\n    useEffect(() => {\n        // console.log('set param')\n        let sd = searchdate\n        let sp = searchpoint\n        if(searchmode === 'global') {\n            sp = null\n        } else {\n            sd = null\n        }\n        setparam((param)=>{ return {...param, searchdate: sd, dataset: dataset, searchpoint: sp }})\n    }, [searchdate, dataset, searchpoint, altitude, searchmode]);\n\n\n    //console.log('dataset rendering')\n    return (\n            <div className={(searching === true?'SearchController Active':'SearchController')+ (lefthanded?' lefthanded':'')} onClick={handleTap}>\n                {/* {searching === true?<Icon icon={outlineSync} width='50px'/>:<span/>} */}\n                <Icon icon={outlineRefresh} width='50px'/>\n            </div>\n    )\n}\n\nexport default SearchManager;\n","\nimport React, {  useCallback } from \"react\";\nimport {AppContext} from '../components/app/context'\n\nimport SearchManager from \"../components/searchmanager\"\nimport { useDebounce } from '../hooks/useDebounce';\n\n\n\nconst SearchManagerContainer = () => {\n\n  const [ state, dispatch ] = React.useContext(AppContext)\n\n  const debouncedsearchPoint = useDebounce(state.searchPoint, 200)\n  const debouncedaltitude = useDebounce(state.altitude, 200)\n\n  \n    const handlePageSearch = useCallback ( (results, resultdesc) => {\n      dispatch({ type: \"onResultPage\", value: {resultdesc: resultdesc, results: results} })\n    }, [dispatch])\n    \n    const handleSearchStart = useCallback ( () => {\n      dispatch({ type: \"onSearchStart\", value: Math.random()})\n    }, [dispatch])\n    \n    const handleSearchComplete = useCallback (  (searchDesc) => {\n      dispatch({ type: \"onSearchComplete\", value: searchDesc})\n    }, [dispatch])\n\n    const handleCredentials = useCallback ( (url) => {\n      let key = url.split(\"/\")[2]\n      let user = window.prompt(\"Please enter your username for \\n\"+key,\"\")\n      let pass = window.prompt(\"Please enter your password for \\n\"+key,\"\")\n      dispatch({ type: \"set_credentials\", value: {key: key, user:user, pass:pass}})\n      return\n    }, [dispatch])\n\n// to do: pass credentials from state\n    return (\n        <SearchManager \n          searchdate={new Date(state.searchDate)} \n          searchpoint={debouncedsearchPoint} \n          searchmode={state.searchMode}\n          dataset={state.dataset} \n          credentials={state.credentials}\n          altitude={debouncedaltitude} \n          onSearchStart={handleSearchStart}\n          onPageSearch={handlePageSearch}\n          onSearchComplete={handleSearchComplete}\n          on401={handleCredentials}\n          lefthanded={state.leftHanded}\n        />\n    )\n}\n\nexport default SearchManagerContainer;\n\n\n\n","import React from 'react'\nimport {AppContext} from '../app/context'\nimport './GenericLabel.css' \n\nfunction ProductInfo() {\n\n    const [ state,  ] = React.useContext(AppContext)\n\n\n    return (\n        <div className='GenericLabel Small'>{state.closestItem?state.closestItem.userProperties.title:''}</div>\n     )\n}\n\nexport default ProductInfo\n\n","//todo: replace hotkeys by rook useKey\n\nimport React, {useRef} from 'react'\nimport { AppProvider } from \"./context\"\n\n\nimport './App.css'\nimport Earth from '../earth'\nimport ControlPanel from \"../controlpanel\"\nimport InfoPanel from \"../infopanel\"\nimport Mood from \"../mood\"\nimport Share from \"../share\"\nimport DatasetSelector from \"../datasetselector\"\nimport MapSelector from \"../mapselector\"\nimport ColorSelectorContainer from \"../../containers/ColorSelectorContainer\"\nimport OptionsSelector from \"../optionsselector\"\nimport CollectionLabel from \"../collectionlabel\"\nimport AltitudeLabel from \"../altitudelabel\"\nimport SearchLabel from \"../searchlabel\"\nimport GeoName from \"../geoname\"\n\nimport DateManagerContainer from '../../containers/DateManagerContainer'\nimport SearchManagerContainer from '../../containers/SearchManagerContainer'\nimport { useFullscreen } from 'rooks';\nimport { useKey } from 'rooks'\nimport ProductInfo from '../productinfo/ProductInfo'\n\nfunction App() {\n    \n    \n\n\n    const container = useRef();\n    const {\n        // isEnabled,\n        toggle\n        // onChange,\n        // onError,\n        // request,\n        // exit,\n        // isFullscreen,\n        // element\n    } = useFullscreen();\n\n    useKey(['f'],()=>{toggle(container.current)})\n\n    return (\n        <AppProvider>\n        <div className=\"App\" ref={container} id=\"container\">\n             {/* <FullScreen handle={fshandle}> */}\n                <Earth id=\"globe\" />\n                {/* <DateManager startdate={startdate} onDateChange={changeDate} onFinalDateChange={finalChangeDate} animated={searching}/> */}\n                <DateManagerContainer/>\n                <Mood/>\n                {/* <GeoName/> */}\n                <Share/>\n                <SearchManagerContainer/>\n                <ControlPanel active=\"false\" >\n                    {/* <div class='logo'><img  src='./images/ESA_logo_2020_White.png' height=\"40\" ></img></div> */}\n                    {/* <div className='logo'><img alt='' src='./images/EOi_logo.png' height=\"100\" ></img></div> */}\n                    <div className='horizontalContainer'>\n                        <DatasetSelector></DatasetSelector>\n                        <MapSelector ></MapSelector>\n                        <div className='horizontalContainer'>\n                            <ColorSelectorContainer></ColorSelectorContainer>\n                            <OptionsSelector/>\n                        </div>\n                    </div>\n                </ControlPanel>\n                <InfoPanel>\n                    <CollectionLabel/>\n                    <AltitudeLabel/>\n                    <SearchLabel/>\n                    <ProductInfo/>\n\n                </InfoPanel>\n            {/* </FullScreen> */}\n        </div>\n        </AppProvider>\n    )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}