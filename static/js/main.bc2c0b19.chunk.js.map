{"version":3,"sources":["components/app/collections.js","components/app/reducer.js","components/app/initstate.js","hooks/useDebounce.js","components/app/context.js","components/earth/wwwxx/www-overrides/SurfaceShape.js","components/earth/wwwxx/www-overrides/DrawContext.js","components/earth/wwwxx/framebuffer/FramebufferTexture.js","components/earth/wwwxx/framebuffer/Framebuffer.js","components/earth/wwwxx/www-overrides/SurfaceShapeTileBuilder.js","components/earth/wwwxx/www-overrides/SurfaceShapeTile.js","components/earth/wwwxx/www-overrides/TiledImageLayer.js","components/earth/wwwxx/textured/libtess.js","components/earth/wwwxx/textured/ScreenColorProgram.js","components/earth/wwwxx/textured/ScreenTextureProgram.js","components/earth/wwwxx/textured/TexturedSurfaceShape.js","components/earth/wwwxx/textured/TexturedSurfacePolygon.js","components/earth/wwwxx/www-overrides/GeoJSONParser.js","components/earth/wwwxx/WorldWindow.js","components/earth/wwwxx/layer/starfield/SunPosition.js","components/earth/wwwxx/layer/starfield/Celestial.js","components/earth/wwwxx/layer/starfield/StarFieldProgram.js","components/earth/wwwxx/layer/starfield/StarFieldLayer.js","components/earth/satConfig.js","components/earth/wwwxx/collada/ColladaScene.js","components/earth/wwwxx/shapes/satellites/Model.js","components/earth/wwwxx/layer/SatelliteModelLayer.js","components/earth/satelliteLayers.js","components/earth/wwwxx/shapes/Orbits.js","components/earth/OrbitLayer.js","components/earth/orbitLayers.js","components/earth/layerConfig.js","components/earth/useEww.js","components/earth/FluidWorldWindowController.js","components/earth/LookAtWidget.js","components/viewproductcontrol/ViewProductControl.js","components/earth/FilterProductControl.js","hooks/useFetcher.js","components/earth/Earth.js","components/controlpanel/ControlPanel.js","components/infopanel/InfoPanel.js","components/mood/Mood.js","components/share/Share.js","components/datasetselector/DatasetSelector.js","components/mapselector/MapSelector.js","containers/ColorSelectorContainer.js","components/optionsselector/OptionsSelector.js","components/collectionlabel/CollectionLabel.js","components/altitudelabel/AltitudeLabel.js","components/searchlabel/SearchLabel.js","components/WindowSizeController/WindowSizeController.js","components/datemanager/components/datelabel/DateLabel.js","hooks/useHandleDoubleTap.js","components/datemanager/components/datecontroller/DateController.js","components/datemanager/components/datecontroller/useClock.js","components/datemanager/components/dateselector/DateSelectorScale.js","components/datemanager/components/dateselector/DateSelector.js","components/datemanager/DateManager.js","containers/DateManagerContainer.js","components/searchmanager/eocatToGeojson.js","components/searchmanager/rsstacToGeojson.js","components/searchmanager/CDSEOdataToGeojson.js","components/searchmanager/CDSEStacToGeojson.js","components/searchmanager/PRIPToGeojson.js","components/searchmanager/LTAToGeojson.js","components/searchmanager/useDatahub.js","components/searchmanager/dhusToGeojson.js","components/searchmanager/SearchManager.js","containers/SearchManagerContainer.js","components/productinfo/ProductInfo.js","components/app/App.js","index.js"],"names":["collections","code","satellites","cycle","templateUrl","name","logo","type","startIndexOrigin","dateOff","areaOff","windowSize","defaultFreetext","tokenEndpoint","grantType","reducer","state","action","console","log","mapSettings","names","starfield","atmosphere","northup","background","overlay","projection","value","dataset","freetext","searchWindow","satelliteList","datasetSatelliteList","dem","constellation","quicklooks","altitude","productOn","pointSearchMaxAltitude","searchMode","searchtrigger","Math","random","resultDesc","resultdesc","geojson","results","clearResultsTrigger","totalResults","totalLoaded","closestItem","filter","browseMode","searching","win","searchWinStart","wins","searchWinEnd","wine","selectedProduct","goToDate","timeRange","getTime","addQuicklookWMSTrigger","tics","newfilter","props","closest","userProperties","length","indexOf","attribute","earthObservation","acquisitionInformation","acquisitionParameter","relativePassNumber","goToPos","lat","_sector","centroidLatitude","lon","centroidLongitude","alt","next","sector","previous","day","searchWinDay","floor","startdate","enddate","searchDate","animated","appColor","viewDate","searchPoint","zoomScale","position","clon","clat","token","i","newcreds","credentials","found","key","push","user","pass","leftHanded","init_date","Date","defaultstate","active","resetStartDateTrigger","moveToClosestItemTrigger","firstItemDate","lastItemDate","useDebounce","delay","debouncedValue","setDebouncedValue","useState","useEffect","handler","setTimeout","clearTimeout","AppContext","React","createContext","istate","eoi_state","JSON","parse","window","localStorage","getItem","paramindex","location","href","urlparam","substring","history","replaceState","document","title","split","param","JSONCrush","uncrush","decodeURIComponent","initmapsettings","initstate","AppProvider","_ref","children","dispatch","useReducer","debouncedstate","setItem","stringify","getsavedstate","_jsx","Provider","AbstractError","Angle","Location","Logger","NotYetImplementedError","PickedObject","PolygonSplitter","Renderable","Sector","ShapeAttributes","Vec3","MemoryCache","BoundingBox","WorldWind","SurfaceShape","attributes","call","this","_displayName","_attributes","_highlightAttributes","highlightAttributes","_highlighted","_enabled","_pathType","GREAT_CIRCLE","_maximumNumEdgeIntervals","DEFAULT_NUM_EDGE_INTERVALS","_polarThrottle","DEFAULT_POLAR_THROTTLE","pickDelegate","_sectors","_locations","_boundaries","_interiorGeometry","_outlineGeometry","_isInteriorInhibited","stateKeyInvalid","_attributesStateKey","boundariesArePrepared","layer","pickColor","contours","containsPole","crossesAntiMeridian","expirationInterval","shapeDataCache","currentData","prototype","Object","create","defineProperties","stateKey","get","currentAttributesStateKey","_stateKey","computeStateKey","displayName","set","highlighted","enabled","pathType","resetBoundaries","maximumNumEdgeIntervals","polarThrottle","staticStateKey","shape","minLatitude","maxLatitude","minLongitude","maxLongitude","area","globe","terrainConformant","logMessage","LEVEL_SEVERE","computeBoundaries","intersectsFrustum","dc","extent","pickingMode","pickFrustum","frustumInModelCoordinates","isShapeDataCurrent","shapeData","verticalExaggeration","expiryTime","now","createShapeDataObject","resetExpiration","establishCurrentData","entryForKey","globeStateKey","putEntry","isExpired","render","currentLayer","prepareBoundaries","computeExtent","surfaceShapeTileBuilder","insertSurfaceShape","interpolateLocations","locations","prev","idx","len","first","isNextFirst","isPrevFirst","countFirst","isInterpolated","latitude","longitude","interpolateEdge","start","end","dt","distanceRadians","greatCircleDistance","steps","round","PI","t","throttledStep","interpolateAlongPath","cosLat","cos","DEGREES_TO_RADIANS","weight","newBoundaries","formatBoundaries","normalizeAngles","interpolateBoundaries","contoursInfo","doesCross","splitContours","prepareGeometry","prepareSectors","clear","boundaries","polygon","j","lenP","point","normalizedDegreesLongitude","normalizedDegreesLatitude","contour","slice","computeSectors","boxPoints","computeBoundingPoints","setToVec3Points","boxCorners","box","corners","getCorners","computeShiftedLocations","oldLocation","newLocation","newLocations","result","newPos","Position","oldPoint","computePointFromLocation","newPoint","is2D","delta","subtract","add","computePositionFromPoint","delta_lat","delta_long","max","min","new_lat","new_long","determineSectors","sectorsOverAntiMeridian","sectorsNotOverAntiMeridian","polygons","sectors","setToBoundingSector","extremes","greatCircleArcExtremeLocations","eastSector","westSector","lenS","union","interiorPolygons","outlinePolygons","poleIndex","lenC","iMap","pole","poles","NONE","outlineForPole","outlineForSplit","outlinePolygon","pCount","k","intersection","forPole","iCount","resetPickColor","renderToTexture","ctx2D","xScale","yScale","dx","dy","drawInterior","drawOutline","outlineWidth","uniquePickColor","toHexString","draw","fillStyle","interiorColor","toRGBAString","fill","lineWidth","strokeStyle","outlineColor","stroke","po","clone","resolvePick","beginPath","x","y","moveTo","lineTo","DrawContext","pickableObject","userObject","deepPicking","regionPicking","addPickedObject","color","readPickColor","pickPoint","equals","FramebufferTexture","constructor","textureId","width","height","imageWidth","imageHeight","size","originalImageWidth","originalImageHeight","creationTime","bind","currentGlContext","bindTexture","TEXTURE_2D","frameStatistics","incrementTextureLoadCount","dispose","gl","deleteTexture","Framebuffer","framebufferId","texture","attachTexture","createTexture","framebufferTexture2D","FRAMEBUFFER","COLOR_ATTACHMENT0","createFramebuffer","bindFramebuffer","viewport","bind_or","clearColor","COLOR_BUFFER_BIT","unbind","fbo","canvas","texParameteri","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","texImage2D","RGBA","UNSIGNED_BYTE","ArgumentError","SurfaceShapeTileBuilder","fboCacheKey","buildTiles","surfaceShapes","assembleTiles","__fboBound__","getFbo","currentFramebuffer","splice","surfaceShapeTiles","clearShapes","addTile","tile","pickSequence","needsUpdate","tileWidth","tileHeight","updateTexture","doRender","savedTiles","savedTopLevelTiles","topLevelTiles","doDeepPickingRender","surfaceTileRenderer","renderTiles","idxTile","lenTiles","idxShape","lenShapes","idxPick","lenPicks","deepPickShapes","objectsAtPickPoint","objects","resolvablePickObjects","setShapes","gpuResourceCache","resourceForKey","putResource","__frameStart__","SurfaceShapeTile","deltaLongitude","deltaLatitude","xOffset","yOffset","asRenderedSurfaceShapeStateKeys","surfaceShapeStateKeys","gpuCacheKey","getCacheKey","TiledImageLayer","retrieveTileImage","suppressRedraw","pendingRequests","MAX_REQUESTS","currentRetrievals","imagePath","some","absentResourceList","isResourceAbsent","resourceUrlForTile","retrievalImageFormat","shift","fetchMoreImages","currentTilesInvalid","before","pendingTile","isTileVisible","url","cache","fetchImage","err","image","removeFromCurrentRetrievals","markResourceAbsent","unmarkResourceAbsent","e","createEvent","initEvent","REDRAW_EVENT_TYPE","dispatchEvent","cb","Image","onload","onerror","Error","crossOrigin","webkit","AndroidApp","src","doRender_","terrain","lasTtMVP","navigatorState","modelviewProjection","lastGlobeStateKey","currentTiles","opacity","surfaceOpacity","incrementImageTileCount","inCurrentFrame","cleanCache","libtess","condition","opt_message","DEBUG","GLU_TESS_WINDING_ODD","GLU_TESS_WINDING_NONZERO","GLU_TESS_WINDING_POSITIVE","GLU_TESS_WINDING_NEGATIVE","GLU_TESS_WINDING_ABS_GEQ_TWO","GL_LINE_LOOP","GL_TRIANGLES","GL_TRIANGLE_STRIP","GL_TRIANGLE_FAN","GLU_TESS_MISSING_BEGIN_POLYGON","GLU_TESS_MISSING_END_POLYGON","GLU_TESS_MISSING_BEGIN_CONTOUR","GLU_TESS_MISSING_END_CONTOUR","GLU_TESS_COORD_TOO_LARGE","GLU_TESS_NEED_COMBINE_CALLBACK","GLU_TESS_BEGIN","GLU_TESS_VERTEX","GLU_TESS_END","GLU_TESS_ERROR","GLU_TESS_EDGE_FLAG","GLU_TESS_COMBINE","GLU_TESS_BEGIN_DATA","GLU_TESS_VERTEX_DATA","GLU_TESS_END_DATA","GLU_TESS_ERROR_DATA","GLU_TESS_EDGE_FLAG_DATA","GLU_TESS_COMBINE_DATA","GLU_TESS_MESH","GLU_TESS_TOLERANCE","GLU_TESS_WINDING_RULE","GLU_TESS_BOUNDARY_ONLY","GLU_INVALID_ENUM","GLU_INVALID_VALUE","geom","vertEq","u","v","s","vertLeq","edgeEval","w","gapL","gapR","edgeSign","transLeq","transEval","transSign","edgeGoesLeft","dst","org","edgeGoesRight","vertL1dist","abs","vertCCW","interpolate_","a","b","edgeIntersect","o1","d1","o2","d2","z1","z2","tmp","mesh","makeEdge","makeEdgePair_","eHead","makeVertex_","vHead","sym","makeFace_","fHead","meshSplice","eOrg","eDst","joiningLoops","joiningVertices","killVertex_","lFace","killFace_","splice_","anEdge","deleteEdge","eDel","eDelSym","rFace","oNext","oPrev","killEdge_","addEdgeVertex","eNew","eNewSym","lNext","splitEdge","winding","connect","zapFace","fZap","eStart","eNext","eSym","fPrev","fNext","meshUnion","mesh1","mesh2","f1","v1","e1","f2","v2","e2","deleteMesh","GluHalfEdge","ePrev","aONext","bONext","eOrig","vNext","vPrev","vNew","GluVertex","fNew","GluFace","inside","vDel","newOrg","fDel","newLFace","normal","S_UNIT_X_","S_UNIT_Y_","projectPolygon","tess","computedNormal","norm","computeNormal_","sUnit","tUnit","longAxis_","TRUE_PROJECT","normalize_","dot_","coords","checkOrientation_","sqrt","maxVal","GLU_TESS_MAX_COORD","minVal","maxVert","minVert","c","index","maxLen2","tNorm","tLen2","f","renderMesh","flagEdges","beginOrBeginDataCalled","edgeState","callBeginOrBeginData","primitiveType","newState","callEdgeFlagOrEdgeFlagData","callVertexOrVertexData","data","callEndOrEndData","renderBoundary","sweep","SENTINEL_COORD_","TOLERANCE_NONZERO_","computeInterior","fatalError","removeDegenerateEdges_","initPriorityQ_","initEdgeDict_","pq","extractMin","minimum","spliceMergeVertices_","sweepEvent_","minRegion","dict","getMin","getKey","event","eUp","doneEdgeDict_","donePriorityQ_","removeDegenerateFaces_","checkMesh","addWinding_","eSrc","edgeLeq_","reg1","reg2","deleteRegion_","reg","fixUpperEdge","activeRegion","deleteNode","nodeUp","fixUpperEdge_","newEdge","topLeftRegion_","regionAbove","regionBelow","topRightRegion_","addRegionBelow_","regAbove","eNewUp","regNew","ActiveRegion","insertBefore","isWindingInside_","n","windingRule","computeWinding_","windingNumber","finishRegion_","finishLeftRegions_","regFirst","regLast","regPrev","lPrev","addRightEdges_","regUp","eFirst","eLast","eTopLeft","cleanUp","firstTime","rPrev","dirty","checkForRightSplice_","walkDirtyRegions_","callCombine_","isect","weights","needed","callCombineOrCombineData","callErrorOrErrorData","errorType","vertexWeights_","weightIndex","t1","t2","i0","i1","getIntersectData_","orgUp","dstUp","orgLo","dstLo","regLo","eLo","remove","pqHandle","checkForLeftSplice_","checkForIntersect_","orgMin","insert","connectRightVertex_","eBottomLeft","degenerate","connectLeftDegenerate_","vEvent","eTopRight","connectLeftVertex_","search","dNext","addSentinel_","sentinel","Dict","eLNext","PriorityQ","init","deleteQ","tessmono","tessellateMonoRegion_","face","up","tempHalfEdge","lo","tessellateInterior","discardExterior","setWindingNumber","keepOnlyBoundary","frame","leq","head_","DictNode","frame_","leq_","deleteDict_","node","newNode","getMax","opt_key","opt_nextNode","opt_prevNode","getSuccessor","getPredecessor","CachedVertex","GluTesselator","tessState_","T_DORMANT","lastEdge_","callError_","relTolerance","GLU_TESS_DEFAULT_TOLERANCE","boundaryOnly","callBegin_","callEdgeFlag_","callVertex_","callEnd_","callMesh_","callBeginData_","callEdgeFlagData_","callVertexData_","callEndData_","callErrorData_","callCombineData_","polygonData_","emptyCache","cacheCount","Array","TESS_MAX_CACHE","T_IN_POLYGON","T_IN_CONTOUR","gluDeleteTess","requireState_","gluTessProperty","which","gluEnum","gluGetTessProperty","gluTessNormal","z","gluTessCallback","opt_fn","fn","gluTessVertex","tooLarge","clamped","emptyCache_","cacheVertex_","addVertex_","gluTessBeginPolygon","gluTessBeginContour","gluTessEndContour","gluTessEndPolygon","makeDormant_","gotoState_","GluMesh","flag","interpData","undefined","errno","opt_nextFace","opt_prevFace","opt_nextEdge","dPrev","rNext","eHeadSym","opt_nextVertex","opt_prevVertex","PQHandleElem","realloc","oldArray","newArray","PQNode","handle","keys_","PQKeyRealloc_","INIT_SIZE_","order_","size_","max_","initialized_","heap_","PriorityQHeap","deleteHeap","keys","comparator","sort","r","keyNew","curr","keyLessThan_","keyX","keyY","keyGreaterThan_","sortMin","isEmpty","heapMin","isEmpty_","nodes_","handles_","freeList_","floatDown_","free","floatUp_","h","hMin","hCurr","child","hChild","parent","hParent","GpuProgram","ScreenColorProgram","super","resolutionLocation","uniformLocation","colorLocation","localCache","resolution","g","loadResolution","uniform2f","loadColor","cacheColor","red","green","blue","alpha","uniform4f","ScreenTextureProgram","texUnitLocation","textureUnit","loadTextureUnit","unit","uniform1i","TEXTURE0","Texture","WGS84_SEMI_MAJOR_AXIS","TexturedSurfaceShape","tesselator","nextId","_nextId","_id","_image","_imageUUID","_interiorVboCacheKey","_outlineVboCacheKey","_contoursPrepered","_contoursInfo","img","imageUUID","interiorGeometry","mapGeometry","wo","windingOrder_all","points","pop","renderColor","anglesMap","topLeftIndex","uvs","computeUvs","tessGeom","tessellate_p1","tessIndices","px","py","iboData","Uint16Array","vboData","Float32Array","renderTexture","tessellate","tessTris","program","findAndBindProgram","enableVertexAttribArray","RADIANS_TO_DEGREES","bindInteriorVbo","vertexAttribPointer","FLOAT","frontFace","CW","drawArrays","TRIANGLES","CCW","_ref2","imageTextureKey","error","imageTexture","bindInteriorIbo","valuesPerVertex","drawElements","UNSIGNED_SHORT","disableVertexAttribArray","locations1","side","uv","nextSide","sideStart","sideEnd","jIndex","sideDistance","distance","map","reduce","acc","vboUsage","STATIC_DRAW","generateCacheKey","bindVbo","bindOutlineVbo","cacheKey","vbo","vboEntry","entries","vboSize","BYTES_PER_ELEMENT","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","bufferSubData","iboUsage","_interiorIboCacheKey","bindIbo","ibo","iboSize","ELEMENT_ARRAY_BUFFER","tessellate_p","triangles","prim","newCoords","tris","vertex","pos","getBbox","bbox","minX","Number","MAX_SAFE_INTEGER","maxX","MIN_SAFE_INTEGER","minY","maxY","angles","prevX","prevY","currentX","currentY","nextX","nextY","angle","atan2","p0","el","p1","p2","p3","findWhichCorners","findIndex","userProps","identifier","id","cornerLocations","c0","c1","newCorners","corner","reindexCorners","getCorners_old","isEqualPoints","reindexCorners_old","getSlope","windingOrder","list","sum","p1x","p1y","distance2D","TexturedSurfacePolygon","isArray","removeDuplicateLocations","isPrepared","removeDuplicateLocationsFromContour","loc","loc2","GeoJSONConstants","GeoJSONParser","RenderableLayer","SurfacePolyline","addRenderablesForPolygon","geometry","properties","configuration","shapeConfigurationCallback","crs","isCRSSupported","pBoundaries","boundariesIndex","coordinates","positions","positionIndex","reprojectedCoordinate","getReprojectedIfRequired","addRenderable","load","parserCompletionCallback","_parserCompletionCallback","_shapeConfigurationCallback","_layer","dataSourceType","dataSource","obj","tryParseJSONString","requestUrl","addRenderablesForMultiPolygon","polygonsIndex","addRenderablesForLineString","pointsIndex","ArcBallCamera","BasicWorldWindowController","EarthElevationModel","FrameStatistics","Frustum","Globe","Globe2D","GoToAnimator","GpuResourceCache","Line","LookAtNavigator","Matrix","Navigator","PickedObjectList","Rectangle","Terrain","Vec2","WWMath","WorldWindow","canvasElem","elevationModel","controllerConstructor","cameraConstructor","WebGLRenderingContext","HTMLCanvasElement","getElementById","preventDefaultListener","preventDefault","drawContext","eventListeners","redrawRequested","redrawRequestId","scratchModelview","fromIdentity","scratchProjection","hasStencilBuffer","getContextAttributes","stencil","depthBits","getParameter","DEPTH_BITS","drawingBufferWidth","drawingBufferHeight","layers","navigator","subsurfaceMode","goToAnimator","_redrawCallbacks","_orderedRenderingFilters","thisWindow","declutter","pixelScale","addEventListener","handleRedrawEvent","handleContextLost","handleContextRestored","animationFrameLoop","orderedRenderingFilters","redrawCallbacks","canvasCoordinates","getBoundingClientRect","xc","left","clientLeft","yc","top","clientTop","listener","thisWorldWindow","entry","listeners","callback","worldWindow","removeEventListener","redraw","pick","isContextLost","resize","resetDrawContext","pickRay","rayThroughScreenPoint","drawFrame","pickTerrain","pickTerrainOnly","pickShapesInRegion","rectangle","pickRectangle","glAttrs","antialias","getContext","LEVEL_INFO","statusMessage","contextLost","cancelAnimationFrame","contextRestored","redrawIfNeeded","requestAnimationFrame","previousRedrawTimestamp","timestamp","callRedrawCallbacks","BEFORE_REDRAW","toString","AFTER_REDRAW","clientWidth","clientHeight","computeViewingTransform","modelview","camera","createViewMatrix","setToIdentity","globeRadius","equatorialRadius","polarRadius","eyePoint","extractEyePoint","eyePos","eyeHorizon","horizonDistanceForGlobeRadius","atmosphereHorizon","farDistance","nearDistance","perspectiveNearDistanceForFarDistance","distanceToSurface","elevationAtLocation","maxNearDistance","perspectiveNearDistance","setToPerspectiveProjection","computePixelMetrics","projectionInv","invertMatrix","nbl","ntr","fbl","ftr","multiplyByMatrix","nrRectWidth","fabs","frRectWidth","nrDistance","frustumWidthScale","frustumWidthOffset","pixelSizeFactor","pixelSizeOffset","pixelSizeAtDistance","pixelMetrics","computeDrawContext","setToMultiply","modelviewInv","invertOrthonormalMatrix","modelviewNormalTransform","setToTransposeOfMatrix","upper3By3","modelviewTranspose","fromProjectionMatrix","transformByMatrix","normalize","offset","reset","screenCreditController","update","beginFrame","continuous","do2DContiguousRepaint","doNormalRepaint","endFrame","createTerrain","clearFrame","deferOrderedRendering","makePickFrustum","doPick","doDraw","redrawSurface","drawScreenRenderables","createTerrain2DContiguous","pick2DContiguous","draw2DContiguous","resolveTerrainPick","resolveRegionPick","resolveTopPick","enable","BLEND","CULL_FACE","DEPTH_TEST","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","depthFunc","LEQUAL","makePickFramebuffer","pickFramebuffer","disable","ZERO","LESS","bindProgram","DEPTH_BUFFER_BIT","renderShapes","STENCIL_TEST","drawLayers","drawSurfaceRenderables","STENCIL_BUFFER_BIT","stencilFunc","ALWAYS","stencilOp","REPLACE","drawOrderedRenderables","EQUAL","KEEP","tessellator","setTerrainTileCount","surfaceGeometry","makeCurrent","terrainLeft","terrainCenter","terrainRight","accumulateOrderedRenderables","beginTime","layerRenderingTime","addLayer","removeLayer","indexOfLayer","insertLayer","sr","reverseSurfaceRenderables","popSurfaceRenderable","renderSurface","LEVEL_WARNING","message","or","sortOrderedRenderables","orderedRenderingMode","popOrderedRenderable","renderOrdered","orderedRenderingTime","nextScreenRenderable","pickedObjects","topObject","terrainObject","isTerrain","isOnTop","uniquePickColors","readPickColors","toByteString","stage","goTo","completionCallback","groupId","declutterables","orderedRenderables","orderedRenderable","declutterGroup","rects","declutterable","screenBounds","intersectsRectangles","targetVisibility","screenPoint","nearPoint","farPoint","modelviewProjectionInv","unProject","origin","direction","SunPosition","getAsGeographicLocation","date","celestialLocation","getAsCelestialLocation","celestialToGeographic","numDays","computeJulianDate","meanLongitude","normalizeAngle360","meanAnomaly","eclipticLongitude","sin","eclipticLongitudeRad","obliquityOfTheEcliptic","declination","asin","rightAscension","atan","tan","GMST","GHA","year","getUTCFullYear","month","getUTCMonth","getUTCDate","dayFraction","getUTCHours","getUTCMinutes","getUTCSeconds","A","trunc","B","degrees","Celestial","SUN","MERCURY","VENUS","MARS","JUPITER","SATURN","URANUS","NEPTUNE","getCelestialLocation","orbitalElements","d","computeSun","computeMercury","computeVenus","computeMars","computeJupiter","computeSaturn","computeUranus","computeNeptune","computePosition","N","M","E","aa","E1","xv","yv","xh","yh","zh","lon_corr","lonecl","latecl","lonsun","rsun","getLonSun","xg","yg","zg","ecl","xe","ye","ze","ra","dec","Color","StarFieldProgram","FRAG_MODE_MIX_COLOR","FRAG_MODE_TEXTURE","FRAG_MODE_COLOR","vertexPointLocation","attributeLocation","mvpMatrixLocation","numDaysLocation","magnitudeRangeLocation","textureUnitLocation","fragModeLocation","localState","mvpMatrix","magnitudeRange","fragMode","loadModelviewProjection","matrix","forceLoad","loadUniformMatrix","copy","loadNumDays","uniform1f","loadMagnitudeRange","minMag","maxMag","loadFragMode","mode","loadUniformColor","Layer","StarFieldLayer","starDataSource","pickEnabled","sunSize","showSun","_starDataSource","baseUrl","_sunImageSource","_matrix","_starsPositionsVboCacheKey","_numStars","_starData","_minMagnitude","MAX_VALUE","_maxMagnitude","MIN_VALUE","_loadStarted","_minScale","_scale","pow","_sunPositionsCacheKey","_sunBufferView","_MAX_GL_POINT_SIZE","showPlanets","jupiterSize","planets","_planetsBufferView","_cacheKeys","sunPosition","planetPositions","starPositions","invalidateStarData","sunImageSource","haveResources","beginRendering","endRendering","loadResources","sunTexture","planetTextures","every","planet","fetchStarData","retrieveTexture","forEach","depthMask","loadCommonUniforms","renderStars","renderSun","renderPlanets","currentProgram","mvp","multiplyByScale","julianDate","time","vboId","createStarsGeometry","incrementVboLoadCount","POINTS","ALIASED_POINT_SIZE_RANGE","_planetsPositionsVboCacheKey","DYNAMIC_DRAW","textureSrc","sunCelestialLocation","self","xhr","XMLHttpRequest","status","response","sendRedrawRequest","statusText","ontimeout","open","send","indexes","parseStarsMetadata","metadata","raIndex","decIndex","magIndex","starInfo","magnitude","pointSize","starMetaInfo","satConfig","shortName","satIndex","swathTypes","swathColors","colorFromKmlHex","swatModes","tleLineOne","tleLineTwo","hasModel","filePath","rotations","headingAxis","headingAdd","headingMultiply","preRotations","scale","translations","ignoreLocalTransforms","launchDate","retirementDate","groundPosition","BasicTextureProgram","ColladaScene","sceneData","_position","_nodes","_meshes","_materials","_images","_upAxis","_dirPath","_xRotation","_yRotation","_zRotation","preX","preY","preZ","_xTranslation","_yTranslation","_zTranslation","_altitudeMode","ABSOLUTE","_localTransforms","_useTexturePaths","_nodesToHide","_hideNodes","_placePoint","_transformationMatrix","_mvpMatrix","_normalTransformMatrix","_normalMatrix","_texCoordMatrix","setToUnitYFlip","_entities","_activeTexture","_tmpVector","_tmpColor","_vboCacheKey","_iboCacheKey","setSceneData","nodes","meshes","materials","images","upAxis","dirPath","xRotation","yRotation","zRotation","xTranslation","yTranslation","zTranslation","placePoint","altitudeMode","transformationMatrix","normalMatrix","localTransforms","useTexturePaths","nodesToHide","hideNodes","root","up_axis","flattenModel","nodesLen","flattenNode","va","imageKey","vb","meshKey","buffers","bufLen","materialBuf","material","symbol","materialKey","textures","diffuse","mapId","reflective","orderedScene","frustum","lastFrameTime","makeOrderedRenderable","containsPoint","addOrderedRenderable","surfacePointForMode","eyeDistance","distanceTo","drawOrderedScene","beginDrawing","endDrawing","iboId","setupBuffers","computeTransformationMatrix","mustRenderNode","sizeOfFloat32","sizeOfUint16","sizeOfUint32","Uint32Array","is32BitIndices","numIndices","numVertices","indexedRendering","indices","vertices","normals","vertexOffset","uvOffset","normalOffset","uIntExt","indexSize","indexBufferSize","getExtension","indexOffset","entity","nodeWorldMatrix","worldMatrix","nodeNormalMatrix","hasLighting","applyColor","path","filename","textureCacheKey","wrapMode","isClamp","REPEAT","loadTextureEnabled","loadModulateColor","loadApplyLighting","applyMatrix","indexOffsetBytes","UNSIGNED_INT","techniqueType","loadOpacity","hasTexture","multiplyMatrix","loadModelviewInverse","loadTextureMatrix","multiplyByLocalCoordinateTransform","multiplyByRotation","multiplyByTranslation","computeNormalMatrix","extractRotationAngles","nodeId","Model","model","satellite","_satellite","satelliteModel","_model","modelData","satShortName","jsonData","hasOwnProperty","eVertices","eNormals","eUvs","eIndices","info","EoUtils","WorldWindX","DEFAULT_MODEL_OPTIONS","SatelliteModelLayer","options","satelliteOptions","_satelliteOptions","_rerenderMap","Tle","heading","onLayerChanged","setModel","arguments","removeAllRenderables","doRerender","setPosition","setTle","satrec","computeSatrec","getOrbitPosition","alignWithOrbit","currentPosition","nextPosition","headingRad","headingAngleRadians","rad2deg","satKey","satName","layerKey","setTime","setRerender","rerenderer","wwx","satelliteLayers","satend","satstart","setUTCFullYear","fetch","then","json","satelliteData","WordWindX","Path","Orbits","startTime","endTime","orbitPoints","_satrec","_orbitPoints","_trail","trail","trailAttributes","_currentEndTime","_previousEndTime","_currentStartTime","_previousStartTime","populate","satelliteRecord","preventPopulate","preventUpdate","force","startDate","previousStartTime","previousTime","changeStart","endDate","previousEndTime","changeEnd","timeWindow","tick","ceil","positionsToReplace","getOrbitPositionWithPositionalData","numSubSegments","OrbitLayer","satRec","isFinite","_beforeCurrentOrbit","_afterCurrentOrbit","currentTime","selectTime","setSatRec","setTime2","removeRenderable","forceUpdate","wwwx","orbitLayers","bgLayers","service","layerNames","numLevels","format","FULL_SPHERE","levelZeroDelta","ovLayers","useEww","ProductTrail","useRef","QLTrail","ProductHead","eww","aoi","setAoi","ewwstate","setEwwState","bg","ov","modelOn","satList","atm","star","na","ge","qu","qw","proj","s2lut","lastepoch","qlqueue","qlcontroller","toggleAtmosphere","bool","la","getLayerByName","current","toggleModel","enableSatelliteLayers","enableOrbitLayers","toggleStarfield","ls","toggleNames","sortLayers","toggleBg","bgindex","toggleOv","ovindex","toggleDem","ElevationModel","addCoverage","TiledElevationCoverage","coverageSector","minElevation","maxElevation","urlBuilder","WcsTileUrlBuilder","toggleProjection","supportedProjections","nbproj","ProjectionWgs84","ProjectionEquirectangular","ProjectionMercator","ProjectionPolarEquidistant","zIndex","async","addQuicklookWMS","renderable","layername","wmsConfigQL","removeQuicklookWMS","qllayer","WmsLayer","toJSON","timerange","maxActiveAltitude","epoch","satlist","l","includes","getTics","newtics","renderables","filtered","acquisitionStartTime","filterRenderable","test","productInformation","cloudCoverPercentage","enableRenderables","head","closestrenderableindex","previousrenderableindex","nextrenderableindex","lastpreviousdistance","lastnextdistance","timediff","controller","createQL","footprint","quicklookLayer","credential","server","tokenendpoint","granttype","fetchURL","abort_fetchURL","abortcontroller","AbortController","toUTCString","ok","concat","blob","objectURL","URL","createObjectURL","Promise","resolve","reject","flipImage","srcBase64","createElement","ctx","transform","drawImage","toDataURL","base64src","imageOfQuickLook","createImage","quicklook","revokeObjectURL","QLLoader","abortsignal","prod","add1Quicklook","quicklookUrl","coordlist","coord","multiboundaries","getPolygonbyS2tile","highestlat","closestrenderable","closestRenderable","travelTime","range","applyLimits","setGlobeStates","wwd","lookAtLocation","al","vp","bl","tr","view","getViewPolygon","vpp","toFixed","viewpolygon","viewpoint","removeAllCoverages","worldWindowController","starFieldLayer","atmosphereLayer","AtmosphereLayer","templut","text","lut","extract","getS2LUT","initMap","removeGeojson","addGeojson","productlayer","acq","acquisitionStopTime","setProductTimeRange","isPointType","isMultiPointType","placemarkAttributes","PlacemarkAttributes","imageScale","imageColor","labelAttributes","Offset","OFFSET_FRACTION","isLineStringType","isMultiLineStringType","isPolygonType","isMultiPolygonType","toggleGeojson","lp","getRenderables","pickList","pickedItems","parentLayer","toggleQuicklookWMS","ql","removeQuicklooks","addQuicklook","forward","prodlayer","getIndexOfRenderable","qltoadd","signal","abort","toggleQuicklooks","setFilter","northUp","headingIncrement","runOperation","setMode","setColor","colorFromHex","products","FluidWorldWindowController","memo","world","onSimpleClick","controllerRef","lastTap","doubleTap","longclickdetected","button","clicktimeout","dragtimeout","gesturestartposition","dragenabled","rotationmode","pinchmode","debugtext","setdebugtext","api","useSpring","bind2","useDrag","div","useGesture","onDrag","_ref3","xy","vxvy","down","initial","movement","velocity","tap","scrolling","touches","pinching","positionAtPickPoint","timeStamp","handleSimpleClick","handleLongClick","zoomspring","stop","pinchzoomspring","pinchrotatespring","pinchtiltspring","handlepan2d","handlepan3d","handlezoom","handletilt","onDragend","onWheel","_ref4","wheeling","clientX","clientY","onPinchStart","panspring","pinchzoomrotatespring","onPinch","_ref5","da","vdva","elapsedTime","lastY","handlepinch","onPinchEnd","domTarget","drag","useTouch","pinch","eventOptions","passive","handlepinchtilt","handlezoomrotate","pinchtiltvalue","sub","immediate","config","mass","tension","friction","onChange","tiltfactor","tilt","pinchzoomrotatevalue","zenabler","tenabler","molasses","rangefactor","moveZoom","pinchzoomvalue","pinchrotatevalue","tiltvalue","tiltspring","dorotation","to","tiltoffset","headingoffset","panvalue","enabler","correction","lookatxy","nextlookatxy","currentposition","nextposition","currentpoint","nextpoint","computePointFromPosition","viewMatrix","ray","extractForwardVector","intersectsLine","params","extractViewingParameters","roll","onRest","positionAtPickPoint2","rotationVector","rotationAngle","computeRotationVectorAndAngle","rotateShpere","refposition","amount","lookatAltitude","lookAtPosition","interpolateGreatCircle","intersectpoint","pickedObject","pickedPosition","vec1","vec2","MeasurerUtils","angleBetweenVectors","cross","scratchRay","nav","clamp","className","ref","LookAtWidget","style","display","Icon","icon","focusIcon","ViewProductControl","useContext","useCallback","stopPropagation","_jsxs","baselineArrowCircleLeft","onClick","baselineArrowCircleRight","FilterProductControl","setfilter","handleClick","outlineFilterAlt","baselineFilterAlt","useFetcher","lastServer","setParam","client","OAuth2Client","clientId","clientSecret","OAuth2Fetch","getNewToken","clientCredentials","onError","password","username","get_token","headers","btoa","init_fetcher","Earth","debouncedclosestItem","debouncedviewpoint","myDispatch","target","tagName","useKey","getcollection","getcredential","join","ilat","ilon","ialt","selection","pageX","pageY","ControlPanel","setOpen","mask","setMask","panelcontrol","mr","onDragStart","onDragEnd","bottom","baselinePalette","InfoPanel","Mood","mood","setmood","defmood","setdefmood","Share","newloc","savedstate","encodeURIComponent","crush","share","outlineIosShare","DatasetSelector","coll","MapSelector","draggable","roundLayers","twotoneLayers","toggleOverlay","baselineBlurOn","togglePr","ColorSelectorContainer","documentElement","setProperty","HexColorPicker","OptionsSelector","Switch","checked","flexgrow","CollectionLabel","inputRef","collection","onSubmit","blur","htmlFor","AltitudeLabel","SearchLabel","WindowSizeController","debouncedviewDate","handleSliderChange","Slider","DateLabel","highlight","handleLabelClick","dateFormat","toUpperCase","useHandleDoubleTap","tapCallback","doubleTapCallback","setLasttap","handleTap","DateController","onDateChange","onStateChange","lefthanded","speed","increaseSpeed","decreaseSpeed","forceDate","initdate","setDate","setSpeed","playing","setplaying","step","refreshrate","ldate","intervalRef","timeoutRef","setInterval","clearInterval","newdate","togglePause","useClock","roundPause","roundPlayArrow","roundFastRewind","roundFastForward","DateSelectorScale","zoomfactor","resulttics","timescale","setTimescale","izoom","idate","itics","isearchwinstart","isearchwinend","scaleText","_start","_zoom","_resulttics","_searchwinstart","_searchwinend","font","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","clearRect","innerWidth","innerHeight","monthcode","pad","number","str","lefthand","classname","hour","minute","lastday","lastmonth","lastyear","lasthour","lastminute","lastticslength","labeloffset","offsetHeight","refdate","class","label","winstartpos","fillRect","offsetWidth","lastticpos","ticpos","fillText","item","handleResize","fontSize","DateSelector","gotoscalezoom","onFinalDateChange","onStepChange","onZoomChange","satcycle","MAXZOOM","MINZOOM","DEFZOOM","lastZoom","setZoomfactor","selector","scaledate","setScaledate","isActive","stepLabel","setStepLabel","lastTapdate","startingdate","discreetdate","posy_wheel","setyOnWheel","zoom","springzoom","springtest","ctrlKey","shiftKey","precision","newzoom","nbstep","setUTCMonth","detectDoubleTap","handleZoom","adate","xy2","sety2","moveToDate","fromtime","deltaoffset","from","duration","DateManager","selectorStartdate","setselectorStartdate","labeldate","setLabelDate","scalezoom","setscalezoom","dateLabelHighlight","setDateLabelHighlight","handleSelectorDateChange","handleSelectorFinalDateChange","handleControllerDateChange","handleSelectorStepChange","handleSelectorZoomChange","DateManagerContainer","settics","setstartdate","handleFinalDate","finaldate","handleDateChanged","handleStateChange","handleZoomChange","handleStepChange","eocatToGeojson","features","downloadurl","quicklookurl","link","updated","uuid","downloadUrl","parentIdentifier","EarthObservation","metaDataProperty","EarthObservationMetaData","platform","platformShortName","procedure","EarthObservationEquipment","Platform","platformSerialIdentifier","sensor","instrument","Instrument","operationalMode","Sensor","phenomenonTime","TimePeriod","beginPosition","endPosition","orbitNumber","acquisitionParameters","Acquisition","startTimeFromAscendingNode","stopTimeFromAscendingNode","orbitDirection","productType","mapFromHubOpenSearch","startIndex","itemsPerPage","rsstacToGeojson","Name","string","ContentDate","Start","End","CDSEOdataToGeojson","it","defaultgeometry","GeoFootprint","Id","PublicationDate","Assets","DownloadLink","ContentLength","CDSEStacToGeojson","assets","QUICKLOOK","start_datetime","end_datetime","relativeOrbitNumber","PRIPToGeojson","Footprint","LTAToGeojson","useDatahub","geojsonResults","setGeojsonResults","loading","setLoading","setStatus","fetchURLpaginated","newurl","replace","page","paging","totalresults","startindex","itemsperpage","geoJson","gmlToWkt","gmlfootprint","coordarray","replaceAll","wkt","reshuffle","array","content","hubItem","assign","int","double","sizeInBytes","sizeArray","parseFloat","wellknown","ingestiondate","beginposition","endposition","platformname","platformserialidentifier","instrumentshortname","sensoroperationalmode","parseInt","relativeorbitnumber","orbitnumber","orbitdirection","producttype","tileid","cloudcoverpercentage","feed","dhusToGeojson","searchpoint","windowStart","windowEnd","buildUrl","SearchManager","searchdate","searchmode","trigger","onClearResult","onSearchStart","onPageSearch","onSearchComplete","on401","setsearchtrigger","firstresultdate","lastresultdate","totalloaded","setparam","firstitemdate","lastitemdate","firstResultDate","lastResultDate","sd","sp","outlineRefresh","SearchManagerContainer","debouncedsearchPoint","debouncedaltitude","handlePageSearch","handleSearchStart","handleClearResult","handleSearchComplete","searchDesc","handleCredentials","prompt","ProductInfo","App","container","toggle","useFullscreen","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.bc2c0b19.chunk.js","sourcesContent":["export const collections = [\n    {\n        code: \"SciHub/S1\",\n        satellites: ['s1a','s1b'],\n        cycle: 1000*60*60*24*12,\n        // cycle: (1000*60*60*24*75)/14.5919788,\n        templateUrl: 'https://scihub.copernicus.eu/dhus/search?q=( footprint:\"Intersects({polygon})\" AND beginposition:[{start} TO {end}] AND platformname:Sentinel-1  AND filename:*{freetext}*)&start={startindex}&rows=100&orderby=beginposition desc&format=json',\n        name: 'SciHub/S1' ,\n        logo: './images/s1_black.png',\n        type: 'DHUS',\n        startIndexOrigin: 0,\n        dateOff: \" beginposition:[{start} TO {end}] AND\",\n        areaOff: ' footprint:\"Intersects({polygon})\" AND',\n        windowSize: 1000 * 60 * 60 * 18,\n        defaultFreetext: 'GRD'\n    },\n    {\n        code: 'SciHub/S2',\n        satellites: ['s2a','s2b'],\n        // cycle: (1000*60*60*24*143)/14.308183,\n        cycle: (1000*60*60*24*10),\n        templateUrl: 'https://scihub.copernicus.eu/dhus/search?q=( footprint:\"Intersects({polygon})\" AND beginposition:[{start} TO {end}] AND platformname:Sentinel-2 AND filename:*{freetext}*)&start={startindex}&rows=100&orderby=beginposition desc&format=json',\n        name: 'SciHub/S2',\n        logo: './images/s2_black.png',\n        type: 'DHUS',\n        startIndexOrigin: 0,\n        dateOff: ' beginposition:[{start} TO {end}] AND',\n        areaOff:  ' footprint:\"Intersects({polygon})\" AND',\n        windowSize: 1000 * 60 * 60 *3,\n        defaultFreetext: 'S2A_MSIL1C' \n    },\n    {\n        code: 'SciHub/S3',\n        satellites: ['s3a','s3b'],\n        cycle: (1000*60*60*24*27),\n        templateUrl: 'https://scihub.copernicus.eu/dhus/search?q=( footprint:\"Intersects({polygon})\" AND beginposition:[{start} TO {end}] AND platformname:Sentinel-3 AND (producttype:OL_1_LFR___ OR producttype:SL_1_RBT___ OR producttype:SR_1_SRA___))&start={startindex}&rows=100&orderby=beginposition desc&format=json',\n        name: 'SciHub/S3 OL_1_LFR/SL_1_RBT/SR_1_SRA' ,\n        logo: './images/s3_black.png',\n        type: 'DHUS/S3/OLCI/SLSTR/SRAL',\n        startIndexOrigin: 0,\n        dateOff: ' beginposition:[{start} TO {end}] AND',\n        areaOff:  ' footprint:\"Intersects({polygon})\" AND',\n        windowSize: 1000 * 60 * 60 * 24,\n        defaultFreetext: 'Not in use'\n    },\n    {\n        code: 'SciHub/S3A/OLCI/LFR',\n        satellites: ['s3a'],\n        cycle: (1000*60*60*24*27),\n        templateUrl: 'https://scihub.copernicus.eu/dhus/search?q=( footprint:\"Intersects({polygon})\" AND beginposition:[{start} TO {end}] AND platformname:Sentinel-3 AND filename:S3A_*  AND (producttype:OL_2_LFR___))&start={startindex}&rows=100&orderby=beginposition desc&format=json',\n        name: 'SciHub/S3A/OL2_LFR' ,\n        logo: './images/s3_black.png',\n        type: 'DHUS',\n        startIndexOrigin: 0,\n        dateOff: ' beginposition:[{start} TO {end}] AND',\n        areaOff:  ' footprint:\"Intersects({polygon})\" AND',\n        windowSize: 1000 * 60 * 60 * 24,\n        defaultFreetext: 'Not in use'\n    },\n    // {\n    //     code: 'SciHub/S3B/OLCI/LFR',\n    //     satellites: ['s3b'],\n    //     cycle: (1000*60*60*24*27),\n    //     templateUrl: 'https://scihub.copernicus.eu/dhus/search?q=( footprint:\"Intersects({polygon})\" AND beginposition:[{start} TO {end}] AND platformname:Sentinel-3 AND filename:S3B_* AND (producttype:OL_2_LFR___))&start={startindex}&rows=100&orderby=beginposition desc&format=json',\n    //     name: 'Sentinel-3 B, OLCI/LFR' ,\n    //     logo: './images/s3_black.png',\n    //     type: 'DHUS',\n    //     startIndexOrigin: 0,\n    //     dateOff: ' beginposition:[{start} TO {end}] AND',\n    //     areaOff:  ' footprint:\"Intersects({polygon})\" AND',\n    //     windowSize: 1000 * 60 * 60 * 24\n    // },\n    {\n        code: 'SciHub2/S3',\n        templateUrl: 'https://scihub.copernicus.eu/dhus/search?q=( footprint:\"Intersects({polygon})\" AND beginposition:[{start} TO {end}] AND platformname:Sentinel-3 AND (producttype:{freetext}))&start={startindex}&rows=100&orderby=beginposition desc&format=json',\n        satellites: ['s3a','s3b'],\n        cycle: (1000*60*60*24*27),\n        name: 'DHUS/OpenSearch/S3' ,\n        logo: './images/s3_black.png',\n        type: 'DHUS',\n        startIndexOrigin: 0,\n        dateOff: ' beginposition:[{start} TO {end}] AND',\n        areaOff:  ' footprint:\"Intersects({polygon})\" AND',\n        windowSize: 1000 * 60 * 60 * 24,\n        defaultFreetext: 'SR_1_SRA___'\n    },\n    {\n        code: 'SciHub/S5P',\n        satellites: ['s5p'],\n        cycle: (1000*60*60*24*16),\n        templateUrl: 'https://scihub.copernicus.eu/dhus/search?q=( footprint:\"Intersects({polygon})\" AND beginposition:[{start} TO {end}] AND platformname:Sentinel-5 precursor AND producttype:{freetext}))&start={startindex}&rows=100&orderby=beginposition desc&format=json',\n        name: 'DHUS/OpenSearch/S5P',\n        logo: './images/s5p_black.png',\n        type: 'DHUS',\n        startIndexOrigin: 0,\n        dateOff: ' beginposition:[{start} TO {end}] AND',\n        areaOff:  ' footprint:\"Intersects({polygon})\" AND',\n        windowSize: 1000 * 60 * 60 * 24,\n        defaultFreetext: 'L1B_RA_BD1'\n    },\n    {\n        code: 'EODC-DHR/Envisat',\n        satellites: ['env'],\n        cycle: (1000*60*60*24*35),\n        templateUrl: 'https://dhr.datahub.eodc.eu/search?q=( footprint:\"Intersects({polygon})\" AND beginposition:[{start} TO {end}] AND platformname:Envisat AND producttype:{freetext}) &start={startindex}&rows=100&orderby=beginposition desc&format=json',\n        name: \"EODC-DHR/Envisat\",\n        logo: './images/s5p_black.png',\n        type: 'DHUS/OpenSearch/Envisat',\n        startIndexOrigin: 0,\n        dateOff: ' beginposition:[{start} TO {end}] AND',\n        areaOff:  ' footprint:\"Intersects({polygon})\" AND',\n        windowSize: 1000 * 60 * 60 * 24,\n        defaultFreetext: 'MER_FRS_2P'\n    },\n    {\n        code: 'EOCAT Meris',\n        satellites: ['env'],\n        templateUrl: 'https://eocat.esa.int/api/catalogue/EOCAT-{freetext}/search?start={start}&stop={end}&geom={polygon}&format=json&count=50&startIndex={startindex}',\n        startIndexOrigin: 1,\n        name: 'EOCAT-MER_FRS_2P',\n        logo: './images/s5p_black.png',\n        type: 'EOCAT',\n        dateOff: 'start={start}&stop={end}&',\n        areaOff:  '&geom={polygon}',\n        windowSize: 1000 * 60 * 60 * 24 * 3,\n        defaultFreetext: 'MER_FRS_2P'\n    },\n\n    {\n        code: 'EOCAT ASA',\n        satellites: ['env'],\n        templateUrl: 'https://eocat.esa.int/api/catalogue/EOCAT-{freetext}/search?start={start}&stop={end}&geom={polygon}&format=json&count=50&startIndex={startindex}',\n        startIndexOrigin: 1,\n        name: 'EOCAT-ENVISAT.ASA.IMP_1P',\n        logo: './images/s5p_black.png',\n        type: 'EOCAT',\n        dateOff: 'start={start}&stop={end}&',\n        areaOff:  '&geom={polygon}',\n        windowSize: 1000 * 60 * 60 * 24 * 3,\n        defaultFreetext: 'ENVISAT.ASA.IMP_1P'\n    },\n\n    // {\n    //     code: 'RefSysStac',\n    //     templateUrl: 'https://processing.platform.ops-csc.com/native-api/stac/search?datetime={start}/{end}',\n    //     satellites: ['s1a'],\n    //     cycle: (1000*60*60*24)/14.308183,\n    //     startIndexOrigin: 1,\n    //     name: 'RS Stac',\n    //     type: 'STAC',\n    //     logo: './images/s5p_black.png',\n    //     dateOff: 'datetime={start}/{end}',\n    //     areaOff:  ' and OData.CSC.Intersects(area=geography%27SRID=4326;{polygon}%27)',\n    //     windowSize: 1000 * 60 * 60 * 24 * 3\n    // },\n\n    {\n        code: 'RefSys1/S1/S2/S3',\n        satellites: ['s1a'],\n        cycle: 1000*60*60*24*12,\n        templateUrl: 'https://processing.platform.ops-csc.com/ddip/odata/v1/Products?$format=json&$count=true&$top=100&$skip={startindex}&$filter=contains(Name,%27{freetext}%27)%20and%20OData.CSC.Intersects(area=geography%27SRID=4326;{polygon}%27)%20and%20ContentDate/Start%20gt%20{start}%20and%20ContentDate/Start%20lt%20{end}&$orderby=%20ContentDate/Start%20desc',\n        tokenEndpoint: 'https://iam.platform.ops-csc.com/auth/realms/RS/protocol/openid-connect/token',\n        grantType: 'client_credentials',\n        startIndexOrigin: 0,\n        name: 'RefSys/PRIP',\n        logo: './images/s1_black.png',\n        type: 'PRIP',\n        dateOff: '%20and%20ContentDate/Start%20gt%20{start}%20and%20ContentDate/Start%20lt%20{end}',\n        areaOff:  '%20and%20OData.CSC.Intersects(area=geography%27SRID=4326;{polygon}%27)',\n        windowSize: 1000 * 60 * 60 * 24 * 100,\n        defaultFreetext: 'S1A_IW_RAW__0SDV'\n    },\n\n    {\n        code: 'RefSys2/S1/S2/S3',\n        satellites: ['s1a'],\n        cycle: 1000*60*60*24*12,\n        templateUrl: 'https://processing.platform.ops-csc.com/ddip/odata/v1/Products?$format=json&$count=true&$top=100&$skip={startindex}&$filter=contains(Name,%27{freetext}%27)%20and%20OData.CSC.Intersects(area=geography%27SRID=4326;{polygon}%27)%20and%20ContentDate/Start%20gt%20{start}%20and%20ContentDate/Start%20lt%20{end}&$orderby=%20ContentDate/Start%20desc',\n        tokenEndpoint: 'https://iam.platform.ops-csc.com/auth/realms/RS/protocol/openid-connect/token',\n        grantType: 'client_credentials',\n        startIndexOrigin: 0,\n        name: 'RefSys/PRIP',\n        logo: './images/s1_black.png',\n        type: 'PRIP',\n        dateOff: '%20and%20ContentDate/Start%20gt%20{start}%20and%20ContentDate/Start%20lt%20{end}',\n        areaOff:  '%20and%20OData.CSC.Intersects(area=geography%27SRID=4326;{polygon}%27)',\n        windowSize: 1000 * 60 * 60 * 24 * 100,\n        defaultFreetext: 'EW_RAW__0N'\n    },\n\n    \n\n\n    {\n        code: 'RefSys3',\n        satellites: ['s3a','s3b'],\n        cycle: (1000*60*60*24*27),\n        templateUrl: 'https://processing.platform.ops-csc.com/ddip/odata/v1/Products?$format=json&$count=true&$top=100&$skip={startindex}&$filter=contains(Name,%27{freetext}%27)%20and%20OData.CSC.Intersects(area=geography%27SRID=4326;{polygon}%27)%20and%20ContentDate/Start%20gt%20{start}%20and%20ContentDate/Start%20lt%20{end}&$orderby=%20ContentDate/Start%20desc',\n        tokenEndpoint: 'https://iam.platform.ops-csc.com/auth/realms/RS/protocol/openid-connect/token',\n        grantType: 'client_credentials',\n        startIndexOrigin: 0,\n        name: 'RefSys/PRIP',\n        logo: './images/s5p_black.png',\n        type: 'PRIP',\n        dateOff: '%20and%20ContentDate/Start%20gt%20{start}%20and%20ContentDate/Start%20lt%20{end}',\n        areaOff:  '%20and%20OData.CSC.Intersects(area=geography%27SRID=4326;{polygon}%27)',\n        windowSize: 1000 * 60 * 60 * 24 * 7,\n        defaultFreetext: 'S3A_SR_0_SRA'\n    },\n\n    {\n        code: 'RefSys4',\n        satellites: ['s2a','s2b'],\n        cycle: (1000*60*60*24*10),\n        templateUrl: 'https://processing.platform.ops-csc.com/ddip/odata/v1/Products?$format=json&$count=true&$top=100&$skip={startindex}&$filter=contains(Name,%27{freetext}%27)%20and%20OData.CSC.Intersects(area=geography%27SRID=4326;{polygon}%27)%20and%20ContentDate/Start%20gt%20{start}%20and%20ContentDate/Start%20lt%20{end}&$orderby=%20ContentDate/Start%20desc',\n        tokenEndpoint: 'https://iam.platform.ops-csc.com/auth/realms/RS/protocol/openid-connect/token',\n        // grantType: 'client_credentials',\n        grantType: 'client_credentials',\n        startIndexOrigin: 0,\n        name: 'RefSys/PRIP',\n        logo: './images/s2_black.png',\n        type: 'PRIP',\n        dateOff: '%20and%20ContentDate/Start%20gt%20{start}%20and%20ContentDate/Start%20lt%20{end}',\n        areaOff:  '%20and%20OData.CSC.Intersects(area=geography%27SRID=4326;{polygon}%27)',\n        windowSize: 1000 * 60 * 60 * 24 * 7,\n        defaultFreetext: 'MSI_L1C_TL'\n    },\n\n    {\n        code: 'RefSys5',\n        satellites: ['s2a','s2b'],\n        cycle: (1000*60*60*24*10),\n        templateUrl: 'https://processing.platform.ops-csc.com/ddip/odata/v1/Products?$format=json&$count=true&$top=100&$skip={startindex}&$filter=contains(Name,%27{freetext}%27)%20and%20OData.CSC.Intersects(area=geography%27SRID=4326;{polygon}%27)%20and%20ContentDate/Start%20gt%20{start}%20and%20ContentDate/Start%20lt%20{end}&$orderby=%20ContentDate/Start%20desc',\n        tokenEndpoint: 'https://iam.platform.ops-csc.com/auth/realms/RS/protocol/openid-connect/token',\n        grantType: 'client_credentials',\n        startIndexOrigin: 0,\n        name: 'RefSys/PRIP',\n        logo: './images/s2_black.png',\n        type: 'PRIP',\n        dateOff: '%20and%20ContentDate/Start%20gt%20{start}%20and%20ContentDate/Start%20lt%20{end}',\n        areaOff:  '%20and%20OData.CSC.Intersects(area=geography%27SRID=4326;{polygon}%27)',\n        windowSize: 1000 * 60 * 60 * 24 * 7,\n        defaultFreetext: 'MSI_L2A_DS'\n    },\n\n    {\n        code: 'RefSys6',\n        satellites: ['s1a'],\n        cycle: (1000*60*60*24*10),\n        templateUrl: 'https://processing.platform.ops-csc.com/ddip/odata/v1/Products?$format=json&$count=true&$top=100&$skip={startindex}&$filter=contains(Name,%27{freetext}%27)%20and%20OData.CSC.Intersects(area=geography%27SRID=4326;{polygon}%27)%20and%20ContentDate/Start%20gt%20{start}%20and%20ContentDate/Start%20lt%20{end}&$orderby=%20ContentDate/Start%20desc',\n        tokenEndpoint: 'https://iam.platform.ops-csc.com/auth/realms/RS/protocol/openid-connect/token',\n        grantType: 'client_credentials',\n        startIndexOrigin: 0,\n        name: 'RefSys/PRIP',\n        logo: './images/s2_black.png',\n        type: 'PRIP',\n        dateOff: '%20and%20ContentDate/Start%20gt%20{start}%20and%20ContentDate/Start%20lt%20{end}',\n        areaOff:  '%20and%20OData.CSC.Intersects(area=geography%27SRID=4326;{polygon}%27)',\n        windowSize: 1000 * 60 * 60 * 24 * 7,\n        defaultFreetext: 'S1__AUX_WAV'\n    },\n\n    {\n        code: 'LTA',\n        satellites: ['s1a','s1b','s2a','s2b','s3a','s3b'],\n        cycle: (1000*60*60*24*10),\n        templateUrl: 'https://lta.acri.copernicus.eu/odata/v1/Products?$count=true&$top=100&$skip={startindex}&$filter=contains(Name,%27{freetext}%27)%20and%20OData.CSC.Intersects(area=geography%27SRID=4326;{polygon}%27)%20and%20ContentDate/Start%20gt%20{start}%20and%20ContentDate/Start%20lt%20{end}',\n        startIndexOrigin: 0,\n        name: 'LTA Acri',\n        logo: './images/s2_black.png',\n        type: 'LTA',\n        dateOff: '%20and%20ContentDate/Start%20gt%20{start}%20and%20ContentDate/Start%20lt%20{end}',\n        areaOff:  '%20and%20OData.CSC.Intersects(area=geography%27SRID=4326;{polygon}%27)',\n        windowSize: 1000 * 60 * 60 * 24 ,\n        defaultFreetext: 'EW_RAW__0N'\n    },\n\n    {\n        code: 'CDSE',\n        satellites: ['s1a','s1b','s2a','s2b','s3a','s3b'],\n        cycle: (1000*60*60*24*10),\n        templateUrl: 'https://catalogue.dataspace.copernicus.eu/odata/v1/Products?$count=true&$top=100&$skip={startindex}&$filter=contains(Name,%27{freetext}%27)%20and%20OData.CSC.Intersects(area=geography%27SRID=4326;{polygon}%27)%20and%20ContentDate/Start%20gt%20{start}%20and%20ContentDate/Start%20lt%20{end}&$expand=Assets',\n        tokenEndpoint: 'https://identity.dataspace.copernicus.eu/auth/realms/CDSE/protocol/openid-connect/token',\n        grantType: 'password',\n        startIndexOrigin: 0,\n        name: 'CDSE Odata',\n        logo: './images/s2_black.png',\n        type: 'CDSEOdata',\n        dateOff: '%20and%20ContentDate/Start%20gt%20{start}%20and%20ContentDate/Start%20lt%20{end}',\n        areaOff:  '%20and%20OData.CSC.Intersects(area=geography%27SRID=4326;{polygon}%27)',\n        windowSize: 1000 * 60 * 60 * 24 ,\n        defaultFreetext: 'GRD'\n    },\n\n    {\n        code: 'CDSE2',\n        satellites: ['s1a','s1b','s2a','s2b','s3a','s3b'],\n        cycle: (1000*60*60*24*10),\n        templateUrl: 'https://catalogue.dataspace.copernicus.eu/stac/search?&datetime={start}/{end}&sortby=-start_datetime&limit=100&page={page}',\n        tokenEndpoint: 'https://identity.dataspace.copernicus.eu/auth/realms/CDSE/protocol/openid-connect/token',\n        grantType: 'password',\n        startIndexOrigin: 1,\n        name: 'CDSE STAC',\n        logo: './images/s2_black.png',\n        type: 'CDSEStac',\n        dateOff: '&datetime={start}/{end}',\n        areaOff:  '%20and%20OData.CSC.Intersects(area=geography%27SRID=4326;{polygon}%27)',\n        windowSize: 1000 * 60 * 60 * 24 ,\n        defaultFreetext: 'not in use'\n    },\n\n    {\n        code: 'CDSE3',\n        satellites: ['s1a','s1b','s2a','s2b','s3a','s3b'],\n        cycle: (1000*60*60*24*10),\n        templateUrl: 'https://catalogue.dataspace.copernicus.eu/stac/collections/{freetext}/items?&datetime={start}/{end}&sortby=-start_datetime&limit=100&page={page}',\n        tokenEndpoint: 'https://identity.dataspace.copernicus.eu/auth/realms/CDSE/protocol/openid-connect/token',\n        grantType: 'password',\n        startIndexOrigin: 1,\n        name: 'CDSE STAC',\n        logo: './images/s2_black.png',\n        type: 'CDSEStac',\n        dateOff: '&datetime={start}/{end}',\n        areaOff:  '%20and%20OData.CSC.Intersects(area=geography%27SRID=4326;{polygon}%27)',\n        windowSize: 1000 * 60 * 60 * 24 ,\n        defaultFreetext: 'SENTINEL-1'\n    },\n\n\n    // {\n    //     code: 'CDSE1',\n    //     satellites: ['s1a','s1b','s2a','s2b','s3a','s3b'],\n    //     cycle: (1000*60*60*24*10),\n    //     templateUrl: 'https://catalogue.dataspace.copernicus.eu/resto/api/collections/Sentinel2/search.json?startDate={start}&completionDate={end}&sortParam=startDate&maxRecords=100&page={startindex}&$expand=Assets',\n    //     tokenEndpoint: 'https://identity.dataspace.copernicus.eu/auth/realms/CDSE/protocol/openid-connect/token',\n    //     grantType: 'password',\n    //     startIndexOrigin: 1,\n    //     name: 'CDSE OpenSearch',\n    //     logo: './images/s2_black.png',\n    //     type: 'CDSE',\n    //     dateOff: '%20and%20ContentDate/Start%20gt%20{start}%20and%20ContentDate/Start%20lt%20{end}',\n    //     areaOff:  '%20and%20OData.CSC.Intersects(area=geography%27SRID=4326;{polygon}%27)',\n    //     windowSize: 1000 * 60 * 60 * 24 ,\n    //     defaultFreetext: 'EW_RAW__0N'\n    // }\n\n\n\n]","import {collections} from \"./collections.js\"\n\nexport const reducer = (state, action) => {\n    switch (action.type) {\n      case \"toggle_names\":\n          console.log('togglename!')\n        return {\n          ...state,\n          mapSettings: {...state.mapSettings, names: !state.mapSettings.names}\n        }\n  \n        case \"toggle_starfield\":\n            console.log('toggle starfield!')\n          return {\n            ...state,\n            mapSettings: {...state.mapSettings, starfield: !state.mapSettings.starfield}\n          }\n    \n          case \"toggle_atmosphere\":\n            console.log('toggle atmosphere!')\n          return {\n            ...state,\n            mapSettings: {...state.mapSettings, atmosphere: !state.mapSettings.atmosphere}\n          }\n\n          case \"north_up\":\n            console.log('North Up!')\n          return {\n            ...state,\n            mapSettings: {...state.mapSettings, northup: state.northup+1}\n          }\n\n    \n          case \"toggle_background\":\n            console.log('toggle background !')\n          return {\n            ...state,\n            mapSettings: {...state.mapSettings, background: state.mapSettings.background + 1}\n          }\n    \n    \n          case \"toggle_overlay\":\n            console.log('toggle overlay!')\n          return {\n            ...state,\n            mapSettings: {...state.mapSettings, overlay: state.mapSettings.overlay + 1}\n          }\n    \n    \n          case \"toggle_projection\":\n            console.log('toggleprojection!')\n          return {\n            ...state,\n            mapSettings: {...state.mapSettings, projection: state.mapSettings.projection + 1}\n          }\n    \n\n          case \"set_dataset\":\n            console.log('set dataset!')\n            // console.log(action.value[0])\n            // console.log(action.value[1])\n            // console.log(action.value[2])\n            // console.log(action.value[3])\n            console.log(action.value[4])\n            return {\n            ...state,\n            dataset: action.value[0],\n            cycle: action.value[2],\n            freetext: action.value[3],\n            searchWindow: action.value[4],\n            mapSettings: {...state.mapSettings, satelliteList: action.value[1], datasetSatelliteList: action.value[1]}\n          }\n\n          case \"set_dem\":\n            return {\n              ...state,\n              mapSettings: {...state.mapSettings, dem: action.value}\n            }\n      \n  \n          case \"set_constellation\":\n            console.log('set constellation!')\n          return {\n            ...state,\n            mapSettings: {...state.mapSettings, satelliteList: action.value[1]?action.value[0]:state.mapSettings.datasetSatelliteList, constellation: action.value[1], satellites: action.value[1]?true:state.mapSettings.satellites}\n          }\n    \n          case \"toggle_satellites\":\n            console.log('toggle_satellites!: '+action.value)\n\n          return {\n            ...state,\n            // mapSettings: {...state.mapSettings, satellites: !state.mapSettings.satellites}\n            mapSettings: {...state.mapSettings, satellites: (action.value != null)?action.value:!state.mapSettings.satellites, constellation: action.value?state.mapSettings.constellation:false},\n\n          }\n    \n    \n          case \"toggle_quicklooks\":\n          return {\n            ...state,\n            mapSettings: {...state.mapSettings, quicklooks: !state.mapSettings.quicklooks}\n          }\n    \n          \n\n\n          case \"set_altitude\":\n            // console.log('set altitude!: '+action.value)\n          return {\n            ...state,\n            altitude: action.value,\n            productOn: action.value > state.pointSearchMaxAltitude?true:state.productOn,\n            searchMode: (action.value > state.pointSearchMaxAltitude)?'global':'point'\n          }\n\n          case \"freetextsearch\":\n            return {\n              ...state,\n              freetext: action.value,\n              searchtrigger: Math.random(),\n            }\n    \n    \n          case \"onResultPage\":\n            // console.log('onResultPage')\n            // console.log(action.value)\n          return {\n            ...state,\n            resultDesc: action.value.resultdesc,\n            geojson: action.value.results\n            // resultDesc: {...state.resultDesc, totalLoaded: action.value.totalLoaded, totalResults: action.value.totalResults}\n          }\n\n          case \"clearResult\":\n            console.log('clear result')\n            return {\n              ...state,\n              // tics: [],\n              clearResultsTrigger: Math.random(),\n              // geojson: null,\n              resultDesc: {totalResults:0, totalLoaded:0 },\n              closestItem: null,\n              filter: [],\n              browseMode: state.searchMode,\n              // searchWinStart: null,\n              searching: false\n              // resultDesc: {...state.resultDesc, totalLoaded: action.value.totalLoaded, totalResults: action.value.totalResults}\n            }\n  \n            \n          case \"onSearchStart\":\n            console.log('onSearchStart')\n            // // console.log(action.value)\n            // // let julianstart = Math.floor(state.searchDate/state.searchWindow) * state.searchWindow\n            // // let startdate = julianstart\n            // // let enddate = julianstart + state.searchWindow - 1000\n\n            // let day = 1000 * 60 * 60 * 24\n            // // let startdate = Math.floor((state.searchDate - (state.searchWindow/2))/day) * day\n            // // let enddate = Math.floor((state.searchDate + (state.searchWindow/2))/day) * day\n\n            // let searchWinDay = Math.floor(state.searchWindow / day) * day    \n            // let startdate = Math.floor(state.searchDate/searchWinDay) * searchWinDay\n            // let enddate = startdate + searchWinDay\n    \n    \n            // let startdate = Math.floor(state.searchDate/state.searchWindow) * state.searchWindow\n            // let enddate = Math.floor((state.searchDate + (state.searchWindow/2))/day) * day\n\n\n          return {\n            ...state,\n            // tics: [],\n            // geojson: null,\n            clearResultsTrigger: Math.random(),\n            resultDesc: {totalResults:0, totalLoaded:0 },\n            closestItem: null,\n            filter: [],\n            browseMode: state.searchMode,\n            searching: true,\n            // searchWinStart: startdate,\n            // searchWinEnd: enddate,\n            // resultDesc: {...state.resultDesc, totalLoaded: action.value.totalLoaded, totalResults: action.value.totalResults}\n          }\n    \n          case \"onSearchComplete\":\n            // console.log('onSearchComplete')\n            // console.log(action.value)\n            if(state.altitude > state.pointSearchMaxAltitude) {\n              return {\n                ...state,\n                resultDesc: action.value,\n                searching: false\n                // goToDate: !state.animated ? action.value.firstResultDate.getTime() :  action.value.lastResultDate.getTime()\n                // resultDesc: {...state.resultDesc, totalLoaded: action.value.totalLoaded, totalResults: action.value.totalResults}\n              }\n            } else {\n              return {\n                ...state,\n                resultDesc: action.value,\n                searching: false\n                // goToDate: !state.animated ? state.goToDate :  action.value.lastResultDate.getTime()\n                // resultDesc: {...state.resultDesc, totalLoaded: action.value.totalLoaded, totalResults: action.value.totalResults}\n              }\n\n            }\n      \n          case  \"set_searchWindow\":\n            console.log('set_searchWindow: ')\n            console.log(action.value)\n            // let julianstart2 = Math.floor(state.searchDate/action.value) * action.value\n            // let startdate2 = julianstart2\n            // let enddate2 = julianstart2 + action.value - 1000\n\n\n            return {\n              ...state,\n              searchWindow: action.value.win,\n              searchWinStart: action.value.wins,\n              searchWinEnd: action.value.wine,\n              }\n\n\n          case \"set_selectedProduct\":\n            console.log('set_selectedProduct:')\n            console.log(action.value)\n            if(state.selectedProduct != null && action.value === state.selectedProduct) {\n              return {\n                ...state,\n                selectedProduct: action.value,\n                goToDate: action.value?action.value.timeRange[0].getTime():null,\n                productOn: false,\n                addQuicklookWMSTrigger: Math.random()\n              }\n            } else {\n              return {\n                ...state,\n                selectedProduct: action.value,\n                goToDate: action.value?action.value.timeRange[0].getTime():null,\n              }\n            }\n            \n\n          case \"set_closestitem\":\n            if(!action.value) return state\n            return {\n              ...state,\n              closestItem: action.value,\n            }\n            \n\n\n          case \"set_tics\":\n            return {\n              ...state,\n              tics: action.value,\n            }\n              \n          // case \"set_step\":\n          //   console.log('set_step: '+action.value)\n          //   if(action.value === 'cycle') {\n          //     return {\n          //       ...state,\n          //       // cycle: 1000*60*60*24*12,\n          //     } \n          //   } else return state\n                \n        \n          case \"set_filter\":\n            console.log('toggle_filter')\n            console.log(state.filter)\n            console.log(state.closestItem)\n            \n            if(state.closestItem === null) return state\n            let newfilter = []\n            let props = state.closestItem.closest.userProperties\n            if(state.filter.length === 0 || !state.filter) {\n              if(props.name.indexOf('S1') >=0 ) {\n                newfilter = [{\n                  attribute: 'relativePassNumber',\n                  value: props.earthObservation.acquisitionInformation[0].acquisitionParameter.relativePassNumber\n                }]\n              }\n              if(props.name.indexOf('S2') >=0 ) {\n                newfilter = [{\n                  attribute: 'relativePassNumber',\n                  value: props.earthObservation.acquisitionInformation[0].acquisitionParameter.relativePassNumber\n                },\n                {\n                  attribute: 'cloudCoverPercentage',\n                  value: 20\n                }\n              ]\n              }\n            } else {\n              console.log(\"no filter\")\n\n              newfilter = []\n            }\n            return {\n              ...state,\n              filter: newfilter,\n            }\n            \n\n            case \"gotoclosestitem\":\n              // console.log('gotoclosestitem')\n              // if(state.closestItem == null || state.closestItem.closest._sector == null) return state\n              if(state.closestItem == null) return state\n              // console.log(state)\n  \n              return {\n                ...state,\n                goToDate: state.closestItem.closest.timeRange[0].getTime(),\n                // moveToClosestItemTrigger: Math.random(),\n                goToPos: {\n                  lat: state.closestItem.closest._sector == null?0:state.closestItem.closest._sector.centroidLatitude(),\n                  lon: state.closestItem.closest._sector == null?0:state.closestItem.closest._sector.centroidLongitude(),\n                alt: state.altitude,\n                }\n              }\n              \n              case \"gotonextitem\":\n                // console.log('gotoclosestitem')\n                // if(state.closestItem == null || state.closestItem.next._sector == null) return state\n                if(state.closestItem == null ) return state\n                // console.log(state)\n    \n                if(state.closestItem.next.sector != null) {\n                  return {\n                    ...state,\n                    goToDate: state.closestItem.next.timeRange[0].getTime(),\n                    // moveToClosestItemTrigger: Math.random(),\n                    goToPos: {\n                      // lat: state.closestItem.previous.sector == null?0:state.closestItem.previous.sector.centroidLatitude(),\n                      // lon: state.closestItem.previous.sector == null?0:state.closestItem.previous.sector.centroidLongitude(),\n                      lat: state.closestItem.next.sector.centroidLatitude(),\n                      lon: state.closestItem.next.sector.centroidLongitude(),\n                        alt: state.altitude,\n                    }\n                  }\n\n                } else {\n                  return {\n                    ...state,\n                    goToDate: state.closestItem.next.timeRange[0].getTime()\n                  }\n                }\n\n                case \"gotopreviousitem\":\n                  // console.log('gotoclosestitem')\n                  // if(state.closestItem == null || state.closestItem.previous._sector == null) return state\n                  if(state.closestItem == null) return state\n\n                  if(state.closestItem.previous.sector != null) {\n                    return {\n                      ...state,\n                      goToDate: state.closestItem.previous.timeRange[0].getTime(),\n                      // moveToClosestItemTrigger: Math.random(),\n                      goToPos: {\n                        // lat: state.closestItem.previous.sector == null?0:state.closestItem.previous.sector.centroidLatitude(),\n                        // lon: state.closestItem.previous.sector == null?0:state.closestItem.previous.sector.centroidLongitude(),\n                        lat: state.closestItem.previous.sector.centroidLatitude(),\n                        lon: state.closestItem.previous.sector.centroidLongitude(),\n                          alt: state.altitude,\n                      }\n                    }\n  \n                  } else {\n                    return {\n                      ...state,\n                      goToDate: state.closestItem.previous.timeRange[0].getTime()\n                    }\n                  }\n                  \n                    \n                \n          // case \"set_goToDate\":\n          //   console.log('set_goToDate')\n          //   // console.log(action.value)\n          //   if(action.value === null) return state\n          //   return {\n          //     ...state,\n          //     goToDate: action.value.getTime(),\n          //     // moveToClosestItemTrigger: Math.random()\n          //   }\n        \n          case \"set_searchDate\":\n            console.log('set_searchDate')\n\n            let day = 1000 * 60 * 60 * 24\n            let searchWinDay = Math.floor(state.searchWindow / day) * day\n            let startdate = Math.floor(action.value.getTime()/searchWinDay) * searchWinDay\n            let enddate = startdate + searchWinDay\n\n            return {\n              ...state,\n              searchDate: action.value.getTime(),\n              searchWinStart: startdate,\n              searchWinEnd: enddate,\n              goToDate: action.value.getTime()\n            }\n    \n          \n          case \"set_animated\":\n            console.log('set_animated')\n            return {\n              ...state,\n              animated: action.value,\n            }\n    \n          \n          case \"set_color\":\n            console.log('set_color: '+action.value)\n            return {\n              ...state,\n              appColor: action.value,\n            }\n\n\n          case \"set_viewDate\": {\n            // console.log('onDateChanged')\n            // console.log(action.value.getTime())\n            return {\n              ...state,\n              viewDate: action.value.getTime(),\n              productOn: true\n              // goToDate: null\n            }\n          }\n    \n    \n          case \"set_searchPoint\": {\n            // console.log('set_searchPoint')\n            return {\n              ...state,\n              searchPoint: action.value\n            }\n          }\n\n          case \"set_zoomscale\": {\n            return {\n              ...state,\n              zoomScale: action.value\n            }\n          }\n\n          case \"set_position\": {\n            return {\n              ...state,\n              position: {\n                clon: action.value.lon,\n                clat:action.value.lat\n              },\n            }\n          }\n\n          case \"set_token\": {\n            console.log('set token: ')\n            console.log(action.value)\n            return {\n              ...state,\n              token: action.value\n            }\n          }\n          case \"set_credentials\": {\n            console.log(action.value)\n            let newcreds = state.credentials\n            let i\n            let found = false\n            for ( i=0; i< state.credentials.length;i++) {\n              if(state.credentials[i].key && state.credentials[i].key == action.value.key) {\n                newcreds[i] = action.value\n                found = true\n              } \n            }\n            if(!found) newcreds.push(action.value)\n\n            \n      \n            return {\n              ...state,\n              credentials: newcreds\n            }\n          }\n\n          case \"reset_credentials\": {\n            console.log('reset credentials')\n            return {\n              ...state,\n              credentials: {user:'', pass:''}\n            }\n          }\n\n          case \"toggle_lefthanded\": {\n            // console.log('toggle_lefthanded')\n            return {\n              ...state,\n              leftHanded: !state.leftHanded\n            }\n          }\n\n        default:\n          return state\n    }\n  }\n\n\n  let init_date = new Date()\n  export const initialState = {\n    active: false,\n    searching: false,\n    // dataset: 'S1A_IW_RAW__0SDV',\n    dataset: 'CDSE',\n    altitude: '5000000',\n    appColor: '#b575c5',\n    position: {\n        clon:'0.5',\n        clat:'45' \n    },\n    viewDate: init_date.getTime(),\n    goToDate: init_date.getTime(),\n    goToPos: {\n      lat: 0,\n      lon: 0\n    },\n    searchDate: null,\n    credentials: {key:'',user:'', pass:''},\n    // resetStartDateTrigger: null,\n    pointSearchMaxAltitude: 3000000,\n    selectedProduct: null,\n    searchPoint: 'POINT(40 0)',\n    searchMode: 'global',\n    browseMode: 'global',\n    geojson: null,\n    filter: [],\n    closestItem: null,\n    tics: [],\n    addQuicklookWMSTrigger: null,\n    moveToClosestItemTrigger: null,\n    resultDesc: {\n        firstItemDate: null,\n        lastItemDate: null,\n        totalResults: 0,\n        totalLoaded: 0\n    },\n    animated: false,\n    clearResultsTrigger: null,\n    searchWindow: 1000 * 60 * 60 * 24,\n    mapSettings: {\n        atmosphere: false,\n        starfield: false,\n        names: false,\n        background: 0,\n        overlay:1,\n        dem: false,\n        satellites: false,\n        quicklooks: true,\n        projection: 0,\n        northup: 0\n    },\n    collections: collections,\n    leftHanded: false\n  }\n\n  export const getsavedstate = (state) => {\n    return {\n      dataset: state.dataset,\n      altitude: state.altitude,\n      appColor: state.appColor,\n      position: state.position,\n      animated: state.animated,\n      mapSettings: state.mapSettings,\n      viewDate: state.viewDate,\n      searchDate: state.searchDate,\n      searchMode: state.searchMode,\n      goToDate: state.goToDate,\n      credentials: state.credentials,\n      leftHanded: state.leftHanded,\n      searchPoint: state.searchPoint,\n      searchWinStart: state.searchWinStart,\n      searchWinEnd: state.searchWinEnd,\n    }\n\n  }\n  ","import {collections} from \"./collections.js\"\nimport JSONCrush from \"jsoncrush\"\n\n\n\n\n\n  let init_date = new Date()\n  export const defaultstate = {\n    active: false,\n    searching: false,\n    // dataset: 'S1A_IW_RAW__0SDV',\n    dataset: 'CDSE',\n    altitude: '5000000',\n    appColor: '#d1b849',\n    position: {\n        clon:'0.5',\n        clat:'45' \n    },\n    viewDate: init_date.getTime(),\n    goToDate: init_date.getTime(),\n    goToPos: {\n      lat: 0,\n      lon: 0\n    },\n    zoomScale: 6461494,\n    searchDate: null,\n    credentials: [{key:'',user:'', pass:''}],\n    resetStartDateTrigger: null,\n    pointSearchMaxAltitude: 3000000,\n    selectedProduct: null,\n    searchPoint: 'POINT(40 0)',\n    searchMode: 'global',\n    browseMode: 'global',\n    geojson: null,\n    filter: [],\n    closestItem: null,\n    tics: [],\n    addQuicklookWMSTrigger: null,\n    moveToClosestItemTrigger: null,\n    resultDesc: {\n        firstItemDate: null,\n        lastItemDate: null,\n        totalResults: 0,\n        totalLoaded: 0\n    },\n    animated: false,\n    cycle: 1000*60*60*24*12,\n    searchWindow: 1000*60*60*24,\n    searchWinStart: 0,\n    searchWinEnd: 0,\n    clearResultsTrigger: null,\n    mapSettings: {\n        atmosphere: false,\n        starfield: false,\n        names: false,\n        background: 0,\n        overlay:1,\n        dem: false,\n        satellites: false,\n        satelliteList: ['s1a'],\n        datasetSatelliteList: ['s1a'],\n        constellation: false,\n        quicklooks: true,\n        projection: 0\n    },\n    collections: collections,\n    leftHanded: false\n  }\n\n  export const getsavedstate = (state) => {\n    return {\n      dataset: state.dataset,\n      cycle: state.cycle,\n      altitude: state.altitude,\n      appColor: state.appColor,\n      position: state.position,\n      zoomScale: state.zoomScale,\n      animated: state.animated,\n      mapSettings: state.mapSettings,\n      viewDate: state.viewDate,\n      searchDate: state.searchDate,\n      goToDate: state.goToDate,\n      credentials: state.credentials,\n      leftHanded: state.leftHanded,\n      searchWindow: state.searchWindow,\n      searchMode: state.searchMode,\n      searchPoint: state.searchPoint,\n      searchWinStart: state.searchWinStart,\n      searchWinEnd: state.searchWinEnd,\n\n\n    }\n\n  }\n  export const getsharedstate = (state) => {\n    return {\n      dataset: state.dataset,\n      cycle: state.cycle,\n      altitude: state.altitude,\n      appColor: state.appColor,\n      position: state.position,\n      animated: state.animated,\n      zoomScale: state.zoomScale,\n      mapSettings: state.mapSettings,\n      viewDate: state.viewDate,\n      searchDate: state.searchDate,\n      goToDate: state.goToDate,\n      searchWindow: state.searchWindow.Date,\n      searchWinStart: state.searchWinStart,\n      searchWinEnd: state.searchWinEnd,\n      // leftHanded: state.leftHanded\n    }\n\n  }\n\n  export const initstate = (state) => {\n\n    try {\n      let eoi_state = JSON.parse(window.localStorage.getItem(\"eoi_state\"))\n\n\n      let paramindex = window.location.href.indexOf('?s=') \n      let urlparam = window.location.href.substring(paramindex+3)\n      // window.location.href = window.location.href.split('?')[0]\n      window.history.replaceState(null, document.title, window.location.href.split('?')[0])\n\n      let param = {}\n      if(paramindex >= 0) {\n      \n        param = JSON.parse(JSONCrush.uncrush(decodeURIComponent(urlparam)))\n        console.log(param)\n  \n\n    }\n\n    let initmapsettings = {...defaultstate.mapSettings,...eoi_state.mapSettings,...param.mapSettings}\n\n    let initstate = {...defaultstate,...eoi_state,...param,mapSettings: initmapsettings}\n    console.log(initstate)\n\n    return(initstate)\n  \n  }       catch {\n    console.log('init with default state')\n    console.log(defaultstate)\n\n    return(defaultstate)\n  }\n\n  }\n","import { useState, useEffect } from \"react\";\nfunction useDebounce(value, delay) {\n  // State and setters for debounced value\n  const [debouncedValue, setDebouncedValue] = useState(value);\n  useEffect(\n    () => {\n      // Update debounced value after delay\n      const handler = setTimeout(() => {\n        setDebouncedValue(value);\n      }, delay);\n      // Cancel the timeout if value changes (also on delay change or unmount)\n      // This is how we prevent debounced value from updating if value is changed ...\n      // .. within the delay period. Timeout gets cleared and restarted.\n      return () => {\n        clearTimeout(handler);\n      };\n    },\n    [value, delay] // Only re-call effect if value or delay changes\n  );\n  return debouncedValue;\n}\nexport {useDebounce}  ","// export { AppContext } from './App'\n\nimport React from \"react\"\nimport { reducer } from \"./reducer\"\nimport {  initstate,  getsavedstate } from \"./initstate\"\nimport  { useEffect } from \"react\";\nimport { useDebounce } from '../../hooks/useDebounce'\nimport JSONCrush from \"jsoncrush\"\n\nexport const AppContext = React.createContext(null)\n\nconst istate = initstate()\n\nexport const AppProvider = ({ children }) => {\n\n \n\n  const [state, dispatch] = React.useReducer(reducer, istate)\n\n  const debouncedstate = useDebounce(state, 1000)\n\n  // useEffect(() => {\n  // }, []);\n\n\n  useEffect(() => {\n    window.localStorage.setItem( \"eoi_state\", JSON.stringify(getsavedstate(debouncedstate)) );\n  }, [debouncedstate]);\n\n  return (\n    <AppContext.Provider value={[ state, dispatch ]}>\n    \t{ children }\n    </AppContext.Provider>\n  )\n}","/*\n * Copyright (C) 2014 United States Government as represented by the Administrator of the\n * National Aeronautics and Space Administration. All Rights Reserved.\n */\n/**\n * @exports SurfaceShape\n * @version $Id: SurfaceShape.js 3191 2015-06-15 19:35:57Z tgaskins $\n */\nimport WorldWind from 'webworldwind-esa';\n\nconst {\n    AbstractError,\n    Angle,\n    Location,\n    Logger,\n    NotYetImplementedError,\n    PickedObject,\n    PolygonSplitter,\n    Renderable,\n    Sector,\n    ShapeAttributes,\n    Vec3,\n    MemoryCache,\n    BoundingBox,\n    // SurfaceShape,\n} = WorldWind;\n\n// let SurfaceShape = WorldWind.SurfaceShape;\n\n\n/**\n * Constructs a surface shape with an optionally specified bundle of default attributes.\n * @alias SurfaceShape\n * @constructor\n * @augments Renderable\n * @abstract\n * @classdesc Represents a surface shape. This is an abstract base class and is meant to be instantiated\n * only by subclasses.\n * <p>\n * Surface shapes other than SurfacePolyline {@link SurfacePolyline} have an interior and an outline and utilize\n * the corresponding attributes in their associated ShapeAttributes {@link ShapeAttributes}. They do not\n * utilize image-related attributes.\n *\n * @param {ShapeAttributes} attributes The attributes to apply to this shape. May be null, in which case\n * attributes must be set directly before the shape is drawn.\n */\nconst SurfaceShape = function (attributes) {\n\n    Renderable.call(this);\n\n    // All these are documented with their property accessors below.\n    this._displayName = \"Surface Shape\";\n    this._attributes = attributes ? attributes : new ShapeAttributes(null);\n    this._highlightAttributes = attributes.highlightAttributes ? attributes.highlightAttributes : null;\n    this._highlighted = false;\n    this._enabled = true;\n    this._pathType = WorldWind.GREAT_CIRCLE;\n    this._maximumNumEdgeIntervals = SurfaceShape.DEFAULT_NUM_EDGE_INTERVALS;\n    this._polarThrottle = SurfaceShape.DEFAULT_POLAR_THROTTLE;\n    this._sector = null;\n\n    /**\n     * Indicates the object to return as the owner of this shape when picked.\n     * @type {Object}\n     * @default null\n     */\n    this.pickDelegate = null;\n\n    /*\n     * The bounding sectors for this tile, which may be needed for crossing the dateline.\n     * @type {Sector[]}\n     * @protected\n     */\n    this._sectors = [];\n\n    /*\n     * The raw collection of locations defining this shape and are explicitly specified by the client of this class.\n     * @type {Location[]}\n     * @protected\n     */\n    this._locations = null;\n\n    /*\n     * Boundaries that are either the user specified locations or locations that are algorithmically generated.\n     * @type {Location[]}\n     * @protected\n     */\n    this._boundaries = null;\n\n    /*\n     * The collection of locations that describes a closed curve which can be filled.\n     * @type {Location[][]}\n     * @protected\n     */\n    this._interiorGeometry = null;\n\n    /*\n     * The collection of locations that describe the outline of the shape.\n     * @type {Location[][]}\n     * @protected\n     */\n    this._outlineGeometry = null;\n\n    /*\n     * Internal use only.\n     * Inhibit the filling of the interior. This is to be used ONLY by polylines.\n     * @type {Boolean}\n     * @protected\n     */\n    this._isInteriorInhibited = false;\n\n    /*\n     * Indicates whether this object's state key is invalid. Subclasses must set this value to true when their\n     * attributes change. The state key will be automatically computed the next time it's requested. This flag\n     * will be set to false when that occurs.\n     * @type {Boolean}\n     * @protected\n     */\n    this.stateKeyInvalid = true;\n\n    // Internal use only. Intentionally not documented.\n    this._attributesStateKey = null;\n\n    // Internal use only. Intentionally not documented.\n    this.boundariesArePrepared = false;\n\n    // Internal use only. Intentionally not documented.\n    this.layer = null;\n\n    // Internal use only. Intentionally not documented.\n    this.pickColor = null;\n\n    //the split contours returned from polygon splitter\n    this.contours = [];\n    this.containsPole = false;\n    this.crossesAntiMeridian = false;\n\n    /**\n     * Indicates how long to use terrain-specific shape data before regenerating it, in milliseconds. A value\n     * of zero specifies that shape data should be regenerated every frame. While this causes the shape to\n     * adapt more frequently to the terrain, it decreases performance.\n     * @type {Number}\n     * @default 2000 (milliseconds)\n     */\n    this.expirationInterval = 2000;\n\n    // Internal use only. Intentionally not documented.\n    // Holds the per-globe data\n    this.shapeDataCache = new MemoryCache(3, 2);\n\n    // Internal use only. Intentionally not documented.\n    // The shape-data-cache data that is for the currently active globe.\n    this.currentData = null;\n};\n\nSurfaceShape.prototype = Object.create(Renderable.prototype);\n\nObject.defineProperties(SurfaceShape.prototype, {\n    stateKey: {\n        /**\n         * A hash key of the total visible external state of the surface shape.\n         * @memberof SurfaceShape.prototype\n         * @type {String}\n         */\n        get: function () {\n            // If we don't have a state key for the shape attributes, consider this state key to be invalid.\n            if (!this._attributesStateKey) {\n                // Update the state key for the appropriate attributes for future\n                if (this._highlighted) {\n                    if (!!this._highlightAttributes) {\n                        this._attributesStateKey = this._highlightAttributes.stateKey;\n                    }\n                } else {\n                    if (!!this._attributes) {\n                        this._attributesStateKey = this._attributes.stateKey;\n                    }\n                }\n\n                // If we now actually have a state key for the attributes, it was previously invalid.\n                if (!!this._attributesStateKey) {\n                    this.stateKeyInvalid = true;\n                }\n            } else {\n                // Detect a change in the appropriate attributes.\n                var currentAttributesStateKey = null;\n\n                if (this._highlighted) {\n                    // If there are highlight attributes associated with this shape, ...\n                    if (!!this._highlightAttributes) {\n                        currentAttributesStateKey = this._highlightAttributes.stateKey;\n                    }\n                } else {\n                    if (!!this._attributes) {\n                        currentAttributesStateKey = this._attributes.stateKey;\n                    }\n                }\n\n                // If the attributes state key changed, ...\n                if (currentAttributesStateKey != this._attributesStateKey) {\n                    this._attributesStateKey = currentAttributesStateKey;\n                    this.stateKeyInvalid = true;\n                }\n            }\n\n            if (this.stateKeyInvalid) {\n                this._stateKey = this.computeStateKey();\n            }\n\n            return this._stateKey;\n        }\n    },\n\n    /**\n     * The shape's display name and label text.\n     * @memberof SurfaceShape.prototype\n     * @type {String}\n     * @default Surface Shape\n     */\n    displayName: {\n        get: function () {\n            return this._displayName;\n        },\n        set: function (value) {\n            this.stateKeyInvalid = true;\n            this._displayName = value;\n        }\n    },\n\n    /**\n     * The shape's attributes. If null and this shape is not highlighted, this shape is not drawn.\n     * @memberof SurfaceShape.prototype\n     * @type {ShapeAttributes}\n     * @default see [ShapeAttributes]{@link ShapeAttributes}\n     */\n    attributes: {\n        get: function () {\n            return this._attributes;\n        },\n        set: function (value) {\n            this.stateKeyInvalid = true;\n            this._attributes = value;\n            this._attributesStateKey = value.stateKey;\n        }\n    },\n\n    /**\n     * The attributes used when this shape's highlighted flag is true. If null and the\n     * highlighted flag is true, this shape's normal attributes are used. If they, too, are null, this\n     * shape is not drawn.\n     * @memberof SurfaceShape.prototype\n     * @type {ShapeAttributes}\n     * @default null\n     */\n    highlightAttributes: {\n        get: function () {\n            return this._highlightAttributes;\n        },\n        set: function (value) {\n            this.stateKeyInvalid = true;\n            this._highlightAttributes = value;\n        }\n    },\n\n    /**\n     * Indicates whether this shape displays with its highlight attributes rather than its normal attributes.\n     * @memberof SurfaceShape.prototype\n     * @type {Boolean}\n     * @default false\n     */\n    highlighted: {\n        get: function () {\n            return this._highlighted;\n        },\n        set: function (value) {\n            this.stateKeyInvalid = true;\n            this._highlighted = value;\n        }\n    },\n\n    /**\n     * Indicates whether this shape is drawn.\n     * @memberof SurfaceShape.prototype\n     * @type {Boolean}\n     * @default true\n     */\n    enabled: {\n        get: function () {\n            return this._enabled;\n        },\n        set: function (value) {\n            this.stateKeyInvalid = true;\n            this._enabled = value;\n        }\n    },\n\n    /**\n     * The path type to used to interpolate between locations on this shape. Recognized values are:\n     * <ul>\n     * <li>WorldWind.GREAT_CIRCLE</li>\n     * <li>WorldWind.RHUMB_LINE</li>\n     * <li>WorldWind.LINEAR</li>\n     * </ul>\n     * @memberof SurfaceShape.prototype\n     * @type {String}\n     * @default WorldWind.GREAT_CIRCLE\n     */\n    pathType: {\n        get: function () {\n            return this._pathType;\n        },\n        set: function (value) {\n            this.stateKeyInvalid = true;\n            this.resetBoundaries();\n            this._pathType = value;\n        }\n    },\n\n    /**\n     * The maximum number of intervals an edge will be broken into. This is the number of intervals that an\n     * edge that spans to opposite side of the globe would be broken into. This is strictly an upper bound\n     * and the number of edge intervals may be lower if this resolution is not needed.\n     * @memberof SurfaceShape.prototype\n     * @type {Number}\n     * @default SurfaceShape.DEFAULT_NUM_EDGE_INTERVALS\n     */\n    maximumNumEdgeIntervals: {\n        get: function () {\n            return this._maximumNumEdgeIntervals;\n        },\n        set: function (value) {\n            this.stateKeyInvalid = true;\n            this.resetBoundaries();\n            this._maximumNumEdgeIntervals = value;\n        }\n    },\n\n    /**\n     * A dimensionless number that controls throttling of edge traversal near the poles where edges need to be\n     * sampled more closely together.\n     * A value of 0 indicates that no polar throttling is to be performed.\n     * @memberof SurfaceShape.prototype\n     * @type {Number}\n     * @default SurfaceShape.DEFAULT_POLAR_THROTTLE\n     */\n    polarThrottle: {\n        get: function () {\n            return this._polarThrottle;\n        },\n        set: function (value) {\n            this.stateKeyInvalid = true;\n            this.resetBoundaries();\n            this._polarThrottle = value;\n        }\n    },\n\n    /**\n     * Defines the extent of the shape in latitude and longitude.\n     * This sector only has valid data once the boundary is defined. Prior to this, it is null.\n     * @memberof SurfaceShape.prototype\n     * @type {Sector}\n     */\n    sector: {\n        get: function () {\n            return this._sector;\n        }\n    }\n});\n\nSurfaceShape.staticStateKey = function (shape) {\n    shape.stateKeyInvalid = false;\n\n    if (shape.highlighted) {\n        if (!shape._highlightAttributes) {\n            if (!shape._attributes) {\n                shape._attributesStateKey = null;\n            } else {\n                shape._attributesStateKey = shape._attributes.stateKey;\n            }\n        } else {\n            shape._attributesStateKey = shape._highlightAttributes.stateKey;\n        }\n    } else {\n        if (!shape._attributes) {\n            shape._attributesStateKey = null;\n        } else {\n            shape._attributesStateKey = shape._attributes.stateKey;\n        }\n    }\n\n    return \"dn \" + shape.displayName +\n        \" at \" + (!shape._attributesStateKey ? \"null\" : shape._attributesStateKey) +\n        \" hi \" + shape.highlighted +\n        \" en \" + shape.enabled +\n        \" pt \" + shape.pathType +\n        \" ne \" + shape.maximumNumEdgeIntervals +\n        \" po \" + shape.polarThrottle +\n        \" se \" + \"[\" +\n        shape.sector.minLatitude + \",\" +\n        shape.sector.maxLatitude + \",\" +\n        shape.sector.minLongitude + \",\" +\n        shape.sector.maxLongitude +\n        \"]\";\n};\n\nSurfaceShape.prototype.computeStateKey = function () {\n    return SurfaceShape.staticStateKey(this);\n};\n\n/**\n * Returns this shape's area in square meters.\n * @param {Globe} globe The globe on which to compute the area.\n * @param {Boolean} terrainConformant If true, the returned area is that of the terrain,\n * including its hillsides and other undulations. If false, the returned area is the shape's\n * projected area.\n */\nSurfaceShape.prototype.area = function (globe, terrainConformant) {\n    throw new NotYetImplementedError(\n        Logger.logMessage(Logger.LEVEL_SEVERE, \"SurfaceShape\", \"area\", \"notYetImplemented\"));\n};\n\n// Internal function. Intentionally not documented.\nSurfaceShape.prototype.computeBoundaries = function (globe) {\n    // This method is in the base class and should be overridden if the boundaries are generated.\n    // It should be called only if the geometry has been provided by the user and does not need to be generated.\n    // assert(!this._boundaries);\n\n    throw new AbstractError(\n        Logger.logMessage(Logger.LEVEL_SEVERE, \"SurfaceShape\", \"computeBoundaries\", \"abstractInvocation\"));\n};\n\n\n// Internal. Intentionally not documented.\nSurfaceShape.prototype.intersectsFrustum = function (dc) {\n\n    if (this.currentData && this.currentData.extent) {\n        if (dc.pickingMode) {\n            return this.currentData.extent.intersectsFrustum(dc.pickFrustum);\n        } else {\n            return this.currentData.extent.intersectsFrustum(dc.frustumInModelCoordinates);\n        }\n    } else {\n        return true;\n    }\n};\n\n/**\n * Indicates whether a specified shape data object is current. Subclasses may override this method to add\n * criteria indicating whether the shape data object is current, but must also call this method on this base\n * class. Applications do not call this method.\n * @param {DrawContext} dc The current draw context.\n * @param {Object} shapeData The object to validate.\n * @returns {Boolean} true if the object is current, otherwise false.\n * @protected\n */\nSurfaceShape.prototype.isShapeDataCurrent = function (dc, shapeData) {\n    return shapeData.verticalExaggeration === dc.verticalExaggeration\n        && shapeData.expiryTime > Date.now();\n};\n\n/**\n * Creates a new shape data object for the current globe state. Subclasses may override this method to\n * modify the shape data object that this method creates, but must also call this method on this base class.\n * Applications do not call this method.\n * @returns {Object} The shape data object.\n * @protected\n */\nSurfaceShape.prototype.createShapeDataObject = function () {\n    return {};\n};\n\n// Intentionally not documented.\nSurfaceShape.prototype.resetExpiration = function (shapeData) {\n    // The random addition in the line below prevents all shapes from regenerating during the same frame.\n    shapeData.expiryTime = Date.now() + this.expirationInterval + 1e3 * Math.random();\n};\n\n// Internal. Intentionally not documented.\nSurfaceShape.prototype.establishCurrentData = function (dc) {\n    this.currentData = this.shapeDataCache.entryForKey(dc.globeStateKey);\n    if (!this.currentData) {\n        this.currentData = this.createShapeDataObject();\n        this.resetExpiration(this.currentData);\n        this.shapeDataCache.putEntry(dc.globeStateKey, this.currentData, 1);\n    }\n\n    this.currentData.isExpired = !this.isShapeDataCurrent(dc, this.currentData);\n};\n\n // Internal function. Intentionally not documented.\n SurfaceShape.prototype.render = function (dc) {\n    if (!this.enabled) {\n        return;\n    }\n\n    this.layer = dc.currentLayer;\n\n    this.prepareBoundaries(dc);\n\n    this.establishCurrentData(dc);\n\n    if (this.currentData.isExpired || !this.currentData.extent) {\n        this.computeExtent(dc);\n        this.currentData.verticalExaggeration = dc.verticalExaggeration;\n        this.resetExpiration(this.currentData);\n    }\n\n    // Use the last computed extent to see if this shape is out of view.\n    if (this.currentData && this.currentData.extent && !this.intersectsFrustum(dc)) {\n        return;\n    }\n\n    dc.surfaceShapeTileBuilder.insertSurfaceShape(this);\n};\n\n\n// Internal function. Intentionally not documented.\nSurfaceShape.prototype.interpolateLocations = function (locations) {\n    var first = locations[0],\n        next = first,\n        prev,\n        isNextFirst = true,\n        isPrevFirst = true,// Don't care initially, this will get set in first iteration.\n        countFirst = 0,\n        isInterpolated = true,\n        idx, len;\n\n    this._locations = [first];\n\n    for (idx = 1, len = locations.length; idx < len; idx += 1) {\n        // Advance to next location, retaining previous location.\n        prev = next;\n        isPrevFirst = isNextFirst;\n\n        next = locations[idx];\n\n        // Detect whether the next location and the first location are the same.\n        isNextFirst = next.latitude == first.latitude && next.longitude == first.longitude;\n\n        // Inhibit interpolation if either endpoint if the first location,\n        // except for the first segement which will be the actual first location or that location\n        // as the polygon closes the first time.\n        // All subsequent encounters of the first location are used to connected secondary domains with the\n        // primary domain in multiply-connected geometry (an outer ring with multiple inner rings).\n        isInterpolated = true;\n        if (isNextFirst || isPrevFirst) {\n            countFirst += 1;\n\n            if (countFirst > 2) {\n                isInterpolated = false;\n            }\n        }\n\n        if (isInterpolated) {\n            this.interpolateEdge(prev, next, this._locations);\n        }\n\n        this._locations.push(next);\n\n        prev = next;\n    }\n\n    // Force the closing of the border.\n    if (!this._isInteriorInhibited) {\n        // Avoid duplication if the first endpoint was already emitted.\n        if (prev.latitude != first.latitude || prev.longitude != first.longitude) {\n            this.interpolateEdge(prev, first, this._locations);\n            this._locations.push(first);\n        }\n    }\n};\n\n// Internal function. Intentionally not documented.\nSurfaceShape.prototype.interpolateEdge = function (start, end, locations) {\n    var distanceRadians = Location.greatCircleDistance(start, end),\n        steps = Math.round(this._maximumNumEdgeIntervals * distanceRadians / Math.PI),\n        dt,\n        location;\n\n    if (steps > 0) {\n        dt = 1 / steps;\n        location = start;\n\n        for (var t = this.throttledStep(dt, location); t < 1; t += this.throttledStep(dt, location)) {\n            location = new Location(0, 0);\n            Location.interpolateAlongPath(this._pathType, t, start, end, location);\n\n            //florin: ensure correct longitude sign and decimal error for anti-meridian\n            if (start.longitude === 180 && end.longitude === 180) {\n                location.longitude = 180;\n            }\n            else if (start.longitude === -180 && end.longitude === -180) {\n                location.longitude = -180;\n            }\n\n            locations.push(location);\n        }\n    }\n};\n\n// Internal function. Intentionally not documented.\n// Return a throttled step size when near the poles.\nSurfaceShape.prototype.throttledStep = function (dt, location) {\n    var cosLat = Math.cos(location.latitude * Angle.DEGREES_TO_RADIANS);\n    cosLat *= cosLat; // Square cos to emphasize poles and de-emphasize equator.\n\n    // Remap polarThrotle:\n    //  0 .. INF => 0 .. 1\n    // This acts as a weight between no throttle and fill throttle.\n    var weight = this._polarThrottle / (1 + this._polarThrottle);\n\n    return dt * ((1 - weight) + weight * cosLat);\n};\n\n// Internal function. Intentionally not documented.\nSurfaceShape.prototype.prepareBoundaries = function (dc) {\n    if (this.boundariesArePrepared) {\n        return;\n    }\n\n    if (!this._boundaries) {\n        this.computeBoundaries(dc);\n    }\n\n    var newBoundaries = this.formatBoundaries();\n    this.normalizeAngles(newBoundaries);\n    newBoundaries = this.interpolateBoundaries(newBoundaries);\n\n    var contoursInfo = [];\n    var doesCross = PolygonSplitter.splitContours(newBoundaries, contoursInfo);\n    this.contours = contoursInfo;\n    this.crossesAntiMeridian = doesCross;\n\n    this.prepareGeometry(dc, contoursInfo);\n\n    this.prepareSectors();\n\n    this.boundariesArePrepared = true;\n};\n\n// Internal. Resets boundaries for SurfaceShape recomputing.\nSurfaceShape.prototype.resetBoundaries = function () {\n    this.boundariesArePrepared = false;\n    this.shapeDataCache.clear(false);\n};\n\n//Internal. Formats the boundaries of a surface shape to be a multi dimensional array\nSurfaceShape.prototype.formatBoundaries = function () {\n    var boundaries = [];\n    if (!this._boundaries.length) {\n        return boundaries;\n    }\n    if (this._boundaries[0].latitude != null) {\n        //not multi dim array\n        boundaries.push(this._boundaries);\n    }\n    else {\n        boundaries = this._boundaries;\n    }\n    return boundaries;\n};\n\n// Internal use only. Intentionally not documented.\nSurfaceShape.prototype.normalizeAngles = function (boundaries) {\n    for (var i = 0, len = boundaries.length; i < len; i++) {\n        var polygon = boundaries[i];\n        for (var j = 0, lenP = polygon.length; j < lenP; j++) {\n            var point = polygon[j];\n            if (point.longitude < -180 || point.longitude > 180) {\n                point.longitude = Angle.normalizedDegreesLongitude(point.longitude);\n            }\n            if (point.latitude < -90 || point.latitude > 90) {\n                point.latitude = Angle.normalizedDegreesLatitude(point.latitude);\n            }\n        }\n    }\n};\n\n// Internal use only. Intentionally not documented.\nSurfaceShape.prototype.interpolateBoundaries = function (boundaries) {\n    var newBoundaries = [];\n    for (var i = 0, len = boundaries.length; i < len; i++) {\n        var contour = boundaries[i];\n        this.interpolateLocations(contour);\n        newBoundaries.push(this._locations.slice());\n        this._locations.length = 0;\n    }\n    return newBoundaries;\n};\n\n/**\n * Computes the bounding sectors for the shape. There will be more than one if the shape crosses the date line,\n * but does not enclose a pole.\n *\n * @param {DrawContext} dc The drawing context containing a globe.\n *\n * @return {Sector[]}  Bounding sectors for the shape.\n */\nSurfaceShape.prototype.computeSectors = function (dc) {\n    // Return a previously computed value if it already exists.\n    if (this._sectors && this._sectors.length > 0) {\n        return this._sectors;\n    }\n\n    this.prepareBoundaries(dc);\n\n    return this._sectors;\n};\n\n\n/**\n * Computes the extent for the shape based on its sectors.\n *\n * @param {DrawContext} dc The drawing context containing a globe.\n *\n * @return {BoundingBox} The extent for the shape.\n */\nSurfaceShape.prototype.computeExtent = function (dc) {\n\n    if (!this._sectors || this._sectors.length === 0) {\n        return null;\n    }\n\n    if (!this.currentData) {\n        return null;\n    }\n\n    if (!this.currentData.extent) {\n        this.currentData.extent = new BoundingBox();\n    }\n\n\n    var boxPoints;\n    // This surface shape does not cross the international dateline, and therefore has a single bounding sector.\n    // Return the box which contains that sector.\n    if (this._sectors.length === 1) {\n        boxPoints = this._sectors[0].computeBoundingPoints(dc.globe, dc.verticalExaggeration);\n        this.currentData.extent.setToVec3Points(boxPoints);\n    }\n    // This surface crosses the international dateline, and its bounding sectors are split along the dateline.\n    // Return a box which contains the corners of the boxes bounding each sector.\n    else {\n        var boxCorners = [];\n\n        for (var i = 0; i < this._sectors.length; i++) {\n            boxPoints = this._sectors[i].computeBoundingPoints(dc.globe, dc.verticalExaggeration);\n            var box = new BoundingBox();\n            box.setToVec3Points(boxPoints);\n            var corners = box.getCorners();\n            for (var j = 0; j < corners.length; j++) {\n                boxCorners.push(corners[j]);\n            }\n        }\n        this.currentData.extent.setToVec3Points(boxCorners);\n    }\n\n    return this.currentData.extent;\n\n};\n\n /**\n * Computes a new set of locations translated from a specified location to a new location for a shape.\n *\n * @param {Globe} globe The globe on which to compute a new set of locations.\n * @param {Location} oldLocation The original reference location.\n * @param {Location} newLocation The new reference location.\n * @param {Location[]} locations The locations to translate.\n *\n * @return {Location[]} The translated locations.\n */\nSurfaceShape.prototype.computeShiftedLocations = function(globe, oldLocation, newLocation, locations) {\n    var newLocations = [];\n    var result = new Vec3(0, 0, 0);\n    var newPos = new WorldWind.Position(0, 0, 0);\n\n    var oldPoint = globe.computePointFromLocation(oldLocation.latitude, oldLocation.longitude,\n        new Vec3(0, 0, 0));\n    var newPoint = globe.computePointFromLocation(newLocation.latitude, newLocation.longitude,\n        new Vec3(0, 0, 0));\n\n    if(globe.is2D()){\n        var delta = newPoint.subtract(oldPoint);\n\n        for (var i = 0, len = locations.length; i < len; i++) {\n            globe.computePointFromLocation(locations[i].latitude, locations[i].longitude, result);\n            result.add(delta);\n            globe.computePositionFromPoint(result[0], result[1], result[2], newPos);\n            newLocations.push(new Location(newPos.latitude, newPos.longitude));\n        }\n    } else {\n        // Euler method\n\n        // var xVecOld = new Vec3(0, oldPoint[1], oldPoint[2]);\n        // var yVecOld =  new Vec3(oldPoint[0], 0, oldPoint[2]);\n        // var zVecOld =  new Vec3(oldPoint[0], oldPoint[1], 0);\n        // var xVecNew = new Vec3(0, newPoint[1], newPoint[2]);\n        // var yVecNew =  new Vec3(newPoint[0], 0, newPoint[2]);\n        // var zVecNew =  new Vec3(newPoint[0], newPoint[1], 0);\n        //\n        //\n        // var alpha = Math.acos(xVecOld.dot(xVecNew) / (xVecOld.magnitude() * xVecNew.magnitude()));\n        // var beta = Math.acos(yVecOld.dot(yVecNew) / (yVecOld.magnitude() * yVecNew.magnitude()));\n        // var gama = Math.acos(zVecOld.dot(zVecNew) / (zVecOld.magnitude() * zVecNew.magnitude()));\n        //\n        // var alpha = Math.atan2()\n        //\n        // var crossX = xVecOld.cross(xVecNew);\n        // var crossY = yVecOld.cross(yVecNew);\n        // var crossZ = zVecOld.cross(zVecNew);\n        //\n        // if(new Vec3(1, 0, 0).dot(crossX) < 0){\n        //      alpha = -alpha;\n        // }\n        //\n        // if(new Vec3(0, 1, 0).dot(crossY) < 0){\n        //     beta = -beta;\n        // }\n        //\n        // if(new Vec3(0, 0, 1).dot(crossZ) < 0){\n        //     gama = -gama;\n        // }\n        //\n        // for (var i = 0, len = locations.length; i < len; i++) {\n        //     globe.computePointFromLocation(locations[i].latitude, locations[i].longitude, result);\n        //     var newX = result[0] * Math.cos(beta) * Math.cos(gama) +\n        //                result[1] * (Math.cos(beta) * (-Math.sin(gama))) +\n        //                result[2] * Math.sin(beta);\n        //\n        //     var newY = result[0] * ((-Math.sin(alpha)) * (-Math.sin(beta)) * (Math.cos(gama)) + Math.cos(alpha) * Math.sin(gama)) +\n        //                result[1] * ( (-Math.sin(alpha)) * (-Math.sin(beta)) * (-Math.sin(gama)) + Math.cos(alpha) * Math.cos(gama) ) +\n        //                result[2] * Math.sin(alpha) * Math.cos(beta);\n        //\n        //     var newZ = result[0] * (Math.cos(alpha) * (-Math.sin(beta)) * Math.cos(gama) + Math.sin(alpha) * Math.sin(gama)) +\n        //                result[1] * (Math.cos(alpha) * (-Math.sin(beta)) * (-Math.sin(gama)) + Math.sin(alpha) * Math.cos(gama)) +\n        //                result[2] * Math.cos(alpha) * Math.cos(beta);\n        //\n        //     globe.computePositionFromPoint(newX, newY, newZ, newPos);\n        //     newLocations.push(new Location(newPos.latitude, newPos.longitude));\n        // }\n\n        var delta_lat = newLocation.latitude - oldLocation.latitude;\n        var delta_long = newLocation.longitude - oldLocation.longitude;\n        var max = -90;\n        var min = 90;\n\n        for (var i = 0, len = locations.length; i < len; i++) {\n            var new_lat = locations[i].latitude + delta_lat;\n            var new_long = locations[i].longitude + delta_long;\n\n\n            if (new_lat > 90) {\n                new_lat = 180 - new_lat;\n                new_long += 180;\n            } else if (new_lat < -90) {\n                new_lat = -180 - new_lat;\n                new_long += 180;\n            }\n\n            if (new_long < -180) {\n                new_long += 360;\n            } else if (new_long > 180) {\n                new_long -= 360;\n            }\n\n\n            if (new_lat > max) {\n                max = new_lat;\n            }\n\n            if (new_lat < min) {\n                min = new_lat;\n            }\n\n            newLocations.push(new Location(new_lat, new_long));\n        }\n\n        if (max > 90) {\n            var delta = max - 90;\n            for (var i = 0, len = newLocations.length; i < len; i++) {\n                newLocations[i].latitude -= delta;\n            }\n        }\n    }\n\n    return newLocations;\n};\n\n\n\n// Internal use only. Intentionally not documented.\nSurfaceShape.prototype.prepareSectors = function () {\n    this.determineSectors();\n    if (this.crossesAntiMeridian) {\n        this.sectorsOverAntiMeridian();\n    }\n    else {\n        this.sectorsNotOverAntiMeridian();\n    }\n};\n\n// Internal use only. Intentionally not documented.\nSurfaceShape.prototype.determineSectors = function () {\n    for (var i = 0, len = this.contours.length; i < len; i++) {\n        var contour = this.contours[i];\n        var polygons = contour.polygons;\n        contour.sectors = [];\n        for (var j = 0, lenP = polygons.length; j < lenP; j++) {\n            var polygon = polygons[j];\n            var sector = new Sector(0, 0, 0, 0);\n            sector.setToBoundingSector(polygon);\n            if (this._pathType === WorldWind.GREAT_CIRCLE) {\n                var extremes = Location.greatCircleArcExtremeLocations(polygon);\n                var minLatitude = Math.min(sector.minLatitude, extremes[0].latitude);\n                var maxLatitude = Math.max(sector.maxLatitude, extremes[1].latitude);\n                sector.minLatitude = minLatitude;\n                sector.maxLatitude = maxLatitude;\n            }\n            contour.sectors.push(sector);\n        }\n    }\n};\n\n// Internal use only. Intentionally not documented.\nSurfaceShape.prototype.sectorsOverAntiMeridian = function () {\n    var eastSector = new Sector(90, -90, 180, -180); //positive\n    var westSector = new Sector(90, -90, 180, -180); //negative\n    for (var i = 0, len = this.contours.length; i < len; i++) {\n        var sectors = this.contours[i].sectors;\n        for (var j = 0, lenS = sectors.length; j < lenS; j++) {\n            var sector = sectors[j];\n            if (sector.minLongitude < 0 && sector.maxLongitude > 0) {\n                westSector.union(sector);\n                eastSector.union(sector);\n            }\n            else if (sector.minLongitude < 0) {\n                westSector.union(sector);\n            }\n            else {\n                eastSector.union(sector);\n            }\n        }\n    }\n    var minLatitude = Math.min(eastSector.minLatitude, westSector.minLatitude);\n    var maxLatitude = Math.max(eastSector.maxLatitude, eastSector.maxLatitude);\n    this._sector = new Sector(minLatitude, maxLatitude, -180, 180);\n    this._sectors = [eastSector, westSector];\n};\n\n// Internal use only. Intentionally not documented.\nSurfaceShape.prototype.sectorsNotOverAntiMeridian = function () {\n    this._sector = new Sector(90, -90, 180, -180);\n    for (var i = 0, len = this.contours.length; i < len; i++) {\n        var sectors = this.contours[i].sectors;\n        for (var j = 0, lenS = sectors.length; j < lenS; j++) {\n            this._sector.union(sectors[j]);\n        }\n    }\n    this._sectors = [this._sector];\n};\n\n// Internal use only. Intentionally not documented.\nSurfaceShape.prototype.prepareGeometry = function (dc, contours) {\n    var interiorPolygons = [];\n    var outlinePolygons = [];\n\n    for (var i = 0, len = contours.length; i < len; i++) {\n        var contour = contours[i];\n        var poleIndex = contour.poleIndex;\n\n        for (var j = 0, lenC = contour.polygons.length; j < lenC; j++) {\n            var polygon = contour.polygons[j];\n            var iMap = contour.iMap[j];\n            interiorPolygons.push(polygon);\n\n            if (contour.pole !== Location.poles.NONE && lenC > 1) {\n                //split with pole\n                if (j === poleIndex) {\n                    this.outlineForPole(polygon, iMap, outlinePolygons);\n                }\n                else {\n                    this.outlineForSplit(polygon, iMap, outlinePolygons);\n                }\n            }\n            else if (contour.pole !== Location.poles.NONE && lenC === 1) {\n                //only pole\n                this.outlineForPole(polygon, iMap, outlinePolygons);\n            }\n            else if (contour.pole === Location.poles.NONE && lenC > 1) {\n                //only split\n                this.outlineForSplit(polygon, iMap, outlinePolygons);\n            }\n            else if (contour.pole === Location.poles.NONE && lenC === 1) {\n                //no pole, no split\n                outlinePolygons.push(polygon);\n            }\n        }\n    }\n\n    this._interiorGeometry = interiorPolygons;\n    this._outlineGeometry = outlinePolygons;\n};\n\n// Internal use only. Intentionally not documented.\nSurfaceShape.prototype.outlineForPole = function (polygon, iMap, outlinePolygons) {\n    this.containsPole = true;\n    var outlinePolygon = [];\n    var pCount = 0;\n    for (var k = 0, lenP = polygon.length; k < lenP; k++) {\n        var point = polygon[k];\n        var intersection = iMap.get(k);\n        if (intersection && intersection.forPole) {\n            pCount++;\n            if (pCount % 2 === 1) {\n                outlinePolygon.push(point);\n                outlinePolygons.push(outlinePolygon);\n                outlinePolygon = [];\n            }\n        }\n        if (pCount % 2 === 0) {\n            outlinePolygon.push(point);\n        }\n    }\n    if (outlinePolygon.length) {\n        outlinePolygons.push(outlinePolygon);\n    }\n};\n\n// Internal use only. Intentionally not documented.\nSurfaceShape.prototype.outlineForSplit = function (polygon, iMap, outlinePolygons) {\n    var outlinePolygon = [];\n    var iCount = 0;\n    for (var k = 0, lenP = polygon.length; k < lenP; k++) {\n        var point = polygon[k];\n        var intersection = iMap.get(k);\n        if (intersection && !intersection.forPole) {\n            iCount++;\n            if (iCount % 2 === 0) {\n                outlinePolygon.push(point);\n                outlinePolygons.push(outlinePolygon);\n                outlinePolygon = [];\n            }\n        }\n        if (iCount % 2 === 1) {\n            outlinePolygon.push(point);\n        }\n    }\n};\n\n// Internal use only. Intentionally not documented.\nSurfaceShape.prototype.resetPickColor = function () {\n    this.pickColor = null;\n};\n\n/**\n * Internal use only.\n * Render the shape onto the texture map of the tile.\n * @param {DrawContext} dc The draw context to render onto.\n * @param {CanvasRenderingContext2D} ctx2D The rendering context for SVG.\n * @param {Number} xScale The multiplicative scale factor in the horizontal direction.\n * @param {Number} yScale The multiplicative scale factor in the vertical direction.\n * @param {Number} dx The additive offset in the horizontal direction.\n * @param {Number} dy The additive offset in the vertical direction.\n */\nSurfaceShape.prototype.renderToTexture = function (dc, ctx2D, xScale, yScale, dx, dy) {\n    var attributes = (this._highlighted ? (this._highlightAttributes || this._attributes) : this._attributes);\n    var drawInterior = (!this._isInteriorInhibited && attributes.drawInterior);\n    var drawOutline = (attributes.drawOutline && attributes.outlineWidth > 0);\n\n    if (!drawInterior && !drawOutline) {\n        return;\n    }\n\n    if (dc.pickingMode && !this.pickColor) {\n        this.pickColor = dc.uniquePickColor();\n    }\n\n    if (dc.pickingMode) {\n        var pickColor = this.pickColor.toHexString();\n    }\n\n    if (this.crossesAntiMeridian || this.containsPole) {\n        if (drawInterior) {\n            this.draw(this._interiorGeometry, ctx2D, xScale, yScale, dx, dy);\n            ctx2D.fillStyle = dc.pickingMode ? pickColor : attributes.interiorColor.toRGBAString();\n            ctx2D.fill();\n        }\n        if (drawOutline) {\n            this.draw(this._outlineGeometry, ctx2D, xScale, yScale, dx, dy);\n            ctx2D.lineWidth = 4 * attributes.outlineWidth;\n            ctx2D.strokeStyle = dc.pickingMode ? pickColor : attributes.outlineColor.toRGBAString();\n            ctx2D.stroke();\n        }\n    }\n    else {\n        this.draw(this._interiorGeometry, ctx2D, xScale, yScale, dx, dy);\n        if (drawInterior) {\n            ctx2D.fillStyle = dc.pickingMode ? pickColor : attributes.interiorColor.toRGBAString();\n            ctx2D.fill();\n        }\n        if (drawOutline) {\n            ctx2D.lineWidth = 4 * attributes.outlineWidth;\n            ctx2D.strokeStyle = dc.pickingMode ? pickColor : attributes.outlineColor.toRGBAString();\n            ctx2D.stroke();\n        }\n    }\n\n    if (dc.pickingMode) {\n        var po = new PickedObject(this.pickColor.clone(), this.pickDelegate ? this.pickDelegate : this,\n            null, this.layer, false);\n        dc.resolvePick(po);\n    }\n};\n\nSurfaceShape.prototype.draw = function (contours, ctx2D, xScale, yScale, dx, dy) {\n    ctx2D.beginPath();\n    for (var i = 0, len = contours.length; i < len; i++) {\n        var contour = contours[i];\n        var point = contour[0];\n        var x = point.longitude * xScale + dx;\n        var y = point.latitude * yScale + dy;\n        ctx2D.moveTo(x, y);\n        for (var j = 1, lenC = contour.length; j < lenC; j++) {\n            point = contour[j];\n            x = point.longitude * xScale + dx;\n            y = point.latitude * yScale + dy;\n            ctx2D.lineTo(x, y);\n        }\n    }\n};\n\n/**\n * Default value for the maximum number of edge intervals. This results in a maximum error of 480 m for an arc\n * that spans the entire globe.\n *\n * Other values for this parameter have the associated errors below:\n * Intervals        Maximum error (meters)\n *      2           1280253.5\n *      4           448124.5\n *      8           120837.6\n *      16          30628.3\n *      32          7677.9\n *      64          1920.6\n *      128         480.2\n *      256         120.0\n *      512         30.0\n *      1024        7.5\n *      2048        1.8\n * The errors cited above are upper bounds and the actual error may be lower.\n * @type {Number}\n */\nSurfaceShape.DEFAULT_NUM_EDGE_INTERVALS = 128;\n\n/**\n * The defualt value for the polar throttle, which slows edge traversal near the poles.\n * @type {Number}\n */\nSurfaceShape.DEFAULT_POLAR_THROTTLE = 10;\n\nWorldWind.SurfaceShape = SurfaceShape;\n\nexport default SurfaceShape;","import WorldWind from 'webworldwind-esa';\nimport SurfaceShape from './SurfaceShape';\n\nconst {\n    DrawContext,\n    // SurfaceShape,\n} = WorldWind;\n\n/**\n * Determines whether a specified picked object is under the pick point, and if it is adds it to this draw\n * context's list of picked objects. This method should be called by shapes during ordered rendering\n * after the shape is drawn. If this draw context is in single-picking mode, the specified pickable object\n * is added to the list of picked objects whether or not it is under the pick point.\n * @param pickableObject\n * @returns {null}\n */\nDrawContext.prototype.resolvePick = function (pickableObject) {\n    if (!(pickableObject.userObject instanceof SurfaceShape) && this.deepPicking && !this.regionPicking) {\n        var color = this.readPickColor(this.pickPoint);\n        if (!color) { // getPickColor returns null if the pick point selects the clear color\n            return null;\n        }\n\n        if (pickableObject.color.equals(color)) {\n            this.addPickedObject(pickableObject);\n        }\n    } else {\n        // Don't resolve. Just add the object to the pick list. It will be resolved later.\n        this.addPickedObject(pickableObject);\n    }\n};","export default class FramebufferTexture {\n\n    constructor(textureId, width, height) {\n        this.textureId = textureId || null;\n        this.imageWidth = width;\n        this.imageHeight = height;\n        this.size = width * height * 4;\n        this.originalImageWidth = width;\n        this.originalImageHeight = height;\n        this.creationTime = new Date();\n    }\n\n    bind(dc) {\n        dc.currentGlContext.bindTexture(dc.currentGlContext.TEXTURE_2D, this.textureId);\n        dc.frameStatistics.incrementTextureLoadCount(1);\n        return true;\n    }\n\n    dispose(gl) {\n        gl.deleteTexture(this.textureId);\n        delete this.textureId;\n    }\n\n}\n","import FramebufferTexture from './FramebufferTexture';\n\nexport default class Framebuffer {\n\n    constructor() {\n        this.framebufferId = null;\n        this.textureId = null;\n        this.width = 0;\n        this.height = 0;\n        this.texture = null;\n    }\n\n    attachTexture(gl, width, height) {\n        this.textureId = this.createTexture(gl, width, height);\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.textureId, 0);\n\n        /*const e = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n        if (e !== gl.FRAMEBUFFER_COMPLETE) {\n            console.log('bind Error creating framebuffer', e);\n            this.framebufferId = null;\n            this.textureId = null;\n            return false;\n        }*/\n\n        this.texture = new FramebufferTexture(this.textureId, width, height);\n\n        return true;\n    }\n\n    bind(gl, width, height) {\n        if(!this.framebufferId) {\n            this.framebufferId = gl.createFramebuffer();\n        }\n\n        this.width = width;\n        this.height = height;\n\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebufferId);\n        gl.viewport(0, 0, width, height);\n    }\n\n    bind_or(gl, width, height) {\n        /*if (!this.framebufferId) {\n            return false;\n        }*/\n\n        if(!this.framebufferId) {\n            this.framebufferId = gl.createFramebuffer();\n        }\n\n        this.width = width;\n        this.height = height;\n\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebufferId);\n        gl.viewport(0, 0, width, height);\n        this.textureId = this.createTexture(gl, width, height);\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.textureId, 0);\n\n        /*const e = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n        if (e !== gl.FRAMEBUFFER_COMPLETE) {\n            console.log('bind Error creating framebuffer', e);\n            this.framebufferId = null;\n            this.textureId = null;\n            return false;\n        }*/\n\n        this.texture = new FramebufferTexture(this.textureId, width, height);\n\n        return true;\n    }\n\n    clear(gl) {\n        gl.clearColor(0, 0, 0, 0);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n    }\n\n    unbind(gl, fbo) {\n        if (!fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n            gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n        }\n        else {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.framebufferId);\n            gl.viewport(0, 0, fbo.width, fbo.height);\n\n        }\n    }\n\n    createTexture(gl, width, height) {\n        if (width !== 256) {\n            console.log('width', width);\n        }\n        if (height !== 256) {\n            console.log('width', height);\n        }\n        const textureId = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, textureId);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n\n        /*var ext = (\n            gl.getExtension(\"EXT_texture_filter_anisotropic\") ||\n            gl.getExtension(\"WEBKIT_EXT_texture_filter_anisotropic\"));\n        if (ext) {\n            gl.texParameteri(gl.TEXTURE_2D, ext.TEXTURE_MAX_ANISOTROPY_EXT, 16);\n        }*/\n\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n\n        //gl.generateMipmap(gl.TEXTURE_2D);\n        //gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, textureId, 0);\n        return textureId;\n    }\n\n}","import Framebuffer from '../framebuffer/Framebuffer';\nimport WorldWind from 'webworldwind-esa';\n\nconst {\n    ArgumentError,\n    Logger,\n    SurfaceShapeTileBuilder,\n    SurfaceShape,\n    PickedObject\n} = WorldWind;\n\nconst fboCacheKey = 'SurfaceShapeFBO';\n\nSurfaceShapeTileBuilder.prototype.buildTiles = function (dc) {\n    if (!dc) {\n        throw new ArgumentError(\n            Logger.logMessage(Logger.LEVEL_SEVERE, 'SurfaceShapeTileBuilder', 'buildTiles', 'missingDc'));\n    }\n\n    if (!this.surfaceShapes || this.surfaceShapes.length < 1) {\n        return;\n    }\n\n    // Assemble the current visible tiles and update their associated textures if necessary.\n    this.assembleTiles(dc);\n\n    if (SurfaceShapeTileBuilder.__fboBound__) {\n        const fbo = SurfaceShapeTileBuilder.getFbo(dc);\n        fbo.unbind(dc.currentGlContext, dc.currentFramebuffer);\n        SurfaceShapeTileBuilder.__fboBound__ = false;\n    }\n\n    // Clean up references to all surface shapes to avoid dangling references. The surface shape list is no\n    // longer needed, now that the shapes are held by each tile.\n    this.surfaceShapes.splice(0, this.surfaceShapes.length);\n    for (var idx = 0, len = this.surfaceShapeTiles.length; idx < len; idx += 1) {\n        var tile = this.surfaceShapeTiles[idx];\n        tile.clearShapes();\n    }\n};\n\n\nSurfaceShapeTileBuilder.prototype.addTile = function (dc, tile) {\n    if (dc.pickingMode) {\n        tile.pickSequence = SurfaceShapeTileBuilder.pickSequence;\n    }\n\n    if (tile.needsUpdate(dc)) {\n\n        const fbo = SurfaceShapeTileBuilder.getFbo(dc);\n        if (!SurfaceShapeTileBuilder.__fboBound__) {\n            fbo.bind(dc.currentGlContext, this.tileWidth, this.tileHeight);\n            SurfaceShapeTileBuilder.__fboBound__ = true;\n        }\n\n        tile.updateTexture(dc);\n    }\n\n    this.surfaceShapeTiles.push(tile);\n};\n\n\n/**\n * Perform the rendering of any accumulated surface shapes by building the surface shape tiles that contain these\n * shapes and then rendering those tiles.\n *\n * @param {DrawContext} dc The drawing context.\n */\nSurfaceShapeTileBuilder.prototype.doRender = function (dc) {\n    if (dc.pickingMode) {\n        // Picking rendering strategy:\n        //  1) save all tiles created prior to picking,\n        //  2) construct and render new tiles with pick-based contents (colored with pick IDs),\n        //  3) restore all prior tiles.\n        // This has a big potential win for normal rendering, since there is a lot of coherence\n        // from frame to frame if no picking is occurring.\n        for (var idx = 0, len = this.surfaceShapes.length; idx < len; idx += 1) {\n            this.surfaceShapes[idx].resetPickColor();\n        }\n\n        SurfaceShapeTileBuilder.pickSequence += 1;\n\n        var savedTiles = this.surfaceShapeTiles;\n        var savedTopLevelTiles = this.topLevelTiles;\n\n        this.surfaceShapeTiles = [];\n        this.topLevelTiles = [];\n\n        this.buildTiles(dc);\n\n        if (dc.deepPicking) {\n            // Normally, we render all shapes together in one tile (or a small number, but this detail\n            // doesn't matter). For deep picking, we need to render each shape individually.\n            this.doDeepPickingRender(dc);\n\n        } else {\n            dc.surfaceTileRenderer.renderTiles(dc, this.surfaceShapeTiles, 1);\n        }\n\n        this.surfaceShapeTiles = savedTiles;\n        this.topLevelTiles = savedTopLevelTiles;\n    } else {\n        this.buildTiles(dc);\n\n        dc.surfaceTileRenderer.renderTiles(dc, this.surfaceShapeTiles, 1);\n    }\n};\n\nSurfaceShapeTileBuilder.prototype.doDeepPickingRender = function (dc) {\n    var idxTile, lenTiles, idxShape, lenShapes, idxPick, lenPicks, po, shape, tile;\n\n    // Determine the shapes that were drawn during buildTiles. These shapes may not actually be\n    // at the pick point, but they are candidates for deep picking.\n    var deepPickShapes = [];\n    for (idxPick = 0, lenPicks = dc.objectsAtPickPoint.objects.length; idxPick < lenPicks; idxPick += 1) {\n        po = dc.objectsAtPickPoint.objects[idxPick];\n        if (po.userObject instanceof SurfaceShape) {\n            shape = po.userObject;\n\n            // If the shape was not already in the collection of deep picked shapes, ...\n            if (deepPickShapes.indexOf(shape) < 0) {\n                deepPickShapes.push(shape);\n\n                // Delete the shape that was drawn during buildTiles from the pick list.\n                dc.objectsAtPickPoint.objects.splice(idxPick, 1);\n\n                // Update the index and length to reflect the deletion.\n                idxPick -= 1;\n                lenPicks -= 1;\n            }\n        }\n    }\n\n    if (deepPickShapes.length <= 0) {\n        return;\n    }\n\n    // For all shapes,\n    //  1) force that shape to be the only shape in a tile,\n    //  2) re-render the tile, and\n    //  3) use the surfaceTileRenderer to render the tile on the terrain,\n    //  4) read the color to see if it is attributable to the current shape.\n    var resolvablePickObjects = [];\n    for (idxShape = 0, lenShapes = deepPickShapes.length; idxShape < lenShapes; idxShape += 1) {\n        shape = deepPickShapes[idxShape];\n\n        const fbo = SurfaceShapeTileBuilder.getFbo(dc);\n        if (!SurfaceShapeTileBuilder.__fboBound__) {\n            fbo.bind(dc.currentGlContext, this.tileWidth, this.tileHeight);\n            SurfaceShapeTileBuilder.__fboBound__ = true;\n        }\n\n        for (idxTile = 0, lenTiles = this.surfaceShapeTiles.length; idxTile < lenTiles; idxTile += 1) {\n            tile = this.surfaceShapeTiles[idxTile];\n            tile.setShapes([shape]);\n\n            tile.updateTexture(dc);\n        }\n\n        if (SurfaceShapeTileBuilder.__fboBound__) {\n            const fbo = SurfaceShapeTileBuilder.getFbo(dc);\n            fbo.unbind(dc.currentGlContext, dc.currentFramebuffer);\n            SurfaceShapeTileBuilder.__fboBound__ = false;\n        }\n\n        dc.surfaceTileRenderer.renderTiles(dc, this.surfaceShapeTiles, 1);\n\n        var pickColor = dc.readPickColor(dc.pickPoint);\n        if (!!pickColor && shape.pickColor.equals(pickColor)) {\n            po = new PickedObject(shape.pickColor.clone(),\n                shape.pickDelegate ? shape.pickDelegate : shape, null, shape.layer, false);\n            resolvablePickObjects.push(po);\n        }\n    }\n\n    // Flush surface shapes that have accumulated in the updateTexture pass just completed on all shapes.\n    for (idxPick = 0, lenPicks = dc.objectsAtPickPoint.objects.length; idxPick < lenPicks; idxPick += 1) {\n        po = dc.objectsAtPickPoint.objects[idxPick];\n        if (po.userObject instanceof SurfaceShape) {\n            // Delete the shape that was picked in the most recent pass.\n            dc.objectsAtPickPoint.objects.splice(idxPick, 1);\n\n            // Update the index and length to reflect the deletion.\n            idxPick -= 1;\n            lenPicks -= 1;\n        }\n    }\n\n    // Add the resolvable pick objects for surface shapes that were actually visible at the pick point\n    // to the pick list.\n    for (idxPick = 0, lenPicks = resolvablePickObjects.length; idxPick < lenPicks; idxPick += 1) {\n        po = resolvablePickObjects[idxPick];\n        dc.objectsAtPickPoint.objects.push(po);\n    }\n};\n\nSurfaceShapeTileBuilder.getFbo = function (dc) {\n    let fbo = dc.gpuResourceCache.resourceForKey(fboCacheKey);\n    if (!fbo) {\n        fbo = new Framebuffer();\n        dc.gpuResourceCache.putResource(fboCacheKey, fbo, 1);\n    }\n    return fbo;\n};\n\nSurfaceShapeTileBuilder.__frameStart__ = false;\nSurfaceShapeTileBuilder.__fboBound__ = false;","import Framebuffer from '../framebuffer/Framebuffer';\nimport WorldWind from 'webworldwind-esa';\n\nconst {\n    SurfaceShapeTile\n} = WorldWind;\n\nSurfaceShapeTile.prototype.updateTexture = function (dc) {\n    var gl = dc.currentGlContext;\n    // Mapping from lat/lon to x/y:\n    //  lon = minlon => x = 0\n    //  lon = maxLon => x = 256\n    //  lat = minLat => y = 256\n    //  lat = maxLat => y = 0\n    //  (assuming texture size is 256)\n    // So:\n    //  x = 256 / sector.dlon * (lon - minLon)\n    //  y = -256 / sector.dlat * (lat - maxLat)\n    var xScale = this.tileWidth / this.sector.deltaLongitude(),\n        yScale = -this.tileHeight / this.sector.deltaLatitude(),\n        xOffset = -this.sector.minLongitude * xScale,\n        yOffset = -this.sector.maxLatitude * yScale;\n\n    // Reset the surface shape state keys\n    this.asRenderedSurfaceShapeStateKeys = [];\n\n    var fbo = dc.gpuResourceCache.resourceForKey('SurfaceShapeFBO');\n    fbo.attachTexture(gl, this.tileWidth, this.tileHeight);\n    fbo.clear(gl);\n\n    for (var idx = 0, len = this.surfaceShapes.length; idx < len; idx += 1) {\n        var shape = this.surfaceShapes[idx];\n        this.asRenderedSurfaceShapeStateKeys.push(this.surfaceShapeStateKeys[idx]);\n\n        shape.renderToTexture(dc, fbo, xScale, yScale, xOffset, yOffset);\n    }\n\n    this.gpuCacheKey = this.getCacheKey();\n\n    var gpuResourceCache = dc.gpuResourceCache;\n    var texture = fbo.texture;\n    gpuResourceCache.putResource(this.gpuCacheKey, texture, texture.size);\n\n    return texture;\n};","import WorldWind from 'webworldwind-esa';\n\nconst {\n    TiledImageLayer\n} = WorldWind;\n\nvar index = 0;\n\nTiledImageLayer.prototype.retrieveTileImage = function (dc, tile, suppressRedraw) {\n    if (!this.pendingRequests) {\n        this.pendingRequests = [];\n    }\n    if (!this.MAX_REQUESTS) {\n        this.MAX_REQUESTS = 16;\n    }\n\n    const isBeingRetrieved = this.currentRetrievals.indexOf(tile.imagePath) >= 0;\n    if (isBeingRetrieved) {\n        return;\n    }\n\n    const isPending = this.pendingRequests.some(t => t.imagePath === tile.imagePath);\n    if (isPending) {\n        return;\n    }\n\n    if (this.absentResourceList.isResourceAbsent(tile.imagePath)) {\n        return;\n    }\n\n    const url = this.resourceUrlForTile(tile, this.retrievalImageFormat);\n    //const imagePath = tile.imagePath;\n\n    if (!url) {\n        this.currentTilesInvalid = true;\n        return;\n    }\n\n    /*this.pendingRequests.push(tile);\n    if (this.pendingRequests.length === 100) {\n        console.log('pendingRequests', this.pendingRequests.length, 'currentRetrievals', this.currentRetrievals.length);\n        //console.log('pendingRequests', this.pendingRequests.slice());\n\n        this.pendingRequests = this.pendingRequests.slice(80);\n\n        console.log('pendingRequests', this.pendingRequests.length, 'currentRetrievals', this.currentRetrievals.length);\n    }*/\n    if (this.pendingRequests.length === 20) {\n        //console.log(20);\n        this.pendingRequests.shift();\n    }\n    this.pendingRequests.push(tile);\n\n    if (this.currentRetrievals.length <= this.MAX_REQUESTS) {\n        this.fetchMoreImages(dc, this);\n    }\n};\n\nTiledImageLayer.prototype.fetchMoreImages = function (dc, layer) {\n    const before = layer.pendingRequests.length;\n    layer.pendingRequests = layer.pendingRequests.filter(pendingTile => layer.isTileVisible(dc, pendingTile));\n    if (!layer.pendingRequests.length) {\n        return;\n    }\n\n    const skip = before - layer.pendingRequests.length\n\n    //if (skip) console.log('skip tiles', skip);\n\n    var pendingTile = layer.pendingRequests.shift();\n    var imagePath = pendingTile.imagePath;\n    var url = layer.resourceUrlForTile(pendingTile, layer.retrievalImageFormat);\n\n    if (!imagePath || !url) {\n        return;\n    }\n\n    const cache = dc.gpuResourceCache;\n    //const layer = self;\n\n    layer.fetchImage(url, function (err, image) {\n        if (err) {\n            layer.removeFromCurrentRetrievals(imagePath);\n            layer.absentResourceList.markResourceAbsent(imagePath);\n\n            if (layer.currentRetrievals.length <= layer.MAX_REQUESTS) {\n                layer.fetchMoreImages(dc, layer);\n            }\n            return;\n        }\n\n        var texture = layer.createTexture(dc, null, image);\n        layer.removeFromCurrentRetrievals(imagePath);\n\n        if (texture) {\n            cache.putResource(imagePath, texture, texture.size);\n\n            layer.currentTilesInvalid = true;\n            layer.absentResourceList.unmarkResourceAbsent(imagePath);\n\n            var e = document.createEvent('Event');\n            e.initEvent(WorldWind.REDRAW_EVENT_TYPE, true, true);\n            window.dispatchEvent(e);\n        }\n\n        if (layer.currentRetrievals.length <= layer.MAX_REQUESTS) {\n            layer.fetchMoreImages(dc, layer);\n        }\n    });\n\n    layer.currentRetrievals.push(imagePath);\n};\n\nTiledImageLayer.prototype.fetchImage = function (url, cb) {\n    const image = new Image();\n\n    image.onload = function () {\n        cb(null, image);\n    };\n\n    image.onerror = function () {\n        cb(new Error('Image retrieval failed'), null);\n    };\n\n    image.crossOrigin = 'anonymous';\n\n    if (window.webkit) {\n        // url = '/proxy?url=' + encodeURIComponent(url);\n    }\n    else if (!window.webkit && !window.AndroidApp) {\n        // url = '/proxy?url=' + encodeURIComponent(url);\n    }\n\n    image.src = url;\n};\n\nTiledImageLayer.prototype.doRender_ = function (dc) {\n    if (!dc.terrain)\n        return;\n\n    if (this.currentTilesInvalid\n        || !this.lasTtMVP || !dc.navigatorState.modelviewProjection.equals(this.lasTtMVP)\n        || dc.globeStateKey !== this.lastGlobeStateKey) {\n        this.currentTilesInvalid = false;\n\n        this.assembleTiles(dc);\n\n        // Tile fading works visually only when the surface tiles are opaque, otherwise the surface flashes\n        // when two tiles are drawn over the same area, even though one of them is semi-transparent.\n        // So do not provide fading when the surface opacity is less than 1;\n        /*if (dc.surfaceOpacity >= 1 && this.opacity >= 1) {\n            // Fading of outgoing tiles requires determination of the those tiles. Prepare an object with all of\n            // the preceding frame's tiles so that we can subsequently compare the list of newly selected tiles\n            // with the previously selected tiles.\n            this.previousTiles = {};\n            for (var j = 0; j < this.currentTiles.length; j++) {\n                this.previousTiles[this.currentTiles[j].imagePath] = this.currentTiles[j];\n            }\n\n            this.assembleTiles(dc);\n            this.fadeOutgoingTiles(dc);\n        } else {\n            this.assembleTiles(dc);\n        }*/\n\n    }\n\n    this.lasTtMVP = dc.navigatorState.modelviewProjection;\n    this.lastGlobeStateKey = dc.globeStateKey;\n\n    //this.cleanCache(dc);\n\n    if (this.currentTiles.length > 0) {\n        dc.surfaceTileRenderer.renderTiles(dc, this.currentTiles, this.opacity, dc.surfaceOpacity >= 1);\n        dc.frameStatistics.incrementImageTileCount(this.currentTiles.length);\n        this.inCurrentFrame = true;\n    }\n};\n\nTiledImageLayer.prototype.cleanCache = function () {\n\n};","/*\n * @license\n * Copyright 2000, Silicon Graphics, Inc. All Rights Reserved.\n * Copyright 2014, Google Inc. All Rights Reserved.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to\n * deal in the Software without restriction, including without limitation the\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n * sell copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice including the dates of first publication and\n * either this permission notice or a reference to http://oss.sgi.com/projects/FreeB/\n * shall be included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n * SILICON GRAPHICS, INC. BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR\n * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n *\n * Original Code. The Original Code is: OpenGL Sample Implementation,\n * Version 1.2.1, released January 26, 2000, developed by Silicon Graphics,\n * Inc. The Original Code is Copyright (c) 1991-2000 Silicon Graphics, Inc.\n * Copyright in any portions created by third parties is as indicated\n * elsewhere herein. All Rights Reserved.\n */\n/*\n * @author ericv@cs.stanford.edu (Eric Veach)\n * @author bckenny@google.com (Brendan Kenny)\n */\n\n/*\n * Base namespace.\n * @const\n */\nvar libtess = {};\n\n/**\n * Whether to run asserts and extra debug checks.\n * @define {boolean}\n */\nlibtess.DEBUG = false;\n\n/**\n * Checks if the condition evaluates to true if libtess.DEBUG is true.\n * @param {*} condition The condition to check.\n * @param {string=} opt_message Error message in case of failure.\n * @throws {Error} Assertion failed, the condition evaluates to false.\n */\nlibtess.assert = function(condition, opt_message) {\n  if (libtess.DEBUG && !condition) {\n    throw new Error('Assertion failed' +\n        (opt_message ? ': ' + opt_message : ''));\n  }\n};\n\n/**\n * The maximum vertex coordinate size, 1e150. Anything larger will trigger a\n * GLU_TESS_COORD_TOO_LARGE error callback and the vertex will be clamped to\n * this value for all tessellation calculations.\n * @const {number}\n */\nlibtess.GLU_TESS_MAX_COORD = 1e150;\n// NOTE(bckenny): value from glu.pl generator\n\n/**\n * Normally the polygon is projected to a plane perpendicular to one of the\n * three coordinate axes before tessellating in 2d. This helps numerical\n * accuracy by forgoing a transformation step by simply dropping one coordinate\n * dimension.\n *\n * However, this can affect the placement of intersection points for non-axis-\n * aligned polygons. Setting TRUE_PROJECT to true will instead project onto a\n * plane actually perpendicular to the polygon's normal.\n *\n * NOTE(bckenny): I can find no instances on the internet in which this mode has\n * been used, but it's difficult to search for. This was a compile-time setting\n * in the original, so setting this as constant. If this is exposed in the\n * public API, remove the ignore coverage directives on\n * libtess.normal.projectPolygon and libtess.normal.normalize_.\n * @const {boolean}\n */\nlibtess.TRUE_PROJECT = false;\n\n/**\n * We cache vertex data for single-contour polygons so that we can try a\n * quick-and-dirty decomposition first.\n * @const {number}\n */\nlibtess.TESS_MAX_CACHE = 100;\n\n/**\n * The default tolerance for merging features, 0, meaning vertices are only\n * merged if they are exactly coincident\n * If a higher tolerance is needed, significant rewriting will need to occur.\n * See libtess.sweep.TOLERANCE_NONZERO_ as a starting place.\n * @const {number}\n */\nlibtess.GLU_TESS_DEFAULT_TOLERANCE = 0;\n\n/**\n * The input contours parition the plane into regions. A winding\n * rule determines which of these regions are inside the polygon.\n *\n * For a single contour C, the winding number of a point x is simply\n * the signed number of revolutions we make around x as we travel\n * once around C (where CCW is positive). When there are several\n * contours, the individual winding numbers are summed. This\n * procedure associates a signed integer value with each point x in\n * the plane. Note that the winding number is the same for all\n * points in a single region.\n *\n * The winding rule classifies a region as \"inside\" if its winding\n * number belongs to the chosen category (odd, nonzero, positive,\n * negative, or absolute value of at least two). The current GLU\n * tesselator implements the \"odd\" rule. The \"nonzero\" rule is another\n * common way to define the interior. The other three rules are\n * useful for polygon CSG operations.\n * @enum {number}\n */\nlibtess.windingRule = {\n  // NOTE(bckenny): values from enumglu.spec\n  GLU_TESS_WINDING_ODD: 100130,\n  GLU_TESS_WINDING_NONZERO: 100131,\n  GLU_TESS_WINDING_POSITIVE: 100132,\n  GLU_TESS_WINDING_NEGATIVE: 100133,\n  GLU_TESS_WINDING_ABS_GEQ_TWO: 100134\n};\n\n/**\n * The type of primitive return from a \"begin\" callback. GL_LINE_LOOP is only\n * returned when GLU_TESS_BOUNDARY_ONLY is true. GL_TRIANGLE_STRIP and\n * GL_TRIANGLE_FAN are no longer returned since 1.1.0 (see release notes).\n * @enum {number}\n */\nlibtess.primitiveType = {\n  GL_LINE_LOOP: 2,\n  GL_TRIANGLES: 4,\n  GL_TRIANGLE_STRIP: 5,\n  GL_TRIANGLE_FAN: 6\n};\n\n/**\n * The types of errors provided in the error callback.\n * @enum {number}\n */\nlibtess.errorType = {\n  // TODO(bckenny) doc types\n  // NOTE(bckenny): values from enumglu.spec\n  GLU_TESS_MISSING_BEGIN_POLYGON: 100151,\n  GLU_TESS_MISSING_END_POLYGON: 100153,\n  GLU_TESS_MISSING_BEGIN_CONTOUR: 100152,\n  GLU_TESS_MISSING_END_CONTOUR: 100154,\n  GLU_TESS_COORD_TOO_LARGE: 100155,\n  GLU_TESS_NEED_COMBINE_CALLBACK: 100156\n};\n\n/**\n * Enum values necessary for providing settings and callbacks. See the readme\n * for details.\n * @enum {number}\n */\nlibtess.gluEnum = {\n  // TODO(bckenny): rename so not always typing libtess.gluEnum.*?\n\n  // NOTE(bckenny): values from enumglu.spec\n  GLU_TESS_BEGIN: 100100,\n  GLU_TESS_VERTEX: 100101,\n  GLU_TESS_END: 100102,\n  GLU_TESS_ERROR: 100103,\n  GLU_TESS_EDGE_FLAG: 100104,\n  GLU_TESS_COMBINE: 100105,\n  GLU_TESS_BEGIN_DATA: 100106,\n  GLU_TESS_VERTEX_DATA: 100107,\n  GLU_TESS_END_DATA: 100108,\n  GLU_TESS_ERROR_DATA: 100109,\n  GLU_TESS_EDGE_FLAG_DATA: 100110,\n  GLU_TESS_COMBINE_DATA: 100111,\n\n  GLU_TESS_MESH: 100112,  //  NOTE(bckenny): from tess.c\n  GLU_TESS_TOLERANCE: 100142,\n  GLU_TESS_WINDING_RULE: 100140,\n  GLU_TESS_BOUNDARY_ONLY: 100141,\n\n  // TODO(bckenny): move this to libtess.errorType?\n  GLU_INVALID_ENUM: 100900,\n  GLU_INVALID_VALUE: 100901\n};\n\n/** @typedef {number} */\n//libtess.PQHandle;\n\n// TODO(bckenny): better typing on key?\n/** @typedef {Object} */\n//libtess.PQKey;\n\n\n/* global libtess */\n\n/** @const */\nlibtess.geom = {};\n\n/**\n * Returns whether vertex u and vertex v are equal.\n * @param {libtess.GluVertex} u\n * @param {libtess.GluVertex} v\n * @return {boolean}\n */\nlibtess.geom.vertEq = function(u, v) {\n  return u.s === v.s && u.t === v.t;\n};\n\n/**\n * Returns whether vertex u is lexicographically less than or equal to vertex v.\n * @param {libtess.GluVertex} u\n * @param {libtess.GluVertex} v\n * @return {boolean}\n */\nlibtess.geom.vertLeq = function(u, v) {\n  return (u.s < v.s) || (u.s === v.s && u.t <= v.t);\n};\n\n/**\n * Given three vertices u,v,w such that geom.vertLeq(u,v) && geom.vertLeq(v,w),\n * evaluates the t-coord of the edge uw at the s-coord of the vertex v.\n * Returns v.t - (uw)(v.s), ie. the signed distance from uw to v.\n * If uw is vertical (and thus passes thru v), the result is zero.\n *\n * The calculation is extremely accurate and stable, even when v\n * is very close to u or w.  In particular if we set v.t = 0 and\n * let r be the negated result (this evaluates (uw)(v.s)), then\n * r is guaranteed to satisfy MIN(u.t,w.t) <= r <= MAX(u.t,w.t).\n * @param {libtess.GluVertex} u\n * @param {libtess.GluVertex} v\n * @param {libtess.GluVertex} w\n * @return {number}\n */\nlibtess.geom.edgeEval = function(u, v, w) {\n\n  var gapL = v.s - u.s;\n  var gapR = w.s - v.s;\n\n  if (gapL + gapR > 0) {\n    if (gapL < gapR) {\n      return (v.t - u.t) + (u.t - w.t) * (gapL / (gapL + gapR));\n    } else {\n      return (v.t - w.t) + (w.t - u.t) * (gapR / (gapL + gapR));\n    }\n  }\n\n  // vertical line\n  return 0;\n};\n\n/**\n * Returns a number whose sign matches geom.edgeEval(u,v,w) but which\n * is cheaper to evaluate.  Returns > 0, == 0 , or < 0\n * as v is above, on, or below the edge uw.\n * @param {libtess.GluVertex} u\n * @param {libtess.GluVertex} v\n * @param {libtess.GluVertex} w\n * @return {number}\n */\nlibtess.geom.edgeSign = function(u, v, w) {\n\n  var gapL = v.s - u.s;\n  var gapR = w.s - v.s;\n\n  if (gapL + gapR > 0) {\n    return (v.t - w.t) * gapL + (v.t - u.t) * gapR;\n  }\n\n  // vertical line\n  return 0;\n};\n\n/**\n * Version of VertLeq with s and t transposed.\n * Returns whether vertex u is lexicographically less than or equal to vertex v.\n * @param {libtess.GluVertex} u\n * @param {libtess.GluVertex} v\n * @return {boolean}\n */\nlibtess.geom.transLeq = function(u, v) {\n  return (u.t < v.t) || (u.t === v.t && u.s <= v.s);\n};\n\n/**\n * Version of geom.edgeEval with s and t transposed.\n * Given three vertices u,v,w such that geom.transLeq(u,v) &&\n * geom.transLeq(v,w), evaluates the t-coord of the edge uw at the s-coord of\n * the vertex v. Returns v.s - (uw)(v.t), ie. the signed distance from uw to v.\n * If uw is vertical (and thus passes thru v), the result is zero.\n *\n * The calculation is extremely accurate and stable, even when v\n * is very close to u or w.  In particular if we set v.s = 0 and\n * let r be the negated result (this evaluates (uw)(v.t)), then\n * r is guaranteed to satisfy MIN(u.s,w.s) <= r <= MAX(u.s,w.s).\n * @param {libtess.GluVertex} u\n * @param {libtess.GluVertex} v\n * @param {libtess.GluVertex} w\n * @return {number}\n */\nlibtess.geom.transEval = function(u, v, w) {\n\n  var gapL = v.t - u.t;\n  var gapR = w.t - v.t;\n\n  if (gapL + gapR > 0) {\n    if (gapL < gapR) {\n      return (v.s - u.s) + (u.s - w.s) * (gapL / (gapL + gapR));\n    } else {\n      return (v.s - w.s) + (w.s - u.s) * (gapR / (gapL + gapR));\n    }\n  }\n\n  // vertical line\n  return 0;\n};\n\n/**\n * Version of geom.edgeSign with s and t transposed.\n * Returns a number whose sign matches geom.transEval(u,v,w) but which\n * is cheaper to evaluate.  Returns > 0, == 0 , or < 0\n * as v is above, on, or below the edge uw.\n * @param {libtess.GluVertex} u\n * @param {libtess.GluVertex} v\n * @param {libtess.GluVertex} w\n * @return {number}\n */\nlibtess.geom.transSign = function(u, v, w) {\n\n  var gapL = v.t - u.t;\n  var gapR = w.t - v.t;\n\n  if (gapL + gapR > 0) {\n    return (v.s - w.s) * gapL + (v.s - u.s) * gapR;\n  }\n\n  // vertical line\n  return 0;\n};\n\n/**\n * Returns whether edge is directed from right to left.\n * @param {libtess.GluHalfEdge} e\n * @return {boolean}\n */\nlibtess.geom.edgeGoesLeft = function(e) {\n  return libtess.geom.vertLeq(e.dst(), e.org);\n};\n\n/**\n * Returns whether edge is directed from left to right.\n * @param {libtess.GluHalfEdge} e\n * @return {boolean}\n */\nlibtess.geom.edgeGoesRight = function(e) {\n  return libtess.geom.vertLeq(e.org, e.dst());\n};\n\n/**\n * Calculates the L1 distance between vertices u and v.\n * @param {libtess.GluVertex} u\n * @param {libtess.GluVertex} v\n * @return {number}\n */\nlibtess.geom.vertL1dist = function(u, v) {\n  return Math.abs(u.s - v.s) + Math.abs(u.t - v.t);\n};\n\n// NOTE(bckenny): vertCCW is called nowhere in libtess and isn't part of the\n// public API.\n/* istanbul ignore next */\n/**\n * For almost-degenerate situations, the results are not reliable.\n * Unless the floating-point arithmetic can be performed without\n * rounding errors, *any* implementation will give incorrect results\n * on some degenerate inputs, so the client must have some way to\n * handle this situation.\n * @param {!libtess.GluVertex} u\n * @param {!libtess.GluVertex} v\n * @param {!libtess.GluVertex} w\n * @return {boolean}\n */\nlibtess.geom.vertCCW = function(u, v, w) {\n  return (u.s * (v.t - w.t) + v.s * (w.t - u.t) + w.s * (u.t - v.t)) >= 0;\n};\n\n/**\n * Given parameters a,x,b,y returns the value (b*x+a*y)/(a+b),\n * or (x+y)/2 if a==b==0. It requires that a,b >= 0, and enforces\n * this in the rare case that one argument is slightly negative.\n * The implementation is extremely stable numerically.\n * In particular it guarantees that the result r satisfies\n * MIN(x,y) <= r <= MAX(x,y), and the results are very accurate\n * even when a and b differ greatly in magnitude.\n * @private\n * @param {number} a\n * @param {number} x\n * @param {number} b\n * @param {number} y\n * @return {number}\n */\nlibtess.geom.interpolate_ = function(a, x, b, y) {\n  // from Macro RealInterpolate:\n  //(a = (a < 0) ? 0 : a, b = (b < 0) ? 0 : b, ((a <= b) ? ((b == 0) ? ((x+y) / 2) : (x + (y-x) * (a/(a+b)))) : (y + (x-y) * (b/(a+b)))))\n  a = (a < 0) ? 0 : a;\n  b = (b < 0) ? 0 : b;\n\n  if (a <= b) {\n    if (b === 0) {\n      return (x + y) / 2;\n    } else {\n      return x + (y - x) * (a / (a + b));\n    }\n  } else {\n    return y + (x - y) * (b / (a + b));\n  }\n};\n\n/**\n * Given edges (o1,d1) and (o2,d2), compute their point of intersection.\n * The computed point is guaranteed to lie in the intersection of the\n * bounding rectangles defined by each edge.\n * @param {!libtess.GluVertex} o1\n * @param {!libtess.GluVertex} d1\n * @param {!libtess.GluVertex} o2\n * @param {!libtess.GluVertex} d2\n * @param {!libtess.GluVertex} v\n */\nlibtess.geom.edgeIntersect = function(o1, d1, o2, d2, v) {\n  // This is certainly not the most efficient way to find the intersection\n  // of two line segments, but it is very numerically stable.\n\n  // Strategy: find the two middle vertices in the VertLeq ordering,\n  // and interpolate the intersection s-value from these. Then repeat\n  // using the TransLeq ordering to find the intersection t-value.\n  var z1;\n  var z2;\n  var tmp;\n  if (!libtess.geom.vertLeq(o1, d1)) {\n    // Swap(o1, d1);\n    tmp = o1;\n    o1 = d1;\n    d1 = tmp;\n  }\n  if (!libtess.geom.vertLeq(o2, d2)) {\n    // Swap(o2, d2);\n    tmp = o2;\n    o2 = d2;\n    d2 = tmp;\n  }\n  if (!libtess.geom.vertLeq(o1, o2)) {\n    // Swap(o1, o2);\n    tmp = o1;\n    o1 = o2;\n    o2 = tmp;\n    // Swap(d1, d2);\n    tmp = d1;\n    d1 = d2;\n    d2 = tmp;\n  }\n\n  if (!libtess.geom.vertLeq(o2, d1)) {\n    // Technically, no intersection -- do our best\n    v.s = (o2.s + d1.s) / 2;\n\n  } else if (libtess.geom.vertLeq(d1, d2)) {\n    // Interpolate between o2 and d1\n    z1 = libtess.geom.edgeEval(o1, o2, d1);\n    z2 = libtess.geom.edgeEval(o2, d1, d2);\n    if (z1 + z2 < 0) { z1 = -z1; z2 = -z2; }\n    v.s = libtess.geom.interpolate_(z1, o2.s, z2, d1.s);\n\n  } else {\n    // Interpolate between o2 and d2\n    z1 = libtess.geom.edgeSign(o1, o2, d1);\n    z2 = -libtess.geom.edgeSign(o1, d2, d1);\n    if (z1 + z2 < 0) { z1 = -z1; z2 = -z2; }\n    v.s = libtess.geom.interpolate_(z1, o2.s, z2, d2.s);\n  }\n\n  // Now repeat the process for t\n  if (!libtess.geom.transLeq(o1, d1)) {\n    // Swap(o1, d1);\n    tmp = o1;\n    o1 = d1;\n    d1 = tmp;\n  }\n  if (!libtess.geom.transLeq(o2, d2)) {\n    // Swap(o2, d2);\n    tmp = o2;\n    o2 = d2;\n    d2 = tmp;\n  }\n  if (!libtess.geom.transLeq(o1, o2)) {\n    // Swap(o1, o2);\n    tmp = o1;\n    o1 = o2;\n    o2 = tmp;\n    // Swap(d1, d2);\n    tmp = d1;\n    d1 = d2;\n    d2 = tmp;\n  }\n\n  if (!libtess.geom.transLeq(o2, d1)) {\n    // Technically, no intersection -- do our best\n    v.t = (o2.t + d1.t) / 2;\n\n  } else if (libtess.geom.transLeq(d1, d2)) {\n    // Interpolate between o2 and d1\n    z1 = libtess.geom.transEval(o1, o2, d1);\n    z2 = libtess.geom.transEval(o2, d1, d2);\n    if (z1 + z2 < 0) { z1 = -z1; z2 = -z2; }\n    v.t = libtess.geom.interpolate_(z1, o2.t, z2, d1.t);\n\n  } else {\n    // Interpolate between o2 and d2\n    z1 = libtess.geom.transSign(o1, o2, d1);\n    z2 = -libtess.geom.transSign(o1, d2, d1);\n    if (z1 + z2 < 0) { z1 = -z1; z2 = -z2; }\n    v.t = libtess.geom.interpolate_(z1, o2.t, z2, d2.t);\n  }\n};\n\n\n\n/* global libtess */\n\n// TODO(bckenny): could maybe merge GluMesh and mesh.js since these are\n// operations on the mesh\n\n/** @const */\nlibtess.mesh = {};\n\n/****************** Basic Edge Operations **********************/\n\n\n/**\n * makeEdge creates one edge, two vertices, and a loop (face).\n * The loop consists of the two new half-edges.\n *\n * @param {libtess.GluMesh} mesh [description].\n * @return {libtess.GluHalfEdge} [description].\n */\nlibtess.mesh.makeEdge = function(mesh) {\n  // TODO(bckenny): probably move to GluMesh, but needs Make* methods with it\n\n  var e = libtess.mesh.makeEdgePair_(mesh.eHead);\n\n  // complete edge with vertices and face (see mesh.makeEdgePair_)\n  libtess.mesh.makeVertex_(e, mesh.vHead);\n  libtess.mesh.makeVertex_(e.sym, mesh.vHead);\n  libtess.mesh.makeFace_(e, mesh.fHead);\n\n  return e;\n};\n\n\n/**\n * meshSplice(eOrg, eDst) is the basic operation for changing the\n * mesh connectivity and topology. It changes the mesh so that\n *  eOrg.oNext <- OLD( eDst.oNext )\n *  eDst.oNext <- OLD( eOrg.oNext )\n * where OLD(...) means the value before the meshSplice operation.\n *\n * This can have two effects on the vertex structure:\n *  - if eOrg.org != eDst.org, the two vertices are merged together\n *  - if eOrg.org == eDst.org, the origin is split into two vertices\n * In both cases, eDst.org is changed and eOrg.org is untouched.\n *\n * Similarly (and independently) for the face structure,\n *  - if eOrg.lFace == eDst.lFace, one loop is split into two\n *  - if eOrg.lFace != eDst.lFace, two distinct loops are joined into one\n * In both cases, eDst.lFace is changed and eOrg.lFace is unaffected.\n *\n * Some special cases:\n * If eDst == eOrg, the operation has no effect.\n * If eDst == eOrg.lNext, the new face will have a single edge.\n * If eDst == eOrg.lPrev(), the old face will have a single edge.\n * If eDst == eOrg.oNext, the new vertex will have a single edge.\n * If eDst == eOrg.oPrev(), the old vertex will have a single edge.\n *\n * @param {libtess.GluHalfEdge} eOrg [description].\n * @param {libtess.GluHalfEdge} eDst [description].\n */\nlibtess.mesh.meshSplice = function(eOrg, eDst) {\n  // TODO: more descriptive name?\n\n  var joiningLoops = false;\n  var joiningVertices = false;\n\n  if (eOrg === eDst) {\n    return;\n  }\n\n  if (eDst.org !== eOrg.org) {\n    // We are merging two disjoint vertices -- destroy eDst.org\n    joiningVertices = true;\n    libtess.mesh.killVertex_(eDst.org, eOrg.org);\n  }\n\n  if (eDst.lFace !== eOrg.lFace) {\n    // We are connecting two disjoint loops -- destroy eDst.lFace\n    joiningLoops = true;\n    libtess.mesh.killFace_(eDst.lFace, eOrg.lFace);\n  }\n\n  // Change the edge structure\n  libtess.mesh.splice_(eDst, eOrg);\n\n  if (!joiningVertices) {\n    // We split one vertex into two -- the new vertex is eDst.org.\n    // Make sure the old vertex points to a valid half-edge.\n    libtess.mesh.makeVertex_(eDst, eOrg.org);\n    eOrg.org.anEdge = eOrg;\n  }\n\n  if (!joiningLoops) {\n    // We split one loop into two -- the new loop is eDst.lFace.\n    // Make sure the old face points to a valid half-edge.\n    libtess.mesh.makeFace_(eDst, eOrg.lFace);\n    eOrg.lFace.anEdge = eOrg;\n  }\n};\n\n\n/**\n * deleteEdge(eDel) removes the edge eDel. There are several cases:\n * if (eDel.lFace != eDel.rFace()), we join two loops into one; the loop\n * eDel.lFace is deleted. Otherwise, we are splitting one loop into two;\n * the newly created loop will contain eDel.dst(). If the deletion of eDel\n * would create isolated vertices, those are deleted as well.\n *\n * This function could be implemented as two calls to __gl_meshSplice\n * plus a few calls to memFree, but this would allocate and delete\n * unnecessary vertices and faces.\n *\n * @param {libtess.GluHalfEdge} eDel [description].\n */\nlibtess.mesh.deleteEdge = function(eDel) {\n  var eDelSym = eDel.sym;\n  var joiningLoops = false;\n\n  // First step: disconnect the origin vertex eDel.org.  We make all\n  // changes to get a consistent mesh in this \"intermediate\" state.\n  if (eDel.lFace !== eDel.rFace()) {\n    // We are joining two loops into one -- remove the left face\n    joiningLoops = true;\n    libtess.mesh.killFace_(eDel.lFace, eDel.rFace());\n  }\n\n  if (eDel.oNext === eDel) {\n    libtess.mesh.killVertex_(eDel.org, null);\n\n  } else {\n    // Make sure that eDel.org and eDel.rFace() point to valid half-edges\n    eDel.rFace().anEdge = eDel.oPrev();\n    eDel.org.anEdge = eDel.oNext;\n\n    libtess.mesh.splice_(eDel, eDel.oPrev());\n\n    if (!joiningLoops) {\n      // We are splitting one loop into two -- create a new loop for eDel.\n      libtess.mesh.makeFace_(eDel, eDel.lFace);\n    }\n  }\n\n  // Claim: the mesh is now in a consistent state, except that eDel.org\n  // may have been deleted.  Now we disconnect eDel.dst().\n  if (eDelSym.oNext === eDelSym) {\n    libtess.mesh.killVertex_(eDelSym.org, null);\n    libtess.mesh.killFace_(eDelSym.lFace, null);\n\n  } else {\n    // Make sure that eDel.dst() and eDel.lFace point to valid half-edges\n    eDel.lFace.anEdge = eDelSym.oPrev();\n    eDelSym.org.anEdge = eDelSym.oNext;\n    libtess.mesh.splice_(eDelSym, eDelSym.oPrev());\n  }\n\n  // Any isolated vertices or faces have already been freed.\n  libtess.mesh.killEdge_(eDel);\n};\n\n/******************** Other Edge Operations **********************/\n\n/* All these routines can be implemented with the basic edge\n * operations above.  They are provided for convenience and efficiency.\n */\n\n\n/**\n * addEdgeVertex(eOrg) creates a new edge eNew such that\n * eNew == eOrg.lNext, and eNew.dst() is a newly created vertex.\n * eOrg and eNew will have the same left face.\n *\n * @param {libtess.GluHalfEdge} eOrg [description].\n * @return {libtess.GluHalfEdge} [description].\n */\nlibtess.mesh.addEdgeVertex = function(eOrg) {\n  // TODO(bckenny): why is it named this?\n\n  var eNew = libtess.mesh.makeEdgePair_(eOrg);\n  var eNewSym = eNew.sym;\n\n  // Connect the new edge appropriately\n  libtess.mesh.splice_(eNew, eOrg.lNext);\n\n  // Set the vertex and face information\n  eNew.org = eOrg.dst();\n\n  libtess.mesh.makeVertex_(eNewSym, eNew.org);\n\n  eNew.lFace = eNewSym.lFace = eOrg.lFace;\n\n  return eNew;\n};\n\n\n/**\n * splitEdge(eOrg) splits eOrg into two edges eOrg and eNew,\n * such that eNew == eOrg.lNext. The new vertex is eOrg.dst() == eNew.org.\n * eOrg and eNew will have the same left face.\n *\n * @param {libtess.GluHalfEdge} eOrg [description].\n * @return {!libtess.GluHalfEdge} [description].\n */\nlibtess.mesh.splitEdge = function(eOrg) {\n  var tempHalfEdge = libtess.mesh.addEdgeVertex(eOrg);\n  var eNew = tempHalfEdge.sym;\n\n  // Disconnect eOrg from eOrg.dst() and connect it to eNew.org\n  libtess.mesh.splice_(eOrg.sym, eOrg.sym.oPrev());\n  libtess.mesh.splice_(eOrg.sym, eNew);\n\n  // Set the vertex and face information\n  eOrg.sym.org = eNew.org; // NOTE(bckenny): assignment to dst\n  eNew.dst().anEdge = eNew.sym;  // may have pointed to eOrg.sym\n  eNew.sym.lFace = eOrg.rFace(); // NOTE(bckenny): assignment to rFace\n  eNew.winding = eOrg.winding;  // copy old winding information\n  eNew.sym.winding = eOrg.sym.winding;\n\n  return eNew;\n};\n\n\n/**\n * connect(eOrg, eDst) creates a new edge from eOrg.dst()\n * to eDst.org, and returns the corresponding half-edge eNew.\n * If eOrg.lFace == eDst.lFace, this splits one loop into two,\n * and the newly created loop is eNew.lFace. Otherwise, two disjoint\n * loops are merged into one, and the loop eDst.lFace is destroyed.\n *\n * If (eOrg == eDst), the new face will have only two edges.\n * If (eOrg.lNext == eDst), the old face is reduced to a single edge.\n * If (eOrg.lNext.lNext == eDst), the old face is reduced to two edges.\n *\n * @param {libtess.GluHalfEdge} eOrg [description].\n * @param {libtess.GluHalfEdge} eDst [description].\n * @return {!libtess.GluHalfEdge} [description].\n */\nlibtess.mesh.connect = function(eOrg, eDst) {\n  var joiningLoops = false;\n  var eNew = libtess.mesh.makeEdgePair_(eOrg);\n  var eNewSym = eNew.sym;\n\n  if (eDst.lFace !== eOrg.lFace) {\n    // We are connecting two disjoint loops -- destroy eDst.lFace\n    joiningLoops = true;\n    libtess.mesh.killFace_(eDst.lFace, eOrg.lFace);\n  }\n\n  // Connect the new edge appropriately\n  libtess.mesh.splice_(eNew, eOrg.lNext);\n  libtess.mesh.splice_(eNewSym, eDst);\n\n  // Set the vertex and face information\n  eNew.org = eOrg.dst();\n  eNewSym.org = eDst.org;\n  eNew.lFace = eNewSym.lFace = eOrg.lFace;\n\n  // Make sure the old face points to a valid half-edge\n  eOrg.lFace.anEdge = eNewSym;\n\n  if (!joiningLoops) {\n    // We split one loop into two -- the new loop is eNew.lFace\n    libtess.mesh.makeFace_(eNew, eOrg.lFace);\n  }\n  return eNew;\n};\n\n/******************** Other Operations **********************/\n\n\n/**\n * zapFace(fZap) destroys a face and removes it from the\n * global face list. All edges of fZap will have a null pointer as their\n * left face. Any edges which also have a null pointer as their right face\n * are deleted entirely (along with any isolated vertices this produces).\n * An entire mesh can be deleted by zapping its faces, one at a time,\n * in any order. Zapped faces cannot be used in further mesh operations!\n *\n * @param {libtess.GluFace} fZap [description].\n */\nlibtess.mesh.zapFace = function(fZap) {\n  var eStart = fZap.anEdge;\n\n  // walk around face, deleting edges whose right face is also NULL\n  var eNext = eStart.lNext;\n  var e;\n  do {\n    e = eNext;\n    eNext = e.lNext;\n\n    e.lFace = null;\n    if (e.rFace() === null) {\n      // delete the edge -- see mesh.deleteEdge above\n      if (e.oNext === e) {\n        libtess.mesh.killVertex_(e.org, null);\n\n      } else {\n        // Make sure that e.org points to a valid half-edge\n        e.org.anEdge = e.oNext;\n        libtess.mesh.splice_(e, e.oPrev());\n      }\n\n      var eSym = e.sym;\n\n      if (eSym.oNext === eSym) {\n        libtess.mesh.killVertex_(eSym.org, null);\n\n      } else {\n        // Make sure that eSym.org points to a valid half-edge\n        eSym.org.anEdge = eSym.oNext;\n        libtess.mesh.splice_(eSym, eSym.oPrev());\n      }\n      libtess.mesh.killEdge_(e);\n    }\n  } while (e !== eStart);\n\n  // delete from circular doubly-linked list\n  var fPrev = fZap.prev;\n  var fNext = fZap.next;\n  fNext.prev = fPrev;\n  fPrev.next = fNext;\n\n  // TODO(bckenny): memFree( fZap );\n  // TODO(bckenny): probably null at callsite\n};\n\n// TODO(bckenny): meshUnion isn't called within libtess and isn't part of the\n// public API. Could be useful if more mesh manipulation functions are exposed.\n/* istanbul ignore next */\n/**\n * meshUnion() forms the union of all structures in\n * both meshes, and returns the new mesh (the old meshes are destroyed).\n *\n * @param {!libtess.GluMesh} mesh1\n * @param {!libtess.GluMesh} mesh2\n * @return {!libtess.GluMesh}\n */\nlibtess.mesh.meshUnion = function(mesh1, mesh2) {\n  // TODO(bceknny): probably move to GluMesh method\n  var f1 = mesh1.fHead;\n  var v1 = mesh1.vHead;\n  var e1 = mesh1.eHead;\n\n  var f2 = mesh2.fHead;\n  var v2 = mesh2.vHead;\n  var e2 = mesh2.eHead;\n\n  // Add the faces, vertices, and edges of mesh2 to those of mesh1\n  if (f2.next !== f2) {\n    f1.prev.next = f2.next;\n    f2.next.prev = f1.prev;\n    f2.prev.next = f1;\n    f1.prev = f2.prev;\n  }\n\n  if (v2.next !== v2) {\n    v1.prev.next = v2.next;\n    v2.next.prev = v1.prev;\n    v2.prev.next = v1;\n    v1.prev = v2.prev;\n  }\n\n  if (e2.next !== e2) {\n    e1.sym.next.sym.next = e2.next;\n    e2.next.sym.next = e1.sym.next;\n    e2.sym.next.sym.next = e1;\n    e1.sym.next = e2.sym.next;\n  }\n\n  // TODO(bckenny): memFree(mesh2);\n  // TODO(bckenny): If function is kept, remove mesh2's data to enforce.\n  return mesh1;\n};\n\n\n/**\n * deleteMesh(mesh) will free all storage for any valid mesh.\n * @param {libtess.GluMesh} mesh [description].\n */\nlibtess.mesh.deleteMesh = function(mesh) {\n  // TODO(bckenny): unnecessary, I think.\n  // TODO(bckenny): might want to explicitly null at callsite\n  // lots of memFrees. see also DELETE_BY_ZAPPING\n};\n\n/************************ Utility Routines ************************/\n\n\n/**\n * Creates a new pair of half-edges which form their own loop.\n * No vertex or face structures are allocated, but these must be assigned\n * before the current edge operation is completed.\n *\n * TODO(bckenny): warning about eNext strictly being first of pair? (see code)\n *\n * @private\n * @param {libtess.GluHalfEdge} eNext [description].\n * @return {libtess.GluHalfEdge} [description].\n */\nlibtess.mesh.makeEdgePair_ = function(eNext) {\n  var e = new libtess.GluHalfEdge();\n  var eSym = new libtess.GluHalfEdge();\n\n  // TODO(bckenny): how do we ensure this? see above comment in jsdoc\n  // Make sure eNext points to the first edge of the edge pair\n  // if (eNext->Sym < eNext ) { eNext = eNext->Sym; }\n\n  // NOTE(bckenny): check this for bugs in current implementation!\n\n  // Insert in circular doubly-linked list before eNext.\n  // Note that the prev pointer is stored in sym.next.\n  var ePrev = eNext.sym.next;\n  eSym.next = ePrev;\n  ePrev.sym.next = e;\n  e.next = eNext;\n  eNext.sym.next = eSym;\n\n  e.sym = eSym;\n  e.oNext = e;\n  e.lNext = eSym;\n\n  eSym.sym = e;\n  eSym.oNext = eSym;\n  eSym.lNext = e;\n\n  return e;\n};\n\n\n/**\n * splice_ is best described by the Guibas/Stolfi paper or the\n * CS348a notes. Basically, it modifies the mesh so that\n * a.oNext and b.oNext are exchanged. This can have various effects\n * depending on whether a and b belong to different face or vertex rings.\n * For more explanation see mesh.meshSplice below.\n *\n * @private\n * @param {libtess.GluHalfEdge} a [description].\n * @param {libtess.GluHalfEdge} b [description].\n */\nlibtess.mesh.splice_ = function(a, b) {\n  var aONext = a.oNext;\n  var bONext = b.oNext;\n\n  aONext.sym.lNext = b;\n  bONext.sym.lNext = a;\n  a.oNext = bONext;\n  b.oNext = aONext;\n};\n\n\n/**\n * makeVertex_(eOrig, vNext) attaches a new vertex and makes it the\n * origin of all edges in the vertex loop to which eOrig belongs. \"vNext\" gives\n * a place to insert the new vertex in the global vertex list.  We insert\n * the new vertex *before* vNext so that algorithms which walk the vertex\n * list will not see the newly created vertices.\n *\n * NOTE: unlike original, acutally allocates new vertex.\n *\n * @private\n * @param {libtess.GluHalfEdge} eOrig [description].\n * @param {libtess.GluVertex} vNext [description].\n */\nlibtess.mesh.makeVertex_ = function(eOrig, vNext) {\n  // insert in circular doubly-linked list before vNext\n  var vPrev = vNext.prev;\n  var vNew = new libtess.GluVertex(vNext, vPrev);\n  vPrev.next = vNew;\n  vNext.prev = vNew;\n\n  vNew.anEdge = eOrig;\n  // leave coords, s, t undefined\n  // TODO(bckenny): does above line mean 0 specifically, or does it matter?\n\n  // fix other edges on this vertex loop\n  var e = eOrig;\n  do {\n    e.org = vNew;\n    e = e.oNext;\n  } while (e !== eOrig);\n};\n\n\n/**\n * makeFace_(eOrig, fNext) attaches a new face and makes it the left\n * face of all edges in the face loop to which eOrig belongs. \"fNext\" gives\n * a place to insert the new face in the global face list.  We insert\n * the new face *before* fNext so that algorithms which walk the face\n * list will not see the newly created faces.\n *\n * NOTE: unlike original, acutally allocates new face.\n *\n * @private\n * @param {libtess.GluHalfEdge} eOrig [description].\n * @param {libtess.GluFace} fNext [description].\n */\nlibtess.mesh.makeFace_ = function(eOrig, fNext) {\n  // insert in circular doubly-linked list before fNext\n  var fPrev = fNext.prev;\n  var fNew = new libtess.GluFace(fNext, fPrev);\n  fPrev.next = fNew;\n  fNext.prev = fNew;\n\n  fNew.anEdge = eOrig;\n\n  // The new face is marked \"inside\" if the old one was.  This is a\n  // convenience for the common case where a face has been split in two.\n  fNew.inside = fNext.inside;\n\n  // fix other edges on this face loop\n  var e = eOrig;\n  do {\n    e.lFace = fNew;\n    e = e.lNext;\n  } while (e !== eOrig);\n};\n\n\n/**\n * killEdge_ destroys an edge (the half-edges eDel and eDel.sym),\n * and removes from the global edge list.\n *\n * @private\n * @param {libtess.GluHalfEdge} eDel [description].\n */\nlibtess.mesh.killEdge_ = function(eDel) {\n  // TODO(bckenny): in this case, no need to worry(?), but check when checking mesh.makeEdgePair_\n  // Half-edges are allocated in pairs, see EdgePair above\n  // if (eDel->Sym < eDel ) { eDel = eDel->Sym; }\n\n  // delete from circular doubly-linked list\n  var eNext = eDel.next;\n  var ePrev = eDel.sym.next;\n  eNext.sym.next = ePrev;\n  ePrev.sym.next = eNext;\n\n  // TODO(bckenny): memFree( eDel ); (which also frees eDel.sym)\n  // TODO(bckenny): need to null at callsites?\n};\n\n\n/**\n * killVertex_ destroys a vertex and removes it from the global\n * vertex list. It updates the vertex loop to point to a given new vertex.\n *\n * @private\n * @param {libtess.GluVertex} vDel [description].\n * @param {libtess.GluVertex} newOrg [description].\n */\nlibtess.mesh.killVertex_ = function(vDel, newOrg) {\n  var eStart = vDel.anEdge;\n\n  // change the origin of all affected edges\n  var e = eStart;\n  do {\n    e.org = newOrg;\n    e = e.oNext;\n  } while (e !== eStart);\n\n  // delete from circular doubly-linked list\n  var vPrev = vDel.prev;\n  var vNext = vDel.next;\n  vNext.prev = vPrev;\n  vPrev.next = vNext;\n\n  // TODO(bckenny): memFree( vDel );\n  // TODO(bckenny): need to null at callsites?\n};\n\n\n/**\n * killFace_ destroys a face and removes it from the global face\n * list. It updates the face loop to point to a given new face.\n *\n * @private\n * @param {libtess.GluFace} fDel [description].\n * @param {libtess.GluFace} newLFace [description].\n */\nlibtess.mesh.killFace_ = function(fDel, newLFace) {\n  var eStart = fDel.anEdge;\n\n  // change the left face of all affected edges\n  var e = eStart;\n  do {\n    e.lFace = newLFace;\n    e = e.lNext;\n  } while (e !== eStart);\n\n  // delete from circular doubly-linked list\n  var fPrev = fDel.prev;\n  var fNext = fDel.next;\n  fNext.prev = fPrev;\n  fPrev.next = fNext;\n\n  // TODO(bckenny): memFree( fDel );\n  // TODO(bckenny): need to null at callsites?\n};\n\n\n/* global libtess */\n\n/** @const */\nlibtess.normal = {};\n\n// TODO(bckenny): Integrate SLANTED_SWEEP somehow?\n/* The \"feature merging\" is not intended to be complete. There are\n * special cases where edges are nearly parallel to the sweep line\n * which are not implemented. The algorithm should still behave\n * robustly (ie. produce a reasonable tesselation) in the presence\n * of such edges, however it may miss features which could have been\n * merged. We could minimize this effect by choosing the sweep line\n * direction to be something unusual (ie. not parallel to one of the\n * coordinate axes).\n * #if defined(SLANTED_SWEEP)\n * #define S_UNIT_X  0.50941539564955385 // Pre-normalized\n * #define S_UNIT_Y  0.86052074622010633\n * #endif\n */\n\n/**\n * X coordinate of local basis for polygon projection.\n * @private\n * @const\n */\nlibtess.normal.S_UNIT_X_ = 1.0;\n\n/**\n * Y coordinate of local basis for polygon projection.\n * @private\n * @const\n */\nlibtess.normal.S_UNIT_Y_ = 0.0;\n\n/**\n * Determines a polygon normal and projects vertices onto the plane of the\n * polygon.\n * @param {!libtess.GluTesselator} tess\n */\nlibtess.normal.projectPolygon = function(tess) {\n  var computedNormal = false;\n\n  var norm = [\n    tess.normal[0],\n    tess.normal[1],\n    tess.normal[2]\n  ];\n  if (norm[0] === 0 && norm[1] === 0 && norm[2] === 0) {\n    libtess.normal.computeNormal_(tess, norm);\n    computedNormal = true;\n  }\n\n  var sUnit = tess.sUnit;\n  var tUnit = tess.tUnit;\n  var i = libtess.normal.longAxis_(norm);\n\n  // NOTE(bckenny): This branch is never taken. See comment on\n  // libtess.TRUE_PROJECT.\n  /* istanbul ignore if */\n  if (libtess.TRUE_PROJECT) {\n    // Choose the initial sUnit vector to be approximately perpendicular\n    // to the normal.\n    libtess.normal.normalize_(norm);\n\n    sUnit[i] = 0;\n    sUnit[(i + 1) % 3] = libtess.normal.S_UNIT_X_;\n    sUnit[(i + 2) % 3] = libtess.normal.S_UNIT_Y_;\n\n    // Now make it exactly perpendicular\n    var w = libtess.normal.dot_(sUnit, norm);\n    sUnit[0] -= w * norm[0];\n    sUnit[1] -= w * norm[1];\n    sUnit[2] -= w * norm[2];\n    libtess.normal.normalize_(sUnit);\n\n    // Choose tUnit so that (sUnit,tUnit,norm) form a right-handed frame\n    tUnit[0] = norm[1] * sUnit[2] - norm[2] * sUnit[1];\n    tUnit[1] = norm[2] * sUnit[0] - norm[0] * sUnit[2];\n    tUnit[2] = norm[0] * sUnit[1] - norm[1] * sUnit[0];\n    libtess.normal.normalize_(tUnit);\n\n  } else {\n    // Project perpendicular to a coordinate axis -- better numerically\n    sUnit[i] = 0;\n    sUnit[(i + 1) % 3] = libtess.normal.S_UNIT_X_;\n    sUnit[(i + 2) % 3] = libtess.normal.S_UNIT_Y_;\n\n    tUnit[i] = 0;\n    tUnit[(i + 1) % 3] = (norm[i] > 0) ?\n        -libtess.normal.S_UNIT_Y_ : libtess.normal.S_UNIT_Y_;\n    tUnit[(i + 2) % 3] = (norm[i] > 0) ?\n        libtess.normal.S_UNIT_X_ : -libtess.normal.S_UNIT_X_;\n  }\n\n  // Project the vertices onto the sweep plane\n  var vHead = tess.mesh.vHead;\n  for (var v = vHead.next; v !== vHead; v = v.next) {\n    v.s = libtess.normal.dot_(v.coords, sUnit);\n    v.t = libtess.normal.dot_(v.coords, tUnit);\n  }\n\n  if (computedNormal) {\n    libtess.normal.checkOrientation_(tess);\n  }\n};\n\n/**\n * Computes the dot product of vectors u and v.\n * @private\n * @param {!Array.<number>} u\n * @param {!Array.<number>} v\n * @return {number}\n */\nlibtess.normal.dot_ = function(u, v) {\n  return u[0] * v[0] + u[1] * v[1] + u[2] * v[2];\n};\n\n// NOTE(bckenny): only called from within libtess.normal.projectPolygon's\n// TRUE_PROJECT branch, so ignoring for code coverage.\n/* istanbul ignore next */\n/**\n * Normalize vector v.\n * @private\n * @param {!Array.<number>} v\n */\nlibtess.normal.normalize_ = function(v) {\n  var len = v[0] * v[0] + v[1] * v[1] + v[2] * v[2];\n\n  len = Math.sqrt(len);\n  v[0] /= len;\n  v[1] /= len;\n  v[2] /= len;\n};\n\n/**\n * Returns the index of the longest component of vector v.\n * @private\n * @param {!Array.<number>} v\n * @return {number}\n */\nlibtess.normal.longAxis_ = function(v) {\n  var i = 0;\n\n  if (Math.abs(v[1]) > Math.abs(v[0])) {\n    i = 1;\n  }\n  if (Math.abs(v[2]) > Math.abs(v[i])) {\n    i = 2;\n  }\n\n  return i;\n};\n\n/**\n * Compute an approximate normal of the polygon from the vertices themselves.\n * Result returned in norm.\n * @private\n * @param {!libtess.GluTesselator} tess\n * @param {!Array.<number>} norm\n */\nlibtess.normal.computeNormal_ = function(tess, norm) {\n  var maxVal = [\n    -2 * libtess.GLU_TESS_MAX_COORD,\n    -2 * libtess.GLU_TESS_MAX_COORD,\n    -2 * libtess.GLU_TESS_MAX_COORD\n  ];\n  var minVal = [\n    2 * libtess.GLU_TESS_MAX_COORD,\n    2 * libtess.GLU_TESS_MAX_COORD,\n    2 * libtess.GLU_TESS_MAX_COORD\n  ];\n  var maxVert = [];\n  var minVert = [];\n\n  var v;\n  var vHead = tess.mesh.vHead;\n  for (v = vHead.next; v !== vHead; v = v.next) {\n    for (var i = 0; i < 3; ++i) {\n      var c = v.coords[i];\n      if (c < minVal[i]) { minVal[i] = c; minVert[i] = v; }\n      if (c > maxVal[i]) { maxVal[i] = c; maxVert[i] = v; }\n    }\n  }\n\n  // Find two vertices separated by at least 1/sqrt(3) of the maximum\n  // distance between any two vertices\n  var index = 0;\n  if (maxVal[1] - minVal[1] > maxVal[0] - minVal[0]) { index = 1; }\n  if (maxVal[2] - minVal[2] > maxVal[index] - minVal[index]) { index = 2; }\n  if (minVal[index] >= maxVal[index]) {\n    // All vertices are the same -- normal doesn't matter\n    norm[0] = 0; norm[1] = 0; norm[2] = 1;\n    return;\n  }\n\n  // Look for a third vertex which forms the triangle with maximum area\n  // (Length of normal == twice the triangle area)\n  var maxLen2 = 0;\n  var v1 = minVert[index];\n  var v2 = maxVert[index];\n  var tNorm = [0, 0, 0];\n  var d1 = [\n    v1.coords[0] - v2.coords[0],\n    v1.coords[1] - v2.coords[1],\n    v1.coords[2] - v2.coords[2]\n  ];\n  var d2 = [0, 0, 0];\n  for (v = vHead.next; v !== vHead; v = v.next) {\n    d2[0] = v.coords[0] - v2.coords[0];\n    d2[1] = v.coords[1] - v2.coords[1];\n    d2[2] = v.coords[2] - v2.coords[2];\n    tNorm[0] = d1[1] * d2[2] - d1[2] * d2[1];\n    tNorm[1] = d1[2] * d2[0] - d1[0] * d2[2];\n    tNorm[2] = d1[0] * d2[1] - d1[1] * d2[0];\n    var tLen2 = tNorm[0] * tNorm[0] + tNorm[1] * tNorm[1] + tNorm[2] * tNorm[2];\n    if (tLen2 > maxLen2) {\n      maxLen2 = tLen2;\n      norm[0] = tNorm[0];\n      norm[1] = tNorm[1];\n      norm[2] = tNorm[2];\n    }\n  }\n\n  if (maxLen2 <= 0) {\n    // All points lie on a single line -- any decent normal will do\n    norm[0] = norm[1] = norm[2] = 0;\n    norm[libtess.normal.longAxis_(d1)] = 1;\n  }\n};\n\n/**\n * Check that the sum of the signed area of all projected contours is\n * non-negative. If not, negate the t-coordinates to reverse the orientation and\n * make it so.\n * @private\n * @param {!libtess.GluTesselator} tess\n */\nlibtess.normal.checkOrientation_ = function(tess) {\n  var area = 0;\n  var fHead = tess.mesh.fHead;\n  for (var f = fHead.next; f !== fHead; f = f.next) {\n    var e = f.anEdge;\n    if (e.winding <= 0) { continue; }\n    do {\n      area += (e.org.s - e.dst().s) * (e.org.t + e.dst().t);\n      e = e.lNext;\n    } while (e !== f.anEdge);\n  }\n\n  if (area < 0) {\n    // Reverse the orientation by flipping all the t-coordinates\n    var vHead = tess.mesh.vHead;\n    for (var v = vHead.next; v !== vHead; v = v.next) {\n      v.t = -v.t;\n    }\n    tess.tUnit[0] = -tess.tUnit[0];\n    tess.tUnit[1] = -tess.tUnit[1];\n    tess.tUnit[2] = -tess.tUnit[2];\n  }\n};\n\n\n/* global libtess */\n\n/** @const */\nlibtess.render = {};\n\n/**\n * Takes a mesh, breaks it into separate triangles, and renders them. The\n * rendering output is provided as callbacks (see the API). Set flagEdges to\n * true to get edgeFlag callbacks (tess.flagBoundary in original libtess).\n * @param {!libtess.GluTesselator} tess\n * @param {!libtess.GluMesh} mesh\n * @param {boolean} flagEdges\n */\nlibtess.render.renderMesh = function(tess, mesh, flagEdges) {\n  var beginOrBeginDataCalled = false;\n\n  // TODO(bckenny): edgeState needs to be boolean, but !== on first call\n  // force edge state output for first vertex\n  var edgeState = -1;\n\n  // We examine all faces in an arbitrary order. Whenever we find\n  // an inside triangle f, we render f.\n  // NOTE(bckenny): go backwards through face list to match original libtess\n  // triangle order\n  for (var f = mesh.fHead.prev; f !== mesh.fHead; f = f.prev) {\n    if (f.inside) {\n      // We're going to emit a triangle, so call begin callback once\n      if (!beginOrBeginDataCalled) {\n        tess.callBeginOrBeginData(libtess.primitiveType.GL_TRIANGLES);\n        beginOrBeginDataCalled = true;\n      }\n\n      // check that face has only three edges\n      var e = f.anEdge;\n      // Loop once for each edge (there will always be 3 edges)\n      do {\n        if (flagEdges) {\n          // Set the \"edge state\" to true just before we output the\n          // first vertex of each edge on the polygon boundary.\n          var newState = !e.rFace().inside ? 1 : 0; // TODO(bckenny): total hack to get edgeState working. fix me.\n          if (edgeState !== newState) {\n            edgeState = newState;\n            // TODO(bckenny): edgeState should be boolean now\n            tess.callEdgeFlagOrEdgeFlagData(!!edgeState);\n          }\n        }\n\n        // emit vertex\n        tess.callVertexOrVertexData(e.org.data);\n\n        e = e.lNext;\n      } while (e !== f.anEdge);\n    }\n  }\n\n  // only call end callback if begin was called\n  if (beginOrBeginDataCalled) {\n    tess.callEndOrEndData();\n  }\n};\n\n/**\n * Takes a mesh, and outputs one contour for each face marked \"inside\". The\n * rendering output is provided as callbacks (see the API).\n * @param {!libtess.GluTesselator} tess\n * @param {!libtess.GluMesh} mesh\n */\nlibtess.render.renderBoundary = function(tess, mesh) {\n  for (var f = mesh.fHead.next; f !== mesh.fHead; f = f.next) {\n    if (f.inside) {\n      tess.callBeginOrBeginData(libtess.primitiveType.GL_LINE_LOOP);\n\n      var e = f.anEdge;\n      do {\n        tess.callVertexOrVertexData(e.org.data);\n        e = e.lNext;\n      } while (e !== f.anEdge);\n\n      tess.callEndOrEndData();\n    }\n  }\n};\n\n\n/* global libtess */\n\n// TODO(bckenny): a number of these never return null (as opposed to original) and should be typed appropriately\n\n/*\n * Invariants for the Edge Dictionary.\n * - each pair of adjacent edges e2=succ(e1) satisfies edgeLeq_(e1,e2)\n *   at any valid location of the sweep event\n * - if edgeLeq_(e2,e1) as well (at any valid sweep event), then e1 and e2\n *   share a common endpoint\n * - for each e, e.dst() has been processed, but not e.org\n * - each edge e satisfies vertLeq(e.dst(),event) && vertLeq(event,e.org)\n *   where \"event\" is the current sweep line event.\n * - no edge e has zero length\n *\n * Invariants for the Mesh (the processed portion).\n * - the portion of the mesh left of the sweep line is a planar graph,\n *   ie. there is *some* way to embed it in the plane\n * - no processed edge has zero length\n * - no two processed vertices have identical coordinates\n * - each \"inside\" region is monotone, ie. can be broken into two chains\n *   of monotonically increasing vertices according to VertLeq(v1,v2)\n *   - a non-invariant: these chains may intersect (very slightly)\n *\n * Invariants for the Sweep.\n * - if none of the edges incident to the event vertex have an activeRegion\n *   (ie. none of these edges are in the edge dictionary), then the vertex\n *   has only right-going edges.\n * - if an edge is marked \"fixUpperEdge\" (it is a temporary edge introduced\n *   by ConnectRightVertex), then it is the only right-going edge from\n *   its associated vertex.  (This says that these edges exist only\n *   when it is necessary.)\n */\n\n/** @const */\nlibtess.sweep = {};\n\n\n/**\n * Make the sentinel coordinates big enough that they will never be\n * merged with real input features.  (Even with the largest possible\n * input contour and the maximum tolerance of 1.0, no merging will be\n * done with coordinates larger than 3 * libtess.GLU_TESS_MAX_COORD).\n * @private\n * @const\n * @type {number}\n */\nlibtess.sweep.SENTINEL_COORD_ = 4 * libtess.GLU_TESS_MAX_COORD;\n\n\n/**\n * Because vertices at exactly the same location are merged together\n * before we process the sweep event, some degenerate cases can't occur.\n * However if someone eventually makes the modifications required to\n * merge features which are close together, the cases below marked\n * TOLERANCE_NONZERO will be useful.  They were debugged before the\n * code to merge identical vertices in the main loop was added.\n * @private\n * @const\n * @type {boolean}\n */\nlibtess.sweep.TOLERANCE_NONZERO_ = false;\n\n\n/**\n * computeInterior(tess) computes the planar arrangement specified\n * by the given contours, and further subdivides this arrangement\n * into regions. Each region is marked \"inside\" if it belongs\n * to the polygon, according to the rule given by tess.windingRule.\n * Each interior region is guaranteed be monotone.\n *\n * @param {libtess.GluTesselator} tess [description].\n */\nlibtess.sweep.computeInterior = function(tess) {\n  tess.fatalError = false;\n\n  // Each vertex defines an event for our sweep line. Start by inserting\n  // all the vertices in a priority queue. Events are processed in\n  // lexicographic order, ie.\n  // e1 < e2  iff  e1.x < e2.x || (e1.x == e2.x && e1.y < e2.y)\n  libtess.sweep.removeDegenerateEdges_(tess);\n  libtess.sweep.initPriorityQ_(tess);\n  libtess.sweep.initEdgeDict_(tess);\n\n  // TODO(bckenny): don't need the cast if pq's key is better typed\n  var v;\n  while ((v = /** @type {libtess.GluVertex} */(tess.pq.extractMin())) !== null) {\n    for (;;) {\n      var vNext = /** @type {libtess.GluVertex} */(tess.pq.minimum());\n      if (vNext === null || !libtess.geom.vertEq(vNext, v)) {\n        break;\n      }\n\n      /* Merge together all vertices at exactly the same location.\n       * This is more efficient than processing them one at a time,\n       * simplifies the code (see connectLeftDegenerate), and is also\n       * important for correct handling of certain degenerate cases.\n       * For example, suppose there are two identical edges A and B\n       * that belong to different contours (so without this code they would\n       * be processed by separate sweep events).  Suppose another edge C\n       * crosses A and B from above.  When A is processed, we split it\n       * at its intersection point with C.  However this also splits C,\n       * so when we insert B we may compute a slightly different\n       * intersection point.  This might leave two edges with a small\n       * gap between them.  This kind of error is especially obvious\n       * when using boundary extraction (GLU_TESS_BOUNDARY_ONLY).\n       */\n      vNext = /** @type {libtess.GluVertex} */(tess.pq.extractMin());\n      libtess.sweep.spliceMergeVertices_(tess, v.anEdge, vNext.anEdge);\n    }\n    libtess.sweep.sweepEvent_(tess, v);\n  }\n\n  // TODO(bckenny): what does the next comment mean? can we eliminate event except when debugging?\n  // Set tess.event for debugging purposes\n  var minRegion = tess.dict.getMin().getKey();\n  tess.event = minRegion.eUp.org;\n  libtess.sweep.doneEdgeDict_(tess);\n  libtess.sweep.donePriorityQ_(tess);\n\n  libtess.sweep.removeDegenerateFaces_(tess.mesh);\n  tess.mesh.checkMesh();\n};\n\n\n/**\n * When we merge two edges into one, we need to compute the combined\n * winding of the new edge.\n * @private\n * @param {libtess.GluHalfEdge} eDst [description].\n * @param {libtess.GluHalfEdge} eSrc [description].\n */\nlibtess.sweep.addWinding_ = function(eDst, eSrc) {\n  // NOTE(bckenny): from AddWinding macro\n  eDst.winding += eSrc.winding;\n  eDst.sym.winding += eSrc.sym.winding;\n};\n\n\n/**\n * Both edges must be directed from right to left (this is the canonical\n * direction for the upper edge of each region).\n *\n * The strategy is to evaluate a \"t\" value for each edge at the\n * current sweep line position, given by tess.event.  The calculations\n * are designed to be very stable, but of course they are not perfect.\n *\n * Special case: if both edge destinations are at the sweep event,\n * we sort the edges by slope (they would otherwise compare equally).\n *\n * @private\n * @param {!libtess.GluTesselator} tess\n * @param {!libtess.ActiveRegion} reg1\n * @param {!libtess.ActiveRegion} reg2\n * @return {boolean}\n */\nlibtess.sweep.edgeLeq_ = function(tess, reg1, reg2) {\n  var event = tess.event;\n  var e1 = reg1.eUp;\n  var e2 = reg2.eUp;\n\n  if (e1.dst() === event) {\n    if (e2.dst() === event) {\n      // Two edges right of the sweep line which meet at the sweep event.\n      // Sort them by slope.\n      if (libtess.geom.vertLeq(e1.org, e2.org)) {\n        return libtess.geom.edgeSign(e2.dst(), e1.org, e2.org) <= 0;\n      }\n\n      return libtess.geom.edgeSign(e1.dst(), e2.org, e1.org) >= 0;\n    }\n\n    return libtess.geom.edgeSign(e2.dst(), event, e2.org) <= 0;\n  }\n\n  if (e2.dst() === event) {\n    return libtess.geom.edgeSign(e1.dst(), event, e1.org) >= 0;\n  }\n\n  // General case - compute signed distance *from* e1, e2 to event\n  var t1 = libtess.geom.edgeEval(e1.dst(), event, e1.org);\n  var t2 = libtess.geom.edgeEval(e2.dst(), event, e2.org);\n  return (t1 >= t2);\n};\n\n\n/**\n * [deleteRegion_ description]\n * @private\n * @param {libtess.GluTesselator} tess [description].\n * @param {libtess.ActiveRegion} reg [description].\n */\nlibtess.sweep.deleteRegion_ = function(tess, reg) {\n  if (reg.fixUpperEdge) {\n    // It was created with zero winding number, so it better be\n    // deleted with zero winding number (ie. it better not get merged\n    // with a real edge).\n  }\n\n  reg.eUp.activeRegion = null;\n\n  tess.dict.deleteNode(reg.nodeUp);\n  reg.nodeUp = null;\n\n  // memFree( reg ); TODO(bckenny)\n  // TODO(bckenny): may need to null at callsite\n};\n\n\n/**\n * Replace an upper edge which needs fixing (see connectRightVertex).\n * @private\n * @param {libtess.ActiveRegion} reg [description].\n * @param {libtess.GluHalfEdge} newEdge [description].\n */\nlibtess.sweep.fixUpperEdge_ = function(reg, newEdge) {\n  libtess.mesh.deleteEdge(reg.eUp);\n\n  reg.fixUpperEdge = false;\n  reg.eUp = newEdge;\n  newEdge.activeRegion = reg;\n};\n\n\n/**\n * Find the region above the uppermost edge with the same origin.\n * @private\n * @param {libtess.ActiveRegion} reg [description].\n * @return {libtess.ActiveRegion} [description].\n */\nlibtess.sweep.topLeftRegion_ = function(reg) {\n  var org = reg.eUp.org;\n\n  // Find the region above the uppermost edge with the same origin\n  do {\n    reg = reg.regionAbove();\n  } while (reg.eUp.org === org);\n\n  // If the edge above was a temporary edge introduced by connectRightVertex,\n  // now is the time to fix it.\n  if (reg.fixUpperEdge) {\n    var e = libtess.mesh.connect(reg.regionBelow().eUp.sym, reg.eUp.lNext);\n    libtess.sweep.fixUpperEdge_(reg, e);\n    reg = reg.regionAbove();\n  }\n\n  return reg;\n};\n\n\n/**\n * Find the region above the uppermost edge with the same destination.\n * @private\n * @param {libtess.ActiveRegion} reg [description].\n * @return {libtess.ActiveRegion} [description].\n */\nlibtess.sweep.topRightRegion_ = function(reg) {\n  var dst = reg.eUp.dst();\n\n  do {\n    reg = reg.regionAbove();\n  } while (reg.eUp.dst() === dst);\n\n  return reg;\n};\n\n\n/**\n * Add a new active region to the sweep line, *somewhere* below \"regAbove\"\n * (according to where the new edge belongs in the sweep-line dictionary).\n * The upper edge of the new region will be \"eNewUp\".\n * Winding number and \"inside\" flag are not updated.\n *\n * @private\n * @param {libtess.GluTesselator} tess [description].\n * @param {libtess.ActiveRegion} regAbove [description].\n * @param {libtess.GluHalfEdge} eNewUp [description].\n * @return {libtess.ActiveRegion} regNew.\n */\nlibtess.sweep.addRegionBelow_ = function(tess, regAbove, eNewUp) {\n  var regNew = new libtess.ActiveRegion();\n\n  regNew.eUp = eNewUp;\n  regNew.nodeUp = tess.dict.insertBefore(regAbove.nodeUp, regNew);\n  eNewUp.activeRegion = regNew;\n\n  return regNew;\n};\n\n\n/**\n * [isWindingInside_ description]\n * @private\n * @param {libtess.GluTesselator} tess [description].\n * @param {number} n int.\n * @return {boolean} [description].\n */\nlibtess.sweep.isWindingInside_ = function(tess, n) {\n  switch (tess.windingRule) {\n    case libtess.windingRule.GLU_TESS_WINDING_ODD:\n      return ((n & 1) !== 0);\n    case libtess.windingRule.GLU_TESS_WINDING_NONZERO:\n      return (n !== 0);\n    case libtess.windingRule.GLU_TESS_WINDING_POSITIVE:\n      return (n > 0);\n    case libtess.windingRule.GLU_TESS_WINDING_NEGATIVE:\n      return (n < 0);\n    case libtess.windingRule.GLU_TESS_WINDING_ABS_GEQ_TWO:\n      return (n >= 2) || (n <= -2);\n  }\n\n  // TODO(bckenny): not reached\n  return false;\n};\n\n\n/**\n * [computeWinding_ description]\n * @private\n * @param {libtess.GluTesselator} tess [description].\n * @param {libtess.ActiveRegion} reg [description].\n */\nlibtess.sweep.computeWinding_ = function(tess, reg) {\n  reg.windingNumber = reg.regionAbove().windingNumber + reg.eUp.winding;\n  reg.inside = libtess.sweep.isWindingInside_(tess, reg.windingNumber);\n};\n\n\n/**\n * Delete a region from the sweep line. This happens when the upper\n * and lower chains of a region meet (at a vertex on the sweep line).\n * The \"inside\" flag is copied to the appropriate mesh face (we could\n * not do this before -- since the structure of the mesh is always\n * changing, this face may not have even existed until now).\n *\n * @private\n * @param {libtess.GluTesselator} tess [description].\n * @param {libtess.ActiveRegion} reg [description].\n */\nlibtess.sweep.finishRegion_ = function(tess, reg) {\n  // TODO(bckenny): may need to null reg at callsite\n\n  var e = reg.eUp;\n  var f = e.lFace;\n\n  f.inside = reg.inside;\n  f.anEdge = e;   // optimization for tessmono.tessellateMonoRegion() // TODO(bckenny): how so?\n  libtess.sweep.deleteRegion_(tess, reg);\n};\n\n\n/**\n * We are given a vertex with one or more left-going edges. All affected\n * edges should be in the edge dictionary. Starting at regFirst.eUp,\n * we walk down deleting all regions where both edges have the same\n * origin vOrg. At the same time we copy the \"inside\" flag from the\n * active region to the face, since at this point each face will belong\n * to at most one region (this was not necessarily true until this point\n * in the sweep). The walk stops at the region above regLast; if regLast\n * is null we walk as far as possible. At the same time we relink the\n * mesh if necessary, so that the ordering of edges around vOrg is the\n * same as in the dictionary.\n *\n * @private\n * @param {libtess.GluTesselator} tess [description].\n * @param {libtess.ActiveRegion} regFirst [description].\n * @param {libtess.ActiveRegion} regLast [description].\n * @return {libtess.GluHalfEdge} [description].\n */\nlibtess.sweep.finishLeftRegions_ = function(tess, regFirst, regLast) {\n  var regPrev = regFirst;\n  var ePrev = regFirst.eUp;\n  while (regPrev !== regLast) {\n    // placement was OK\n    regPrev.fixUpperEdge = false;\n    var reg = regPrev.regionBelow();\n    var e = reg.eUp;\n    if (e.org !== ePrev.org) {\n      if (!reg.fixUpperEdge) {\n        /* Remove the last left-going edge. Even though there are no further\n         * edges in the dictionary with this origin, there may be further\n         * such edges in the mesh (if we are adding left edges to a vertex\n         * that has already been processed). Thus it is important to call\n         * finishRegion rather than just deleteRegion.\n         */\n        libtess.sweep.finishRegion_(tess, regPrev);\n        break;\n      }\n\n      // If the edge below was a temporary edge introduced by\n      // connectRightVertex, now is the time to fix it.\n      e = libtess.mesh.connect(ePrev.lPrev(), e.sym);\n      libtess.sweep.fixUpperEdge_(reg, e);\n    }\n\n    // Relink edges so that ePrev.oNext === e\n    if (ePrev.oNext !== e) {\n      libtess.mesh.meshSplice(e.oPrev(), e);\n      libtess.mesh.meshSplice(ePrev, e);\n    }\n\n    // may change reg.eUp\n    libtess.sweep.finishRegion_(tess, regPrev);\n    ePrev = reg.eUp;\n    regPrev = reg;\n  }\n\n  return ePrev;\n};\n\n\n/**\n * Purpose: insert right-going edges into the edge dictionary, and update\n * winding numbers and mesh connectivity appropriately. All right-going\n * edges share a common origin vOrg. Edges are inserted CCW starting at\n * eFirst; the last edge inserted is eLast.oPrev. If vOrg has any\n * left-going edges already processed, then eTopLeft must be the edge\n * such that an imaginary upward vertical segment from vOrg would be\n * contained between eTopLeft.oPrev and eTopLeft; otherwise eTopLeft\n * should be null.\n *\n * @private\n * @param {libtess.GluTesselator} tess [description].\n * @param {libtess.ActiveRegion} regUp [description].\n * @param {libtess.GluHalfEdge} eFirst [description].\n * @param {libtess.GluHalfEdge} eLast [description].\n * @param {libtess.GluHalfEdge} eTopLeft [description].\n * @param {boolean} cleanUp [description].\n */\nlibtess.sweep.addRightEdges_ = function(tess, regUp, eFirst, eLast, eTopLeft,\n    cleanUp) {\n\n  var firstTime = true;\n\n  // Insert the new right-going edges in the dictionary\n  var e = eFirst;\n  do {\n    libtess.sweep.addRegionBelow_(tess, regUp, e.sym);\n    e = e.oNext;\n  } while (e !== eLast);\n\n  // Walk *all* right-going edges from e.org, in the dictionary order,\n  // updating the winding numbers of each region, and re-linking the mesh\n  // edges to match the dictionary ordering (if necessary).\n  if (eTopLeft === null) {\n    eTopLeft = regUp.regionBelow().eUp.rPrev();\n  }\n  var regPrev = regUp;\n  var ePrev = eTopLeft;\n  var reg;\n  for (;;) {\n    reg = regPrev.regionBelow();\n    e = reg.eUp.sym;\n    if (e.org !== ePrev.org) {\n      break;\n    }\n\n    if (e.oNext !== ePrev) {\n      // Unlink e from its current position, and relink below ePrev\n      libtess.mesh.meshSplice(e.oPrev(), e);\n      libtess.mesh.meshSplice(ePrev.oPrev(), e);\n    }\n    // Compute the winding number and \"inside\" flag for the new regions\n    reg.windingNumber = regPrev.windingNumber - e.winding;\n    reg.inside = libtess.sweep.isWindingInside_(tess, reg.windingNumber);\n\n    // Check for two outgoing edges with same slope -- process these\n    // before any intersection tests (see example in libtess.sweep.computeInterior).\n    regPrev.dirty = true;\n    if (!firstTime && libtess.sweep.checkForRightSplice_(tess, regPrev)) {\n      libtess.sweep.addWinding_(e, ePrev);\n      libtess.sweep.deleteRegion_(tess, regPrev); // TODO(bckenny): need to null regPrev anywhere else?\n      libtess.mesh.deleteEdge(ePrev);\n    }\n    firstTime = false;\n    regPrev = reg;\n    ePrev = e;\n  }\n\n  regPrev.dirty = true;\n\n  if (cleanUp) {\n    // Check for intersections between newly adjacent edges.\n    libtess.sweep.walkDirtyRegions_(tess, regPrev);\n  }\n};\n\n\n/**\n * [callCombine_ description]\n * @private\n * @param {libtess.GluTesselator} tess [description].\n * @param {libtess.GluVertex} isect [description].\n * @param {Array.<Object>} data [description].\n * @param {Array.<number>} weights [description].\n * @param {boolean} needed [description].\n */\nlibtess.sweep.callCombine_ = function(tess, isect, data, weights, needed) {\n  // Copy coord data in case the callback changes it.\n  var coords = [\n    isect.coords[0],\n    isect.coords[1],\n    isect.coords[2]\n  ];\n\n  isect.data = null;\n  isect.data = tess.callCombineOrCombineData(coords, data, weights);\n  if (isect.data === null) {\n    if (!needed) {\n      // not needed, so just use data from first vertex\n      isect.data = data[0];\n\n    } else if (!tess.fatalError) {\n      // The only way fatal error is when two edges are found to intersect,\n      // but the user has not provided the callback necessary to handle\n      // generated intersection points.\n      tess.callErrorOrErrorData(\n          libtess.errorType.GLU_TESS_NEED_COMBINE_CALLBACK);\n      tess.fatalError = true;\n    }\n  }\n};\n\n\n/**\n * Two vertices with idential coordinates are combined into one.\n * e1.org is kept, while e2.org is discarded.\n * @private\n * @param {libtess.GluTesselator} tess [description].\n * @param {libtess.GluHalfEdge} e1 [description].\n * @param {libtess.GluHalfEdge} e2 [description].\n */\nlibtess.sweep.spliceMergeVertices_ = function(tess, e1, e2) {\n  // TODO(bckenny): better way to init these? save them?\n  var data = [null, null, null, null];\n  var weights = [0.5, 0.5, 0, 0];\n\n  data[0] = e1.org.data;\n  data[1] = e2.org.data;\n  libtess.sweep.callCombine_(tess, e1.org, data, weights, false);\n  libtess.mesh.meshSplice(e1, e2);\n};\n\n\n/**\n * Find some weights which describe how the intersection vertex is\n * a linear combination of org and dst. Each of the two edges\n * which generated \"isect\" is allocated 50% of the weight; each edge\n * splits the weight between its org and dst according to the\n * relative distance to \"isect\".\n *\n * @private\n * @param {libtess.GluVertex} isect [description].\n * @param {libtess.GluVertex} org [description].\n * @param {libtess.GluVertex} dst [description].\n * @param {Array.<number>} weights [description].\n * @param {number} weightIndex Index into weights for first weight to supply.\n */\nlibtess.sweep.vertexWeights_ = function(isect, org, dst, weights, weightIndex) {\n  // TODO(bckenny): think through how we can use L1dist here and be correct for coords\n  var t1 = libtess.geom.vertL1dist(org, isect);\n  var t2 = libtess.geom.vertL1dist(dst, isect);\n\n  // TODO(bckenny): introduced weightIndex to mimic addressing in original\n  // 1) document (though it is private and only used from getIntersectData)\n  // 2) better way? manually inline into getIntersectData? supply two two-length tmp arrays?\n  var i0 = weightIndex;\n  var i1 = weightIndex + 1;\n  weights[i0] = 0.5 * t2 / (t1 + t2);\n  weights[i1] = 0.5 * t1 / (t1 + t2);\n  isect.coords[0] += weights[i0] * org.coords[0] + weights[i1] * dst.coords[0];\n  isect.coords[1] += weights[i0] * org.coords[1] + weights[i1] * dst.coords[1];\n  isect.coords[2] += weights[i0] * org.coords[2] + weights[i1] * dst.coords[2];\n};\n\n\n/**\n * We've computed a new intersection point, now we need a \"data\" pointer\n * from the user so that we can refer to this new vertex in the\n * rendering callbacks.\n * @private\n * @param {libtess.GluTesselator} tess [description].\n * @param {libtess.GluVertex} isect [description].\n * @param {libtess.GluVertex} orgUp [description].\n * @param {libtess.GluVertex} dstUp [description].\n * @param {libtess.GluVertex} orgLo [description].\n * @param {libtess.GluVertex} dstLo [description].\n */\nlibtess.sweep.getIntersectData_ = function(tess, isect, orgUp, dstUp, orgLo,\n    dstLo) {\n\n  // TODO(bckenny): called for every intersection event, should these be from a pool?\n  // TODO(bckenny): better way to init these?\n  var weights = [0, 0, 0, 0];\n  var data = [\n    orgUp.data,\n    dstUp.data,\n    orgLo.data,\n    dstLo.data\n  ];\n\n  // TODO(bckenny): it appears isect is a reappropriated vertex, so does need to be zeroed.\n  // double check this.\n  isect.coords[0] = isect.coords[1] = isect.coords[2] = 0;\n\n  // TODO(bckenny): see note in libtess.sweep.vertexWeights_ for explanation of weightIndex. fix?\n  libtess.sweep.vertexWeights_(isect, orgUp, dstUp, weights, 0);\n  libtess.sweep.vertexWeights_(isect, orgLo, dstLo, weights, 2);\n\n  libtess.sweep.callCombine_(tess, isect, data, weights, true);\n};\n\n\n/**\n * Check the upper and lower edge of regUp, to make sure that the\n * eUp.org is above eLo, or eLo.org is below eUp (depending on which\n * origin is leftmost).\n *\n * The main purpose is to splice right-going edges with the same\n * dest vertex and nearly identical slopes (ie. we can't distinguish\n * the slopes numerically). However the splicing can also help us\n * to recover from numerical errors. For example, suppose at one\n * point we checked eUp and eLo, and decided that eUp.org is barely\n * above eLo. Then later, we split eLo into two edges (eg. from\n * a splice operation like this one). This can change the result of\n * our test so that now eUp.org is incident to eLo, or barely below it.\n * We must correct this condition to maintain the dictionary invariants.\n *\n * One possibility is to check these edges for intersection again\n * (i.e. checkForIntersect). This is what we do if possible. However\n * checkForIntersect requires that tess.event lies between eUp and eLo,\n * so that it has something to fall back on when the intersection\n * calculation gives us an unusable answer. So, for those cases where\n * we can't check for intersection, this routine fixes the problem\n * by just splicing the offending vertex into the other edge.\n * This is a guaranteed solution, no matter how degenerate things get.\n * Basically this is a combinatorial solution to a numerical problem.\n *\n * @private\n * @param {libtess.GluTesselator} tess [description].\n * @param {libtess.ActiveRegion} regUp [description].\n * @return {boolean} [description].\n */\nlibtess.sweep.checkForRightSplice_ = function(tess, regUp) {\n  // TODO(bckenny): fully learn how these two checks work\n\n  var regLo = regUp.regionBelow();\n  var eUp = regUp.eUp;\n  var eLo = regLo.eUp;\n\n  if (libtess.geom.vertLeq(eUp.org, eLo.org)) {\n    if (libtess.geom.edgeSign(eLo.dst(), eUp.org, eLo.org) > 0) {\n      return false;\n    }\n\n    // eUp.org appears to be below eLo\n    if (!libtess.geom.vertEq(eUp.org, eLo.org)) {\n      // Splice eUp.org into eLo\n      libtess.mesh.splitEdge(eLo.sym);\n      libtess.mesh.meshSplice(eUp, eLo.oPrev());\n      regUp.dirty = regLo.dirty = true;\n\n    } else if (eUp.org !== eLo.org) {\n      // merge the two vertices, discarding eUp.org\n      // TODO(bckenny): fix pqHandle null situation\n      tess.pq.remove(/** @type {libtess.PQHandle} */(eUp.org.pqHandle));\n      libtess.sweep.spliceMergeVertices_(tess, eLo.oPrev(), eUp);\n    }\n\n  } else {\n    if (libtess.geom.edgeSign(eUp.dst(), eLo.org, eUp.org) < 0) {\n      return false;\n    }\n\n    // eLo.org appears to be above eUp, so splice eLo.org into eUp\n    regUp.regionAbove().dirty = regUp.dirty = true;\n    libtess.mesh.splitEdge(eUp.sym);\n    libtess.mesh.meshSplice(eLo.oPrev(), eUp);\n  }\n\n  return true;\n};\n\n\n/**\n * Check the upper and lower edge of regUp to make sure that the\n * eUp.dst() is above eLo, or eLo.dst() is below eUp (depending on which\n * destination is rightmost).\n *\n * Theoretically, this should always be true. However, splitting an edge\n * into two pieces can change the results of previous tests. For example,\n * suppose at one point we checked eUp and eLo, and decided that eUp.dst()\n * is barely above eLo. Then later, we split eLo into two edges (eg. from\n * a splice operation like this one). This can change the result of\n * the test so that now eUp.dst() is incident to eLo, or barely below it.\n * We must correct this condition to maintain the dictionary invariants\n * (otherwise new edges might get inserted in the wrong place in the\n * dictionary, and bad stuff will happen).\n *\n * We fix the problem by just splicing the offending vertex into the\n * other edge.\n *\n * @private\n * @param {libtess.GluTesselator} tess description].\n * @param {libtess.ActiveRegion} regUp [description].\n * @return {boolean} [description].\n */\nlibtess.sweep.checkForLeftSplice_ = function(tess, regUp) {\n  var regLo = regUp.regionBelow();\n  var eUp = regUp.eUp;\n  var eLo = regLo.eUp;\n  var e;\n\n  if (libtess.geom.vertLeq(eUp.dst(), eLo.dst())) {\n    if (libtess.geom.edgeSign(eUp.dst(), eLo.dst(), eUp.org) < 0) {\n      return false;\n    }\n\n    // eLo.dst() is above eUp, so splice eLo.dst() into eUp\n    regUp.regionAbove().dirty = regUp.dirty = true;\n    e = libtess.mesh.splitEdge(eUp);\n    libtess.mesh.meshSplice(eLo.sym, e);\n    e.lFace.inside = regUp.inside;\n\n  } else {\n    if (libtess.geom.edgeSign(eLo.dst(), eUp.dst(), eLo.org) > 0) {\n      return false;\n    }\n\n    // eUp.dst() is below eLo, so splice eUp.dst() into eLo\n    regUp.dirty = regLo.dirty = true;\n    e = libtess.mesh.splitEdge(eLo);\n    libtess.mesh.meshSplice(eUp.lNext, eLo.sym);\n    e.rFace().inside = regUp.inside;\n  }\n\n  return true;\n};\n\n\n/**\n * Check the upper and lower edges of the given region to see if\n * they intersect. If so, create the intersection and add it\n * to the data structures.\n *\n * Returns true if adding the new intersection resulted in a recursive\n * call to addRightEdges_(); in this case all \"dirty\" regions have been\n * checked for intersections, and possibly regUp has been deleted.\n *\n * @private\n * @param {libtess.GluTesselator} tess [description].\n * @param {libtess.ActiveRegion} regUp [description].\n * @return {boolean} [description].\n */\nlibtess.sweep.checkForIntersect_ = function(tess, regUp) {\n  var regLo = regUp.regionBelow();\n  var eUp = regUp.eUp;\n  var eLo = regLo.eUp;\n  var orgUp = eUp.org;\n  var orgLo = eLo.org;\n  var dstUp = eUp.dst();\n  var dstLo = eLo.dst();\n\n  var isect = new libtess.GluVertex();\n\n  if (orgUp === orgLo) {\n    // right endpoints are the same\n    return false;\n  }\n\n  var tMinUp = Math.min(orgUp.t, dstUp.t);\n  var tMaxLo = Math.max(orgLo.t, dstLo.t);\n  if (tMinUp > tMaxLo) {\n    // t ranges do not overlap\n    return false;\n  }\n\n  if (libtess.geom.vertLeq(orgUp, orgLo)) {\n    if (libtess.geom.edgeSign(dstLo, orgUp, orgLo) > 0) {\n      return false;\n    }\n  } else {\n    if (libtess.geom.edgeSign(dstUp, orgLo, orgUp) < 0) {\n      return false;\n    }\n  }\n\n  // At this point the edges intersect, at least marginally\n  libtess.geom.edgeIntersect(dstUp, orgUp, dstLo, orgLo, isect);\n\n  // The following properties are guaranteed:\n\n  if (libtess.geom.vertLeq(isect, tess.event)) {\n    /* The intersection point lies slightly to the left of the sweep line,\n     * so move it until it's slightly to the right of the sweep line.\n     * (If we had perfect numerical precision, this would never happen\n     * in the first place). The easiest and safest thing to do is\n     * replace the intersection by tess.event.\n     */\n    isect.s = tess.event.s;\n    isect.t = tess.event.t;\n  }\n\n  // TODO(bckenny): try to find test54.d\n  /* Similarly, if the computed intersection lies to the right of the\n   * rightmost origin (which should rarely happen), it can cause\n   * unbelievable inefficiency on sufficiently degenerate inputs.\n   * (If you have the test program, try running test54.d with the\n   * \"X zoom\" option turned on).\n   */\n  var orgMin = libtess.geom.vertLeq(orgUp, orgLo) ? orgUp : orgLo;\n  if (libtess.geom.vertLeq(orgMin, isect)) {\n    isect.s = orgMin.s;\n    isect.t = orgMin.t;\n  }\n\n  if (libtess.geom.vertEq(isect, orgUp) || libtess.geom.vertEq(isect, orgLo)) {\n    // Easy case -- intersection at one of the right endpoints\n    libtess.sweep.checkForRightSplice_(tess, regUp);\n    return false;\n  }\n\n  // TODO(bckenny): clean this up; length is distracting\n  if ((!libtess.geom.vertEq(dstUp, tess.event) &&\n      libtess.geom.edgeSign(dstUp, tess.event, isect) >= 0) ||\n      (!libtess.geom.vertEq(dstLo, tess.event) &&\n      libtess.geom.edgeSign(dstLo, tess.event, isect) <= 0)) {\n\n    /* Very unusual -- the new upper or lower edge would pass on the\n     * wrong side of the sweep event, or through it. This can happen\n     * due to very small numerical errors in the intersection calculation.\n     */\n    if (dstLo === tess.event) {\n      // Splice dstLo into eUp, and process the new region(s)\n      libtess.mesh.splitEdge(eUp.sym);\n      libtess.mesh.meshSplice(eLo.sym, eUp);\n      regUp = libtess.sweep.topLeftRegion_(regUp);\n      eUp = regUp.regionBelow().eUp;\n      libtess.sweep.finishLeftRegions_(tess, regUp.regionBelow(), regLo);\n      libtess.sweep.addRightEdges_(tess, regUp, eUp.oPrev(), eUp, eUp, true);\n      return true;\n    }\n\n    if (dstUp === tess.event) {\n      // Splice dstUp into eLo, and process the new region(s)\n      libtess.mesh.splitEdge(eLo.sym);\n      libtess.mesh.meshSplice(eUp.lNext, eLo.oPrev());\n      regLo = regUp;\n      regUp = libtess.sweep.topRightRegion_(regUp);\n      var e = regUp.regionBelow().eUp.rPrev();\n      regLo.eUp = eLo.oPrev();\n      eLo = libtess.sweep.finishLeftRegions_(tess, regLo, null);\n      libtess.sweep.addRightEdges_(tess, regUp, eLo.oNext, eUp.rPrev(), e,\n          true);\n      return true;\n    }\n\n    /* Special case: called from connectRightVertex. If either\n     * edge passes on the wrong side of tess.event, split it\n     * (and wait for connectRightVertex to splice it appropriately).\n     */\n    if (libtess.geom.edgeSign(dstUp, tess.event, isect) >= 0) {\n      regUp.regionAbove().dirty = regUp.dirty = true;\n      libtess.mesh.splitEdge(eUp.sym);\n      eUp.org.s = tess.event.s;\n      eUp.org.t = tess.event.t;\n    }\n\n    if (libtess.geom.edgeSign(dstLo, tess.event, isect) <= 0) {\n      regUp.dirty = regLo.dirty = true;\n      libtess.mesh.splitEdge(eLo.sym);\n      eLo.org.s = tess.event.s;\n      eLo.org.t = tess.event.t;\n    }\n\n    // leave the rest for connectRightVertex\n    return false;\n  }\n\n  /* General case -- split both edges, splice into new vertex.\n   * When we do the splice operation, the order of the arguments is\n   * arbitrary as far as correctness goes. However, when the operation\n   * creates a new face, the work done is proportional to the size of\n   * the new face. We expect the faces in the processed part of\n   * the mesh (ie. eUp.lFace) to be smaller than the faces in the\n   * unprocessed original contours (which will be eLo.oPrev.lFace).\n   */\n  libtess.mesh.splitEdge(eUp.sym);\n  libtess.mesh.splitEdge(eLo.sym);\n  libtess.mesh.meshSplice(eLo.oPrev(), eUp);\n  eUp.org.s = isect.s;\n  eUp.org.t = isect.t;\n  eUp.org.pqHandle = tess.pq.insert(eUp.org);\n  libtess.sweep.getIntersectData_(tess, eUp.org, orgUp, dstUp, orgLo, dstLo);\n  regUp.regionAbove().dirty = regUp.dirty = regLo.dirty = true;\n\n  return false;\n};\n\n\n/**\n * When the upper or lower edge of any region changes, the region is\n * marked \"dirty\". This routine walks through all the dirty regions\n * and makes sure that the dictionary invariants are satisfied\n * (see the comments at the beginning of this file). Of course,\n * new dirty regions can be created as we make changes to restore\n * the invariants.\n * @private\n * @param {libtess.GluTesselator} tess [description].\n * @param {libtess.ActiveRegion} regUp [description].\n */\nlibtess.sweep.walkDirtyRegions_ = function(tess, regUp) {\n  var regLo = regUp.regionBelow();\n\n  for (;;) {\n    // Find the lowest dirty region (we walk from the bottom up).\n    while (regLo.dirty) {\n      regUp = regLo;\n      regLo = regLo.regionBelow();\n    }\n    if (!regUp.dirty) {\n      regLo = regUp;\n      regUp = regUp.regionAbove();\n      if (regUp === null || !regUp.dirty) {\n        // We've walked all the dirty regions\n        return;\n      }\n    }\n\n    regUp.dirty = false;\n    var eUp = regUp.eUp;\n    var eLo = regLo.eUp;\n\n    if (eUp.dst() !== eLo.dst()) {\n      // Check that the edge ordering is obeyed at the dst vertices.\n      if (libtess.sweep.checkForLeftSplice_(tess, regUp)) {\n        // If the upper or lower edge was marked fixUpperEdge, then\n        // we no longer need it (since these edges are needed only for\n        // vertices which otherwise have no right-going edges).\n        if (regLo.fixUpperEdge) {\n          libtess.sweep.deleteRegion_(tess, regLo);\n          libtess.mesh.deleteEdge(eLo);\n          regLo = regUp.regionBelow();\n          eLo = regLo.eUp;\n\n        } else if (regUp.fixUpperEdge) {\n          libtess.sweep.deleteRegion_(tess, regUp);\n          libtess.mesh.deleteEdge(eUp);\n          regUp = regLo.regionAbove();\n          eUp = regUp.eUp;\n        }\n      }\n    }\n\n    if (eUp.org !== eLo.org) {\n      if (eUp.dst() !== eLo.dst() && !regUp.fixUpperEdge &&\n          !regLo.fixUpperEdge &&\n          (eUp.dst() === tess.event || eLo.dst() === tess.event)) {\n        /* When all else fails in checkForIntersect(), it uses tess.event\n         * as the intersection location. To make this possible, it requires\n         * that tess.event lie between the upper and lower edges, and also\n         * that neither of these is marked fixUpperEdge (since in the worst\n         * case it might splice one of these edges into tess.event, and\n         * violate the invariant that fixable edges are the only right-going\n         * edge from their associated vertex).\n         */\n        if (libtess.sweep.checkForIntersect_(tess, regUp)) {\n          // walkDirtyRegions() was called recursively; we're done\n          return;\n        }\n\n      } else {\n        // Even though we can't use checkForIntersect(), the org vertices\n        // may violate the dictionary edge ordering. Check and correct this.\n        libtess.sweep.checkForRightSplice_(tess, regUp);\n      }\n    }\n\n    if (eUp.org === eLo.org && eUp.dst() === eLo.dst()) {\n      // A degenerate loop consisting of only two edges -- delete it.\n      libtess.sweep.addWinding_(eLo, eUp);\n      libtess.sweep.deleteRegion_(tess, regUp);\n      libtess.mesh.deleteEdge(eUp);\n      regUp = regLo.regionAbove();\n    }\n  }\n};\n\n\n/**\n * Purpose: connect a \"right\" vertex vEvent (one where all edges go left)\n * to the unprocessed portion of the mesh. Since there are no right-going\n * edges, two regions (one above vEvent and one below) are being merged\n * into one. regUp is the upper of these two regions.\n *\n * There are two reasons for doing this (adding a right-going edge):\n *  - if the two regions being merged are \"inside\", we must add an edge\n *    to keep them separated (the combined region would not be monotone).\n *  - in any case, we must leave some record of vEvent in the dictionary,\n *    so that we can merge vEvent with features that we have not seen yet.\n *    For example, maybe there is a vertical edge which passes just to\n *    the right of vEvent; we would like to splice vEvent into this edge.\n *\n * However, we don't want to connect vEvent to just any vertex. We don't\n * want the new edge to cross any other edges; otherwise we will create\n * intersection vertices even when the input data had no self-intersections.\n * (This is a bad thing; if the user's input data has no intersections,\n * we don't want to generate any false intersections ourselves.)\n *\n * Our eventual goal is to connect vEvent to the leftmost unprocessed\n * vertex of the combined region (the union of regUp and regLo).\n * But because of unseen vertices with all right-going edges, and also\n * new vertices which may be created by edge intersections, we don't\n * know where that leftmost unprocessed vertex is. In the meantime, we\n * connect vEvent to the closest vertex of either chain, and mark the region\n * as \"fixUpperEdge\". This flag says to delete and reconnect this edge\n * to the next processed vertex on the boundary of the combined region.\n * Quite possibly the vertex we connected to will turn out to be the\n * closest one, in which case we won't need to make any changes.\n *\n * @private\n * @param {libtess.GluTesselator} tess [description].\n * @param {libtess.ActiveRegion} regUp [description].\n * @param {libtess.GluHalfEdge} eBottomLeft [description].\n */\nlibtess.sweep.connectRightVertex_ = function(tess, regUp, eBottomLeft) {\n  var eTopLeft = eBottomLeft.oNext;\n  var regLo = regUp.regionBelow();\n  var eUp = regUp.eUp;\n  var eLo = regLo.eUp;\n  var degenerate = false;\n\n  if (eUp.dst() !== eLo.dst()) {\n    libtess.sweep.checkForIntersect_(tess, regUp);\n  }\n\n  // Possible new degeneracies: upper or lower edge of regUp may pass\n  // through vEvent, or may coincide with new intersection vertex\n  if (libtess.geom.vertEq(eUp.org, tess.event)) {\n    libtess.mesh.meshSplice(eTopLeft.oPrev(), eUp);\n    regUp = libtess.sweep.topLeftRegion_(regUp);\n    eTopLeft = regUp.regionBelow().eUp;\n    libtess.sweep.finishLeftRegions_(tess, regUp.regionBelow(), regLo);\n    degenerate = true;\n  }\n  if (libtess.geom.vertEq(eLo.org, tess.event)) {\n    libtess.mesh.meshSplice(eBottomLeft, eLo.oPrev());\n    eBottomLeft = libtess.sweep.finishLeftRegions_(tess, regLo, null);\n    degenerate = true;\n  }\n  if (degenerate) {\n    libtess.sweep.addRightEdges_(tess, regUp, eBottomLeft.oNext, eTopLeft,\n        eTopLeft, true);\n    return;\n  }\n\n  // Non-degenerate situation -- need to add a temporary, fixable edge.\n  // Connect to the closer of eLo.org, eUp.org.\n  var eNew;\n  if (libtess.geom.vertLeq(eLo.org, eUp.org)) {\n    eNew = eLo.oPrev();\n  } else {\n    eNew = eUp;\n  }\n  eNew = libtess.mesh.connect(eBottomLeft.lPrev(), eNew);\n\n  // Prevent cleanup, otherwise eNew might disappear before we've even\n  // had a chance to mark it as a temporary edge.\n  libtess.sweep.addRightEdges_(tess, regUp, eNew, eNew.oNext, eNew.oNext,\n      false);\n  eNew.sym.activeRegion.fixUpperEdge = true;\n  libtess.sweep.walkDirtyRegions_(tess, regUp);\n};\n\n\n/**\n * The event vertex lies exacty on an already-processed edge or vertex.\n * Adding the new vertex involves splicing it into the already-processed\n * part of the mesh.\n * @private\n * @param {libtess.GluTesselator} tess [description].\n * @param {libtess.ActiveRegion} regUp [description].\n * @param {libtess.GluVertex} vEvent [description].\n */\nlibtess.sweep.connectLeftDegenerate_ = function(tess, regUp, vEvent) {\n  var e = regUp.eUp;\n  /* istanbul ignore if */\n  if (libtess.geom.vertEq(e.org, vEvent)) {\n    // NOTE(bckenny): this code is unreachable but remains for a hypothetical\n    // future extension of libtess. See docs on libtess.sweep.TOLERANCE_NONZERO_\n    // for more information. Conditional on TOLERANCE_NONZERO_ to help Closure\n    // Compiler eliminate dead code.\n    // e.org is an unprocessed vertex - just combine them, and wait\n    // for e.org to be pulled from the queue\n    if (libtess.sweep.TOLERANCE_NONZERO_) {\n      libtess.sweep.spliceMergeVertices_(tess, e, vEvent.anEdge);\n    }\n    return;\n  }\n\n  if (!libtess.geom.vertEq(e.dst(), vEvent)) {\n    // General case -- splice vEvent into edge e which passes through it\n    libtess.mesh.splitEdge(e.sym);\n\n    if (regUp.fixUpperEdge) {\n      // This edge was fixable -- delete unused portion of original edge\n      libtess.mesh.deleteEdge(e.oNext);\n      regUp.fixUpperEdge = false;\n    }\n\n    libtess.mesh.meshSplice(vEvent.anEdge, e);\n\n    // recurse\n    libtess.sweep.sweepEvent_(tess, vEvent);\n    return;\n  }\n\n  // NOTE(bckenny): this code is unreachable but remains for a hypothetical\n  // future extension of libtess. See docs on libtess.sweep.TOLERANCE_NONZERO_\n  // for more information. Conditional on TOLERANCE_NONZERO_ to help Closure\n  // Compiler eliminate dead code.\n  // vEvent coincides with e.dst(), which has already been processed.\n  // Splice in the additional right-going edges.\n  /* istanbul ignore next */\n\n  /* istanbul ignore next */\n  if (libtess.sweep.TOLERANCE_NONZERO_) {\n    regUp = libtess.sweep.topRightRegion_(regUp);\n    var reg = regUp.regionBelow();\n    var eTopRight = reg.eUp.sym;\n    var eTopLeft = eTopRight.oNext;\n    var eLast = eTopLeft;\n\n    if (reg.fixUpperEdge) {\n      // Here e.dst() has only a single fixable edge going right.\n      // We can delete it since now we have some real right-going edges.\n\n      // there are some left edges too\n      libtess.sweep.deleteRegion_(tess, reg); // TODO(bckenny): something to null?\n      libtess.mesh.deleteEdge(eTopRight);\n      eTopRight = eTopLeft.oPrev();\n    }\n\n    libtess.mesh.meshSplice(vEvent.anEdge, eTopRight);\n    if (!libtess.geom.edgeGoesLeft(eTopLeft)) {\n      // e.dst() had no left-going edges -- indicate this to addRightEdges()\n      eTopLeft = null;\n    }\n\n    libtess.sweep.addRightEdges_(tess, regUp, eTopRight.oNext, eLast, eTopLeft,\n        true);\n  }\n};\n\n\n/**\n * Connect a \"left\" vertex (one where both edges go right)\n * to the processed portion of the mesh. Let R be the active region\n * containing vEvent, and let U and L be the upper and lower edge\n * chains of R. There are two possibilities:\n *\n * - the normal case: split R into two regions, by connecting vEvent to\n *   the rightmost vertex of U or L lying to the left of the sweep line\n *\n * - the degenerate case: if vEvent is close enough to U or L, we\n *   merge vEvent into that edge chain. The subcases are:\n *  - merging with the rightmost vertex of U or L\n *  - merging with the active edge of U or L\n *  - merging with an already-processed portion of U or L\n *\n * @private\n * @param {libtess.GluTesselator} tess   [description].\n * @param {libtess.GluVertex} vEvent [description].\n */\nlibtess.sweep.connectLeftVertex_ = function(tess, vEvent) {\n  // TODO(bckenny): tmp only used for sweep. better to keep tmp across calls?\n  var tmp = new libtess.ActiveRegion();\n\n  // NOTE(bckenny): this was commented out in the original\n  // libtess.assert(vEvent.anEdge.oNext.oNext === vEvent.anEdge);\n\n  // Get a pointer to the active region containing vEvent\n  tmp.eUp = vEvent.anEdge.sym;\n  var regUp = tess.dict.search(tmp).getKey();\n  var regLo = regUp.regionBelow();\n  var eUp = regUp.eUp;\n  var eLo = regLo.eUp;\n\n  // try merging with U or L first\n  if (libtess.geom.edgeSign(eUp.dst(), vEvent, eUp.org) === 0) {\n    libtess.sweep.connectLeftDegenerate_(tess, regUp, vEvent);\n    return;\n  }\n\n  // Connect vEvent to rightmost processed vertex of either chain.\n  // e.dst() is the vertex that we will connect to vEvent.\n  var reg = libtess.geom.vertLeq(eLo.dst(), eUp.dst()) ? regUp : regLo;\n  var eNew;\n  if (regUp.inside || reg.fixUpperEdge) {\n    if (reg === regUp) {\n      eNew = libtess.mesh.connect(vEvent.anEdge.sym, eUp.lNext);\n\n    } else {\n      var tempHalfEdge = libtess.mesh.connect(eLo.dNext(), vEvent.anEdge);\n      eNew = tempHalfEdge.sym;\n    }\n\n    if (reg.fixUpperEdge) {\n      libtess.sweep.fixUpperEdge_(reg, eNew);\n\n    } else {\n      libtess.sweep.computeWinding_(tess,\n          libtess.sweep.addRegionBelow_(tess, regUp, eNew));\n    }\n    libtess.sweep.sweepEvent_(tess, vEvent);\n\n  } else {\n    // The new vertex is in a region which does not belong to the polygon.\n    // We don''t need to connect this vertex to the rest of the mesh.\n    libtess.sweep.addRightEdges_(tess, regUp, vEvent.anEdge, vEvent.anEdge,\n        null, true);\n  }\n};\n\n\n/**\n * Does everything necessary when the sweep line crosses a vertex.\n * Updates the mesh and the edge dictionary.\n * @private\n * @param {libtess.GluTesselator} tess [description].\n * @param {libtess.GluVertex} vEvent [description].\n */\nlibtess.sweep.sweepEvent_ = function(tess, vEvent) {\n  tess.event = vEvent; // for access in edgeLeq_ // TODO(bckenny): wuh?\n\n  /* Check if this vertex is the right endpoint of an edge that is\n   * already in the dictionary.  In this case we don't need to waste\n   * time searching for the location to insert new edges.\n   */\n  var e = vEvent.anEdge;\n  while (e.activeRegion === null) {\n    e = e.oNext;\n    if (e === vEvent.anEdge) {\n      // All edges go right -- not incident to any processed edges\n      libtess.sweep.connectLeftVertex_(tess, vEvent);\n      return;\n    }\n  }\n\n  /* Processing consists of two phases: first we \"finish\" all the\n   * active regions where both the upper and lower edges terminate\n   * at vEvent (ie. vEvent is closing off these regions).\n   * We mark these faces \"inside\" or \"outside\" the polygon according\n   * to their winding number, and delete the edges from the dictionary.\n   * This takes care of all the left-going edges from vEvent.\n   */\n  var regUp = libtess.sweep.topLeftRegion_(e.activeRegion);\n  var reg = regUp.regionBelow();\n  var eTopLeft = reg.eUp;\n  var eBottomLeft = libtess.sweep.finishLeftRegions_(tess, reg, null);\n\n  /* Next we process all the right-going edges from vEvent. This\n   * involves adding the edges to the dictionary, and creating the\n   * associated \"active regions\" which record information about the\n   * regions between adjacent dictionary edges.\n   */\n  if (eBottomLeft.oNext === eTopLeft) {\n    // No right-going edges -- add a temporary \"fixable\" edge\n    libtess.sweep.connectRightVertex_(tess, regUp, eBottomLeft);\n\n  } else {\n    libtess.sweep.addRightEdges_(tess, regUp, eBottomLeft.oNext, eTopLeft,\n        eTopLeft, true);\n  }\n};\n\n\n/**\n * We add two sentinel edges above and below all other edges,\n * to avoid special cases at the top and bottom.\n * @private\n * @param {libtess.GluTesselator} tess [description].\n * @param {number} t [description].\n */\nlibtess.sweep.addSentinel_ = function(tess, t) {\n  var reg = new libtess.ActiveRegion();\n\n  var e = libtess.mesh.makeEdge(tess.mesh);\n\n  e.org.s = libtess.sweep.SENTINEL_COORD_;\n  e.org.t = t;\n  e.dst().s = -libtess.sweep.SENTINEL_COORD_;\n  e.dst().t = t;\n  tess.event = e.dst(); //initialize it\n\n  reg.eUp = e;\n  reg.windingNumber = 0;\n  reg.inside = false;\n  reg.fixUpperEdge = false;\n  reg.sentinel = true;\n  reg.dirty = false;\n  reg.nodeUp = tess.dict.insert(reg);\n};\n\n\n/**\n * We maintain an ordering of edge intersections with the sweep line.\n * This order is maintained in a dynamic dictionary.\n * @private\n * @param {libtess.GluTesselator} tess [description].\n */\nlibtess.sweep.initEdgeDict_ = function(tess) {\n  tess.dict = new libtess.Dict(tess, libtess.sweep.edgeLeq_);\n\n  libtess.sweep.addSentinel_(tess, -libtess.sweep.SENTINEL_COORD_);\n  libtess.sweep.addSentinel_(tess, libtess.sweep.SENTINEL_COORD_);\n};\n\n\n/**\n * [doneEdgeDict_ description]\n * @private\n * @param {libtess.GluTesselator} tess [description].\n */\nlibtess.sweep.doneEdgeDict_ = function(tess) {\n  // NOTE(bckenny): fixedEdges is only used in the assert below, so ignore so\n  // when asserts are removed jshint won't error.\n  /* jshint unused:false */\n  var fixedEdges = 0;\n\n  var reg;\n  while ((reg = tess.dict.getMin().getKey()) !== null) {\n    // At the end of all processing, the dictionary should contain\n    // only the two sentinel edges, plus at most one \"fixable\" edge\n    // created by connectRightVertex().\n    if (!reg.sentinel) {\n    }\n    libtess.sweep.deleteRegion_(tess, reg);\n  }\n\n  // NOTE(bckenny): see tess.dict.deleteDict_() for old delete dict function\n  tess.dict = null;\n};\n\n\n/**\n * Remove zero-length edges, and contours with fewer than 3 vertices.\n * @private\n * @param {libtess.GluTesselator} tess [description].\n */\nlibtess.sweep.removeDegenerateEdges_ = function(tess) {\n  var eHead = tess.mesh.eHead;\n\n  var eNext;\n  for (var e = eHead.next; e !== eHead; e = eNext) {\n    eNext = e.next;\n    var eLNext = e.lNext;\n\n    if (libtess.geom.vertEq(e.org, e.dst()) && e.lNext.lNext !== e) {\n      // Zero-length edge, contour has at least 3 edges\n      libtess.sweep.spliceMergeVertices_(tess, eLNext, e); // deletes e.org\n      libtess.mesh.deleteEdge(e); // e is a self-loop TODO(bckenny): does this comment really apply here?\n      e = eLNext;\n      eLNext = e.lNext;\n    }\n\n    if (eLNext.lNext === e) {\n      // Degenerate contour (one or two edges)\n      if (eLNext !== e) {\n        if (eLNext === eNext || eLNext === eNext.sym) {\n          eNext = eNext.next;\n        }\n        libtess.mesh.deleteEdge(eLNext);\n      }\n\n      if (e === eNext || e === eNext.sym) {\n        eNext = eNext.next;\n      }\n      libtess.mesh.deleteEdge(e);\n    }\n  }\n};\n\n\n/**\n * Construct priority queue and insert all vertices into it, which determines\n * the order in which vertices cross the sweep line.\n * @private\n * @param {libtess.GluTesselator} tess [description].\n */\nlibtess.sweep.initPriorityQ_ = function(tess) {\n  // TODO(bckenny): libtess.geom.vertLeq needs cast?\n  var pq = new libtess.PriorityQ(\n      /** @type {function(Object, Object): boolean} */(libtess.geom.vertLeq));\n  tess.pq = pq;\n\n  var vHead = tess.mesh.vHead;\n  var v;\n  for (v = vHead.next; v !== vHead; v = v.next) {\n    v.pqHandle = pq.insert(v);\n  }\n\n  pq.init();\n};\n\n\n/**\n * [donePriorityQ_ description]\n * @private\n * @param {libtess.GluTesselator} tess [description].\n */\nlibtess.sweep.donePriorityQ_ = function(tess) {\n  // TODO(bckenny): probably don't need deleteQ. check that function for comment\n  tess.pq.deleteQ();\n  tess.pq = null;\n};\n\n\n/**\n * Delete any degenerate faces with only two edges. walkDirtyRegions()\n * will catch almost all of these, but it won't catch degenerate faces\n * produced by splice operations on already-processed edges.\n * The two places this can happen are in finishLeftRegions(), when\n * we splice in a \"temporary\" edge produced by connectRightVertex(),\n * and in checkForLeftSplice(), where we splice already-processed\n * edges to ensure that our dictionary invariants are not violated\n * by numerical errors.\n *\n * In both these cases it is *very* dangerous to delete the offending\n * edge at the time, since one of the routines further up the stack\n * will sometimes be keeping a pointer to that edge.\n *\n * @private\n * @param {libtess.GluMesh} mesh [description].\n */\nlibtess.sweep.removeDegenerateFaces_ = function(mesh) {\n  var fNext;\n  for (var f = mesh.fHead.next; f !== mesh.fHead; f = fNext) {\n    fNext = f.next;\n    var e = f.anEdge;\n\n    if (e.lNext.lNext === e) {\n      // A face with only two edges\n      libtess.sweep.addWinding_(e.oNext, e);\n      libtess.mesh.deleteEdge(e);\n    }\n  }\n};\n\n\n/* global libtess */\n\n/** @const */\nlibtess.tessmono = {};\n\n/**\n * Tessellates a monotone region (what else would it do??). The region must\n * consist of a single loop of half-edges (see mesh.js) oriented CCW. \"Monotone\"\n * in this case means that any vertical line intersects the interior of the\n * region in a single interval.\n *\n * Tessellation consists of adding interior edges (actually pairs of\n * half-edges), to split the region into non-overlapping triangles.\n * @private\n * @param {!libtess.GluFace} face\n */\nlibtess.tessmono.tessellateMonoRegion_ = function(face) {\n  /* The basic idea is explained in Preparata and Shamos (which I don't\n   * have handy right now), although their implementation is more\n   * complicated than this one. The are two edge chains, an upper chain\n   * and a lower chain. We process all vertices from both chains in order,\n   * from right to left.\n   *\n   * The algorithm ensures that the following invariant holds after each\n   * vertex is processed: the untessellated region consists of two\n   * chains, where one chain (say the upper) is a single edge, and\n   * the other chain is concave. The left vertex of the single edge\n   * is always to the left of all vertices in the concave chain.\n   *\n   * Each step consists of adding the rightmost unprocessed vertex to one\n   * of the two chains, and forming a fan of triangles from the rightmost\n   * of two chain endpoints. Determining whether we can add each triangle\n   * to the fan is a simple orientation test. By making the fan as large\n   * as possible, we restore the invariant (check it yourself).\n   *\n   * All edges are oriented CCW around the boundary of the region.\n   * First, find the half-edge whose origin vertex is rightmost.\n   * Since the sweep goes from left to right, face.anEdge should\n   * be close to the edge we want.\n   */\n  var up = face.anEdge;\n\n  for (; libtess.geom.vertLeq(up.dst(), up.org); up = up.lPrev()) { }\n  for (; libtess.geom.vertLeq(up.org, up.dst()); up = up.lNext) { }\n\n  var lo = up.lPrev();\n\n  var tempHalfEdge;\n  while (up.lNext !== lo) {\n    if (libtess.geom.vertLeq(up.dst(), lo.org)) {\n      // up.dst() is on the left. It is safe to form triangles from lo.org.\n      // The edgeGoesLeft test guarantees progress even when some triangles\n      // are CW, given that the upper and lower chains are truly monotone.\n      while (lo.lNext !== up && (libtess.geom.edgeGoesLeft(lo.lNext) ||\n          libtess.geom.edgeSign(lo.org, lo.dst(), lo.lNext.dst()) <= 0)) {\n\n        tempHalfEdge = libtess.mesh.connect(lo.lNext, lo);\n        lo = tempHalfEdge.sym;\n      }\n      lo = lo.lPrev();\n\n    } else {\n      // lo.org is on the left. We can make CCW triangles from up.dst().\n      while (lo.lNext !== up && (libtess.geom.edgeGoesRight(up.lPrev()) ||\n          libtess.geom.edgeSign(up.dst(), up.org, up.lPrev().org) >= 0)) {\n\n        tempHalfEdge = libtess.mesh.connect(up, up.lPrev());\n        up = tempHalfEdge.sym;\n      }\n      up = up.lNext;\n    }\n  }\n\n  // Now lo.org == up.dst() == the leftmost vertex. The remaining region\n  // can be tessellated in a fan from this leftmost vertex.\n  while (lo.lNext.lNext !== up) {\n    tempHalfEdge = libtess.mesh.connect(lo.lNext, lo);\n    lo = tempHalfEdge.sym;\n  }\n};\n\n/**\n * Tessellates each region of the mesh which is marked \"inside\" the polygon.\n * Each such region must be monotone.\n * @param {!libtess.GluMesh} mesh\n */\nlibtess.tessmono.tessellateInterior = function(mesh) {\n  var next;\n  for (var f = mesh.fHead.next; f !== mesh.fHead; f = next) {\n    // Make sure we don't try to tessellate the new triangles.\n    next = f.next;\n    if (f.inside) {\n      libtess.tessmono.tessellateMonoRegion_(f);\n    }\n  }\n};\n\n/**\n * Zaps (i.e. sets to null) all faces which are not marked \"inside\" the polygon.\n * Since further mesh operations on null faces are not allowed, the main purpose\n * is to clean up the mesh so that exterior loops are not represented in the\n * data structure.\n * @param {!libtess.GluMesh} mesh\n */\nlibtess.tessmono.discardExterior = function(mesh) {\n  var next;\n  for (var f = mesh.fHead.next; f !== mesh.fHead; f = next) {\n    // Since f will be destroyed, save its next pointer.\n    next = f.next;\n    if (!f.inside) {\n      libtess.mesh.zapFace(f);\n    }\n  }\n};\n\n/**\n * Resets the winding numbers on all edges so that regions marked \"inside\" the\n * polygon have a winding number of \"value\", and regions outside have a winding\n * number of 0.\n *\n * If keepOnlyBoundary is true, it also deletes all edges which do not separate\n * an interior region from an exterior one.\n *\n * @param {!libtess.GluMesh} mesh\n * @param {number} value\n * @param {boolean} keepOnlyBoundary\n */\nlibtess.tessmono.setWindingNumber = function(mesh, value, keepOnlyBoundary) {\n  var eNext;\n  for (var e = mesh.eHead.next; e !== mesh.eHead; e = eNext) {\n    eNext = e.next;\n\n    if (e.rFace().inside !== e.lFace.inside) {\n      // This is a boundary edge (one side is interior, one is exterior).\n      e.winding = (e.lFace.inside) ? value : -value;\n\n    } else {\n      // Both regions are interior, or both are exterior.\n      if (!keepOnlyBoundary) {\n        e.winding = 0;\n\n      } else {\n        libtess.mesh.deleteEdge(e);\n      }\n    }\n  }\n};\n\n\n/* global libtess */\n\n/**\n * A list of edges crossing the sweep line, sorted from top to bottom.\n * Implementation is a doubly-linked list, sorted by the injected edgeLeq\n * comparator function. Here it is a simple ordering, but see libtess.sweep for\n * the list of invariants on the edge dictionary this ordering creates.\n * @constructor\n * @struct\n * @param {!libtess.GluTesselator} frame\n * @param {function(!libtess.GluTesselator, !libtess.ActiveRegion, !libtess.ActiveRegion): boolean} leq\n */\nlibtess.Dict = function(frame, leq) {\n\n  /**\n   * The head of the doubly-linked DictNode list. At creation time, links back\n   * and forward only to itself.\n   * @private\n   */\n  this.head_ = new libtess.DictNode();\n\n  /**\n   * The GluTesselator used as the frame for edge/event comparisons.\n   * @private\n   */\n  this.frame_ = frame;\n\n  /**\n   * Comparison function to maintain the invariants of the Dict. See\n   * libtess.sweep.edgeLeq_ for source.\n   * @private\n   * @type {function(!libtess.GluTesselator, !libtess.ActiveRegion, !libtess.ActiveRegion): boolean}\n   */\n  this.leq_ = leq;\n};\n\n/* istanbul ignore next */\n/**\n * Formerly used to delete the dict.\n * NOTE(bckenny): No longer called but left for memFree documentation. Nulled at\n * former callsite instead (sweep.doneEdgeDict_)\n * @private\n */\nlibtess.Dict.prototype.deleteDict_ = function() {\n  // for (var node = this.head_.next; node !== this.head_; node = node.next) {\n  //   memFree(node);\n  // }\n  // memFree(dict);\n};\n\n/**\n * Insert the supplied key into the edge list and return its new node.\n * @param {libtess.DictNode} node\n * @param {!libtess.ActiveRegion} key\n * @return {!libtess.DictNode}\n */\nlibtess.Dict.prototype.insertBefore = function(node, key) {\n  do {\n    node = node.prev;\n  } while (node.key !== null && !this.leq_(this.frame_, node.key, key));\n\n  // insert the new node and update the surrounding nodes to point to it\n  var newNode = new libtess.DictNode(key, node.next, node);\n  node.next.prev = newNode;\n  node.next = newNode;\n\n  return newNode;\n};\n\n/**\n * Insert key into the dict and return the new node that contains it.\n * @param {!libtess.ActiveRegion} key\n * @return {!libtess.DictNode}\n */\nlibtess.Dict.prototype.insert = function(key) {\n  // NOTE(bckenny): from a macro in dict.h/dict-list.h\n  return this.insertBefore(this.head_, key);\n};\n\n/**\n * Remove node from the list.\n * @param {libtess.DictNode} node\n */\nlibtess.Dict.prototype.deleteNode = function(node) {\n  node.next.prev = node.prev;\n  node.prev.next = node.next;\n\n  // NOTE(bckenny): nulled at callsite (sweep.deleteRegion_)\n  // memFree( node );\n};\n\n/**\n * Search returns the node with the smallest key greater than or equal\n * to the given key. If there is no such key, returns a node whose\n * key is null. Similarly, max(d).getSuccessor() has a null key, etc.\n * @param {!libtess.ActiveRegion} key\n * @return {!libtess.DictNode}\n */\nlibtess.Dict.prototype.search = function(key) {\n  var node = this.head_;\n\n  do {\n    node = node.next;\n  } while (node.key !== null && !this.leq_(this.frame_, key, node.key));\n\n  return node;\n};\n\n/**\n * Return the node with the smallest key.\n * @return {!libtess.DictNode}\n */\nlibtess.Dict.prototype.getMin = function() {\n  // NOTE(bckenny): from a macro in dict.h/dict-list.h\n  return this.head_.next;\n};\n\n// NOTE(bckenny): libtess.Dict.getMax isn't called within libtess and isn't part\n// of the public API. For now, leaving in but ignoring for coverage.\n/* istanbul ignore next */\n/**\n * Returns the node with the greatest key.\n * @return {!libtess.DictNode}\n */\nlibtess.Dict.prototype.getMax = function() {\n  // NOTE(bckenny): from a macro in dict.h/dict-list.h\n  return this.head_.prev;\n};\n\n\n/* global libtess */\n\n/**\n * A doubly-linked-list node with a libtess.ActiveRegion payload.\n * The key for this node and the next and previous nodes in the parent Dict list\n * can be provided to insert it into an existing list (or all can be omitted if\n * this is to be the founding node of the list).\n * @param {!libtess.ActiveRegion=} opt_key\n * @param {!libtess.DictNode=} opt_nextNode\n * @param {!libtess.DictNode=} opt_prevNode\n * @constructor\n * @struct\n */\nlibtess.DictNode = function(opt_key, opt_nextNode, opt_prevNode) {\n  /**\n   * The ActiveRegion key for this node, or null if the head of the list.\n   * @type {libtess.ActiveRegion}\n   */\n  this.key = opt_key || null;\n\n  /**\n   * Link to next DictNode in parent list or to self if this is the first node.\n   * @type {!libtess.DictNode}\n   */\n  this.next = opt_nextNode || this;\n\n  /**\n   * Link to previous DictNode in parent list or to self if this is the first\n   * node.\n   * @type {!libtess.DictNode}\n   */\n  this.prev = opt_prevNode || this;\n};\n\n/**\n * Get the key from this node.\n * @return {libtess.ActiveRegion}\n */\nlibtess.DictNode.prototype.getKey = function() {\n  return this.key;\n};\n\n/**\n * Get the successor node to this one.\n * @return {!libtess.DictNode}\n */\nlibtess.DictNode.prototype.getSuccessor = function() {\n  return this.next;\n};\n\n/**\n * Get the predecessor node to this one.\n * @return {!libtess.DictNode}\n */\nlibtess.DictNode.prototype.getPredecessor = function() {\n  return this.prev;\n};\n\n\n\n/* global libtess */\n\n/**\n * Cached vertex data for single-countour polygons for quick-and-dirty\n * decomposition.\n * @constructor\n * @struct\n */\nlibtess.CachedVertex = function() {\n  /**\n   * [coords description]\n   * @type {Array.<number>}\n   */\n  this.coords = [0, 0, 0];\n  // TODO(bckenny): better way to init?\n\n  /**\n   * [data description]\n   * @type {Object}\n   */\n  this.data = null;\n};\n\n\n\n/* global libtess */\n\n// TODO(bckenny): create more javascript-y API, e.g. make gluTessEndPolygon\n// async, don't require so many temp objects created\n\n/**\n * The tesselator main class, providing the public API.\n * @constructor\n * @struct\n */\nlibtess.GluTesselator = function() {\n  // Only initialize fields which can be changed by the api. Other fields\n  // are initialized where they are used.\n\n  // TODO(bckenny): many of these can be made private\n  // TODO(bckenny): can we combine call* and call*Data functions?\n\n  /*** state needed for collecting the input data ***/\n\n  /**\n   * what begin/end calls have we seen?\n   * @type {libtess.GluTesselator.tessState_}\n   */\n  this.state = libtess.GluTesselator.tessState_.T_DORMANT;\n\n  /**\n   * lastEdge_.org is the most recent vertex\n   * @private\n   * @type {libtess.GluHalfEdge}\n   */\n  this.lastEdge_ = null;\n\n  /**\n   * stores the input contours, and eventually the tessellation itself\n   * @type {libtess.GluMesh}\n   */\n  this.mesh = null;\n  // NOTE(bckenny): initialized in this.emptyCache_\n\n  /**\n   * Error callback.\n   * @private\n   * @type {?function((libtess.errorType|libtess.gluEnum))}\n   */\n  this.callError_ = null;\n\n\n  /*** state needed for projecting onto the sweep plane ***/\n\n  /**\n   * user-specified normal (if provided)\n   * @type {!Array.<number>}\n   */\n  this.normal = [0, 0, 0];\n  // TODO(bckenny): better way to init these arrays?\n\n  /**\n   * unit vector in s-direction (debugging)\n   * @type {!Array.<number>}\n   */\n  this.sUnit = [0, 0, 0];\n\n  /**\n   * unit vector in t-direction (debugging)\n   * @type {!Array.<number>}\n   */\n  this.tUnit = [0, 0, 0];\n\n  /*** state needed for the line sweep ***/\n  // TODO(bckenny): this could be moved to a sweep state object of some sort\n\n  /**\n   * tolerance for merging features\n   * @type {number}\n   */\n  this.relTolerance = libtess.GLU_TESS_DEFAULT_TOLERANCE;\n\n  /**\n   * rule for determining polygon interior\n   * @type {libtess.windingRule}\n   */\n  this.windingRule = libtess.windingRule.GLU_TESS_WINDING_ODD;\n\n  /**\n   * fatal error: needed combine callback\n   * @type {boolean}\n   */\n  this.fatalError = false;\n\n  /**\n   * edge dictionary for sweep line\n   * @type {libtess.Dict}\n   */\n  this.dict = null;\n  // NOTE(bckenny): dict initialized in sweep.initEdgeDict_, removed in sweep.doneEdgeDict_\n\n  /**\n   * priority queue of vertex events\n   * @type {libtess.PriorityQ}\n   */\n  this.pq = null;\n  // NOTE(bckenny): pq initialized in sweep.initPriorityQ\n\n  /**\n   * current sweep event being processed\n   * @type {libtess.GluVertex}\n   */\n  this.event = null;\n\n  /**\n   * Combine callback.\n   * @private\n   * @type {?function(Array.<number>, Array.<Object>, Array.<number>): Object}\n   */\n  this.callCombine_ = null;\n\n  /*** state needed for rendering callbacks (see render.js) ***/\n\n  /**\n   * Extract contours, not triangles\n   * @type {boolean}\n   */\n  this.boundaryOnly = false;\n\n  /**\n   * Begin callback.\n   * @private\n   * @type {?function(libtess.primitiveType)}\n   */\n  this.callBegin_ = null;\n\n  /**\n   * Edge flag callback.\n   * @private\n   * @type {?function(boolean)}\n   */\n  this.callEdgeFlag_ = null;\n\n  /**\n   * Vertex callback.\n   * @private\n   * @type {?function(Object)}\n   */\n  this.callVertex_ = null;\n\n  /**\n   * End callback.\n   * @private\n   * @type {?function()}\n   */\n  this.callEnd_ = null;\n\n  /**\n   * Mesh callback.\n   * @private\n   * @type {?function(libtess.GluMesh)}\n   */\n  this.callMesh_ = null;\n\n  /*** rendering callbacks that also pass polygon data  ***/\n  /**\n   * BeginData callback.\n   * @private\n   * @type {?function(libtess.primitiveType, Object)}\n   */\n  this.callBeginData_ = null;\n\n  /**\n   * EdgeFlagData callback.\n   * @private\n   * @type {?function(boolean, Object)}\n   */\n  this.callEdgeFlagData_ = null;\n\n  /**\n   * VertexData callback.\n   * @private\n   * @type {?function(Object, Object)}\n   */\n  this.callVertexData_ = null;\n\n  /**\n   * EndData callback.\n   * @private\n   * @type {?function(Object)}\n   */\n  this.callEndData_ = null;\n\n  /**\n   * ErrorData callback.\n   * @private\n   * @type {?function((libtess.errorType|libtess.gluEnum), Object)}\n   */\n  this.callErrorData_ = null;\n\n  /**\n   * CombineData callback.\n   * @private\n   * @type {?function(Array.<number>, Array.<Object>, Array.<number>, Object): Object}\n   */\n  this.callCombineData_ = null;\n\n  /**\n   * client data for current polygon\n   * @private\n   * @type {Object}\n   */\n  this.polygonData_ = null;\n\n  /*** state needed to cache single-contour polygons for renderCache() ***/\n  /**\n   * empty cache on next vertex() call\n   * @type {boolean}\n   */\n  this.emptyCache = false;\n  // TODO(bckenny): possibly rename to be clear it's a boolean\n\n  /**\n   * number of cached vertices\n   * @type {number}\n   */\n  this.cacheCount = 0;\n\n  /**\n   * the vertex data\n   * @type {Array.<libtess.CachedVertex>}\n   */\n  this.cache = new Array(libtess.TESS_MAX_CACHE);\n\n  // TODO(bckenny): fill now? or init on demand\n  for (var i = 0; i < libtess.TESS_MAX_CACHE; i++) {\n    this.cache[i] = new libtess.CachedVertex();\n  }\n};\n\n/**\n * The begin/end calls must be properly nested. We keep track of the current\n * state to enforce the ordering.\n * @enum {number}\n * @private\n */\nlibtess.GluTesselator.tessState_ = {\n  T_DORMANT: 0,\n  T_IN_POLYGON: 1,\n  T_IN_CONTOUR: 2\n};\n\n/**\n * Destory the tesselator object. See README.\n */\nlibtess.GluTesselator.prototype.gluDeleteTess = function() {\n  // TODO(bckenny): This does nothing but assert that it isn't called while\n  // building the polygon since we rely on GC to handle memory. *If* the public\n  // API changes, this should go.\n  this.requireState_(libtess.GluTesselator.tessState_.T_DORMANT);\n  // memFree(tess); TODO(bckenny)\n};\n\n\n/**\n * Set properties for control over tesselation. See README.\n * @param {libtess.gluEnum} which [description].\n * @param {number|boolean} value [description].\n */\nlibtess.GluTesselator.prototype.gluTessProperty = function(which, value) {\n  // TODO(bckenny): split into more setters?\n  // TODO(bckenny): in any case, we can do better than this switch statement\n\n  switch (which) {\n    case libtess.gluEnum.GLU_TESS_TOLERANCE:\n      if (value < 0 || value > 1) {\n        break;\n      }\n      // TODO(bckenny): libtess doesn't support any tolerance but 0. This should\n      // reject any non-zero tolerance accordingly.\n      this.relTolerance = /** @type {number} */(value);\n      return;\n\n    case libtess.gluEnum.GLU_TESS_WINDING_RULE:\n      var windingRule = /** @type {libtess.windingRule} */(value);\n\n      switch (windingRule) {\n        case libtess.windingRule.GLU_TESS_WINDING_ODD:\n        case libtess.windingRule.GLU_TESS_WINDING_NONZERO:\n        case libtess.windingRule.GLU_TESS_WINDING_POSITIVE:\n        case libtess.windingRule.GLU_TESS_WINDING_NEGATIVE:\n        case libtess.windingRule.GLU_TESS_WINDING_ABS_GEQ_TWO:\n          this.windingRule = windingRule;\n          return;\n        default:\n      }\n      break;\n\n    case libtess.gluEnum.GLU_TESS_BOUNDARY_ONLY:\n      // TODO(bckenny): added boolean param type. make sure ok.\n      this.boundaryOnly = !!value;\n      return;\n\n    default:\n      this.callErrorOrErrorData(libtess.gluEnum.GLU_INVALID_ENUM);\n      return;\n  }\n  this.callErrorOrErrorData(libtess.gluEnum.GLU_INVALID_VALUE);\n};\n\n\n/**\n * Returns tessellator property\n * @param {libtess.gluEnum} which [description].\n * @return {number|boolean} [description].\n */\nlibtess.GluTesselator.prototype.gluGetTessProperty = function(which) {\n  // TODO(bckenny): as above, split into more getters? and improve on switch statement\n  // why are these being asserted in getter but not setter?\n\n  switch (which) {\n    case libtess.gluEnum.GLU_TESS_TOLERANCE:\n      // tolerance should be in range [0..1]\n      return this.relTolerance;\n\n    case libtess.gluEnum.GLU_TESS_WINDING_RULE:\n      var rule = this.windingRule;\n      return rule;\n\n    case libtess.gluEnum.GLU_TESS_BOUNDARY_ONLY:\n      return this.boundaryOnly;\n\n    default:\n      this.callErrorOrErrorData(libtess.gluEnum.GLU_INVALID_ENUM);\n      break;\n  }\n  return false;\n};\n\n\n/**\n * Lets the user supply the polygon normal, if known.  All input data\n * is projected into a plane perpendicular to the normal before\n * tesselation. All output triangles are oriented CCW with\n * respect to the normal (CW orientation can be obtained by\n * reversing the sign of the supplied normal). For example, if\n * you know that all polygons lie in the x-y plane, call\n * \"tess.gluTessNormal(0.0, 0.0, 1.0)\" before rendering any polygons.\n *\n * @param {number} x [description].\n * @param {number} y [description].\n * @param {number} z [description].\n */\nlibtess.GluTesselator.prototype.gluTessNormal = function(x, y, z) {\n  this.normal[0] = x;\n  this.normal[1] = y;\n  this.normal[2] = z;\n};\n\n\n/**\n * Specify callbacks. See README. A null or undefined opt_fn removes current callback.\n *\n * @param {libtess.gluEnum} which [description].\n * @param {?Function=} opt_fn [description].\n */\nlibtess.GluTesselator.prototype.gluTessCallback = function(which, opt_fn) {\n  var fn = !opt_fn ? null : opt_fn;\n  // TODO(bckenny): better opt_fn typing?\n\n  switch (which) {\n    case libtess.gluEnum.GLU_TESS_BEGIN:\n      this.callBegin_ = /** @type {function(libtess.primitiveType)} */ (fn);\n      return;\n\n    case libtess.gluEnum.GLU_TESS_BEGIN_DATA:\n      this.callBeginData_ =\n          /** @type {function(libtess.primitiveType, Object)} */ (fn);\n      return;\n\n    case libtess.gluEnum.GLU_TESS_EDGE_FLAG:\n      this.callEdgeFlag_ = /** @type {function(boolean)} */ (fn);\n      return;\n\n    case libtess.gluEnum.GLU_TESS_EDGE_FLAG_DATA:\n      this.callEdgeFlagData_ = /** @type {function(boolean, Object)} */ (fn);\n      return;\n\n    case libtess.gluEnum.GLU_TESS_VERTEX:\n      this.callVertex_ = /** @type {function(Object)} */ (fn);\n      return;\n\n    case libtess.gluEnum.GLU_TESS_VERTEX_DATA:\n      this.callVertexData_ = /** @type {function(Object, Object)} */ (fn);\n      return;\n\n    case libtess.gluEnum.GLU_TESS_END:\n      this.callEnd_ = /** @type {function()} */ (fn);\n      return;\n\n    case libtess.gluEnum.GLU_TESS_END_DATA:\n      this.callEndData_ = /** @type {function(Object)} */ (fn);\n      return;\n\n    case libtess.gluEnum.GLU_TESS_ERROR:\n      this.callError_ = /** @type {function((libtess.errorType|libtess.gluEnum))} */ (fn);\n      return;\n\n    case libtess.gluEnum.GLU_TESS_ERROR_DATA:\n      this.callErrorData_ =\n          /** @type {function((libtess.errorType|libtess.gluEnum), Object)} */ (fn);\n      return;\n\n    case libtess.gluEnum.GLU_TESS_COMBINE:\n      this.callCombine_ = /** @type {function(Array.<number>, Array.<Object>, Array.<number>): Object} */ (fn);\n      return;\n\n    case libtess.gluEnum.GLU_TESS_COMBINE_DATA:\n      this.callCombineData_ = /** @type {function(Array.<number>, Array.<Object>, Array.<number>, Object): Object} */ (fn);\n      return;\n\n    case libtess.gluEnum.GLU_TESS_MESH:\n      this.callMesh_ = /** @type {function(libtess.GluMesh)} */ (fn);\n      return;\n\n    default:\n      this.callErrorOrErrorData(libtess.gluEnum.GLU_INVALID_ENUM);\n      return;\n  }\n};\n\n\n/**\n * Specify a vertex and associated data. Must be within calls to\n * beginContour/endContour. See README.\n *\n * @param {Array.<number>} coords [description].\n * @param {Object} data [description].\n */\nlibtess.GluTesselator.prototype.gluTessVertex = function(coords, data) {\n  var tooLarge = false;\n\n  // TODO(bckenny): pool allocation?\n  var clamped = [0, 0, 0];\n\n  this.requireState_(libtess.GluTesselator.tessState_.T_IN_CONTOUR);\n\n  if (this.emptyCache) {\n    this.emptyCache_();\n    this.lastEdge_ = null;\n  }\n\n  for (var i = 0; i < 3; ++i) {\n    var x = coords[i];\n    if (x < -libtess.GLU_TESS_MAX_COORD) {\n      x = -libtess.GLU_TESS_MAX_COORD;\n      tooLarge = true;\n    }\n    if (x > libtess.GLU_TESS_MAX_COORD) {\n      x = libtess.GLU_TESS_MAX_COORD;\n      tooLarge = true;\n    }\n    clamped[i] = x;\n  }\n\n  if (tooLarge) {\n    this.callErrorOrErrorData(libtess.errorType.GLU_TESS_COORD_TOO_LARGE);\n  }\n\n  if (this.mesh === null) {\n    if (this.cacheCount < libtess.TESS_MAX_CACHE) {\n      this.cacheVertex_(clamped, data);\n      return;\n    }\n\n    // cache is full, create mesh and add cached verts to it\n    this.emptyCache_();\n  }\n\n  this.addVertex_(clamped, data);\n};\n\n\n/**\n * [gluTessBeginPolygon description]\n * @param {Object} data Client data for current polygon.\n */\nlibtess.GluTesselator.prototype.gluTessBeginPolygon = function(data) {\n  this.requireState_(libtess.GluTesselator.tessState_.T_DORMANT);\n\n  this.state = libtess.GluTesselator.tessState_.T_IN_POLYGON;\n  this.cacheCount = 0;\n  this.emptyCache = false;\n  this.mesh = null;\n\n  this.polygonData_ = data;\n};\n\n\n/**\n * [gluTessBeginContour description]\n */\nlibtess.GluTesselator.prototype.gluTessBeginContour = function() {\n  this.requireState_(libtess.GluTesselator.tessState_.T_IN_POLYGON);\n\n  this.state = libtess.GluTesselator.tessState_.T_IN_CONTOUR;\n  this.lastEdge_ = null;\n  if (this.cacheCount > 0) {\n    // Just set a flag so we don't get confused by empty contours\n    // -- these can be generated accidentally with the obsolete\n    // NextContour() interface.\n    // TODO(bckenny): we aren't implementing NextContour() interface.\n    this.emptyCache = true;\n  }\n};\n\n\n/**\n * [gluTessEndContour description]\n */\nlibtess.GluTesselator.prototype.gluTessEndContour = function() {\n  this.requireState_(libtess.GluTesselator.tessState_.T_IN_CONTOUR);\n  this.state = libtess.GluTesselator.tessState_.T_IN_POLYGON;\n};\n\n\n/**\n * [gluTessEndPolygon description]\n */\nlibtess.GluTesselator.prototype.gluTessEndPolygon = function() {\n  this.requireState_(libtess.GluTesselator.tessState_.T_IN_POLYGON);\n  this.state = libtess.GluTesselator.tessState_.T_DORMANT;\n\n  if (this.mesh === null) {\n    // TODO(bckenny): can we eliminate more cache functionality?\n    this.emptyCache_();\n  }\n\n  // Determine the polygon normal and project vertices onto the plane\n  // of the polygon.\n  libtess.normal.projectPolygon(this);\n\n  // computeInterior(tess) computes the planar arrangement specified\n  // by the given contours, and further subdivides this arrangement\n  // into regions. Each region is marked \"inside\" if it belongs\n  // to the polygon, according to the rule given by this.windingRule.\n  // Each interior region is guaranteed be monotone.\n  libtess.sweep.computeInterior(this);\n\n  if (!this.fatalError) {\n    // If the user wants only the boundary contours, we throw away all edges\n    // except those which separate the interior from the exterior.\n    // Otherwise we tessellate all the regions marked \"inside\".\n    // NOTE(bckenny): we know this.mesh has been initialized, so help closure out.\n    var mesh = /** @type {!libtess.GluMesh} */(this.mesh);\n    if (this.boundaryOnly) {\n      libtess.tessmono.setWindingNumber(mesh, 1, true);\n    } else {\n      libtess.tessmono.tessellateInterior(mesh);\n    }\n\n    this.mesh.checkMesh();\n\n    if (this.callBegin_ || this.callEnd_ || this.callVertex_ ||\n        this.callEdgeFlag_ || this.callBeginData_ || this.callEndData_ ||\n        this.callVertexData_ || this.callEdgeFlagData_) {\n\n      if (this.boundaryOnly) {\n        // output boundary contours\n        libtess.render.renderBoundary(this, this.mesh);\n\n      } else {\n        // output triangles (with edge callback if one is set)\n        var flagEdges = !!(this.callEdgeFlag_ || this.callEdgeFlagData_);\n        libtess.render.renderMesh(this, this.mesh, flagEdges);\n      }\n    }\n\n    if (this.callMesh_) {\n      // Throw away the exterior faces, so that all faces are interior.\n      // This way the user doesn't have to check the \"inside\" flag,\n      // and we don't need to even reveal its existence. It also leaves\n      // the freedom for an implementation to not generate the exterior\n      // faces in the first place.\n      libtess.tessmono.discardExterior(this.mesh);\n      // user wants the mesh itself\n      this.callMesh_(this.mesh);\n\n      this.mesh = null;\n      this.polygonData_ = null;\n      return;\n    }\n  }\n\n  libtess.mesh.deleteMesh(this.mesh);\n  this.polygonData_ = null;\n  this.mesh = null;\n};\n\n\n/**\n * Return the tessellator to its original dormant state.\n * @private\n */\nlibtess.GluTesselator.prototype.makeDormant_ = function() {\n  if (this.mesh) {\n    libtess.mesh.deleteMesh(this.mesh);\n  }\n  this.state = libtess.GluTesselator.tessState_.T_DORMANT;\n  this.lastEdge_ = null;\n  this.mesh = null;\n};\n\n\n/**\n * [requireState_ description]\n * @private\n * @param {libtess.GluTesselator.tessState_} state [description].\n */\nlibtess.GluTesselator.prototype.requireState_ = function(state) {\n  if (this.state !== state) {\n    this.gotoState_(state);\n  }\n};\n\n\n/**\n * [gotoState_ description]\n * @private\n * @param  {libtess.GluTesselator.tessState_} newState [description].\n */\nlibtess.GluTesselator.prototype.gotoState_ = function(newState) {\n  while (this.state !== newState) {\n    // We change the current state one level at a time, to get to the desired\n    // state.\n    if (this.state < newState) {\n      switch (this.state) {\n        case libtess.GluTesselator.tessState_.T_DORMANT:\n          this.callErrorOrErrorData(\n              libtess.errorType.GLU_TESS_MISSING_BEGIN_POLYGON);\n          this.gluTessBeginPolygon(null);\n          break;\n\n        case libtess.GluTesselator.tessState_.T_IN_POLYGON:\n          this.callErrorOrErrorData(\n              libtess.errorType.GLU_TESS_MISSING_BEGIN_CONTOUR);\n          this.gluTessBeginContour();\n          break;\n      }\n\n    } else {\n      switch (this.state) {\n        case libtess.GluTesselator.tessState_.T_IN_CONTOUR:\n          this.callErrorOrErrorData(\n              libtess.errorType.GLU_TESS_MISSING_END_CONTOUR);\n          this.gluTessEndContour();\n          break;\n\n        case libtess.GluTesselator.tessState_.T_IN_POLYGON:\n          this.callErrorOrErrorData(\n              libtess.errorType.GLU_TESS_MISSING_END_POLYGON);\n          // this.gluTessEndPolygon() is too much work!\n          this.makeDormant_();\n          break;\n      }\n    }\n  }\n};\n\n\n/**\n * [addVertex_ description]\n * @private\n * @param {Array.<number>} coords [description].\n * @param {Object} data [description].\n */\nlibtess.GluTesselator.prototype.addVertex_ = function(coords, data) {\n  var e = this.lastEdge_;\n  if (e === null) {\n    // Make a self-loop (one vertex, one edge).\n    e = libtess.mesh.makeEdge(this.mesh);\n    libtess.mesh.meshSplice(e, e.sym);\n\n  } else {\n    // Create a new vertex and edge which immediately follow e\n    // in the ordering around the left face.\n    libtess.mesh.splitEdge(e);\n    e = e.lNext;\n  }\n\n  // The new vertex is now e.org.\n  e.org.data = data;\n  e.org.coords[0] = coords[0];\n  e.org.coords[1] = coords[1];\n  e.org.coords[2] = coords[2];\n\n  // The winding of an edge says how the winding number changes as we\n  // cross from the edge''s right face to its left face.  We add the\n  // vertices in such an order that a CCW contour will add +1 to\n  // the winding number of the region inside the contour.\n  e.winding = 1;\n  e.sym.winding = -1;\n\n  this.lastEdge_ = e;\n};\n\n\n/**\n * [cacheVertex_ description]\n * @private\n * @param {Array.<number>} coords [description].\n * @param {Object} data [description].\n */\nlibtess.GluTesselator.prototype.cacheVertex_ = function(coords, data) {\n  var v = this.cache[this.cacheCount];\n\n  v.data = data;\n  v.coords[0] = coords[0];\n  v.coords[1] = coords[1];\n  v.coords[2] = coords[2];\n  ++this.cacheCount;\n};\n\n\n/**\n * [emptyCache_ description]\n * @private\n */\nlibtess.GluTesselator.prototype.emptyCache_ = function() {\n  // NOTE(bckenny): surprise!\n  this.mesh = new libtess.GluMesh();\n\n  for (var i = 0; i < this.cacheCount; i++) {\n    var v = this.cache[i];\n    this.addVertex_(v.coords, v.data);\n  }\n\n  this.cacheCount = 0;\n  this.emptyCache = false;\n};\n\n\n// TODO(bckenny): all following conditional callbacks could be simplified\n// TODO(bckenny): using null for now, but may rework\n// TODO(bckenny): should add documentation that references in callback are volatile (or make a copy)\n// see README callback descriptions\n/**\n * [callBeginOrBeginData description]\n * @param {libtess.primitiveType} type [description].\n */\nlibtess.GluTesselator.prototype.callBeginOrBeginData = function(type) {\n  if (this.callBeginData_) {\n    this.callBeginData_(type, this.polygonData_);\n\n  } else if (this.callBegin_) {\n    this.callBegin_(type);\n  }\n};\n\n\n/**\n * [callVertexOrVertexData description]\n * @param {Object} data [description].\n */\nlibtess.GluTesselator.prototype.callVertexOrVertexData = function(data) {\n  if (this.callVertexData_) {\n    this.callVertexData_(data, this.polygonData_);\n\n  } else if (this.callVertex_) {\n    this.callVertex_(data);\n  }\n};\n\n\n/**\n * [callEdgeFlagOrEdgeFlagData description]\n * @param {boolean} flag [description].\n */\nlibtess.GluTesselator.prototype.callEdgeFlagOrEdgeFlagData = function(flag) {\n  if (this.callEdgeFlagData_) {\n    this.callEdgeFlagData_(flag, this.polygonData_);\n\n  } else if (this.callEdgeFlag_) {\n    this.callEdgeFlag_(flag);\n  }\n};\n\n\n/**\n * [callEndOrEndData description]\n */\nlibtess.GluTesselator.prototype.callEndOrEndData = function() {\n  if (this.callEndData_) {\n    this.callEndData_(this.polygonData_);\n\n  } else if (this.callEnd_) {\n    this.callEnd_();\n  }\n};\n\n\n/**\n * [callCombineOrCombineData description]\n * @param {Array.<number>} coords [description].\n * @param {Array.<Object>} data [description].\n * @param {Array.<number>} weight [description].\n * @return {Object} Interpolated vertex.\n */\nlibtess.GluTesselator.prototype.callCombineOrCombineData =\n    function(coords, data, weight) {\n\n  var interpData;\n  if (this.callCombineData_) {\n    interpData = this.callCombineData_(coords, data, weight, this.polygonData_);\n\n  } else if (this.callCombine_) {\n    interpData = this.callCombine_(coords, data, weight);\n  }\n\n  // TODO(bckenny): can't be undefined\n  if (interpData === undefined) {\n    interpData = null;\n  }\n  return interpData;\n};\n\n\n// TODO(bckenny): combine the enums in libtess\n/**\n * [callErrorOrErrorData description]\n * @param {(libtess.errorType|libtess.gluEnum)} errno [description].\n */\nlibtess.GluTesselator.prototype.callErrorOrErrorData = function(errno) {\n  if (this.callErrorData_) {\n    this.callErrorData_(errno, this.polygonData_);\n\n  } else if (this.callError_) {\n    this.callError_(errno);\n  }\n};\n\n\n\n/* global libtess */\n\n/**\n * Each face has a pointer to the next and previous faces in the\n * circular list, and a pointer to a half-edge with this face as\n * the left face (null if this is the dummy header). There is also\n * a field \"data\" for client data.\n *\n * @param {libtess.GluFace=} opt_nextFace\n * @param {libtess.GluFace=} opt_prevFace\n * @constructor\n * @struct\n */\nlibtess.GluFace = function(opt_nextFace, opt_prevFace) {\n  // TODO(bckenny): reverse order of params?\n\n  /**\n   * next face (never null)\n   * @type {!libtess.GluFace}\n   */\n  this.next = opt_nextFace || this;\n\n  /**\n   * previous face (never NULL)\n   * @type {!libtess.GluFace}\n   */\n  this.prev = opt_prevFace || this;\n\n  /**\n   * A half edge with this left face.\n   * @type {libtess.GluHalfEdge}\n   */\n  this.anEdge = null;\n\n  /**\n   * room for client's data\n   * @type {Object}\n   */\n  this.data = null;\n\n  /**\n   * This face is in the polygon interior.\n   * @type {boolean}\n   */\n  this.inside = false;\n};\n\n\n\n/* global libtess */\n\n/**\n * The fundamental data structure is the \"half-edge\". Two half-edges\n * go together to make an edge, but they point in opposite directions.\n * Each half-edge has a pointer to its mate (the \"symmetric\" half-edge sym),\n * its origin vertex (org), the face on its left side (lFace), and the\n * adjacent half-edges in the CCW direction around the origin vertex\n * (oNext) and around the left face (lNext). There is also a \"next\"\n * pointer for the global edge list (see below).\n *\n * The notation used for mesh navigation:\n *  sym   = the mate of a half-edge (same edge, but opposite direction)\n *  oNext = edge CCW around origin vertex (keep same origin)\n *  dNext = edge CCW around destination vertex (keep same dest)\n *  lNext = edge CCW around left face (dest becomes new origin)\n *  rNext = edge CCW around right face (origin becomes new dest)\n *\n * \"prev\" means to substitute CW for CCW in the definitions above.\n *\n * The circular edge list is special; since half-edges always occur\n * in pairs (e and e.sym), each half-edge stores a pointer in only\n * one direction. Starting at eHead and following the e.next pointers\n * will visit each *edge* once (ie. e or e.sym, but not both).\n * e.sym stores a pointer in the opposite direction, thus it is\n * always true that e.sym.next.sym.next === e.\n *\n * @param {libtess.GluHalfEdge=} opt_nextEdge\n * @constructor\n * @struct\n */\nlibtess.GluHalfEdge = function(opt_nextEdge) {\n  // TODO(bckenny): are these the right defaults? (from gl_meshNewMesh requirements)\n\n  /**\n   * doubly-linked list (prev==sym->next)\n   * @type {!libtess.GluHalfEdge}\n   */\n  this.next = opt_nextEdge || this;\n\n  // TODO(bckenny): how can this be required if created in pairs? move to factory creation only?\n  /**\n   * same edge, opposite direction\n   * @type {libtess.GluHalfEdge}\n   */\n  this.sym = null;\n\n  /**\n   * next edge CCW around origin\n   * @type {libtess.GluHalfEdge}\n   */\n  this.oNext = null;\n\n  /**\n   * next edge CCW around left face\n   * @type {libtess.GluHalfEdge}\n   */\n  this.lNext = null;\n\n  /**\n   * origin vertex (oVertex too long)\n   * @type {libtess.GluVertex}\n   */\n  this.org = null;\n\n  /**\n   * left face\n   * @type {libtess.GluFace}\n   */\n  this.lFace = null;\n\n  // Internal data (keep hidden)\n  // NOTE(bckenny): can't be private, though...\n\n  /**\n   * a region with this upper edge (see sweep.js)\n   * @type {libtess.ActiveRegion}\n   */\n  this.activeRegion = null;\n\n  /**\n   * change in winding number when crossing from the right face to the left face\n   * @type {number}\n   */\n  this.winding = 0;\n};\n\n// NOTE(bckenny): the following came from macros in mesh\n// TODO(bckenny): using methods as aliases for sym connections for now.\n// not sure about this approach. getters? renames?\n\n\n/**\n * [rFace description]\n * @return {libtess.GluFace} [description].\n */\nlibtess.GluHalfEdge.prototype.rFace = function() {\n  return this.sym.lFace;\n};\n\n\n/**\n * [dst description]\n * @return {libtess.GluVertex} [description].\n */\nlibtess.GluHalfEdge.prototype.dst = function() {\n  return this.sym.org;\n};\n\n\n/**\n * [oPrev description]\n * @return {libtess.GluHalfEdge} [description].\n */\nlibtess.GluHalfEdge.prototype.oPrev = function() {\n  return this.sym.lNext;\n};\n\n\n/**\n * [lPrev description]\n * @return {libtess.GluHalfEdge} [description].\n */\nlibtess.GluHalfEdge.prototype.lPrev = function() {\n  return this.oNext.sym;\n};\n\n// NOTE(bckenny): libtess.GluHalfEdge.dPrev is called nowhere in libtess and\n// isn't part of the current public API. It could be useful for mesh traversal\n// and manipulation if made public, however.\n/* istanbul ignore next */\n/**\n * The edge clockwise around destination vertex (keep same dest).\n * @return {libtess.GluHalfEdge}\n */\nlibtess.GluHalfEdge.prototype.dPrev = function() {\n  return this.lNext.sym;\n};\n\n\n/**\n * [rPrev description]\n * @return {libtess.GluHalfEdge} [description].\n */\nlibtess.GluHalfEdge.prototype.rPrev = function() {\n  return this.sym.oNext;\n};\n\n\n/**\n * [dNext description]\n * @return {libtess.GluHalfEdge} [description].\n */\nlibtess.GluHalfEdge.prototype.dNext = function() {\n  return this.rPrev().sym;\n};\n\n\n// NOTE(bckenny): libtess.GluHalfEdge.rNext is called nowhere in libtess and\n// isn't part of the current public API. It could be useful for mesh traversal\n// and manipulation if made public, however.\n/* istanbul ignore next */\n/**\n * The edge CCW around the right face (origin of this becomes new dest).\n * @return {libtess.GluHalfEdge}\n */\nlibtess.GluHalfEdge.prototype.rNext = function() {\n  return this.oPrev().sym;\n};\n\n\n\n/* global libtess */\n\n/**\n * Creates a new mesh with no edges, no vertices,\n * and no loops (what we usually call a \"face\").\n *\n * @constructor\n * @struct\n */\nlibtess.GluMesh = function() {\n  /**\n   * dummy header for vertex list\n   * @type {libtess.GluVertex}\n   */\n  this.vHead = new libtess.GluVertex();\n\n  /**\n   * dummy header for face list\n   * @type {libtess.GluFace}\n   */\n  this.fHead = new libtess.GluFace();\n\n  /**\n   * dummy header for edge list\n   * @type {libtess.GluHalfEdge}\n   */\n  this.eHead = new libtess.GluHalfEdge();\n\n  /**\n   * and its symmetric counterpart\n   * @type {libtess.GluHalfEdge}\n   */\n  this.eHeadSym = new libtess.GluHalfEdge();\n\n  // TODO(bckenny): better way to pair these?\n  this.eHead.sym = this.eHeadSym;\n  this.eHeadSym.sym = this.eHead;\n};\n\n\n// TODO(bckenny): #ifndef NDEBUG\n/**\n * Checks mesh for self-consistency.\n */\nlibtess.GluMesh.prototype.checkMesh = function() {\n  if (!libtess.DEBUG) {\n    return;\n  }\n\n  var fHead = this.fHead;\n  var vHead = this.vHead;\n  var eHead = this.eHead;\n\n  var e;\n\n  // faces\n  var f;\n  var fPrev = fHead;\n  for (fPrev = fHead; (f = fPrev.next) !== fHead; fPrev = f) {\n    e = f.anEdge;\n    do {\n      e = e.lNext;\n    } while (e !== f.anEdge);\n  }\n\n  // vertices\n  var v;\n  var vPrev = vHead;\n  for (vPrev = vHead; (v = vPrev.next) !== vHead; vPrev = v) {\n    e = v.anEdge;\n    do {\n      e = e.oNext;\n    } while (e !== v.anEdge);\n  }\n\n  // edges\n  var ePrev = eHead;\n  for (ePrev = eHead; (e = ePrev.next) !== eHead; ePrev = e) {\n  }\n};\n\n\n\n/* global libtess */\n\n/**\n * Each vertex has a pointer to next and previous vertices in the\n * circular list, and a pointer to a half-edge with this vertex as\n * the origin (null if this is the dummy header). There is also a\n * field \"data\" for client data.\n *\n * @param {libtess.GluVertex=} opt_nextVertex [description].\n * @param {libtess.GluVertex=} opt_prevVertex [description].\n * @constructor\n * @struct\n */\nlibtess.GluVertex = function(opt_nextVertex, opt_prevVertex) {\n  // TODO(bckenny): reverse order of params?\n\n  /**\n   * Next vertex (never null).\n   * @type {!libtess.GluVertex}\n   */\n  this.next = opt_nextVertex || this;\n\n  /**\n   * Previous vertex (never null).\n   * @type {!libtess.GluVertex}\n   */\n  this.prev = opt_prevVertex || this;\n\n  /**\n   * A half-edge with this origin.\n   * @type {libtess.GluHalfEdge}\n   */\n  this.anEdge = null;\n\n  /**\n   * The client's data.\n   * @type {Object}\n   */\n  this.data = null;\n\n  /**\n   * The vertex location in 3D.\n   * @type {!Array.<number>}\n   */\n  this.coords = [0, 0, 0];\n  // TODO(bckenny): we may want to rethink coords, either eliminate (using s\n  // and t and user data) or index into contiguous storage?\n\n  /**\n   * Component of projection onto the sweep plane.\n   * @type {number}\n   */\n  this.s = 0;\n\n  /**\n   * Component of projection onto the sweep plane.\n   * @type {number}\n   */\n  this.t = 0;\n\n  /**\n   * To allow deletion from priority queue.\n   * @type {?libtess.PQHandle}\n   */\n  this.pqHandle = null;\n  // NOTE(bckenny): pqHandle inited in sweep\n  // TODO(bckenny): can we have a numeric default value? null may do bad things\n};\n\n\n\n/* global libtess */\n\n// TODO(bckenny): more specific typing on key\n\n/**\n * [PQHandleElem description]\n * @constructor\n * @struct\n */\nlibtess.PQHandleElem = function() {\n  // TODO(bckenny): if key could instead be an indexed into another store, makes heap storage a lot easier\n\n  /**\n   * [key description]\n   * @type {libtess.PQKey}\n   */\n  this.key = null;\n\n  /**\n   * [node description]\n   * @type {libtess.PQHandle}\n   */\n  this.node = 0;\n};\n\n\n/**\n * Allocate a PQHandleElem array of size size. If oldArray is not null, its\n * contents are copied to the beginning of the new array. The rest of the array\n * is filled with new PQHandleElems.\n *\n * @param {?Array.<libtess.PQHandleElem>} oldArray [description].\n * @param {number} size [description].\n * @return {Array.<libtess.PQHandleElem>} [description].\n */\nlibtess.PQHandleElem.realloc = function(oldArray, size) {\n  var newArray = new Array(size);\n\n  // TODO(bckenny): better to reallocate array? or grow array?\n  var index = 0;\n  if (oldArray !== null) {\n    for (; index < oldArray.length; index++) {\n      newArray[index] = oldArray[index];\n    }\n  }\n\n  for (; index < size; index++) {\n    newArray[index] = new libtess.PQHandleElem();\n  }\n\n  return newArray;\n};\n\n\n\n/* global libtess */\n\n// TODO(bckenny): maybe just have these created inline as literals\n// (or unboxed directly - PQHandle is just an array index number)\n\n/**\n * [PQNode description]\n * @constructor\n * @struct\n */\nlibtess.PQNode = function() {\n  /**\n   * [handle description]\n   * @type {libtess.PQHandle}\n   */\n  this.handle = 0;\n};\n\n\n/**\n * Allocate a PQNode array of size size. If oldArray is not null, its contents\n * are copied to the beginning of the new array. The rest of the array is\n * filled with new PQNodes.\n *\n * @param {?Array.<libtess.PQNode>} oldArray [description].\n * @param {number} size [description].\n * @return {Array.<libtess.PQNode>} [description].\n */\nlibtess.PQNode.realloc = function(oldArray, size) {\n  var newArray = new Array(size);\n\n  // TODO(bckenny): better to reallocate array? or grow array?\n  var index = 0;\n  if (oldArray !== null) {\n    for (; index < oldArray.length; index++) {\n      newArray[index] = oldArray[index];\n    }\n  }\n\n  for (; index < size; index++) {\n    newArray[index] = new libtess.PQNode();\n  }\n\n  return newArray;\n};\n\n\n\n/* global libtess */\n\n// TODO(bckenny): preallocating arrays may actually be hurting us in sort\n// performance (esp if theres some undefs in there)\n\n/**\n * [PriorityQ description]\n * @constructor\n * @struct\n * @param {function(Object, Object): boolean} leq [description].\n */\nlibtess.PriorityQ = function(leq) {\n  /**\n   * [keys description]\n   * @private\n   * @type {Array.<libtess.PQKey>}\n   */\n  this.keys_ = libtess.PriorityQ.prototype.PQKeyRealloc_(null,\n      libtess.PriorityQ.INIT_SIZE_);\n\n  /**\n   * Array of indexes into this.keys_\n   * @private\n   * @type {Array.<number>}\n   */\n  this.order_ = null;\n\n  /**\n   * [size description]\n   * @private\n   * @type {number}\n   */\n  this.size_ = 0;\n\n  /**\n   * [max_ description]\n   * @private\n   * @type {number}\n   */\n  this.max_ = libtess.PriorityQ.INIT_SIZE_;\n\n  /**\n   * [initialized description]\n   * @private\n   * @type {boolean}\n   */\n  this.initialized_ = false;\n\n  // TODO(bckenny): leq was inlined by define in original, but appears to just\n  // be vertLeq, as passed. keep an eye on this as to why its not used.\n  /**\n   * [leq description]\n   * @private\n   * @type {function(libtess.PQKey, libtess.PQKey): boolean}\n   */\n  this.leq_ =\n      /** @type {function(libtess.PQKey, libtess.PQKey): boolean} */(leq);\n\n  /**\n   * [heap_ description]\n   * @private\n   * @type {libtess.PriorityQHeap}\n   */\n  this.heap_ = new libtess.PriorityQHeap(this.leq_);\n};\n\n\n/**\n * [INIT_SIZE_ description]\n * @private\n * @const\n * @type {number}\n */\nlibtess.PriorityQ.INIT_SIZE_ = 32;\n\n\n/**\n * [deleteQ description]\n */\nlibtess.PriorityQ.prototype.deleteQ = function() {\n  // TODO(bckenny): unnecessary, I think.\n  this.heap_.deleteHeap();\n  this.heap_ = null;\n  this.order_ = null;\n  this.keys_ = null;\n  // NOTE(bckenny): nulled at callsite (sweep.donePriorityQ_)\n};\n\n\n/**\n * [init description]\n */\nlibtess.PriorityQ.prototype.init = function() {\n  // TODO(bckenny): reuse. in theory, we don't have to empty this, as access is\n  // dictated by this.size_, but array.sort doesn't know that\n  this.order_ = [];\n\n  // Create an array of indirect pointers to the keys, so that\n  // the handles we have returned are still valid.\n  // TODO(bckenny): valid for when? it appears we can just store indexes into\n  // keys_, but what did this mean?\n  for (var i = 0; i < this.size_; i++) {\n    this.order_[i] = i;\n  }\n\n  // sort the indirect pointers in descending order of the keys themselves\n  // TODO(bckenny): make sure it's ok that keys[a] === keys[b] returns 1\n  // TODO(bckenny): unstable sort means we may get slightly different polys in\n  // different browsers, but only when passing in equal points\n  // TODO(bckenny): make less awkward closure?\n  var comparator = (function(keys, leq) {\n    return function(a, b) {\n      return leq(keys[a], keys[b]) ? 1 : -1;\n    };\n  })(this.keys_, this.leq_);\n  this.order_.sort(comparator);\n\n  this.max_ = this.size_;\n  this.initialized_ = true;\n  this.heap_.init();\n\n  // TODO(bckenny):\n  // #ifndef NDEBUG\n  if (libtess.DEBUG) {\n    var p = 0;\n    var r = p + this.size_ - 1;\n    for (i = p; i < r; ++i) {\n    }\n  }\n  // #endif\n};\n\n\n/**\n * [insert description]\n * @param {libtess.PQKey} keyNew [description].\n * @return {libtess.PQHandle} [description].\n */\nlibtess.PriorityQ.prototype.insert = function(keyNew) {\n  // NOTE(bckenny): originally returned LONG_MAX as alloc failure signal. no\n  // longer does.\n  if (this.initialized_) {\n    return this.heap_.insert(keyNew);\n  }\n\n  var curr = this.size_;\n  if (++this.size_ >= this.max_) {\n    // If the heap overflows, double its size.\n    this.max_ *= 2;\n    this.keys_ =\n        libtess.PriorityQ.prototype.PQKeyRealloc_(this.keys_, this.max_);\n  }\n\n  this.keys_[curr] = keyNew;\n\n  // Negative handles index the sorted array.\n  return -(curr + 1);\n};\n\n\n/**\n * Allocate a PQKey array of size size. If oldArray is not null, its\n * contents are copied to the beginning of the new array. The rest of the array\n * is filled with nulls.\n *\n * @private\n * @param {?Array.<libtess.PQKey>} oldArray [description].\n * @param {number} size [description].\n * @return {Array.<(?libtess.PQKey)>} [description].\n */\nlibtess.PriorityQ.prototype.PQKeyRealloc_ = function(oldArray, size) {\n  // TODO(bckenny): double check return type. can we have ? there?\n  var newArray = new Array(size);\n\n  // TODO(bckenny): better to reallocate array? or grow array?\n  var index = 0;\n  if (oldArray !== null) {\n    for (; index < oldArray.length; index++) {\n      newArray[index] = oldArray[index];\n    }\n  }\n\n  for (; index < size; index++) {\n    newArray[index] = null;\n  }\n\n  return newArray;\n};\n\n// NOTE(bckenny): libtess.PriorityQ.keyLessThan_ is called nowhere in libtess\n// and isn't part of the public API.\n/* istanbul ignore next */\n/**\n * Whether x is less than y according to this.leq_.\n * @private\n * @param {number} x\n * @param {number} y\n * @return {boolean}\n */\nlibtess.PriorityQ.prototype.keyLessThan_ = function(x, y) {\n  // NOTE(bckenny): was macro LT\n  var keyX = this.keys_[x];\n  var keyY = this.keys_[y];\n  return !this.leq_(keyY, keyX);\n};\n\n// NOTE(bckenny): libtess.PriorityQ.keyGreaterThan_ is called nowhere in libtess\n// and isn't part of the public API.\n/* istanbul ignore next */\n/**\n * Whether x is greater than y according to this.leq_.\n * @private\n * @param {number} x\n * @param {number} y\n * @return {boolean}\n */\nlibtess.PriorityQ.prototype.keyGreaterThan_ = function(x, y) {\n  // NOTE(bckenny): was macro GT\n  var keyX = this.keys_[x];\n  var keyY = this.keys_[y];\n  return !this.leq_(keyX, keyY);\n};\n\n\n/**\n * [extractMin description]\n * @return {libtess.PQKey} [description].\n */\nlibtess.PriorityQ.prototype.extractMin = function() {\n  if (this.size_ === 0) {\n    return this.heap_.extractMin();\n  }\n\n  var sortMin = this.keys_[this.order_[this.size_ - 1]];\n  if (!this.heap_.isEmpty()) {\n    var heapMin = this.heap_.minimum();\n    if (this.leq_(heapMin, sortMin)) {\n      return this.heap_.extractMin();\n    }\n  }\n\n  do {\n    --this.size_;\n  } while (this.size_ > 0 && this.keys_[this.order_[this.size_ - 1]] === null);\n\n  return sortMin;\n};\n\n\n/**\n * [minimum description]\n * @return {libtess.PQKey} [description].\n */\nlibtess.PriorityQ.prototype.minimum = function() {\n  if (this.size_ === 0) {\n    return this.heap_.minimum();\n  }\n\n  var sortMin = this.keys_[this.order_[this.size_ - 1]];\n  if (!this.heap_.isEmpty()) {\n    var heapMin = this.heap_.minimum();\n    if (this.leq_(heapMin, sortMin)) {\n      return heapMin;\n    }\n  }\n\n  return sortMin;\n};\n\n// NOTE(bckenny): libtess.PriorityQ.isEmpty_ isn't called within libtess and\n// isn't part of the public API. For now, leaving in but ignoring for coverage.\n/* istanbul ignore next */\n/**\n * Returns whether the priority queue is empty.\n * @private\n * @return {boolean}\n */\nlibtess.PriorityQ.prototype.isEmpty_ = function() {\n  return (this.size_ === 0) && this.heap_.isEmpty();\n};\n\n\n/**\n * [remove description]\n * @param {libtess.PQHandle} curr [description].\n */\nlibtess.PriorityQ.prototype.remove = function(curr) {\n  if (curr >= 0) {\n    this.heap_.remove(curr);\n    return;\n  }\n  curr = -(curr + 1);\n\n  this.keys_[curr] = null;\n  while (this.size_ > 0 && this.keys_[this.order_[this.size_ - 1]] === null) {\n    --this.size_;\n  }\n};\n\n\n\n/* global libtess */\n\n// TODO(bckenny): keys appear to always be GluVertex in this case?\n\n/**\n * [PriorityQHeap description]\n * @constructor\n * @struct\n * @param {function(libtess.PQKey, libtess.PQKey): boolean} leq [description].\n */\nlibtess.PriorityQHeap = function(leq) {\n  /**\n   * The heap itself. Active nodes are stored in the range 1..size. Each node\n   * stores only an index into handles.\n   * @private\n   * @type {Array.<libtess.PQNode>}\n   */\n  this.nodes_ = libtess.PQNode.realloc(null,\n      libtess.PriorityQHeap.INIT_SIZE_ + 1);\n\n  /**\n   * Each handle stores a key, plus a pointer back to the node which currently\n   * represents that key (ie. nodes[handles[i].node].handle == i).\n   * @private\n   * @type {Array.<libtess.PQHandleElem>}\n   */\n  this.handles_ = libtess.PQHandleElem.realloc(null,\n      libtess.PriorityQHeap.INIT_SIZE_ + 1);\n\n  // TODO(bckenny): size and max should probably be libtess.PQHandle for correct\n  // typing (see PriorityQ.js)\n  /**\n   * The size of the queue.\n   * @private\n   * @type {number}\n   */\n  this.size_ = 0;\n\n  /**\n   * The queue's current allocated space.\n   * @private\n   * @type {number}\n   */\n  this.max_ = libtess.PriorityQHeap.INIT_SIZE_;\n\n  /**\n   * The index of the next free hole in the handles array. Handle in that slot\n   * has next item in freeList in its node propert. If there are no holes,\n   * freeList === 0 and one at the end of handles must be use.\n   * @private\n   * @type {libtess.PQHandle}\n   */\n  this.freeList_ = 0;\n\n  /**\n   * Indicates that the heap has been initialized via init. If false, inserts\n   * are fast insertions at the end of a list. If true, all inserts will now be\n   * correctly ordered in the queue before returning.\n   * @private\n   * @type {boolean}\n   */\n  this.initialized_ = false;\n\n  // TODO(bckenny): leq was inlined by define in original, but appears to\n  // be vertLeq, as passed. Using injected version, but is it better just to\n  // manually inline?\n  /**\n   * [leq description]\n   * @private\n   * @type {function(libtess.PQKey, libtess.PQKey): boolean}\n   */\n  this.leq_ = leq;\n\n  // so that minimum returns null\n  this.nodes_[1].handle = 1;\n};\n\n\n/**\n * [INIT_SIZE_ description]\n * @private\n * @const\n * @type {number}\n */\nlibtess.PriorityQHeap.INIT_SIZE_ = 32;\n\n\n/**\n * [deleteHeap description]\n */\nlibtess.PriorityQHeap.prototype.deleteHeap = function() {\n  // TODO(bckenny): unnecessary, I think.\n  this.handles_ = null;\n  this.nodes_ = null;\n  // NOTE(bckenny): nulled at callsite in PriorityQ.deleteQ\n};\n\n\n/**\n * Initializing ordering of the heap. Must be called before any method other\n * than insert is called to ensure correctness when removing or querying.\n */\nlibtess.PriorityQHeap.prototype.init = function() {\n  // This method of building a heap is O(n), rather than O(n lg n).\n  for (var i = this.size_; i >= 1; --i) {\n    this.floatDown_(i);\n  }\n\n  this.initialized_ = true;\n};\n\n\n/**\n * Insert a new key into the heap.\n * @param {libtess.PQKey} keyNew The key to insert.\n * @return {libtess.PQHandle} A handle that can be used to remove the key.\n */\nlibtess.PriorityQHeap.prototype.insert = function(keyNew) {\n  var curr = ++this.size_;\n\n  // if the heap overflows, double its size.\n  if ((curr * 2) > this.max_) {\n    this.max_ *= 2;\n    this.nodes_ = libtess.PQNode.realloc(this.nodes_, this.max_ + 1);\n    this.handles_ = libtess.PQHandleElem.realloc(this.handles_, this.max_ + 1);\n  }\n\n  var free;\n  if (this.freeList_ === 0) {\n    free = curr;\n  } else {\n    free = this.freeList_;\n    this.freeList_ = this.handles_[free].node;\n  }\n\n  this.nodes_[curr].handle = free;\n  this.handles_[free].node = curr;\n  this.handles_[free].key = keyNew;\n\n  if (this.initialized_) {\n    this.floatUp_(curr);\n  }\n\n  return free;\n};\n\n\n/**\n * @return {boolean} Whether the heap is empty.\n */\nlibtess.PriorityQHeap.prototype.isEmpty = function() {\n  return this.size_ === 0;\n};\n\n\n/**\n * Returns the minimum key in the heap. If the heap is empty, null will be\n * returned.\n * @return {libtess.PQKey} [description].\n */\nlibtess.PriorityQHeap.prototype.minimum = function() {\n  return this.handles_[this.nodes_[1].handle].key;\n};\n\n\n/**\n * Removes the minimum key from the heap and returns it. If the heap is empty,\n * null will be returned.\n * @return {libtess.PQKey} [description].\n */\nlibtess.PriorityQHeap.prototype.extractMin = function() {\n  var n = this.nodes_;\n  var h = this.handles_;\n  var hMin = n[1].handle;\n  var min = h[hMin].key;\n\n  if (this.size_ > 0) {\n    n[1].handle = n[this.size_].handle;\n    h[n[1].handle].node = 1;\n\n    h[hMin].key = null;\n    h[hMin].node = this.freeList_;\n    this.freeList_ = hMin;\n\n    if (--this.size_ > 0) {\n      this.floatDown_(1);\n    }\n  }\n\n  return min;\n};\n\n\n/**\n * Remove key associated with handle hCurr (returned from insert) from heap.\n * @param {libtess.PQHandle} hCurr [description].\n */\nlibtess.PriorityQHeap.prototype.remove = function(hCurr) {\n  var n = this.nodes_;\n  var h = this.handles_;\n\n  var curr = h[hCurr].node;\n  n[curr].handle = n[this.size_].handle;\n  h[n[curr].handle].node = curr;\n\n  if (curr <= --this.size_) {\n    if (curr <= 1 ||\n        this.leq_(h[n[curr >> 1].handle].key, h[n[curr].handle].key)) {\n\n      this.floatDown_(curr);\n    } else {\n      this.floatUp_(curr);\n    }\n  }\n\n  h[hCurr].key = null;\n  h[hCurr].node = this.freeList_;\n  this.freeList_ = hCurr;\n};\n\n\n/**\n * [floatDown_ description]\n * @private\n * @param {libtess.PQHandle} curr [description].\n */\nlibtess.PriorityQHeap.prototype.floatDown_ = function(curr) {\n  var n = this.nodes_;\n  var h = this.handles_;\n\n  var hCurr = n[curr].handle;\n  for (;;) {\n    // The children of node i are nodes 2i and 2i+1.\n    // set child to the index of the child with the minimum key\n    var child = curr << 1;\n    if (child < this.size_ &&\n        this.leq_(h[n[child + 1].handle].key, h[n[child].handle].key)) {\n\n      ++child;\n    }\n\n    var hChild = n[child].handle;\n    if (child > this.size_ || this.leq_(h[hCurr].key, h[hChild].key)) {\n      n[curr].handle = hCurr;\n      h[hCurr].node = curr;\n      break;\n    }\n    n[curr].handle = hChild;\n    h[hChild].node = curr;\n    curr = child;\n  }\n};\n\n\n/**\n * [floatUp_ description]\n * @private\n * @param {libtess.PQHandle} curr [description].\n */\nlibtess.PriorityQHeap.prototype.floatUp_ = function(curr) {\n  var n = this.nodes_;\n  var h = this.handles_;\n\n  var hCurr = n[curr].handle;\n  for (;;) {\n    var parent = curr >> 1;\n    var hParent = n[parent].handle;\n    if (parent === 0 || this.leq_(h[hParent].key, h[hCurr].key)) {\n      n[curr].handle = hCurr;\n      h[hCurr].node = curr;\n      break;\n    }\n\n    n[curr].handle = hParent;\n    h[hParent].node = curr;\n    curr = parent;\n  }\n};\n\n\n/* global libtess */\n\n// TODO(bckenny): apparently only visible outside of sweep for debugging routines.\n// find out if we can hide\n\n/**\n * For each pair of adjacent edges crossing the sweep line, there is\n * an ActiveRegion to represent the region between them. The active\n * regions are kept in sorted order in a dynamic dictionary. As the\n * sweep line crosses each vertex, we update the affected regions.\n * @constructor\n * @struct\n */\nlibtess.ActiveRegion = function() {\n  // TODO(bckenny): I *think* eUp and nodeUp could be passed in as constructor params\n\n  /**\n   * The upper edge of the region, directed right to left\n   * @type {libtess.GluHalfEdge}\n   */\n  this.eUp = null;\n\n  /**\n   * Dictionary node corresponding to eUp edge.\n   * @type {libtess.DictNode}\n   */\n  this.nodeUp = null;\n\n  /**\n   * Used to determine which regions are inside the polygon.\n   * @type {number}\n   */\n  this.windingNumber = 0;\n\n  /**\n   * Whether this region is inside the polygon.\n   * @type {boolean}\n   */\n  this.inside = false;\n\n  /**\n   * Marks fake edges at t = +/-infinity.\n   * @type {boolean}\n   */\n  this.sentinel = false;\n\n  /**\n   * Marks regions where the upper or lower edge has changed, but we haven't\n   * checked whether they intersect yet.\n   * @type {boolean}\n   */\n  this.dirty = false;\n\n  /**\n   * marks temporary edges introduced when we process a \"right vertex\" (one\n   * without any edges leaving to the right)\n   * @type {boolean}\n   */\n  this.fixUpperEdge = false;\n};\n\n/**\n * Returns the ActiveRegion below this one.\n * @return {libtess.ActiveRegion}\n */\nlibtess.ActiveRegion.prototype.regionBelow = function() {\n  return this.nodeUp.getPredecessor().getKey();\n};\n\n/**\n * Returns the ActiveRegion above this one.\n * @return {libtess.ActiveRegion}\n */\nlibtess.ActiveRegion.prototype.regionAbove = function() {\n  return this.nodeUp.getSuccessor().getKey();\n};\n\n/* global libtess, module */\n\nexport default libtess;\n","import WorldWind from 'webworldwind-esa';\n\nconst {\n    GpuProgram\n} = WorldWind;\n\nexport default class ScreenColorProgram extends GpuProgram {\n\n    constructor(gl) {\n        const vertexShaderSource =\n            'attribute vec3 a_position;\\n' +\n\n            'uniform vec2 u_resolution;\\n' +\n\n            'void main() {\\n' +\n                // convert the position from pixels to 0.0 to 1.0\n            '   vec2 zeroToOne = a_position.xy / u_resolution;\\n' +\n\n                // convert from 0->1 to 0->2\n            '   vec2 zeroToTwo = zeroToOne * 2.0;\\n' +\n\n                // convert from 0->2 to -1->+1 (clipspace)\n            '   vec2 clipSpace = zeroToTwo - 1.0;\\n' +\n\n            '   gl_Position = vec4(clipSpace, 0, 1);\\n' +\n            '}';\n\n        const fragmentShaderSource =\n            'precision mediump float;\\n' +\n\n            'uniform vec4 color;\\n' +\n\n            'void main() {\\n' +\n            '   gl_FragColor = color;\\n' +\n            '}';\n\n        super(gl, vertexShaderSource, fragmentShaderSource, ['a_position']);\n\n        this.resolutionLocation = this.uniformLocation(gl, 'u_resolution');\n        this.colorLocation = this.uniformLocation(gl, 'color');\n\n        this.localCache = {\n            resolution: {\n                width: null,\n                height: null,\n            },\n            color: {\n                r: null,\n                g: null,\n                b: null,\n                a: null,\n            },\n        };\n    }\n\n    loadResolution(gl, width, height) {\n        if (this.localCache.resolution.width === width && this.localCache.resolution.height === height) {\n            return;\n        }\n        gl.uniform2f(this.resolutionLocation, width, height);\n        this.localCache.resolution.width = width;\n        this.localCache.resolution.height = height;\n    }\n\n    loadColor(gl, color) {\n        const cacheColor = this.localCache.color;\n        if (cacheColor.r === color.red &&\n            cacheColor.g === color.green &&\n            cacheColor.b === color.blue &&\n            cacheColor.a === color.alpha) {\n            return;\n        }\n        const a = color.alpha;\n        gl.uniform4f(this.colorLocation, color.red * a, color.green * a, color.blue * a, color.alpha);\n        cacheColor.r = color.red;\n        cacheColor.g = color.green;\n        cacheColor.b = color.blue;\n        cacheColor.a = color.alpha;\n    }\n\n}\n\nScreenColorProgram.key = 'WorldWindGpuScreenColorProgram';","import WorldWind from 'webworldwind-esa';\n\nconst {\n    GpuProgram\n} = WorldWind;\n\nexport default class ScreenTextureProgram extends GpuProgram {\n\n    constructor(gl) {\n        const vertexShaderSource =\n            'attribute vec3 a_position;\\n' +\n            'attribute vec2 vertexTexCoord;\\n' +\n\n            'uniform vec2 u_resolution;\\n' +\n\n            'varying vec2 texCoord;\\n' +\n\n            'void main() {\\n' +\n            // convert the position from pixels to 0.0 to 1.0\n            '   vec2 zeroToOne = a_position.xy / u_resolution;\\n' +\n\n            // convert from 0->1 to 0->2\n            '   vec2 zeroToTwo = zeroToOne * 2.0;\\n' +\n\n            // convert from 0->2 to -1->+1 (clipspace)\n            '   vec2 clipSpace = zeroToTwo - 1.0;\\n' +\n\n            '   gl_Position = vec4(clipSpace, 0, 1);\\n' +\n            '   gl_PointSize = 3.0;\\n' +\n            '   texCoord = vertexTexCoord;\\n' +\n            '}';\n\n        const fragmentShaderSource =\n            'precision mediump float;\\n' +\n\n            'uniform sampler2D textureSampler;\\n' +\n\n            'varying vec2 texCoord;\\n' +\n\n            'void main() {\\n' +\n            '   gl_FragColor = texture2D(textureSampler, texCoord);\\n' +\n            //'   gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);\\n' +\n            '}';\n\n        super(gl, vertexShaderSource, fragmentShaderSource, ['a_position', 'vertexTexCoord']);\n\n        this.resolutionLocation = this.uniformLocation(gl, 'u_resolution');\n        this.texUnitLocation = this.uniformLocation(gl, 'textureSampler');\n\n        this.localCache = {\n            resolution: {\n                width: null,\n                height: null,\n            },\n            textureUnit: null,\n        };\n    }\n\n    loadResolution(gl, width, height) {\n        if (this.localCache.resolution.width === width && this.localCache.resolution.height === height) {\n            return;\n        }\n        gl.uniform2f(this.resolutionLocation, width, height);\n        this.localCache.resolution.width = width;\n        this.localCache.resolution.height = height;\n    }\n\n    loadTextureUnit(gl, unit) {\n        if (this.localCache.textureUnit === unit) {\n            return;\n        }\n        gl.uniform1i(this.texUnitLocation, unit - gl.TEXTURE0);\n        this.localCache.textureUnit = unit;\n    }\n\n}\n\nScreenTextureProgram.key = 'WorldWindGpuScreenTextureProgram';","import libtess from './libtess';\nimport ScreenColorProgram from './ScreenColorProgram';\nimport ScreenTextureProgram from './ScreenTextureProgram';\nimport WorldWind from 'webworldwind-esa';\n\nconst {\n    Angle,\n    SurfaceShape,\n    PickedObject,\n    Texture,\n    Location,\n} = WorldWind;\n\nconst WGS84_SEMI_MAJOR_AXIS = 6378137.0;\n\nexport default class TexturedSurfaceShape extends SurfaceShape {\n\n    static tesselator() {\n        if (!TexturedSurfaceShape.tess) {\n            TexturedSurfaceShape.tess = new libtess.GluTesselator();\n        }\n        return TexturedSurfaceShape.tess;\n    }\n\n    static nextId() {\n        if (!TexturedSurfaceShape._nextId) {\n            TexturedSurfaceShape._nextId = 0;\n        }\n        return TexturedSurfaceShape._nextId++;\n    }\n\n    static staticStateKey(shape) {\n        shape.stateKeyInvalid = false;\n\n        if (shape.highlighted) {\n            if (!shape._highlightAttributes) {\n                if (!shape._attributes) {\n                    shape._attributesStateKey = null;\n                } else {\n                    shape._attributesStateKey = shape._attributes.stateKey;\n                }\n            } else {\n                shape._attributesStateKey = shape._highlightAttributes.stateKey;\n            }\n        } else {\n            if (!shape._attributes) {\n                shape._attributesStateKey = null;\n            } else {\n                shape._attributesStateKey = shape._attributes.stateKey;\n            }\n        }\n\n        return 'dn ' + shape.displayName +\n            ' id ' + shape._id +\n            ' at ' + (!shape._attributesStateKey ? 'null' : shape._attributesStateKey) +\n            ' hi ' + shape.highlighted +\n            ' en ' + shape.enabled +\n            ' pt ' + shape.pathType +\n            ' ne ' + shape.maximumNumEdgeIntervals +\n            ' po ' + shape.polarThrottle +\n            ' img ' + !!shape.image +\n            ' se ' + '[' +\n            shape.sector.minLatitude + ',' +\n            shape.sector.maxLatitude + ',' +\n            shape.sector.minLongitude + ',' +\n            shape.sector.maxLongitude +\n            ']';\n    }\n\n    constructor(attributes) {\n        super(attributes);\n\n        this._image = null;\n        this._imageUUID = '';\n        this._interiorVboCacheKey = '';\n        this._outlineVboCacheKey = '';\n\n        this._contoursPrepered = false;\n        this._contoursInfo = [];\n\n        this._id = TexturedSurfaceShape.nextId();\n    }\n\n    get image() {\n        return this._image;\n    }\n\n    set image(img) {\n        this._image = img;\n        this.stateKeyInvalid = true;\n    }\n\n    get imageUUID() {\n        return this._imageUUID;\n    }\n\n    set imageUUID(value) {\n        this._imageUUID = value;\n    }\n\n    renderToTexture(dc, fbo, xScale, yScale, dx, dy) {\n        const attributes = (this._highlighted ? (this._highlightAttributes || this._attributes) : this._attributes);\n        const drawInterior = (!this._isInteriorInhibited && attributes.drawInterior);\n        const drawOutline = (attributes.drawOutline && attributes.outlineWidth > 0);\n\n        if (!drawInterior && !drawOutline) {\n            return;\n        }\n\n        if (dc.pickingMode && !this.pickColor) {\n            this.pickColor = dc.uniquePickColor();\n        }\n\n        //TODO pass width and height from SurfaceShapeTile\n        const tileWidth = 256;\n        const tileHeight = 256;\n\n        var i;\n        const interiorGeometry = this.mapGeometry(this._interiorGeometry, xScale, yScale, dx, dy);\n        for (i = 0; i < interiorGeometry.length; i++) {\n            if (!this._contoursPrepered) {\n                var wo = this.windingOrder_all(interiorGeometry[i]);\n                this._contoursInfo.push({wo: wo});\n            }\n\n            var points = interiorGeometry[i];\n            if (points[0] === points[points.length - 2] && points[1] === points[points.length - 1]) {\n                points.pop();\n                points.pop();\n            }\n        }\n\n        if (this._image && !dc.pickingMode && !this.crossesAntiMeridian && !this.containsPole ) {\n            if (!this._contoursPrepered) {\n                if (interiorGeometry.length === 1) {\n                    const {anglesMap, topLeftIndex} = this.getCorners(interiorGeometry[0], this._contoursInfo[0].wo);\n                    const uvs = this.computeUvs(this._contoursInfo[0].wo, anglesMap, topLeftIndex, this._interiorGeometry[0]);\n                    this._contoursInfo[0].anglesMap = anglesMap;\n                    this._contoursInfo[0].topLeftIndex = topLeftIndex;\n                    this._contoursInfo[0].uvs = uvs;\n\n                    var tessGeom = this.tessellate_p1(interiorGeometry[0], uvs);\n                    var tessIndices = [];\n                    for (i = 0; i < tessGeom.length; i += 5) {\n                        var x = tessGeom[i];\n                        var y = tessGeom[i + 1];\n\n                        for (var j = 0; j < interiorGeometry[0].length; j += 2) {\n                            var px = interiorGeometry[0][j];\n                            var py = interiorGeometry[0][j + 1];\n                            if (px === x && py === y) {\n                                tessIndices.push(j / 2);\n                                break;\n                            }\n                        }\n                    }\n                    this._contoursInfo[0].iboData = new Uint16Array(tessIndices);\n\n                    var len = Math.floor(interiorGeometry[0].length / 2) * 5;\n                    this._contoursInfo[0].vboData = new Float32Array(len);\n\n                    var vboData = this._contoursInfo[0].vboData;\n                    var k = 0;\n                    for (i = 0; i < vboData.length; i += 5) {\n                        vboData[i] = interiorGeometry[k];\n                        vboData[i + 1] = interiorGeometry[k + 1];\n                        vboData[i + 2] = 0;\n                        vboData[i + 3] = uvs[k];\n                        vboData[i + 4] = uvs[k + 1];\n                        k += 2;\n                    }\n\n                    this._contoursPrepered = true;\n                }\n                else {\n\n                }\n                //this._contoursPrepered = true;\n            }\n            this.renderTexture(dc, {\n                points: interiorGeometry[0],\n                tileWidth,\n                tileHeight,\n                xScale,\n                yScale,\n                dx,\n                dy,\n            });\n        }\n        else {\n            this.renderColor(dc, {\n                tileWidth,\n                tileHeight,\n                xScale,\n                yScale,\n                dx,\n                dy,\n                drawInterior,\n                interiorColor: attributes.interiorColor,\n                drawOutline,\n                outlineColor: attributes.outlineColor,\n            });\n            this._contoursPrepered = true;\n        }\n\n        if (dc.pickingMode) {\n            var po = new PickedObject(this.pickColor.clone(), this.pickDelegate ? this.pickDelegate : this,\n                null, this.layer, false);\n            dc.resolvePick(po);\n        }\n    }\n\n    renderColor(dc, {tileWidth, tileHeight, xScale, yScale, dx, dy, drawInterior, interiorColor, drawOutline, outlineColor}) {\n        if (!this.tessGeom) {\n            this.tessGeom = this.tessellate(this._interiorGeometry);\n            this.tessTris = new Float32Array(this.tessGeom.length);\n        }\n\n        if (!this.wo) {\n            const interiorGeometry = this.mapGeometry(this._interiorGeometry, xScale, yScale, dx, dy);\n            this.wo = this.windingOrder_all(interiorGeometry[0]);\n        }\n\n        const gl = dc.currentGlContext;\n        const program = dc.findAndBindProgram(ScreenColorProgram);\n        program.loadResolution(gl, tileWidth, tileHeight);\n        gl.enableVertexAttribArray(0);\n\n        if (drawInterior) {\n            program.loadColor(gl, dc.pickingMode ? this.pickColor : interiorColor);\n\n            for (var i = 0; i < this.tessGeom.length; i += 3) {\n                var x = this.tessGeom[i];\n                var y = this.tessGeom[i + 1];\n                this.tessTris[i] = x * Angle.RADIANS_TO_DEGREES * xScale + dx;\n                this.tessTris[i + 1] = y * Angle.RADIANS_TO_DEGREES * yScale + dy;\n                this.tessTris[i + 2] = 0;\n            }\n\n            this.bindInteriorVbo(dc, this.tessTris, null);\n            gl.vertexAttribPointer(0, 3, gl.FLOAT, false, 0, 0);\n\n            if (this.wo === 'CW') {\n                gl.frontFace(gl.CW);\n            }\n            gl.drawArrays(gl.TRIANGLES, 0, Math.floor(this.tessTris.length / 3));\n\n            if (this.wo === 'CW') {\n                gl.frontFace(gl.CCW);\n            }\n        }\n\n        // if (drawOutline || true) {\n        //     program.loadColor(gl, outlineColor);\n        //     // console.log(this._outlineGeometry[0])\n        //     let outline = []\n        //     let interiorGeometry = this.mapGeometry(this._interiorGeometry, xScale, yScale, dx, dy)\n        //     for (var i = 0; i < interiorGeometry[0].length; i += 2) {\n        //         var x = interiorGeometry[0][i];\n        //         var y = interiorGeometry[0][i + 1];\n        //         outline.push(x * Angle.RADIANS_TO_DEGREES * xScale + dx)\n        //         outline.push(y * Angle.RADIANS_TO_DEGREES * yScale + dy)\n        //         outline.push(0)\n        //     }\n\n\n        //     this.bindOutlineVbo(dc, new Float32Array(outline), null);\n        //     gl.vertexAttribPointer(0, 2, gl.FLOAT, false, 0, 0);\n        //     gl.drawArrays(gl.LINE_STRIP, 0, Math.floor(outline.length / 2));\n        // }\n    }\n\n    renderTexture(dc, {points, tileWidth, tileHeight, xScale, yScale, dx, dy, anglesMap, topLeftIndex}) {\n\n        var vboData = this._contoursInfo[0].vboData;\n        var k = 0;\n        for (var i = 0; i < vboData.length; i += 5) {\n            vboData[i] = points[k];\n            vboData[i + 1] = points[k + 1];\n            k += 2;\n        }\n\n        const gl = dc.currentGlContext;\n        const program = dc.findAndBindProgram(ScreenTextureProgram);\n        program.loadResolution(gl, tileWidth, tileHeight);\n        gl.enableVertexAttribArray(0);\n        gl.enableVertexAttribArray(1);\n        program.loadTextureUnit(gl, gl.TEXTURE0);\n        const imageTextureKey = this._imageUUID || this._image.src;\n        if (!imageTextureKey) {\n            console.error('TexturedSurfaceShape, no uuid for image. Use shape.imageUUID to set a unique id');\n        }\n        let imageTexture = dc.gpuResourceCache.resourceForKey(imageTextureKey);\n\n        if (!imageTexture) {\n            imageTexture = new Texture(gl, this._image, null, true);\n            dc.gpuResourceCache.putResource(imageTextureKey, imageTexture, imageTexture.size);\n        }\n\n        imageTexture.bind(dc);\n\n        this.bindInteriorVbo(dc, vboData, null);\n        this.bindInteriorIbo(dc, this._contoursInfo[0].iboData, null);\n        /*var buf = gl.createBuffer();\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buf);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, this._contoursInfo[0].iboData, gl.STATIC_DRAW);*/\n        const valuesPerVertex = 3 + 2; //3 values for position and 2 values for uvs\n        const sizeOfFloat32 = 4;\n        const vertexSize = valuesPerVertex * sizeOfFloat32;\n\n        gl.vertexAttribPointer(0, 3, gl.FLOAT, false, vertexSize, 0);\n        gl.vertexAttribPointer(1, 2, gl.FLOAT, false, vertexSize, 3 * sizeOfFloat32);\n\n        if (this._contoursInfo[0].wo === 'CW') {\n            gl.frontFace(gl.CW);\n        }\n\n        gl.drawElements(gl.TRIANGLES, this._contoursInfo[0].iboData.length, gl.UNSIGNED_SHORT, 0);\n\n        //gl.drawArrays(gl.TRIANGLES, 0, Math.floor(this._contoursInfo[0].tessTris.length / 5));\n        //gl.drawArrays(gl.POINTS, 0,  Math.floor(this.tessTris.length / 5));\n        /*for (var i =0 ; i < this.tessTris.length; i += 3) {\n            gl.drawArrays(gl.LINE_LOOP, i, 3);\n        }*/\n\n        if (this._contoursInfo[0].wo === 'CW') {\n            gl.frontFace(gl.CCW);\n        }\n\n        gl.disableVertexAttribArray(1);\n    }\n\n    computeUvs(wo, anglesMap, topLeftIndex, locations1) {\n        const locations = locations1.slice();\n        locations.pop();\n        var uvs = new Float32Array(locations.length * 2);\n        var side = '';\n\n        for (var i = topLeftIndex; i < locations.length + topLeftIndex; i++) {\n            var index = i % locations.length;\n            var uv = {s: -1, t: -1};\n\n            if (anglesMap[index]) {\n                //is corner\n                side = this.nextSide(side, wo);\n\n                var sideStart = locations[index];\n                var sideEnd = null;\n                for (var j = i + 1; j < locations.length + topLeftIndex; j++) {\n                    var jIndex = j % locations.length;\n                    if (anglesMap[jIndex] != null) {\n                        sideEnd = locations[jIndex];\n                        break;\n                    }\n                }\n                if (!sideEnd) {\n                    sideEnd = locations[topLeftIndex];\n                }\n                var sideDistance = Location.greatCircleDistance(sideStart, sideEnd) * WGS84_SEMI_MAJOR_AXIS;\n            }\n\n            var distance = Location.greatCircleDistance(sideStart, locations[index]) * WGS84_SEMI_MAJOR_AXIS;\n\n            if (wo === 'CW') {\n                if (side === 'top') {\n                    uv.s = distance / sideDistance;\n                    uv.t = 0;\n                }\n                else if (side === 'right') {\n                    uv.s = 1;\n                    uv.t = distance / sideDistance;\n                }\n                else if (side === 'bottom') {\n                    uv.s = 1 - distance / sideDistance;\n                    uv.t = 1;\n                }\n                else if (side === 'left') {\n                    uv.s = 0;\n                    uv.t = 1 - distance / sideDistance;\n                }\n            }\n            else {\n                if (side === 'left') {\n                    uv.s = 0;\n                    uv.t = distance / sideDistance;\n                }\n                else if (side === 'bottom') {\n                    uv.s = distance / sideDistance;\n                    uv.t = 1;\n                }\n                else if (side === 'right') {\n                    uv.s = 1;\n                    uv.t = 1 - distance / sideDistance;\n                }\n                else if (side === 'top') {\n                    uv.s = 1 - distance / sideDistance;\n                    uv.t = 0;\n                }\n            }\n\n            uvs[index * 2] = uv.s;\n            uvs[index * 2 + 1] = uv.t;\n        }\n\n        return uvs;\n    }\n\n    nextSide(side, wo) {\n        var nextSide = '';\n        if (wo === 'CW') {\n            nextSide = 'top';\n            if (side === 'top') {\n                nextSide = 'right';\n            }\n            else if (side === 'right') {\n                nextSide = 'bottom';\n            }\n            else if (side === 'bottom') {\n                nextSide = 'left';\n            }\n            else if (side === 'left') {\n                nextSide = 'top';\n            }\n        }\n        else {\n            nextSide = 'left';\n            if (side === 'left') {\n                nextSide = 'bottom';\n            }\n            else if (side === 'bottom') {\n                nextSide = 'right';\n            }\n            else if (side === 'right') {\n                nextSide = 'top';\n            }\n            else if (side === 'top') {\n                nextSide = 'left';\n            }\n        }\n\n        return nextSide;\n    }\n\n    mapGeometry(contours, xScale, yScale, dx, dy) {\n        return contours.map(contour => {\n            return contour.reduce((acc, location) => {\n                const x = location.longitude * xScale + dx;\n                const y = location.latitude * yScale + dy;\n                acc.push(x, y);\n                return acc;\n            }, []);\n        });\n    }\n\n    bindInteriorVbo(dc, vboData, vboUsage) {\n        vboUsage = vboUsage || dc.currentGlContext.STATIC_DRAW;\n        if (!this._interiorVboCacheKey) {\n            this._interiorVboCacheKey = dc.gpuResourceCache.generateCacheKey();\n        }\n        this.bindVbo(dc, vboData, vboUsage, this._interiorVboCacheKey);\n    }\n\n    bindOutlineVbo(dc, vboData, vboUsage) {\n        vboUsage = vboUsage || dc.currentGlContext.STATIC_DRAW;\n        if (!this._outlineVboCacheKey) {\n            this._outlineVboCacheKey = dc.gpuResourceCache.generateCacheKey();\n        }\n        this.bindVbo(dc, vboData, vboUsage, this._outlineVboCacheKey);\n    }\n\n    bindVbo(dc, vboData, vboUsage, cacheKey) {\n        const gl = dc.currentGlContext;\n\n        let vbo = dc.gpuResourceCache.resourceForKey(cacheKey);\n        const vboEntry = dc.gpuResourceCache.entries.entries[cacheKey];\n        let vboSize = 0;\n        if (vboEntry) {\n            vboSize = vboEntry.size;\n        }\n        if (!vbo || vboSize < vboData.length * vboData.BYTES_PER_ELEMENT) {\n            vbo = gl.createBuffer();\n            gl.bindBuffer(gl.ARRAY_BUFFER, vbo);\n            gl.bufferData(gl.ARRAY_BUFFER, vboData, vboUsage);\n\n            dc.gpuResourceCache.putResource(cacheKey, vbo, vboData.length * vboData.BYTES_PER_ELEMENT);\n        }\n        else {\n            gl.bindBuffer(gl.ARRAY_BUFFER, vbo);\n            gl.bufferSubData(gl.ARRAY_BUFFER, 0, vboData);\n        }\n    }\n\n    bindInteriorIbo(dc, iboData, iboUsage) {\n        iboUsage = iboUsage || dc.currentGlContext.STATIC_DRAW;\n        if (!this._interiorIboCacheKey) {\n            this._interiorIboCacheKey = dc.gpuResourceCache.generateCacheKey();\n        }\n\n        this.bindIbo(dc, iboData, iboUsage, this._interiorIboCacheKey);\n    }\n\n    bindIbo(dc, iboData, iboUsage, cacheKey) {\n        const gl = dc.currentGlContext;\n\n        let ibo = dc.gpuResourceCache.resourceForKey(cacheKey);\n        const vboEntry = dc.gpuResourceCache.entries.entries[cacheKey];\n        let iboSize = 0;\n        if (vboEntry) {\n            iboSize = vboEntry.size;\n        }\n        if (!ibo || iboSize < iboData.length * iboData.BYTES_PER_ELEMENT) {\n            ibo = gl.createBuffer();\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, ibo);\n            gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, iboData, iboUsage);\n            dc.gpuResourceCache.putResource(cacheKey, ibo, iboData.length * iboData.BYTES_PER_ELEMENT);\n        }\n        else {\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, ibo);\n        }\n    }\n\n    tessellate_p(points, uvs) {\n        var tess = TexturedSurfaceShape.tesselator();\n        var triangles = [];\n\n        tess.gluTessCallback(libtess.gluEnum.GLU_TESS_BEGIN, function (prim) {\n            if (prim !== libtess.primitiveType.GL_TRIANGLES) {\n                console.error('Tessellation error, primitive is not TRIANGLES.');\n            }\n        });\n\n        tess.gluTessCallback(libtess.gluEnum.GLU_TESS_COMBINE, function (coords, data, weight) {\n            var newCoords = [coords[0], coords[1], coords[2]];\n\n            if (uvs && uvs.length) {\n                for (var i = 3; i <= 4; i++) {\n                    var value = 0;\n                    for (var w = 0; w < 4; w++) {\n                        if (weight[w] > 0) {\n                            value += weight[w] * data[w][i];\n                        }\n                    }\n\n                    newCoords[i] = value;\n                }\n            }\n\n            return newCoords;\n        });\n\n        //prevents triangle fans and strips\n        tess.gluTessCallback(libtess.gluEnum.GLU_TESS_EDGE_FLAG, function () {\n        });\n\n        tess.gluTessCallback(libtess.gluEnum.GLU_TESS_VERTEX_DATA, function (data, tris) {\n            tris.push(data[0]);\n            tris.push(data[1]);\n            tris.push(data[2]);\n\n            if (uvs && uvs.length) {\n                tris.push(data[3]);\n                tris.push(data[4]);\n            }\n        });\n\n        tess.gluTessCallback(libtess.gluEnum.GLU_TESS_ERROR, function (errno) {\n            console.error('tess err', errno);\n        });\n\n        tess.gluTessBeginPolygon(triangles);\n        tess.gluTessBeginContour();\n\n        var k = 0;\n        for (var i = 0; i < points.length; i++) {\n\n            var vertex = [points[i].x, points[i].y, 0];\n            if (uvs && uvs.length) {\n                vertex.push(uvs[k], uvs[k + 1]);\n                k += 2;\n            }\n\n            tess.gluTessVertex(vertex, vertex);\n        }\n\n        tess.gluTessEndContour();\n        tess.gluTessEndPolygon();\n\n        return triangles;\n    }\n\n    tessellate_p1(points, uvs) {\n        var tess = TexturedSurfaceShape.tesselator();\n        var triangles = [];\n\n        tess.gluTessCallback(libtess.gluEnum.GLU_TESS_BEGIN, function (prim) {\n            if (prim !== libtess.primitiveType.GL_TRIANGLES) {\n                console.error('Tessellation error, primitive is not TRIANGLES.');\n            }\n        });\n\n        tess.gluTessCallback(libtess.gluEnum.GLU_TESS_COMBINE, function (coords, data, weight) {\n            var newCoords = [coords[0], coords[1], coords[2]];\n\n            if (uvs && uvs.length) {\n                for (var i = 3; i <= 4; i++) {\n                    var value = 0;\n                    for (var w = 0; w < 4; w++) {\n                        if (weight[w] > 0) {\n                            value += weight[w] * data[w][i];\n                        }\n                    }\n\n                    newCoords[i] = value;\n                }\n            }\n\n            return newCoords;\n        });\n\n        //prevents triangle fans and strips\n        tess.gluTessCallback(libtess.gluEnum.GLU_TESS_EDGE_FLAG, function () {\n        });\n\n        tess.gluTessCallback(libtess.gluEnum.GLU_TESS_VERTEX_DATA, function (data, tris) {\n            tris.push(data[0]);\n            tris.push(data[1]);\n            tris.push(data[2]);\n\n            if (uvs && uvs.length) {\n                tris.push(data[3]);\n                tris.push(data[4]);\n            }\n        });\n\n        tess.gluTessCallback(libtess.gluEnum.GLU_TESS_ERROR, function (errno) {\n            console.error('tess err', errno);\n        });\n\n        tess.gluTessBeginPolygon(triangles);\n        tess.gluTessBeginContour();\n\n        var k = 0;\n        for (var i = 0; i < points.length; i += 2) {\n\n            var vertex = [points[i], points[i + 1], 0];\n            if (uvs && uvs.length) {\n                vertex.push(uvs[k], uvs[k + 1]);\n                k += 2;\n            }\n\n            tess.gluTessVertex(vertex, vertex);\n        }\n\n        tess.gluTessEndContour();\n        tess.gluTessEndPolygon();\n\n        return triangles;\n    }\n\n    tessellate(contours, uvs) {\n        var tess = TexturedSurfaceShape.tesselator();\n        var triangles = [];\n\n        tess.gluTessCallback(libtess.gluEnum.GLU_TESS_BEGIN, function (prim) {\n            if (prim !== libtess.primitiveType.GL_TRIANGLES) {\n                console.error('Tessellation error, primitive is not TRIANGLES.');\n            }\n        });\n\n        tess.gluTessCallback(libtess.gluEnum.GLU_TESS_COMBINE, function (coords, data, weight) {\n            var newCoords = [coords[0], coords[1], coords[2]];\n\n            if (uvs && uvs.length) {\n                for (var i = 3; i <= 4; i++) {\n                    var value = 0;\n                    for (var w = 0; w < 4; w++) {\n                        if (weight[w] > 0) {\n                            value += weight[w] * data[w][i];\n                        }\n                    }\n\n                    newCoords[i] = value;\n                }\n            }\n\n            return newCoords;\n        });\n\n        //prevents triangle fans and strips\n        tess.gluTessCallback(libtess.gluEnum.GLU_TESS_EDGE_FLAG, function () {\n        });\n\n        tess.gluTessCallback(libtess.gluEnum.GLU_TESS_VERTEX_DATA, function (data, tris) {\n            tris.push(data[0]);\n            tris.push(data[1]);\n            tris.push(data[2]);\n\n            if (uvs && uvs.length) {\n                tris.push(data[3]);\n                tris.push(data[4]);\n            }\n        });\n\n        tess.gluTessCallback(libtess.gluEnum.GLU_TESS_ERROR, function (errno) {\n            console.error('tess err', errno);\n        });\n\n        // Tessellate the polygon.\n        tess.gluTessBeginPolygon(triangles);\n        var k = 0;\n        for (var i = 0; i < contours.length; i++) {\n            tess.gluTessBeginContour();\n            var contour = contours[i];\n            for (var j = 0; j < contour.length; j += 1) {\n                var pos = contour[j];\n                var x = pos.longitude * Angle.DEGREES_TO_RADIANS;\n                var y = pos.latitude * Angle.DEGREES_TO_RADIANS;\n                var vertex = [x, y, 0];\n                if (uvs && uvs.length) {\n                    vertex.push(uvs[k], uvs[k + 1]);\n                    k += 2;\n                }\n                //console.log('vertex', vertex);\n                tess.gluTessVertex(vertex, vertex);\n            }\n            tess.gluTessEndContour();\n        }\n        tess.gluTessEndPolygon();\n\n        return triangles;\n    }\n\n    getBbox(points) {\n        const bbox = {\n            minX: Number.MAX_SAFE_INTEGER,\n            maxX: Number.MIN_SAFE_INTEGER,\n            minY: Number.MAX_SAFE_INTEGER,\n            maxY: Number.MIN_SAFE_INTEGER,\n            width: 0,\n            height: 0\n        };\n\n        for (var i = 0; i < points.length; i++) {\n            var point = points[i];\n            bbox.minX = Math.min(bbox.minX, point.x);\n            bbox.maxX = Math.max(bbox.maxX, point.x);\n            bbox.minY = Math.min(bbox.minY, point.y);\n            bbox.maxY = Math.max(bbox.maxY, point.y);\n        }\n\n        bbox.width = Math.abs(bbox.maxX - bbox.minX);\n        bbox.height = Math.abs(bbox.maxY - bbox.minY);\n\n        return bbox;\n    }\n\n    getCorners(points, wo) {\n        if (points.length === 4) {\n            //return this.reindexCorners(points);\n        }\n\n        var angles = [];\n        for (var i = 0; i < points.length; i += 2) {\n            var prevX;\n            var prevY;\n            var currentX;\n            var currentY;\n            var nextX;\n            var nextY;\n\n            if (i === 0) {\n                prevX = points[points.length - 2];\n                prevY = points[points.length - 1];\n            }\n            else {\n                prevX = points[i - 2];\n                prevY = points[i - 1];\n            }\n\n            currentX = points[i];\n            currentY = points[i + 1];\n\n            if (i === points.length - 2) {\n                nextX = points[0];\n                nextY = points[1];\n            }\n            else {\n                nextX = points[i + 2];\n                nextY = points[i + 3];\n            }\n\n            var angle = Math.atan2(nextY - currentY, nextX - currentX) -\n                Math.atan2(prevY - currentY, prevX - currentX);\n\n            angles.push({\n                index: i / 2,\n                angle: Math.abs(angle) * Angle.RADIANS_TO_DEGREES\n            });\n        }\n\n        angles = angles.filter(el => {\n            if (el.angle < 170 || el.angle > 190) {\n                return true;\n            }\n            return false;\n        });\n\n        /*var p0 = points[angles[0].index];\n        var p1 = points[angles[1].index];\n        var p2 = points[angles[2].index];\n        var p3 = points[angles[3].index];*/\n\n        var p0 = {x: points[angles[0].index * 2], y: points[angles[0].index * 2 + 1], index: angles[0].index};\n        var p1 = {x: points[angles[1].index * 2], y: points[angles[1].index * 2 + 1], index: angles[1].index};\n        var p2 = {x: points[angles[2].index * 2], y: points[angles[2].index * 2 + 1], index: angles[2].index};\n        var p3 = {x: points[angles[3].index * 2], y: points[angles[3].index * 2 + 1], index: angles[3].index};\n\n       /* p0.index = angles[0].index;\n        p1.index = angles[1].index;\n        p2.index = angles[2].index;\n        p3.index = angles[3].index;*/\n\n        //const corners = this.reindexCorners([p0, p1, p2, p3]);\n        const corners = this.findWhichCorners([p0, p1, p2, p3]);\n        const topLeftIndex = corners[0].index;\n\n        /*const newPoints = [];\n        const topLeftIndex = corners[0].index;\n        for (i = topLeftIndex; i < points.length + topLeftIndex; i++) {\n            newPoints.push(points[i % points.length]);\n        }*/\n\n        var anglesMap = angles.reduce((map, el) => {\n            var type = '';\n            var i = corners.findIndex(c => c.index === el.index);\n            if (wo === 'CW') {\n                if (i === 0) {\n                    type = 'tl';\n                }\n                else if (i === 1) {\n                    type = 'tr';\n                }\n                else if (i === 2) {\n                    type = 'br';\n                }\n                else if (i === 3) {\n                    type = 'bl';\n                }\n            }\n            else {\n                if (i === 0) {\n                    type = 'tl';\n                }\n                else if (i === 1) {\n                    type = 'bl';\n                }\n                else if (i === 2) {\n                    type = 'br';\n                }\n                else if (i === 3) {\n                    type = 'tr';\n                }\n            }\n            map[el.index] = type;\n            return map;\n        }, Object.create(null));\n\n        return {anglesMap, topLeftIndex};\n    }\n\n    findWhichCorners(corners) {\n        const userProps = this.userProperties;\n        if (userProps && userProps.identifier) {\n            var id = userProps.identifier;\n            //id = \"S3A_OL_1_ERR____20190110T190220_20190110T194614_20190110T211413_2634_040_113______SVL_O_NR_002.SEN3\"\n            if (id.indexOf('S3') === 0 && id.indexOf('OL_1_ERR___') !== -1) {\n                //these shapes span from pole to pole and became twisted in 2D\n                var geom = this._interiorGeometry[0];\n                var cornerLocations = corners.map(c => {\n                    var location = geom[c.index];\n                    return {latitude: location.latitude, longitude: location.longitude, index: c.index};\n                });\n                cornerLocations.sort((a, b) => a.latitude - b.latitude);\n                cornerLocations.length = 2;\n                var c0 = cornerLocations[0];\n                var c1 = cornerLocations[1];\n                if ((c0.longitude < 0 && c1.longitude > 0) ||\n                    (c0.longitude > 0 && c1.longitude < 0)) {\n                    cornerLocations.sort((a, b) => Math.abs(b.longitude) - Math.abs(a.longitude));\n                }\n                else {\n                    cornerLocations.sort((a, b) => Math.abs(a.longitude) - Math.abs(b.longitude));\n                }\n\n                var topLeftIndex = corners.findIndex(corner => corner.index === cornerLocations[0].index);\n                var newCorners;\n                if (topLeftIndex > 0) {\n                    newCorners = [];\n                    for (var i = topLeftIndex; i < corners.length + topLeftIndex; i++) {\n                        newCorners.push(corners[i % corners.length]);\n                    }\n                }\n\n                return newCorners || corners;\n            }\n        }\n\n        return this.reindexCorners(corners);\n    }\n\n    getCorners_old(points, bbox) {\n        if (this.isEqualPoints(points[0], points[points.length - 1])) {\n            points.pop();\n        }\n\n        if (points.length === 4) {\n            return this.reindexCorners(points);\n        }\n\n        bbox = bbox || this.getBbox(points);\n\n        var corners = [];\n        for (var i = 0; i < points.length - 1; i++) {\n            var point = points[i];\n            if (point.x === bbox.minX || point.x === bbox.maxX) {\n                corners.push(point);\n            }\n            else if (point.y === bbox.minY || point.y === bbox.maxY) {\n                corners.push(point);\n            }\n        }\n\n        if (corners.length < 4) {\n            return corners;\n        }\n\n        return this.reindexCorners(corners);\n    }\n\n    reindexCorners(corners) {\n        //return corners;\n\n        var topLeftIndex = -1;\n        var c = corners.slice();\n        c.sort((a, b) => b.y - a.y);\n        c.length = 2;\n        c.sort((a, b) => a.x - b.x);\n        topLeftIndex = c[0].index;\n        topLeftIndex = corners.findIndex(corner => corner.index === c[0].index);\n\n        //return topLeftIndex;\n\n        var newCorners;\n        if (topLeftIndex > 0) {\n            newCorners = [];\n            for (var i = topLeftIndex; i < corners.length + topLeftIndex; i++) {\n                newCorners.push(corners[i % corners.length]);\n            }\n        }\n\n        return newCorners || corners;\n    }\n\n    reindexCorners_old(corners) {\n        var topLeftIndex = -1;\n        var slope1 = this.getSlope(corners[0], corners[2]);\n        if (slope1 > 0) {\n            if (corners[0].y < corners[2].y) {\n                topLeftIndex = 0;\n            }\n            else {\n                topLeftIndex = 2;\n            }\n        }\n        var slope2 = this.getSlope(corners[1], corners[3]);\n        if (slope2 > 0) {\n            if (corners[1].y < corners[3].y) {\n                if (topLeftIndex !== -1) {\n                    console.error('slope method is not ok 1');\n                }\n                topLeftIndex = 1;\n            }\n            else {\n                if (topLeftIndex !== -1) {\n                    console.error('slope method is not ok 2');\n                }\n                topLeftIndex = 3;\n            }\n        }\n\n        if (topLeftIndex === -1) {\n            console.error('slope method could not determine topLeft');\n        }\n\n        var newCorners;\n        if (topLeftIndex > 0) {\n            newCorners = [];\n            for (var i = topLeftIndex; i < corners.length + topLeftIndex; i++) {\n                newCorners.push(corners[i % corners.length]);\n            }\n        }\n\n        return newCorners || corners;\n    }\n\n    isEqualPoints(p1, p2) {\n        return (\n            p1.x === p2.x &&\n            p1.y === p2.y\n        );\n    }\n\n    windingOrder(corners) {\n        const e0 = (corners[1].x - corners[0].x) * (corners[1].y + corners[0].y);\n        const e1 = (corners[2].x - corners[1].x) * (corners[2].y + corners[1].y);\n        const e2 = (corners[3].x - corners[2].x) * (corners[3].y + corners[2].y);\n        const e3 = (corners[0].x - corners[3].x) * (corners[0].y + corners[3].y);\n        const sum = e0 + e1 + e2 + e3;\n        if (sum < 0) {\n            return 'CCW';\n        }\n        return 'CW';\n    }\n\n    windingOrder_all(list) {\n        let sum = 0;\n        for (let i = 0; i < list.length - 2; i += 2) {\n            let i1 = (i + 2) % list.length;\n            let i0 = i % list.length;\n            let p1x = list[i1];\n            let p1y = list[i1 + 1];\n            let p0x = list[i0];\n            let p0y = list[i0 + 1];\n            sum += ((p1x - p0x) * (p1y + p0y));\n        }\n        if (sum < 0) {\n            return 'CCW';\n        }\n        return 'CW';\n    }\n\n    getSlope(p1, p2) {\n        return (p1.y - p2.y) / (p1.x - p2.x);\n    }\n\n    distance2D(p1, p2) {\n        var dx = p2.x - p1.x;\n        var dy = p2.y - p1.y;\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n\n}\n\nvar a = [\n    {latitude: -71.0573, longitude: -119.968}, //TL\n    {latitude: -79.6085, longitude: -149.754}, //TR\n    {latitude: 55.7391, longitude: 27.7961}, //BR\n    {latitude: 58.487, longitude: 6.61523}, //BL\n];\n\nvar b = [\n    {latitude: -70.6695, longitude: -54.5441}, //TL\n    {latitude: -79.8964, longitude: -85.1012}, //TR\n    {latitude: 55.9681, longitude: 91.5418}, //BR\n    {latitude: 58.7238, longitude: 70.2286}, //BL\n];","import TexturedSurfaceShape from './TexturedSurfaceShape';\n\nexport default class TexturedSurfacePolygon extends TexturedSurfaceShape {\n\n    static staticStateKey(shape) {\n        return TexturedSurfaceShape.staticStateKey(shape);\n    }\n\n    constructor(boundaries, attributes) {\n        super(attributes);\n\n        if (!Array.isArray(boundaries)) {\n            throw new Error('TexturedSurfacePolygon - constructor - The specified boundary is not an array.');\n\n        }\n\n        //this._boundaries = boundaries;\n        this._boundaries = this.removeDuplicateLocations(boundaries);\n    }\n\n    get boundaries() {\n        return this._boundaries;\n    }\n\n    set boundaries(boundaries) {\n        if (!Array.isArray(boundaries)) {\n            throw new Error('TexturedSurfacePolygon - set boundaries - The specified boundary is not an array.');\n        }\n        //this._boundaries = boundaries;\n        this._boundaries = this.removeDuplicateLocations(boundaries);\n        this.isPrepared = false;\n        this.stateKeyInvalid = true;\n    }\n\n    removeDuplicateLocations(boundaries) {\n        if (Array.isArray(boundaries[0])) {\n            const newBoundaries = [];\n            for (var i = 0; i < boundaries.length; i++) {\n                var contour = this.removeDuplicateLocationsFromContour(boundaries[i]);\n                newBoundaries.push(contour);\n            }\n            return newBoundaries;\n        }\n        else {\n            return this.removeDuplicateLocationsFromContour(boundaries);\n        }\n    }\n\n    removeDuplicateLocationsFromContour(contour) {\n        const newBoundaries = [];\n\n        for (var i = 0; i < contour.length ; i++) {\n            var loc = contour[i];\n            newBoundaries.push(loc);\n            for (var j = i + 1; j < contour.length; j++) {\n                var loc2 = contour[j];\n                if (loc.latitude !== loc2.latitude || loc.longitude !== loc2.longitude) {\n                    break;\n                }\n                i++;\n            }\n        }\n\n        return newBoundaries;\n    }\n\n    computeStateKey() {\n        return TexturedSurfacePolygon.staticStateKey(this);\n    }\n\n}","/*\n * Copyright 2003-2006, 2009, 2017, United States Government, as represented by the Administrator of the\n * National Aeronautics and Space Administration. All rights reserved.\n *\n * The NASAWorldWind/WebWorldWind platform is licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @exports GeoJSONParser\n */\nimport WorldWind from 'webworldwind-esa';\nimport TexturedSurfacePolygon from '../../wwwxx/textured/TexturedSurfacePolygon'\n\n// import SurfacePolyline from 'webworldwind-esa';\n\n    const { \n        ArgumentError,\n        GeoJSONConstants,\n        GeoJSONParser,\n        Location ,\n        Logger,\n        RenderableLayer,\n        SurfacePolyline\n              \n            } = WorldWind;\n\n        /**\n         * Creates a {@link SurfacePolygon} for a Polygon geometry.\n         * Applications typically do not call this method directly. It is called by\n         * [addRenderablesForGeometry]{@link GeoJSONParser#addRenderablesForGeometry}.\n         * <p>\n         * This method invokes this GeoJSON's\n         * [shapeConfigurationCallback]{@link GeoJSONParser#shapeConfigurationCallback} for the geometry.\n         * @param {RenderableLayer} layer The layer in which to place the newly created shapes.\n         * @param {GeoJSONGeometryPolygon} geometry The Polygon geometry object.\n         * @param {Object} properties The properties related to the Polygon geometry.\n         * @throws {ArgumentError} If the specified layer is null or undefined.\n         * @throws {ArgumentError} If the specified geometry is null or undefined.\n         */\n        GeoJSONParser.prototype.addRenderablesForPolygon = function (layer, geometry, properties) {\n            if (!layer) {\n                throw new ArgumentError(\n                    Logger.logMessage(Logger.LEVEL_SEVERE, \"GeoJSON\", \"addRenderablesForPolygon\", \"missingLayer\"));\n            }\n\n            if (!geometry) {\n                throw new ArgumentError(\n                    Logger.logMessage(Logger.LEVEL_SEVERE, \"GeoJSON\", \"addRenderablesForPolygon\", \"missingGeometry\"));\n            }\n\n            var configuration = this.shapeConfigurationCallback(geometry, properties);\n\n            if (!this.crs || this.crs.isCRSSupported()) {\n                var pBoundaries = [];\n                for (var boundariesIndex = 0, boundaries = geometry.coordinates;\n                     boundariesIndex < boundaries.length; boundariesIndex++) {\n                    var positions = [];\n\n                    for (var positionIndex = 0, points = boundaries[boundariesIndex];\n                         positionIndex < points.length; positionIndex++) {\n                        var longitude = points[positionIndex][0],\n                            latitude = points[positionIndex][1];\n                        //altitude = points[positionIndex][2] ?  points[positionIndex][2] : 0,\n                        var reprojectedCoordinate = this.getReprojectedIfRequired(\n                            latitude,\n                            longitude,\n                            this.crs);\n                        var position = new Location(reprojectedCoordinate[1], reprojectedCoordinate[0]);\n                        positions.push(position);\n                    }\n                    pBoundaries.push(positions);\n                }\n\n                    var shape;\n                    shape = new TexturedSurfacePolygon(\n                        pBoundaries,\n                        configuration && configuration.attributes ? configuration.attributes : null);\n                    if (configuration.highlightAttributes) {\n                        shape.highlightAttributes = configuration.highlightAttributes;\n                    }\n                    if (configuration && configuration.name) {\n                        shape.displayName = configuration.name;\n                    }\n                    if (configuration && configuration.pickDelegate) {\n                        shape.pickDelegate = configuration.pickDelegate;\n                    }\n                    if (configuration && configuration.userProperties) {\n                        shape.userProperties = configuration.userProperties;\n                    }\n                    if (configuration && configuration.timeRange) {\n                        shape.timeRange = configuration.timeRange;\n                    }\n                    shape.highlighted = true\n                    shape.enabled = true\n\n                    layer.addRenderable(shape);\n                    // layer.enabled = true\n\n            }\n        };\n\n        GeoJSONParser.prototype.load = function (parserCompletionCallback, shapeConfigurationCallback, layer) {\n            if (parserCompletionCallback) {\n                this._parserCompletionCallback = parserCompletionCallback;\n            }\n            if (shapeConfigurationCallback) {\n                this._shapeConfigurationCallback = shapeConfigurationCallback;\n            }\n            this._layer = layer || new RenderableLayer();\n            var dataSourceType = (typeof this.dataSource);\n            if (dataSourceType === 'string') {\n                var obj = GeoJSONParser.tryParseJSONString(this.dataSource);\n                if (obj !== null) {\n                    this.handle(obj);\n                } else {\n                    this.requestUrl(this.dataSource);\n                }\n            } else if (dataSourceType === 'object') {\n                this.handle(this.dataSource);\n            } else {\n                Logger.logMessage(Logger.LEVEL_SEVERE, \"GeoJSON\", \"load\",\n                    \"Unsupported data source type: \" + dataSourceType);\n            }\n        };\n\n\n\n        GeoJSONParser.prototype.addRenderablesForMultiPolygon = function (layer, geometry, properties) {\n            if (!layer) {\n                throw new ArgumentError(\n                    Logger.logMessage(Logger.LEVEL_SEVERE, \"GeoJSON\", \"addRenderablesForMultiPolygon\",\n                        \"missingLayer\"));\n            }\n            if (!geometry) {\n                throw new ArgumentError(\n                    Logger.logMessage(Logger.LEVEL_SEVERE, \"GeoJSON\", \"addRenderablesForMultiPolygon\",\n                        \"missingGeometry\"));\n            }\n            var configuration = this.shapeConfigurationCallback(geometry, properties);\n            if (!this.crs || this.crs.isCRSSupported()) {\n                for (var polygonsIndex = 0, polygons = geometry.coordinates;\n                     polygonsIndex < polygons.length; polygonsIndex++) {\n                    var boundaries = [];\n                    for (var boundariesIndex = 0; boundariesIndex < polygons[polygonsIndex].length; boundariesIndex++) {\n                        var positions = [];\n                        for (var positionIndex = 0, points = polygons[polygonsIndex][boundariesIndex];\n                             positionIndex < points.length; positionIndex++) {\n                            var longitude = points[positionIndex][0],\n                                latitude = points[positionIndex][1];\n                            //altitude = points[positionIndex][2] ?  points[positionIndex][2] : 0,;\n                            var reprojectedCoordinate = this.getReprojectedIfRequired(\n                                latitude,\n                                longitude,\n                                this.crs);\n                            var position = new Location(reprojectedCoordinate[1], reprojectedCoordinate[0]);\n                            positions.push(position);\n                        }\n                        boundaries.push(positions);\n                    }\n                    var shape;\n                    shape = new TexturedSurfacePolygon(\n                        boundaries,\n                        configuration && configuration.attributes ? configuration.attributes : null);\n                    if (configuration.highlightAttributes) {\n                        shape.highlightAttributes = configuration.highlightAttributes;\n                    }\n                    if (configuration && configuration.name) {\n                        shape.displayName = configuration.name;\n                    }\n                    if (configuration && configuration.pickDelegate) {\n                        shape.pickDelegate = configuration.pickDelegate;\n                    }\n                    if (configuration && configuration.userProperties) {\n                        shape.userProperties = configuration.userProperties;\n                    }\n                    if (configuration && configuration.timeRange) {\n                        shape.timeRange = configuration.timeRange;\n                    }\n                    layer.addRenderable(shape);\n                }\n            }\n        }\n\n\n        GeoJSONParser.prototype.addRenderablesForLineString = function (layer, geometry, properties) {\n            if (!layer) {\n                throw new ArgumentError(\n                    Logger.logMessage(Logger.LEVEL_SEVERE, \"GeoJSON\", \"addRenderablesForLineString\",\n                        \"missingLayer\"));\n            }\n            if (!geometry) {\n                throw new ArgumentError(\n                    Logger.logMessage(Logger.LEVEL_SEVERE, \"GeoJSON\", \"addRenderablesForLineString\",\n                        \"missingGeometry\"));\n            }\n            var configuration = this.shapeConfigurationCallback(geometry, properties);\n            if (!this.crs || this.crs.isCRSSupported()) {\n                var positions = [];\n                for (var pointsIndex = 0, points = geometry.coordinates; pointsIndex < points.length; pointsIndex++) {\n                    var longitude = points[pointsIndex][0],\n                        latitude = points[pointsIndex][1];\n                    //altitude = points[pointsIndex][2] ?  points[pointsIndex][2] : 0,\n                    var reprojectedCoordinate = this.getReprojectedIfRequired(\n                        latitude,\n                        longitude,\n                        this.crs);\n                    var position = new Location(reprojectedCoordinate[1], reprojectedCoordinate[0]);\n                    positions.push(position);\n                }\n                var shape;\n                console.log('polyline!!')\n                shape = new SurfacePolyline(\n                    positions,\n                    configuration && configuration.attributes ? configuration.attributes : null);\n                    console.log('polyline2!!')\n                    if (configuration.highlightAttributes) {\n                    shape.highlightAttributes = configuration.highlightAttributes;\n                }\n                if (configuration && configuration.pickDelegate) {\n                    shape.pickDelegate = configuration.pickDelegate;\n                }\n                if (configuration && configuration.userProperties) {\n                    shape.userProperties = configuration.userProperties;\n                }\n                console.log(shape)\n                layer.addRenderable(shape);\n            }\n        };\n\n\n\n","import WorldWind from 'webworldwind-esa';\n\nconst {\n    ArcBallCamera,\n    ArgumentError,\n    BasicWorldWindowController,\n    DrawContext,\n    EarthElevationModel,\n    FrameStatistics,\n    Frustum,\n    Globe,\n    Globe2D,\n    GoToAnimator,\n    GpuResourceCache,\n    Line,\n    Logger,\n    LookAtNavigator,\n    Matrix,\n    Navigator,\n    PickedObjectList,\n    Position,\n    Rectangle,\n    Sector,\n    SurfaceShape,\n    SurfaceShapeTileBuilder,\n    Terrain,\n    Vec2,\n    Vec3,\n    WWMath\n} = WorldWind;\n\n\n/**\n * Constructs a WorldWind window for an HTML canvas.\n * @alias WorldWindow\n * @constructor\n * @classdesc Represents a WorldWind window for an HTML canvas.\n * @param {String|HTMLCanvasElement} canvasElem The ID assigned to the HTML canvas in the document or the canvas\n * element itself.\n * @param {ElevationModel} elevationModel An optional argument indicating the elevation model to use for the World\n * Window. If missing or null, a default elevation model is used.\n * @throws {ArgumentError} If there is no HTML element with the specified ID in the document, or if the\n * HTML canvas does not support WebGL.\n */\nclass WorldWindow {\n    constructor(canvasElem, elevationModel, controllerConstructor, cameraConstructor) {\n        console.log('constructing worlwindow')\n        if (!(window.WebGLRenderingContext)) {\n            throw new ArgumentError(\n                Logger.logMessage(Logger.LEVEL_SEVERE, \"WorldWindow\", \"constructor\", \"webglNotSupported\"));\n        }\n\n        // Get the actual canvas element either directly or by ID.\n        var canvas;\n        if (canvasElem instanceof HTMLCanvasElement) {\n            canvas = canvasElem;\n        } else {\n            // Attempt to get the HTML canvas with the specified ID.\n            canvas = document.getElementById(canvasElem);\n\n            if (!canvas) {\n                throw new ArgumentError(\n                    Logger.logMessage(Logger.LEVEL_SEVERE, \"WorldWindow\", \"constructor\",\n                        \"The specified canvas ID is not in the document.\"));\n            }\n        }\n\n        // Create the WebGL context associated with the HTML canvas.\n        var gl = this.createContext(canvas);\n        if (!gl) {\n            throw new ArgumentError(\n                Logger.logMessage(Logger.LEVEL_SEVERE, \"WorldWindow\", \"constructor\", \"webglNotSupported\"));\n        }\n\n        // Internal. Intentionally not documented.\n        this.drawContext = new DrawContext(gl);\n\n        // Internal. Intentionally not documented. Must be initialized before the navigator is created.\n        this.eventListeners = {};\n\n        // Internal. Intentionally not documented. Initially true in order to redraw at least once.\n        this.redrawRequested = true;\n\n        // Internal. Intentionally not documented.\n        this.redrawRequestId = null;\n\n        // Internal. Intentionally not documented.\n        this.scratchModelview = Matrix.fromIdentity();\n\n        // Internal. Intentionally not documented.\n        this.scratchProjection = Matrix.fromIdentity();\n\n        // Internal. Intentionally not documented.\n        this.hasStencilBuffer = gl.getContextAttributes().stencil;\n\n        /**\n         * The HTML canvas associated with this WorldWindow.\n         * @type {HTMLElement}\n         * @readonly\n         */\n        this.canvas = canvas;\n\n        /**\n         * The number of bits in the depth buffer associated with this WorldWindow.\n         * @type {number}\n         * @readonly\n         */\n        this.depthBits = gl.getParameter(gl.DEPTH_BITS);\n\n        /**\n         * The current viewport of this WorldWindow.\n         * @type {Rectangle}\n         * @readonly\n         */\n        this.viewport = new Rectangle(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\n        /**\n         * The globe displayed.\n         * @type {Globe}\n         */\n        this.globe = new Globe(elevationModel || new EarthElevationModel());\n\n        /**\n         * The layers to display in this WorldWindow.\n         * This property is read-only. Use [addLayer]{@link WorldWindow#addLayer} or\n         * [insertLayer]{@link WorldWindow#insertLayer} to add layers to this WorldWindow.\n         * Use [removeLayer]{@link WorldWindow#removeLayer} to remove layers from this WorldWindow.\n         * @type {Layer[]}\n         * @readonly\n         */\n        this.layers = [];\n\n        /**\n         * The navigator used to manipulate the globe.\n         * @type {Navigator}\n         * @default [Navigator]{@link Navigator}\n         */\n        this.navigator = new Navigator(cameraConstructor && new cameraConstructor(this) || new ArcBallCamera(this));\n\n\n        /**\n         * The controller used to manipulate the globe.\n         * @type {WorldWindowController}\n         * @default [BasicWorldWindowController]{@link BasicWorldWindowController}\n         */\n        // this.worldWindowController = controllerConstructor && new controllerConstructor(this) || new BasicWorldWindowController(this);\n\n        /**\n         * The vertical exaggeration to apply to the terrain.\n         * @type {Number}\n         */\n        this.verticalExaggeration = 1;\n\n        /**\n         * Indicates that picking will return all objects at the pick point, if any. The top-most object will have\n         * its isOnTop flag set to true.\n         * If deep picking is false, the default, only the top-most object is returned, plus\n         * the picked-terrain object if the pick point is over the terrain.\n         * @type {boolean}\n         * @default false\n         */\n        this.deepPicking = false;\n\n        /**\n         * Indicates whether this WorldWindow should be configured for sub-surface rendering. If true, shapes\n         * below the terrain can be seen when the terrain is made transparent. If false, sub-surface shapes are\n         * not visible, however, performance is slightly increased.\n         * @type {boolean}\n         * @default false\n         */\n        this.subsurfaceMode = false;\n\n        /**\n         * The opacity to apply to terrain and surface shapes. This property is typically used when viewing\n         * the sub-surface. It modifies the opacity of the terrain and surface shapes as a whole. It should be\n         * a number between 0 and 1. It is compounded with the individual opacities of the image layers and\n         * surface shapes on the terrain.\n         * @type {Number}\n         * @default 1\n         */\n        this.surfaceOpacity = 1;\n\n        /**\n         * Performance statistics for this WorldWindow.\n         * @type {FrameStatistics}\n         */\n        this.frameStatistics = new FrameStatistics();\n\n        /**\n         * The {@link GoToAnimator} used by this WorldWindow to respond to its goTo method.\n         * @type {GoToAnimator}\n         */\n        this.goToAnimator = new GoToAnimator(this);\n\n        // Documented with its property accessor below.\n        this._redrawCallbacks = [];\n\n        // Documented with its property accessor below.\n        this._orderedRenderingFilters = [\n            function (dc) {\n                thisWindow.declutter(dc, 1);\n            },\n            function (dc) {\n                thisWindow.declutter(dc, 2);\n            }\n        ];\n\n        // Intentionally not documented.\n        this.pixelScale = 1;\n\n        // Prevent the browser's default actions in response to mouse and touch events, which interfere with\n        // navigation. Register these event listeners  before any others to ensure that they're called last.\n        function preventDefaultListener(event) {\n            event.preventDefault();\n        }\n\n        this.addEventListener(\"mousedown\", preventDefaultListener);\n        this.addEventListener(\"touchstart\", preventDefaultListener);\n        this.addEventListener(\"contextmenu\", preventDefaultListener);\n        this.addEventListener(\"wheel\", preventDefaultListener);\n\n        var thisWindow = this;\n\n        // Redirect various UI interactions to the appropriate handler.\n        // function onGestureEvent(event) {\n        //     thisWindow.onGestureEvent(event);\n        // }\n\n        // if (window.PointerEvent) {\n        //     // Prevent the browser's default actions in response to pointer events which interfere with navigation.\n        //     // This CSS style property is configured here to ensure that it's set for all applications.\n        //     this.canvas.style.setProperty(\"touch-action\", \"none\");\n\n        //     this.addEventListener(\"pointerdown\", onGestureEvent, false);\n        //     window.addEventListener(\"pointermove\", onGestureEvent, false); // get pointermove events outside event target\n        //     window.addEventListener(\"pointercancel\", onGestureEvent, false); // get pointercancel events outside event target\n        //     window.addEventListener(\"pointerup\", onGestureEvent, false); // get pointerup events outside event target\n        // } else {\n        //     this.addEventListener(\"mousedown\", onGestureEvent, false);\n        //     window.addEventListener(\"mousemove\", onGestureEvent, false); // get mousemove events outside event target\n        //     window.addEventListener(\"mouseup\", onGestureEvent, false); // get mouseup events outside event target\n        //     this.addEventListener(\"touchstart\", onGestureEvent, false);\n        //     this.addEventListener(\"touchmove\", onGestureEvent, false);\n        //     this.addEventListener(\"touchend\", onGestureEvent, false);\n        //     this.addEventListener(\"touchcancel\", onGestureEvent, false);\n        // }\n\n        // // Register wheel event listeners on the WorldWindow's canvas.\n        // this.addEventListener(\"wheel\", function (event) {\n        //     onGestureEvent(event);\n        // });\n\n        // Set up to handle WebGL context lost events.\n        function handleContextLost(event) {\n            thisWindow.handleContextLost(event);\n        }\n\n        this.canvas.addEventListener(\"webglcontextlost\", handleContextLost, false);\n\n        // Set up to handle WebGL context restored events.\n        function handleContextRestored(event) {\n            thisWindow.handleContextRestored(event);\n        }\n\n        this.canvas.addEventListener(\"webglcontextrestored\", handleContextRestored, false);\n\n        // Set up to handle WebGL context events and WorldWind redraw request events. Imagery uses the canvas\n        // redraw events because images are generally specific to the WebGL context associated with the canvas.\n        // Elevation models use the global window redraw events because they can be shared among WorldWindows.\n        function handleRedrawEvent(event) {\n            thisWindow.handleRedrawEvent(event)\n        }\n\n        this.canvas.addEventListener(WorldWind.REDRAW_EVENT_TYPE, handleRedrawEvent, false);\n        window.addEventListener(WorldWind.REDRAW_EVENT_TYPE, handleRedrawEvent, false);\n\n        // Render to the WebGL context in an animation frame loop until the WebGL context is lost.\n        this.animationFrameLoop();\n    };\n\n\n    /**\n     * An array of functions to call during ordered rendering prior to rendering the ordered renderables.\n     * Each function is passed one argument, the current draw context. The function may modify the\n     * ordered renderables in the draw context's ordered renderable list, which has been sorted from front\n     * to back when the filter function is called. Ordered rendering filters are typically used to apply\n     * decluttering. The default set of filter functions contains one function that declutters shapes with\n     * declutter group ID of 1 ({@link GeographicText} by default) and one function that declutters shapes\n     * with declutter group ID 2 ({@link Placemark} by default). Applications can add functions to this\n     * array or remove them.\n     * @type {Function[]}\n     * @default [WorldWindow.declutter]{@link WorldWindow#declutter} with a group ID of 1\n     * @readonly\n     * @memberof WorldWindow.prototype\n     */\n    orderedRenderingFilters() {\n        return this._orderedRenderingFilters;\n    }\n\n    /**\n     * The list of callbacks to call immediately before and immediately after performing a redraw. The callbacks\n     * have two arguments: this WorldWindow and the redraw stage, e.g., <code style='white-space:nowrap'>redrawCallback(worldWindow, stage);</code>.\n     * The stage will be either WorldWind.BEFORE_REDRAW or WorldWind.AFTER_REDRAW indicating whether the\n     * callback has been called either immediately before or immediately after a redraw, respectively.\n     * Applications may add functions to this array or remove them.\n     * @type {Function[]}\n     * @readonly\n     * @memberof WorldWindow.prototype\n     */\n    redrawCallbacks() {\n        return this._redrawCallbacks;\n    }\n\n    /**\n     * Converts window coordinates to coordinates relative to this WorldWindow's canvas.\n     * @param {Number} x The X coordinate to convert.\n     * @param {Number} y The Y coordinate to convert.\n     * @returns {Vec2} The converted coordinates.\n     */\n    canvasCoordinates(x, y) {\n        var bbox = this.canvas.getBoundingClientRect(),\n            xc = x - (bbox.left + this.canvas.clientLeft),// * (this.canvas.width / bbox.width),\n            yc = y - (bbox.top + this.canvas.clientTop);// * (this.canvas.height / bbox.height);\n\n        return new Vec2(xc, yc);\n    };\n\n    // onGestureEvent(event) {\n    //     this.worldWindowController.onGestureEvent(event);\n    // };\n\n    /**\n     * Registers an event listener for the specified event type on this WorldWindow's canvas. This function\n     * delegates the processing of events to the WorldWindow's canvas. For details on this function and its\n     * arguments, see the W3C [EventTarget]{@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget}\n     * documentation.\n     *\n     * Registering event listeners using this function enables applications to prevent the WorldWindow's default\n     * navigation behavior. To prevent default navigation behavior, call the [Event]{@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-Event}'s\n     * preventDefault method from within an event listener for any events the navigator should not respond to.\n     *\n     * When an event occurs, this calls the registered event listeners in order of reverse registration. Since the\n     * WorldWindow registers its navigator event listeners first, application event listeners are called before\n     * navigator event listeners.\n     *\n     * @param type The event type to listen for.\n     * @param listener The function to call when the event occurs.\n     * @throws {ArgumentError} If any argument is null or undefined.\n     */\n    addEventListener(type, listener) {\n        if (!type) {\n            throw new ArgumentError(\n                Logger.logMessage(Logger.LEVEL_SEVERE, \"WorldWindow\", \"addEventListener\", \"missingType\"));\n        }\n\n        if (!listener) {\n            throw new ArgumentError(\n                Logger.logMessage(Logger.LEVEL_SEVERE, \"WorldWindow\", \"addEventListener\", \"missingListener\"));\n        }\n\n        var thisWorldWindow = this;\n        var entry = this.eventListeners[type];\n        if (!entry) {\n            entry = {\n                listeners: [],\n                callback: function (event) { // calls listeners in reverse registration order\n                    event.worldWindow = thisWorldWindow;\n                    for (var i = 0, len = entry.listeners.length; i < len; i++) {\n                        entry.listeners[i](event);\n                    }\n                }\n            };\n            this.eventListeners[type] = entry;\n        }\n\n        var index = entry.listeners.indexOf(listener);\n        if (index == -1) { // suppress duplicate listeners\n            entry.listeners.splice(0, 0, listener); // insert the listener at the beginning of the list\n\n            if (entry.listeners.length == 1) { // first listener added, add the event listener callback\n                this.canvas.addEventListener(type, entry.callback, false);\n            }\n        }\n    };\n\n    /**\n     * Removes an event listener for the specified event type from this WorldWindow's canvas. The listener must be\n     * the same object passed to addEventListener. Calling removeEventListener with arguments that do not identify a\n     * currently registered listener has no effect.\n     *\n     * @param type Indicates the event type the listener registered for.\n     * @param listener The listener to remove. Must be the same function object passed to addEventListener.\n     * @throws {ArgumentError} If any argument is null or undefined.\n     */\n    removeEventListener(type, listener) {\n        if (!type) {\n            throw new ArgumentError(\n                Logger.logMessage(Logger.LEVEL_SEVERE, \"WorldWindow\", \"removeEventListener\", \"missingType\"));\n        }\n\n        if (!listener) {\n            throw new ArgumentError(\n                Logger.logMessage(Logger.LEVEL_SEVERE, \"WorldWindow\", \"removeEventListener\", \"missingListener\"));\n        }\n\n        var entry = this.eventListeners[type];\n        if (!entry) {\n            return; // no entry for the specified type\n        }\n\n        var index = entry.listeners.indexOf(listener);\n        if (index != -1) {\n            entry.listeners.splice(index, 1); // remove the listener from the list\n\n            if (entry.listeners.length == 0) { // last listener removed, remove the event listener callback\n                this.canvas.removeEventListener(type, entry.callback, false);\n            }\n        }\n    };\n\n    /**\n     * Causes this WorldWindow to redraw itself at the next available opportunity. The redraw occurs on the main\n     * thread at a time of the browser's discretion. Applications should call redraw after changing the World\n     * Window's state, but should not expect that change to be reflected on screen immediately after this function\n     * returns. This is the preferred method for requesting a redraw of the WorldWindow.\n     */\n    redraw() {\n        this.redrawRequested = true; // redraw during the next animation frame\n    };\n\n    /**\n     * Requests the WorldWind objects displayed at a specified screen-coordinate point.\n     *\n     * If the point intersects the terrain, the returned list contains an object identifying the associated geographic\n     * position. This returns an empty list when nothing in the WorldWind scene intersects the specified point.\n     *\n     * @param pickPoint The point to examine in this WorldWindow's screen coordinates.\n     * @returns {PickedObjectList} A list of picked WorldWind objects at the specified pick point.\n     * @throws {ArgumentError} If the specified pick point is null or undefined.\n     */\n    pick(pickPoint) {\n        if (!pickPoint) {\n            throw new ArgumentError(\n                Logger.logMessage(Logger.LEVEL_SEVERE, \"WorldWindow\", \"pick\", \"missingPoint\"));\n        }\n\n        // Suppress the picking operation and return an empty list when the WebGL context has been lost.\n        if (this.drawContext.currentGlContext.isContextLost()) {\n            return new PickedObjectList();\n        }\n\n        this.resize();\n        this.resetDrawContext();\n        this.drawContext.pickingMode = true;\n        this.drawContext.pickPoint = pickPoint;\n        this.drawContext.pickRay = this.rayThroughScreenPoint(pickPoint);\n        this.drawFrame();\n\n        return this.drawContext.objectsAtPickPoint;\n    };\n\n    /**\n     * Requests the position of the WorldWind terrain at a specified screen-coordinate point. If the point\n     * intersects the terrain, the returned list contains a single object identifying the associated geographic\n     * position. Otherwise this returns an empty list.\n     * @param pickPoint The point to examine in this WorldWindow's screen coordinates.\n     * @returns {PickedObjectList} A list containing the picked WorldWind terrain position at the specified point,\n     * or an empty list if the point does not intersect the terrain.\n     * @throws {ArgumentError} If the specified pick point is null or undefined.\n     */\n    pickTerrain(pickPoint) {\n        if (!pickPoint) {\n            throw new ArgumentError(\n                Logger.logMessage(Logger.LEVEL_SEVERE, \"WorldWindow\", \"pickTerrain\", \"missingPoint\"));\n        }\n\n        // Suppress the picking operation and return an empty list when the WebGL context has been lost.\n        if (this.drawContext.currentGlContext.isContextLost()) {\n            return new PickedObjectList();\n        }\n\n        this.resize();\n        this.resetDrawContext();\n        this.drawContext.pickingMode = true;\n        this.drawContext.pickTerrainOnly = true;\n        this.drawContext.pickPoint = pickPoint;\n        this.drawContext.pickRay = this.rayThroughScreenPoint(pickPoint);\n        this.drawFrame();\n\n        return this.drawContext.objectsAtPickPoint;\n    };\n\n    /**\n     * Requests the WorldWind objects displayed within a specified screen-coordinate region. This returns all\n     * objects that intersect the specified region, regardless of whether or not an object is actually visible, and\n     * marks objects that are visible as on top.\n     * @param {Rectangle} rectangle The screen coordinate rectangle identifying the region to search.\n     * @returns {PickedObjectList} A list of visible WorldWind objects within the specified region.\n     * @throws {ArgumentError} If the specified rectangle is null or undefined.\n     */\n    pickShapesInRegion(rectangle) {\n        if (!rectangle) {\n            throw new ArgumentError(\n                Logger.logMessage(Logger.LEVEL_SEVERE, \"WorldWindow\", \"pickShapesInRegion\", \"missingRectangle\"));\n        }\n\n        // Suppress the picking operation and return an empty list when the WebGL context has been lost.\n        if (this.drawContext.currentGlContext.isContextLost()) {\n            return new PickedObjectList();\n        }\n\n        this.resize();\n        this.resetDrawContext();\n        this.drawContext.pickingMode = true;\n        this.drawContext.regionPicking = true;\n        this.drawContext.pickRectangle =\n            new Rectangle(rectangle.x, this.canvas.height - rectangle.y, rectangle.width, rectangle.height);\n        this.drawFrame();\n\n        return this.drawContext.objectsAtPickPoint;\n    };\n\n    // Internal function. Intentionally not documented.\n    createContext(canvas) {\n        // Request a WebGL context with antialiasing is disabled. Antialiasing causes gaps to appear at the edges of\n        // terrain tiles.\n        var glAttrs = { antialias: false, stencil: true },\n            gl = canvas.getContext(\"webgl\", glAttrs);\n        if (!gl) {\n            gl = canvas.getContext(\"experimental-webgl\", glAttrs);\n        }\n\n        // uncomment to debug WebGL\n        //var gl = WebGLDebugUtils.makeDebugContext(this.canvas.getContext(\"webgl\"),\n        //        this.throwOnGLError,\n        //        this.logAndValidate\n        //);\n\n        return gl;\n    };\n\n    // Internal function. Intentionally not documented.\n    handleContextLost(event) {\n        Logger.log(Logger.LEVEL_INFO, \"WebGL context event: \" + event.statusMessage);\n        // Inform WebGL that we handle context restoration, enabling the context restored event to be delivered.\n        event.preventDefault();\n        // Notify the draw context that the WebGL rendering context has been lost.\n        this.drawContext.contextLost();\n        // Stop the rendering animation frame loop, resuming only if the WebGL context is restored.\n        window.cancelAnimationFrame(this.redrawRequestId);\n    };\n\n    // Internal function. Intentionally not documented.\n    handleContextRestored(event) {\n        Logger.log(Logger.LEVEL_INFO, \"WebGL context event: \" + event.statusMessage);\n        // Notify the draw context that the WebGL rendering context has been restored.\n        this.drawContext.contextRestored();\n        // Resume the rendering animation frame loop until the WebGL context is lost.\n        this.redraw();\n        this.animationFrameLoop();\n    };\n\n    // Internal function. Intentionally not documented.\n    handleRedrawEvent(event) {\n        this.redraw(); // redraw in the next animation frame\n    };\n\n    // Internal function. Intentionally not documented.\n    animationFrameLoop() {\n        // Render to the WebGL context as needed.\n        this.redrawIfNeeded();\n\n        // Continue the animation frame loop until the WebGL context is lost.\n        var thisWindow = this;\n\n        function animationFrameCallback() {\n            thisWindow.animationFrameLoop();\n        }\n\n        this.redrawRequestId = window.requestAnimationFrame(animationFrameCallback);\n    };\n\n    // Internal function. Intentionally not documented.\n    redrawIfNeeded() {\n        // Check if the drawing buffer needs to resize to match its screen size, which requires a redraw.\n        this.resize();\n\n        // Redraw the WebGL drawing buffer only when necessary.\n        if (!this.redrawRequested) {\n            return;\n        }\n\n        try {\n            // Prepare to redraw and notify the redraw callbacks that a redraw is about to occur.\n            this.redrawRequested = false;\n            this.drawContext.previousRedrawTimestamp = this.drawContext.timestamp;\n            this.callRedrawCallbacks(WorldWind.BEFORE_REDRAW);\n            // Redraw the WebGL drawing buffer.\n            this.resetDrawContext();\n            this.drawFrame();\n        } catch (e) {\n            Logger.logMessage(Logger.LEVEL_SEVERE, \"WorldWindow\", \"redrawIfNeeded\",\n                \"Exception occurred during redrawing.\\n\" + e.toString());\n        } finally {\n            // Notify the redraw callbacks that a redraw has completed.\n            this.callRedrawCallbacks(WorldWind.AFTER_REDRAW);\n            // Handle rendering code redraw requests.\n            if (this.drawContext.redrawRequested) {\n                this.redrawRequested = true;\n            }\n        }\n    };\n\n    // Internal function. Intentionally not documented.\n    resize() {\n        var gl = this.drawContext.currentGlContext,\n            width = gl.canvas.clientWidth * this.pixelScale,\n            height = gl.canvas.clientHeight * this.pixelScale;\n\n        if (gl.canvas.width != width ||\n            gl.canvas.height != height) {\n\n            // Make the canvas drawing buffer size match its screen size.\n            gl.canvas.width = width;\n            gl.canvas.height = height;\n\n            // Set the WebGL viewport to match the canvas drawing buffer size.\n            gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n            this.viewport = new Rectangle(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\n            // Cause this WorldWindow to redraw with the new size.\n            this.redrawRequested = true;\n        }\n    };\n\n    // Internal. Intentionally not documented.\n    computeViewingTransform(projection, modelview) {\n        if (!modelview) {\n            throw new ArgumentError(\n                Logger.logMessage(Logger.LEVEL_SEVERE, \"WorldWindow\", \"computeViewingTransform\", \"missingModelview\"));\n        }\n\n        var globe = this.globe;\n        this.navigator.camera.createViewMatrix(modelview);\n\n        if (projection) {\n            projection.setToIdentity();\n            var globeRadius = WWMath.max(globe.equatorialRadius, globe.polarRadius),\n                eyePoint = modelview.extractEyePoint(new Vec3(0, 0, 0)),\n                eyePos = globe.computePositionFromPoint(eyePoint[0], eyePoint[1], eyePoint[2], new Position(0, 0, 0)),\n                eyeHorizon = WWMath.horizonDistanceForGlobeRadius(globeRadius, eyePos.altitude),\n                atmosphereHorizon = WWMath.horizonDistanceForGlobeRadius(globeRadius, 160000),\n                viewport = this.viewport;\n\n            // Set the far clip distance to the smallest value that does not clip the atmosphere.\n            // TODO adjust the clip plane distances based on the navigator's orientation - shorter distances when the\n            // TODO horizon is not in view\n            // TODO parameterize the object altitude for horizon distance\n            var farDistance = eyeHorizon + atmosphereHorizon;\n            if (farDistance < 1e3)\n                farDistance = 1e3;\n\n            // Compute the near clip distance in order to achieve a desired depth resolution at the far clip distance.\n            // This computed distance is limited such that it does not intersect the terrain when possible and is never\n            // less than a predetermined minimum (usually one). The computed near distance automatically scales with the\n            // resolution of the WebGL depth buffer.\n            var nearDistance = WWMath.perspectiveNearDistanceForFarDistance(farDistance, 10, this.depthBits);\n\n            // Prevent the near clip plane from intersecting the terrain.\n            var distanceToSurface = eyePos.altitude - globe.elevationAtLocation(eyePos.latitude, eyePos.longitude);\n            if (distanceToSurface > 0) {\n                var maxNearDistance = WWMath.perspectiveNearDistance(viewport.width, viewport.height, distanceToSurface);\n                if (nearDistance > maxNearDistance) {\n                    nearDistance = maxNearDistance;\n                }\n            }\n\n            if (nearDistance < 1) {\n                nearDistance = 1;\n            }\n\n            // Compute the current projection matrix based on this navigator's perspective properties and the current\n            // WebGL viewport.\n            projection.setToPerspectiveProjection(viewport.width, viewport.height, nearDistance, farDistance);\n        }\n    };\n\n    // Internal. Intentionally not documented.\n    computePixelMetrics(projection) {\n        var projectionInv = Matrix.fromIdentity();\n        projectionInv.invertMatrix(projection);\n\n        // Compute the eye coordinate rectangles carved out of the frustum by the near and far clipping planes, and\n        // the distance between those planes and the eye point along the -Z axis. The rectangles are determined by\n        // transforming the bottom-left and top-right points of the frustum from clip coordinates to eye\n        // coordinates.\n        var nbl = new Vec3(-1, -1, -1),\n            ntr = new Vec3(+1, +1, -1),\n            fbl = new Vec3(-1, -1, +1),\n            ftr = new Vec3(+1, +1, +1);\n        // Convert each frustum corner from clip coordinates to eye coordinates by multiplying by the inverse\n        // projection matrix.\n        nbl.multiplyByMatrix(projectionInv);\n        ntr.multiplyByMatrix(projectionInv);\n        fbl.multiplyByMatrix(projectionInv);\n        ftr.multiplyByMatrix(projectionInv);\n\n        var nrRectWidth = WWMath.fabs(ntr[0] - nbl[0]),\n            frRectWidth = WWMath.fabs(ftr[0] - fbl[0]),\n            nrDistance = -nbl[2],\n            frDistance = -fbl[2];\n\n        // Compute the scale and offset used to determine the width of a pixel on a rectangle carved out of the\n        // frustum at a distance along the -Z axis in eye coordinates. These values are found by computing the scale\n        // and offset of a frustum rectangle at a given distance, then dividing each by the viewport width.\n        var frustumWidthScale = (frRectWidth - nrRectWidth) / (frDistance - nrDistance),\n            frustumWidthOffset = nrRectWidth - frustumWidthScale * nrDistance;\n\n        return {\n            pixelSizeFactor: frustumWidthScale / this.viewport.width,\n            pixelSizeOffset: frustumWidthOffset / this.viewport.height\n        };\n    };\n\n    /**\n     * Computes the approximate size of a pixel at a specified distance from the eye point.\n     * <p>\n     * This method assumes rectangular pixels, where pixel coordinates denote\n     * infinitely thin spaces between pixels. The units of the returned size are in model coordinates per pixel\n     * (usually meters per pixel). This returns 0 if the specified distance is zero. The returned size is undefined\n     * if the distance is less than zero.\n     *\n     * @param {Number} distance The distance from the eye point at which to determine pixel size, in model\n     * coordinates.\n     * @returns {Number} The approximate pixel size at the specified distance from the eye point, in model\n     * coordinates per pixel.\n     */\n    pixelSizeAtDistance(distance) {\n        this.computeViewingTransform(this.scratchProjection, this.scratchModelview);\n        var pixelMetrics = this.computePixelMetrics(this.scratchProjection);\n        return pixelMetrics.pixelSizeFactor * distance + pixelMetrics.pixelSizeOffset;\n    };\n\n    // Internal. Intentionally not documented.\n    computeDrawContext() {\n        var dc = this.drawContext;\n\n        this.computeViewingTransform(dc.projection, dc.modelview);\n        dc.viewport = this.viewport;\n        dc.eyePoint = dc.modelview.extractEyePoint(new Vec3(0, 0, 0));\n\n        dc.modelviewProjection.setToIdentity();\n        dc.modelviewProjection.setToMultiply(dc.projection, dc.modelview);\n\n        var pixelMetrics = this.computePixelMetrics(dc.projection);\n        dc.pixelSizeFactor = pixelMetrics.pixelSizeFactor;\n        dc.pixelSizeOffset = pixelMetrics.pixelSizeOffset;\n\n        // Compute the inverse of the modelview, projection, and modelview-projection matrices. The inverse matrices\n        // are used to support operations on navigator state.\n        var modelviewInv = Matrix.fromIdentity();\n        modelviewInv.invertOrthonormalMatrix(dc.modelview);\n\n        dc.modelviewNormalTransform = Matrix.fromIdentity().setToTransposeOfMatrix(modelviewInv.upper3By3());\n\n        // Compute the frustum in model coordinates. Start by computing the frustum in eye coordinates from the\n        // projection matrix, then transform this frustum to model coordinates by multiplying its planes by the\n        // transpose of the modelview matrix. We use the transpose of the modelview matrix because planes are\n        // transformed by the inverse transpose of a matrix, and we want to transform from eye coordinates to model\n        // coordinates.\n        var modelviewTranspose = Matrix.fromIdentity();\n        modelviewTranspose.setToTransposeOfMatrix(dc.modelview);\n        dc.frustumInModelCoordinates = Frustum.fromProjectionMatrix(dc.projection);\n        dc.frustumInModelCoordinates.transformByMatrix(modelviewTranspose);\n        dc.frustumInModelCoordinates.normalize();\n    };\n\n    // Internal. Intentionally not documented.\n    resetDrawContext() {\n        this.globe.offset = 0;\n\n        var dc = this.drawContext;\n        dc.reset();\n        dc.globe = this.globe;\n        dc.navigator = this.navigator;\n        dc.layers = this.layers.slice();\n        dc.layers.push(dc.screenCreditController);\n        this.computeDrawContext();\n        dc.verticalExaggeration = this.verticalExaggeration;\n        dc.surfaceOpacity = this.surfaceOpacity;\n        dc.deepPicking = this.deepPicking;\n        dc.frameStatistics = this.frameStatistics;\n        dc.pixelScale = this.pixelScale;\n        dc.update();\n    };\n\n    /* useful stuff to debug WebGL */\n    /*\n        function logGLCall(functionName, args) {\n        console.log(\"gl.\" + functionName + \"(\" +\n        WebGLDebugUtils.glFunctionArgsToString(functionName, args) + \")\");\n        };\n    \n        function validateNoneOfTheArgsAreUndefined(functionName, args) {\n        for (var ii = 0; ii < args.length; ++ii) {\n        if (args[ii] === undefined) {\n        console.error(\"undefined passed to gl.\" + functionName + \"(\" +\n        WebGLDebugUtils.glFunctionArgsToString(functionName, args) + \")\");\n        }\n        }\n        };\n    \n        logAndValidate logAndValidate(functionName, args) {\n        logGLCall(functionName, args);\n        validateNoneOfTheArgsAreUndefined (functionName, args);\n        };\n    \n        throwOnGLError throwOnGLError(err, funcName, args) {\n        throw WebGLDebugUtils.glEnumToString(err) + \" was caused by call to: \" + funcName;\n        };\n        */\n\n    // Internal function. Intentionally not documented.\n    drawFrame() {\n        try {\n            this.drawContext.frameStatistics.beginFrame();\n            this.beginFrame();\n\n            if (this.drawContext.globe.is2D() && this.drawContext.globe.continuous) {\n                this.do2DContiguousRepaint();\n            } else {\n                this.doNormalRepaint();\n            }\n\n        } finally {\n            this.endFrame();\n            this.drawContext.frameStatistics.endFrame();\n            //console.log(this.drawContext.frameStatistics.frameTime);\n        }\n    };\n\n    doNormalRepaint() {\n        this.createTerrain();\n        this.clearFrame();\n        this.deferOrderedRendering = false;\n        if (this.drawContext.pickingMode) {\n            if (this.drawContext.makePickFrustum()) {\n                this.doPick();\n                this.resolvePick();\n            }\n        } else {\n            this.doDraw();\n            if (this.subsurfaceMode && this.hasStencilBuffer) {\n                this.redrawSurface();\n                this.drawScreenRenderables();\n            }\n        }\n    };\n\n    do2DContiguousRepaint() {\n        this.createTerrain2DContiguous();\n        this.clearFrame();\n        if (this.drawContext.pickingMode) {\n            if (this.drawContext.makePickFrustum()) {\n                this.pick2DContiguous();\n                this.resolvePick();\n            }\n        } else {\n            this.draw2DContiguous();\n        }\n    };\n\n    resolvePick() {\n        if (this.drawContext.pickTerrainOnly) {\n            this.resolveTerrainPick();\n        } else if (this.drawContext.regionPicking) {\n            this.resolveRegionPick();\n        } else {\n            this.resolveTopPick();\n        }\n    };\n\n    // Internal function. Intentionally not documented.\n    beginFrame() {\n        var gl = this.drawContext.currentGlContext;\n        gl.enable(gl.BLEND);\n        gl.enable(gl.CULL_FACE);\n        gl.enable(gl.DEPTH_TEST);\n        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        gl.depthFunc(gl.LEQUAL);\n\n        if (this.drawContext.pickingMode) {\n            this.drawContext.makePickFramebuffer();\n            this.drawContext.bindFramebuffer(this.drawContext.pickFramebuffer);\n        }\n    };\n\n    // Internal function. Intentionally not documented.\n    endFrame() {\n        var gl = this.drawContext.currentGlContext;\n        gl.disable(gl.BLEND);\n        gl.disable(gl.CULL_FACE);\n        gl.disable(gl.DEPTH_TEST);\n        gl.blendFunc(gl.ONE, gl.ZERO);\n        gl.depthFunc(gl.LESS);\n        gl.clearColor(0, 0, 0, 1);\n\n        this.drawContext.bindFramebuffer(null);\n        this.drawContext.bindProgram(null);\n    };\n\n    // Internal function. Intentionally not documented.\n    clearFrame() {\n        var dc = this.drawContext,\n            gl = dc.currentGlContext;\n\n        gl.clearColor(dc.clearColor.red, dc.clearColor.green, dc.clearColor.blue, dc.clearColor.alpha);\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n    };\n\n    // Internal function. Intentionally not documented.\n    doDraw() {\n        this.drawContext.renderShapes = true;\n\n        if (this.subsurfaceMode && this.hasStencilBuffer) {\n            // Draw the surface and collect the ordered renderables.\n            this.drawContext.currentGlContext.disable(this.drawContext.currentGlContext.STENCIL_TEST);\n            this.drawContext.surfaceShapeTileBuilder.clear();\n            this.drawLayers(true);\n            this.drawSurfaceRenderables();\n            this.drawContext.surfaceShapeTileBuilder.doRender(this.drawContext);\n\n            if (!this.deferOrderedRendering) {\n                // Clear the depth and stencil buffers prior to rendering the ordered renderables. This allows\n                // sub-surface renderables to be drawn beneath the terrain. Turn on stenciling to capture the\n                // fragments that ordered renderables draw. The terrain and surface shapes will be subsequently\n                // drawn again, and the stencil buffer will ensure that they are drawn only where they overlap\n                // the fragments drawn by the ordered renderables.\n                this.drawContext.currentGlContext.clear(\n                    this.drawContext.currentGlContext.DEPTH_BUFFER_BIT | this.drawContext.currentGlContext.STENCIL_BUFFER_BIT);\n                this.drawContext.currentGlContext.enable(this.drawContext.currentGlContext.STENCIL_TEST);\n                this.drawContext.currentGlContext.stencilFunc(this.drawContext.currentGlContext.ALWAYS, 1, 1);\n                this.drawContext.currentGlContext.stencilOp(\n                    this.drawContext.currentGlContext.REPLACE, this.drawContext.currentGlContext.REPLACE, this.drawContext.currentGlContext.REPLACE);\n                this.drawOrderedRenderables();\n            }\n        } else {\n            this.drawContext.surfaceShapeTileBuilder.clear();\n            this.drawLayers(true);\n            this.drawSurfaceRenderables();\n            this.drawContext.surfaceShapeTileBuilder.doRender(this.drawContext);\n\n            if (!this.deferOrderedRendering) {\n                this.drawOrderedRenderables();\n                this.drawScreenRenderables();\n            }\n        }\n    };\n\n    redrawSurface() {\n        // Draw the terrain and surface shapes but only where the current stencil buffer is non-zero.\n        // The non-zero fragments are from drawing the ordered renderables previously.\n        this.drawContext.currentGlContext.enable(this.drawContext.currentGlContext.STENCIL_TEST);\n        this.drawContext.currentGlContext.stencilFunc(this.drawContext.currentGlContext.EQUAL, 1, 1);\n        this.drawContext.currentGlContext.stencilOp(\n            this.drawContext.currentGlContext.KEEP, this.drawContext.currentGlContext.KEEP, this.drawContext.currentGlContext.KEEP);\n        this.drawContext.surfaceShapeTileBuilder.clear();\n        this.drawLayers(false);\n        this.drawSurfaceRenderables();\n        this.drawContext.surfaceShapeTileBuilder.doRender(this.drawContext);\n        this.drawContext.currentGlContext.disable(this.drawContext.currentGlContext.STENCIL_TEST);\n    };\n\n    // Internal function. Intentionally not documented.\n    doPick() {\n        if (this.drawContext.terrain) {\n            this.drawContext.terrain.pick(this.drawContext);\n        }\n\n        if (!this.drawContext.pickTerrainOnly) {\n            if (this.subsurfaceMode && this.hasStencilBuffer) {\n                // Draw the surface and collect the ordered renderables.\n                this.drawContext.currentGlContext.disable(this.drawContext.currentGlContext.STENCIL_TEST);\n                this.drawContext.surfaceShapeTileBuilder.clear();\n                this.drawLayers(true);\n                this.drawSurfaceRenderables();\n                this.drawContext.surfaceShapeTileBuilder.doRender(this.drawContext);\n\n                if (!this.deferOrderedRendering) {\n                    // Clear the depth and stencil buffers prior to rendering the ordered renderables. This allows\n                    // sub-surface renderables to be drawn beneath the terrain. Turn on stenciling to capture the\n                    // fragments that ordered renderables draw. The terrain and surface shapes will be subsequently\n                    // drawn again, and the stencil buffer will ensure that they are drawn only where they overlap\n                    // the fragments drawn by the ordered renderables.\n                    this.drawContext.currentGlContext.clear(\n                        this.drawContext.currentGlContext.DEPTH_BUFFER_BIT | this.drawContext.currentGlContext.STENCIL_BUFFER_BIT);\n                    this.drawContext.currentGlContext.enable(this.drawContext.currentGlContext.STENCIL_TEST);\n                    this.drawContext.currentGlContext.stencilFunc(this.drawContext.currentGlContext.ALWAYS, 1, 1);\n                    this.drawContext.currentGlContext.stencilOp(\n                        this.drawContext.currentGlContext.REPLACE, this.drawContext.currentGlContext.REPLACE, this.drawContext.currentGlContext.REPLACE);\n                    this.drawOrderedRenderables();\n                    this.drawContext.terrain.pick(this.drawContext);\n                    this.drawScreenRenderables();\n                }\n            } else {\n                this.drawContext.surfaceShapeTileBuilder.clear();\n\n                this.drawLayers(true);\n                this.drawSurfaceRenderables();\n\n                this.drawContext.surfaceShapeTileBuilder.doRender(this.drawContext);\n\n                if (!this.deferOrderedRendering) {\n                    this.drawOrderedRenderables();\n                    this.drawScreenRenderables();\n                }\n            }\n        }\n    };\n\n    // Internal function. Intentionally not documented.\n    createTerrain() {\n        var dc = this.drawContext;\n        dc.terrain = this.globe.tessellator.tessellate(dc);\n        dc.frameStatistics.setTerrainTileCount(dc.terrain ? dc.terrain.surfaceGeometry.length : 0);\n    };\n\n    makeCurrent(offset) {\n        var dc = this.drawContext;\n        dc.globe.offset = offset;\n        dc.globeStateKey = dc.globe.stateKey;\n\n        switch (offset) {\n            case -1:\n                dc.terrain = this.terrainLeft;\n                break;\n\n            case 0:\n                dc.terrain = this.terrainCenter;\n                break;\n\n            case 1:\n                dc.terrain = this.terrainRight;\n                break;\n        }\n    };\n\n    createTerrain2DContiguous() {\n        var dc = this.drawContext;\n\n        this.terrainCenter = null;\n        dc.globe.offset = 0;\n        dc.globeStateKey = dc.globe.stateKey;\n        if (dc.globe.intersectsFrustum(dc.frustumInModelCoordinates)) {\n            this.terrainCenter = dc.globe.tessellator.tessellate(dc);\n        }\n\n        this.terrainRight = null;\n        dc.globe.offset = 1;\n        dc.globeStateKey = dc.globe.stateKey;\n        if (dc.globe.intersectsFrustum(dc.frustumInModelCoordinates)) {\n            this.terrainRight = dc.globe.tessellator.tessellate(dc);\n        }\n\n        this.terrainLeft = null;\n        dc.globe.offset = -1;\n        dc.globeStateKey = dc.globe.stateKey;\n        if (dc.globe.intersectsFrustum(dc.frustumInModelCoordinates)) {\n            this.terrainLeft = dc.globe.tessellator.tessellate(dc);\n        }\n    };\n\n    draw2DContiguous() {\n        var drawing = \"\";\n\n        if (this.terrainCenter) {\n            drawing += \" 0 \";\n            this.makeCurrent(0);\n            this.deferOrderedRendering = this.terrainLeft || this.terrainRight;\n            this.doDraw();\n        }\n\n        if (this.terrainRight) {\n            drawing += \" 1 \";\n            this.makeCurrent(1);\n            this.deferOrderedRendering = this.terrainLeft || this.terrainLeft;\n            this.doDraw();\n        }\n\n        this.deferOrderedRendering = false;\n\n        if (this.terrainLeft) {\n            drawing += \" -1 \";\n            this.makeCurrent(-1);\n            this.doDraw();\n        }\n        //\n        //console.log(drawing);\n\n        if (this.subsurfaceMode && this.hasStencilBuffer) {\n            this.deferOrderedRendering = true;\n\n            if (this.terrainCenter) {\n                drawing += \" 0 \";\n                this.makeCurrent(0);\n                this.redrawSurface();\n            }\n\n            if (this.terrainRight) {\n                drawing += \" 1 \";\n                this.makeCurrent(1);\n                this.redrawSurface();\n            }\n\n            if (this.terrainLeft) {\n                drawing += \" -1 \";\n                this.makeCurrent(-1);\n                this.redrawSurface();\n            }\n        }\n\n        this.drawScreenRenderables();\n    };\n\n    pick2DContiguous() {\n        if (this.terrainCenter) {\n            this.makeCurrent(0);\n            this.deferOrderedRendering = this.terrainLeft || this.terrainRight;\n            this.doPick();\n        }\n\n        if (this.terrainRight) {\n            this.makeCurrent(1);\n            this.deferOrderedRendering = this.terrainLeft || this.terrainLeft;\n            this.doPick();\n        }\n\n        this.deferOrderedRendering = false;\n\n        if (this.terrainLeft) {\n            this.makeCurrent(-1);\n            this.doPick();\n        }\n    };\n\n    // Internal function. Intentionally not documented.\n    drawLayers(accumulateOrderedRenderables) {\n        // Draw all the layers attached to this WorldWindow.\n\n        var beginTime = Date.now(),\n            dc = this.drawContext,\n            layers = dc.layers,\n            layer;\n\n        dc.accumulateOrderedRenderables = accumulateOrderedRenderables;\n\n        for (var i = 0, len = layers.length; i < len; i++) {\n            layer = layers[i];\n            if (layer) {\n                dc.currentLayer = layer;\n                try {\n                    layer.render(dc);\n                } catch (e) {\n                    Logger.log(Logger.LEVEL_SEVERE, \"Error while rendering layer \" + layer.displayName + \".\\n\"\n                        + e.toString());\n                    // Keep going. Render the rest of the layers.\n                }\n            }\n        }\n        dc.currentLayer = null;\n        var now = Date.now();\n        dc.frameStatistics.layerRenderingTime = now - beginTime;\n    };\n\n    /**\n     * Adds a specified layer to the end of this WorldWindow.\n     * @param {Layer} layer The layer to add. May be null or undefined, in which case this WorldWindow is not\n     * modified.\n     */\n    addLayer(layer) {\n        if (layer) {\n            this.layers.push(layer);\n        }\n    };\n\n    /**\n     * Removes the first instance of a specified layer from this WorldWindow.\n     * @param {Layer} layer The layer to remove. May be null or undefined, in which case this WorldWindow is not\n     * modified. This WorldWindow is also not modified if the specified layer does not exist in this WorldWindow's\n     * layer list.\n     */\n    removeLayer(layer) {\n        var index = this.indexOfLayer(layer);\n        if (index >= 0) {\n            this.layers.splice(index, 1);\n        }\n    };\n\n    /**\n     * Inserts a specified layer at a specified position in this WorldWindow.\n     * @param {Number} index The index at which to insert the layer. May be negative to specify the position\n     * from the end of the array.\n     * @param {Layer} layer The layer to insert. May be null or undefined, in which case this WorldWindow is not\n     * modified.\n     */\n    insertLayer(index, layer) {\n        if (layer) {\n            this.layers.splice(index, 0, layer);\n        }\n    };\n\n    /**\n     * Returns the index of a specified layer in this WorldWindow.\n     * @param {Layer} layer The layer to search for.\n     * @returns {Number} The index of the specified layer or -1 if it doesn't exist in this WorldWindow.\n     */\n    indexOfLayer(layer) {\n        return this.layers.indexOf(layer);\n    };\n\n    // Internal function. Intentionally not documented.\n    drawSurfaceRenderables() {\n        var dc = this.drawContext,\n            sr;\n\n        dc.reverseSurfaceRenderables();\n\n        while (sr = dc.popSurfaceRenderable()) {\n            try {\n                sr.renderSurface(dc);\n            } catch (e) {\n                Logger.logMessage(Logger.LEVEL_WARNING, \"WorldWindow\", \"drawSurfaceRenderables\",\n                    \"Error while rendering a surface renderable.\\n\" + e.message);\n                // Keep going. Render the rest of the surface renderables.\n            }\n        }\n    };\n\n    // Internal function. Intentionally not documented.\n    drawOrderedRenderables() {\n        var beginTime = Date.now(),\n            dc = this.drawContext,\n            or;\n\n        dc.sortOrderedRenderables();\n\n        if (this._orderedRenderingFilters) {\n            for (var f = 0; f < this._orderedRenderingFilters.length; f++) {\n                this._orderedRenderingFilters[f](this.drawContext);\n            }\n        }\n\n        dc.orderedRenderingMode = true;\n\n        while (or = dc.popOrderedRenderable()) {\n            try {\n                or.renderOrdered(dc);\n            } catch (e) {\n                Logger.logMessage(Logger.LEVEL_WARNING, \"WorldWindow\", \"drawOrderedRenderables\",\n                    \"Error while rendering an ordered renderable.\\n\" + e.message);\n                // Keep going. Render the rest of the ordered renderables.\n            }\n        }\n\n        dc.orderedRenderingMode = false;\n        dc.frameStatistics.orderedRenderingTime = Date.now() - beginTime;\n    };\n\n    drawScreenRenderables() {\n        var dc = this.drawContext,\n            or;\n\n        while (or = dc.nextScreenRenderable()) {\n            try {\n                or.renderOrdered(dc);\n            } catch (e) {\n                Logger.logMessage(Logger.LEVEL_WARNING, \"WorldWindow\", \"drawOrderedRenderables\",\n                    \"Error while rendering a screen renderable.\\n\" + e.message);\n                // Keep going. Render the rest of the screen renderables.\n            }\n        }\n    };\n\n    // Internal function. Intentionally not documented.\n    resolveTopPick() {\n        if (this.drawContext.objectsAtPickPoint.objects.length == 0) {\n            return; // nothing picked; avoid calling readPickColor unnecessarily\n        }\n\n        // Make a last reading to determine what's on top.\n\n        var pickedObjects = this.drawContext.objectsAtPickPoint,\n            pickColor = this.drawContext.readPickColor(this.drawContext.pickPoint),\n            topObject = null,\n            terrainObject = null;\n\n        if (pickColor) {\n            // Find the picked object with the top color code and set its isOnTop flag.\n            for (var i = 0, len = pickedObjects.objects.length; i < len; i++) {\n                var po = pickedObjects.objects[i];\n\n                if (po.isTerrain) {\n                    terrainObject = po;\n                }\n\n                if (po.color.equals(pickColor)) {\n                    po.isOnTop = true;\n                    topObject = po;\n\n                    if (terrainObject) {\n                        break; // no need to search for more than the top object and the terrain object\n                    }\n                }\n            }\n\n            // In single-pick mode provide only the top-most object and the terrain object, if any.\n            if (!this.drawContext.deepPicking) {\n                pickedObjects.clear();\n                if (topObject) {\n                    pickedObjects.add(topObject);\n                }\n                if (terrainObject && terrainObject != topObject) {\n                    pickedObjects.add(terrainObject);\n                }\n            }\n        } else {\n            pickedObjects.clear(); // nothing drawn at the pick point\n        }\n    };\n\n    // Internal. Intentionally not documented.\n    resolveTerrainPick() {\n        var pickedObjects = this.drawContext.objectsAtPickPoint,\n            po;\n\n        // Mark the first picked terrain object as \"on top\". The picked object list should contain only one entry\n        // indicating the picked terrain object, but we iterate over the list contents anyway.\n        for (var i = 0, len = pickedObjects.objects.length; i < len; i++) {\n            po = pickedObjects.objects[i];\n            if (po.isTerrain) {\n                po.isOnTop = true;\n                break;\n            }\n        }\n    };\n\n    // Internal. Intentionally not documented.\n    resolveRegionPick() {\n        if (this.drawContext.objectsAtPickPoint.objects.length == 0) {\n            return; // nothing picked; avoid calling readPickColors unnecessarily\n        }\n\n        // Mark every picked object with a color in the pick buffer as \"on top\".\n\n        var pickedObjects = this.drawContext.objectsAtPickPoint,\n            uniquePickColors = this.drawContext.readPickColors(this.drawContext.pickRectangle),\n            po,\n            color;\n\n        for (var i = 0, len = pickedObjects.objects.length; i < len; i++) {\n            po = pickedObjects.objects[i];\n            if (!po) continue;\n            var poColor = po.color.toByteString();\n            color = uniquePickColors[poColor];\n            if (color) {\n                po.isOnTop = true;\n            } else if (po.userObject instanceof SurfaceShape) {\n                // SurfaceShapes ALWAYS get added to the pick list, since their rendering is deferred\n                // until the tile they are cached by is rendered. So a SurfaceShape may be in the pick list\n                // but is not seen in the pick rectangle.\n                //\n                // Remove the SurfaceShape that was not visible to the pick rectangle.\n                pickedObjects.objects.splice(i, 1);\n                i -= 1;\n            }\n        }\n    };\n\n    // Internal. Intentionally not documented.\n    callRedrawCallbacks(stage) {\n        for (var i = 0, len = this._redrawCallbacks.length; i < len; i++) {\n            try {\n                this._redrawCallbacks[i](this, stage);\n            } catch (e) {\n                Logger.log(Logger.LEVEL_SEVERE, \"Exception calling redraw callback.\\n\" + e.toString());\n                // Keep going. Execute the rest of the callbacks.\n            }\n        }\n    };\n\n    /**\n     * Moves this WorldWindow's navigator to a specified location or position.\n     * @param {Location | Position} position The location or position to move the navigator to. If this\n     * argument contains an \"altitude\" property, as {@link Position} does, the end point of the navigation is\n     * at the specified altitude. Otherwise the end point is at the current altitude of the navigator.\n     *\n     * This function uses this WorldWindow's {@link GoToAnimator} property to perform the move. That object's\n     * properties can be specified by the application to modify its behavior during calls to this function.\n     * It's cancel method can also be used to cancel the move initiated by this function.\n     * @param {Function} completionCallback If not null or undefined, specifies a function to call when the\n     * animation completes. The completion callback is called with a single argument, this animator.\n     * @throws {ArgumentError} If the specified location or position is null or undefined.\n     */\n    goTo(position, completionCallback) {\n        this.goToAnimator.goTo(position, completionCallback);\n    };\n\n    /**\n     * Declutters the current ordered renderables with a specified group ID. This function is not called by\n     * applications directly. It's meant to be invoked as an ordered rendering filter in this WorldWindow's\n     * [orderedRenderingFilters]{@link WorldWindow#orderedRenderingFilters} property.\n     * <p>\n     * The function operates by setting the target visibility of occluded shapes to 0 and unoccluded shapes to 1.\n     * @param {DrawContext} dc The current draw context.\n     * @param {Number} groupId The ID of the group to declutter. Must not be null, undefined or 0.\n     * @throws {ArgumentError} If the specified group ID is null, undefined or 0.\n     */\n    declutter(dc, groupId) {\n        if (!groupId) {\n            throw new ArgumentError(\n                Logger.logMessage(Logger.LEVEL_SEVERE, \"WorldWindow\", \"declutter\",\n                    \"Group ID is null, undefined or 0.\"));\n        }\n\n        // Collect all the declutterables in the specified group.\n        var declutterables = [];\n        for (var i = 0; i < dc.orderedRenderables.length; i++) {\n            var orderedRenderable = dc.orderedRenderables[i].orderedRenderable;\n            if (orderedRenderable.declutterGroup === groupId) {\n                declutterables.push(orderedRenderable);\n            }\n        }\n\n        // Filter the declutterables by determining which are partially occluded. Since the ordered renderable\n        // list was already sorted from front to back, the front-most will represent an entire occluded group.\n        var rects = [];\n        for (var j = 0; j < declutterables.length; j++) {\n            var declutterable = declutterables[j],\n                screenBounds = declutterable.screenBounds;\n\n            if (screenBounds && screenBounds.intersectsRectangles(rects)) {\n                declutterable.targetVisibility = 0;\n            } else {\n                declutterable.targetVisibility = 1;\n                if (screenBounds) {\n                    rects.push(screenBounds);\n                }\n            }\n        }\n    };\n\n    /**\n     * Computes a ray originating at the eyePoint and extending through the specified point in window\n     * coordinates.\n     * <p>\n     * The specified point is understood to be in the window coordinate system of the WorldWindow, with the origin\n     * in the top-left corner and axes that extend down and to the right from the origin point.\n     * <p>\n     * The results of this method are undefined if the specified point is outside of the WorldWindow's\n     * bounds.\n     *\n     * @param {Vec2} point The window coordinates point to compute a ray for.\n     * @returns {Line} A new Line initialized to the origin and direction of the computed ray, or null if the\n     * ray could not be computed.\n     */\n    rayThroughScreenPoint(point) {\n        if (!point) {\n            throw new ArgumentError(Logger.logMessage(Logger.LEVEL_SEVERE, \"WorldWindow\", \"rayThroughScreenPoint\",\n                \"missingPoint\"));\n        }\n\n        // Convert the point's xy coordinates from window coordinates to WebGL screen coordinates.\n        var screenPoint = new Vec3(point[0], this.viewport.height - point[1], 0),\n            nearPoint = new Vec3(0, 0, 0),\n            farPoint = new Vec3(0, 0, 0);\n\n        this.computeViewingTransform(this.scratchProjection, this.scratchModelview);\n        var modelviewProjection = Matrix.fromIdentity();\n        modelviewProjection.setToMultiply(this.scratchProjection, this.scratchModelview);\n        var modelviewProjectionInv = Matrix.fromIdentity();\n        modelviewProjectionInv.invertMatrix(modelviewProjection);\n\n        // Compute the model coordinate point on the near clip plane with the xy coordinates and depth 0.\n        if (!modelviewProjectionInv.unProject(screenPoint, this.viewport, nearPoint)) {\n            return null;\n        }\n\n        // Compute the model coordinate point on the far clip plane with the xy coordinates and depth 1.\n        screenPoint[2] = 1;\n        if (!modelviewProjectionInv.unProject(screenPoint, this.viewport, farPoint)) {\n            return null;\n        }\n\n        var eyePoint = this.scratchModelview.extractEyePoint(new Vec3(0, 0, 0));\n\n        // Compute a ray originating at the eye point and with direction pointing from the xy coordinate on the near\n        // plane to the same xy coordinate on the far plane.\n        var origin = new Vec3(eyePoint[0], eyePoint[1], eyePoint[2]),\n            direction = new Vec3(farPoint[0], farPoint[1], farPoint[2]);\n\n        direction.subtract(nearPoint);\n        direction.normalize();\n\n        return new Line(origin, direction);\n    };\n}\n\nexport default WorldWindow;","/*\n * Copyright 2015-2017 WorldWind Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport WorldWind from 'webworldwind-esa';\nconst {\n    Angle,\n    ArgumentError,\n    Logger\n} = WorldWind;\n\n/**\n * Provides utilities for determining the Sun geographic and celestial location.\n * @exports SunPosition\n */\nconst SunPosition = {\n\n    /**\n     * Computes the geographic location of the sun for a given date\n     * @param {Date} date\n     * @throws {ArgumentError} if the date is missing\n     * @return {{latitude: Number, longitude: Number}} the geographic location\n     */\n    getAsGeographicLocation: function (date) {\n        if (date instanceof Date === false) {\n            throw new ArgumentError(\n                Logger.logMessage(Logger.LEVEL_SEVERE, \"SunPosition\", \"getAsGeographicLocation\",\n                    \"missingDate\"));\n        }\n\n        let celestialLocation = this.getAsCelestialLocation(date);\n        return this.celestialToGeographic(celestialLocation, date);\n    },\n\n    /**\n     * Computes the celestial location of the sun for a given julianDate\n     * @param {Date} date\n     * @throws {ArgumentError} if the date is missing\n     * @return {{declination: Number, rightAscension: Number}} the celestial location\n     */\n    getAsCelestialLocation: function (date) {\n        if (date instanceof Date === false) {\n            throw new ArgumentError(\n                Logger.logMessage(Logger.LEVEL_SEVERE, \"SunPosition\", \"getAsCelestialLocation\",\n                    \"missingDate\"));\n        }\n\n        let julianDate = this.computeJulianDate(date);\n\n        //number of days (positive or negative) since Greenwich noon, Terrestrial Time, on 1 January 2000 (J2000.0)\n        let numDays = julianDate - 2451545;\n\n        let meanLongitude = this.normalizeAngle360(280.460 + 0.9856474 * numDays);\n\n        let meanAnomaly = this.normalizeAngle360(357.528 + 0.9856003 * numDays) * Angle.DEGREES_TO_RADIANS;\n\n        let eclipticLongitude = meanLongitude + 1.915 * Math.sin(meanAnomaly) + 0.02 * Math.sin(2 * meanAnomaly);\n        let eclipticLongitudeRad = eclipticLongitude * Angle.DEGREES_TO_RADIANS;\n\n        let obliquityOfTheEcliptic = (23.439 - 0.0000004 * numDays) * Angle.DEGREES_TO_RADIANS;\n\n        let declination = Math.asin(Math.sin(obliquityOfTheEcliptic) * Math.sin(eclipticLongitudeRad)) *\n            Angle.RADIANS_TO_DEGREES;\n\n        let rightAscension = Math.atan(Math.cos(obliquityOfTheEcliptic) * Math.tan(eclipticLongitudeRad)) *\n            Angle.RADIANS_TO_DEGREES;\n\n        //compensate for atan result\n        if (eclipticLongitude >= 90 && eclipticLongitude < 270) {\n            rightAscension += 180;\n        }\n        rightAscension = this.normalizeAngle360(rightAscension);\n\n        return {\n            declination: declination,\n            rightAscension: rightAscension\n        };\n    },\n\n    /**\n     * Converts from celestial coordinates (declination and right ascension) to geographic coordinates\n     * (latitude, longitude) for a given julian date\n     * @param {{declination: Number, rightAscension: Number}} celestialLocation\n     * @param {Date} date\n     * @throws {ArgumentError} if celestialLocation or julianDate are missing\n     * @return {{latitude: Number, longitude: Number}} the geographic location\n     */\n    celestialToGeographic: function (celestialLocation, date) {\n        if (!celestialLocation) {\n            throw new ArgumentError(\n                Logger.logMessage(Logger.LEVEL_SEVERE, \"SunPosition\", \"celestialToGeographic\",\n                    \"missingCelestialLocation\"));\n        }\n        if (date instanceof Date === false) {\n            throw new ArgumentError(\n                Logger.logMessage(Logger.LEVEL_SEVERE, \"SunPosition\", \"celestialToGeographic\", \"missingDate\"));\n        }\n\n        let julianDate = this.computeJulianDate(date);\n\n        //number of days (positive or negative) since Greenwich noon, Terrestrial Time, on 1 January 2000 (J2000.0)\n        let numDays = julianDate - 2451545;\n\n        //Greenwich Mean Sidereal Time\n        let GMST = this.normalizeAngle360(280.46061837 + 360.98564736629 * numDays);\n\n        //Greenwich Hour Angle\n        let GHA = this.normalizeAngle360(GMST - celestialLocation.rightAscension);\n\n        let longitude = Angle.normalizedDegreesLongitude(-GHA);\n\n        return {\n            latitude: celestialLocation.declination,\n            longitude: longitude\n        };\n    },\n\n    /**\n     * Computes the julian date from a javascript date object\n     * @param {Date} date\n     * @throws {ArgumentError} if the date is missing\n     * @return {Number} the julian date\n     */\n    computeJulianDate: function (date) {\n        if (date instanceof Date === false) {\n            throw new ArgumentError(\n                Logger.logMessage(Logger.LEVEL_SEVERE, \"SunPosition\", \"computeJulianDate\", \"missingDate\"));\n        }\n\n        let year = date.getUTCFullYear();\n        let month = date.getUTCMonth() + 1;\n        let day = date.getUTCDate();\n        let hour = date.getUTCHours();\n        let minute = date.getUTCMinutes();\n        let second = date.getUTCSeconds();\n\n        let dayFraction = (hour + minute / 60 + second / 3600) / 24;\n\n        if (month <= 2) {\n            year -= 1;\n            month += 12;\n        }\n\n        let A = Math.trunc(year / 100);\n        let B = 2 - A + Math.trunc(A / 4);\n        let JD0h = Math.trunc(365.25 * (year + 4716)) + Math.trunc(30.6001 * (month + 1)) + day + B - 1524.5;\n\n        return JD0h + dayFraction;\n    },\n\n    /**\n     * Restricts an angle to the range [0, 360] degrees, wrapping angles outside the range.\n     * Wrapping takes place as though traversing the edge of a unit circle;\n     * angles less than 0 wrap back to 360, while angles greater than 360 wrap back to 0.\n     *\n     * @param {Number} degrees the angle to wrap in degrees\n     *\n     * @return {Number} the specified angle wrapped to [0, 360] degrees\n     */\n    normalizeAngle360: function(degrees) {\n        let angle = degrees % 360;\n        return angle >= 0 ? angle : (angle < 0 ? 360 + angle : 360 - angle);\n    }\n\n};\n\nexport default SunPosition;","import WorldWind from 'webworldwind-esa';\nimport SunPosition from './SunPosition';\nconst {\n    Angle\n} = WorldWind;\n\nconst Celestial = {\n\n    SUN: 0,\n    MERCURY: 1,\n    VENUS: 2,\n    MARS: 4,\n    JUPITER: 5,\n    SATURN: 6,\n    URANUS: 7,\n    NEPTUNE: 8,\n\n    getCelestialLocation(id, date) {\n        let orbitalElements;\n        const julianDate = SunPosition.computeJulianDate(date);\n        let d = julianDate - 2451543.5;\n        //d = -3543.0;\n\n        switch (id) {\n            case this.SUN:\n                orbitalElements = this.computeSun(d);\n                break;\n\n            case this.MERCURY:\n                orbitalElements = this.computeMercury(d);\n                break;\n\n            case this.VENUS:\n                orbitalElements = this.computeVenus(d);\n                break;\n\n            case this.MARS:\n                orbitalElements = this.computeMars(d);\n                break;\n\n            case this.JUPITER:\n                orbitalElements = this.computeJupiter(d);\n                break;\n\n            case this.SATURN:\n                orbitalElements = this.computeSaturn(d);\n                break;\n\n            case this.URANUS:\n                orbitalElements = this.computeUranus(d);\n                break;\n\n            case this.NEPTUNE:\n                orbitalElements = this.computeNeptune(d);\n                break;\n        }\n\n        return this.computePosition(d, orbitalElements);\n    },\n\n    computeMercury(d) {\n        const N = 48.3313 + 3.24587E-5 * d;\n        const i = 7.0047 + 5.00E-8 * d;\n        const w = 29.1241 + 1.01444E-5 * d;\n        const a = 0.387098;  //(AU)\n        const e = 0.205635 + 5.59E-10 * d;\n        const M = 168.6562 + 4.0923344368 * d;\n\n        return {N, i, w, a, e, M};\n    },\n\n    computeVenus(d) {\n        const N = 76.6799 + 2.46590E-5 * d;\n        const i = 3.3946 + 2.75E-8 * d;\n        const w = 54.8910 + 1.38374E-5 * d;\n        const a = 0.723330;//  (AU)\n        const e = 0.006773 - 1.302E-9 * d;\n        const M = 48.0052 + 1.6021302244 * d;\n\n        return {N, i, w, a, e, M};\n    },\n\n    computeMars(d) {\n        const N = 49.5574 + 2.11081E-5 * d;\n        const i = 1.8497 - 1.78E-8 * d;\n        const w = 286.5016 + 2.92961E-5 * d;\n        const a = 1.523688;  //(AU)\n        const e = 0.093405 + 2.516E-9 * d;\n        const M = 18.6021 + 0.5240207766 * d;\n\n        return {N, i, w, a, e, M};\n    },\n\n    computeJupiter(d) {\n        const N = 100.4542 + 2.76854E-5 * d;\n        const i = 1.3030 - 1.557E-7 * d;\n        const w = 273.8777 + 1.64505E-5 * d;\n        const a = 5.20256;  //(AU)\n        const e = 0.048498 + 4.469E-9 * d;\n        const M = 19.8950 + 0.0830853001 * d;\n\n        return {N, i, w, a, e, M};\n    },\n\n    computeSaturn(d) {\n        const N = 113.6634 + 2.38980E-5 * d;\n        const i = 2.4886 - 1.081E-7 * d;\n        const w = 339.3939 + 2.97661E-5 * d;\n        const a = 9.55475;  //(AU)\n        const e = 0.055546 - 9.499E-9 * d;\n        const M = 316.9670 + 0.0334442282 * d;\n\n        return {N, i, w, a, e, M};\n    },\n\n    computeUranus(d) {\n        const N = 74.0005 + 1.3978E-5 * d;\n        const i = 0.7733 + 1.9E-8 * d;\n        const w = 96.6612 + 3.0565E-5 * d;\n        const a = 19.18171 - 1.55E-8 * d;//  (AU)\n        const e = 0.047318 + 7.45E-9 * d;\n        const M = 142.5905 + 0.011725806 * d;\n\n        return {N, i, w, a, e, M};\n    },\n\n    computeNeptune(d) {\n        const N = 131.7806 + 3.0173E-5 * d;\n        const i = 1.7700 - 2.55E-7 * d;\n        const w = 272.8461 - 6.027E-6 * d;\n        const a = 30.05826 + 3.313E-8 * d;//  (AU)\n        const e = 0.008606 + 2.15E-9 * d;\n        const M = 260.2471 + 0.005995147 * d;\n\n        return {N, i, w, a, e, M};\n    },\n\n    computeSun(d) {\n        const N = 0.0;\n        const i = 0.0;\n        const w = 282.9404 + 4.70935E-5 * d;\n        const a = 1.000000;  //(AU)\n        const e = 0.016709 - 1.151E-9 * d;\n        const M = 356.0470 + 0.9856002585 * d;\n\n        return {N, i, w, a, e, M};\n    },\n\n    computePosition(d, {N, i, w, a, e, M}) {\n        N = SunPosition.normalizeAngle360(N) * Angle.DEGREES_TO_RADIANS;\n        i = SunPosition.normalizeAngle360(i) * Angle.DEGREES_TO_RADIANS;\n        w = SunPosition.normalizeAngle360(w) * Angle.DEGREES_TO_RADIANS;\n        //e = SunPosition.normalizeAngle360(e) * Angle.DEGREES_TO_RADIANS;\n        M = SunPosition.normalizeAngle360(M) * Angle.DEGREES_TO_RADIANS;\n\n        let E = M + e * Math.sin(M) * (1.0 + e * Math.cos(M));\n\n        if (e >= 0.06) {\n            for (var aa = 0; aa < 10; aa++) {\n                var E1 = E - (E - e * Math.sin(E) - M) / (1 - e * Math.cos(E));\n                if (Math.abs(E1 - E) < 0.001) {\n                    E = E1;\n                    break;\n                }\n                E = E1;\n            }\n        }\n\n        const xv = a * (Math.cos(E) - e);\n        const yv = a * (Math.sqrt(1.0 - e * e) * Math.sin(E));\n\n        const v = Math.atan2(yv, xv);\n        const r = Math.sqrt(xv * xv + yv * yv);\n\n        let xh = r * (Math.cos(N) * Math.cos(v + w) - Math.sin(N) * Math.sin(v + w) * Math.cos(i));\n        let yh = r * (Math.sin(N) * Math.cos(v + w) + Math.cos(N) * Math.sin(v + w) * Math.cos(i));\n        let zh = r * (Math.sin(v + w) * Math.sin(i));\n\n        const Epoch = 2000.0;\n        const lon_corr = 3.82394E-5 * (365.2422 * (Epoch - 2000.0) - d) * Angle.DEGREES_TO_RADIANS;\n\n        const lonecl = Math.atan2(yh, xh) + lon_corr;\n        const latecl = Math.atan2(zh, Math.sqrt(xh * xh + yh * yh));\n\n\n        /*** perturbations ***/\n        /*** not implemented ***/\n\n\n        xh = r * Math.cos(lonecl) * Math.cos(latecl);\n        yh = r * Math.sin(lonecl) * Math.cos(latecl);\n        zh = r * Math.sin(latecl);\n\n        let {lonsun, rsun} = this.getLonSun(d, this.computeSun(d));\n        lonsun *= Angle.RADIANS_TO_DEGREES;\n        lonsun = SunPosition.normalizeAngle360(lonsun) * Angle.DEGREES_TO_RADIANS;\n\n        const xs = rsun * Math.cos(lonsun);\n        const ys = rsun * Math.sin(lonsun);\n\n        const xg = xh + xs;\n        const yg = yh + ys;\n        const zg = zh;\n\n        const ecl = SunPosition.normalizeAngle360(23.4393 - 3.563E-7 * d) * Angle.DEGREES_TO_RADIANS;\n\n        const xe = xg;\n        const ye = yg * Math.cos(ecl) - zg * Math.sin(ecl);\n        const ze = yg * Math.sin(ecl) + zg * Math.cos(ecl);\n\n        const ra = SunPosition.normalizeAngle360(Math.atan2(ye, xe) * Angle.RADIANS_TO_DEGREES);\n        const dec = Math.atan2(ze, Math.sqrt(xe * xe + ye * ye)) * Angle.RADIANS_TO_DEGREES;\n\n        return {ra, dec};\n    },\n\n    getLonSun(d, {w, e, M}) {\n        w = SunPosition.normalizeAngle360(w) * Angle.DEGREES_TO_RADIANS;\n        //e = SunPosition.normalizeAngle360(e) * Angle.DEGREES_TO_RADIANS;\n        M = SunPosition.normalizeAngle360(M) * Angle.DEGREES_TO_RADIANS;\n\n        const E = M + e * Math.sin(M) * (1.0 + e * Math.cos(M));\n\n        const xv = Math.cos(E) - e;\n        const yv = Math.sqrt(1.0 - e * e) * Math.sin(E);\n\n        const v = Math.atan2(yv, xv);\n        const rsun = Math.sqrt(xv * xv + yv * yv);\n\n        const lonsun = v + w;\n\n        return {lonsun, rsun};\n    },\n\n};\n\nexport default Celestial;","/**\n * @exports StarFieldProgram\n */\nimport WorldWind from 'webworldwind-esa';\n\nconst {\n    ArgumentError,\n    GpuProgram,\n    Logger,\n    Matrix,\n    Color\n} = WorldWind;\n\n/**\n * Constructs a new program.\n * Initializes, compiles and links this GLSL program with the source code for its vertex and fragment shaders.\n * <p>\n * This method creates WebGL shaders for the program's shader sources and attaches them to a new GLSL program.\n * This method then compiles the shaders and then links the program if compilation is successful.\n * Use the bind method to make the program current during rendering.\n *\n * @alias StarFieldProgram\n * @constructor\n * @augments GpuProgram\n * @classdesc StarFieldProgram is a GLSL program that draws points representing stars.\n * @param {WebGLRenderingContext} gl The current WebGL context.\n * @throws {ArgumentError} If the shaders cannot be compiled, or linking of the compiled shaders into a program\n * fails.\n */\nclass StarFieldProgram extends GpuProgram {\n    constructor(gl) {\n        super(gl, 'attribute vec4 vertexPoint;\\n' +\n\n            'uniform mat4 mvpMatrix;\\n' +\n            //number of days (positive or negative) since Greenwich noon, Terrestrial Time,\n            // on 1 January 2000 (J2000.0)\n            'uniform float numDays;\\n' +\n            'uniform vec2 magnitudeRange;\\n' +\n\n            'varying float magnitudeWeight;\\n' +\n\n            //normalizes an angle between 0.0 and 359.0\n            'float normalizeAngle(float angle) {\\n' +\n            '   float angleDivisions = angle / 360.0;\\n' +\n            '   return 360.0 * (angleDivisions - floor(angleDivisions));\\n' +\n            '}\\n' +\n\n            //transforms declination and right ascension in cartesian coordinates\n            'vec3 computePosition(float dec, float ra) {\\n' +\n            '   float GMST = normalizeAngle(280.46061837 + 360.98564736629 * numDays);\\n' +\n            '   float GHA = normalizeAngle(GMST - ra);\\n' +\n            '   float lon = -GHA + 360.0 * step(180.0, GHA);\\n' +\n            '   float latRad = radians(dec);\\n' +\n            '   float lonRad = radians(lon);\\n' +\n            '   float radCosLat = cos(latRad);\\n' +\n            '   return vec3(radCosLat * sin(lonRad), sin(latRad), radCosLat * cos(lonRad));\\n' +\n            '}\\n' +\n\n            //normalizes a value between 0.0 and 1.0\n            'float normalizeScalar(float value, float minValue, float maxValue){\\n' +\n            '   return (value - minValue) / (maxValue - minValue);\\n' +\n            '}\\n' +\n\n            'void main() {\\n' +\n            '   vec3 vertexPosition = computePosition(vertexPoint.x, vertexPoint.y);\\n' +\n            '   gl_Position = mvpMatrix * vec4(vertexPosition.xyz, 1.0);\\n' +\n            '   gl_Position.z = gl_Position.w - 0.00001;\\n' +\n            '   gl_PointSize = vertexPoint.z;\\n' +\n            '   magnitudeWeight = normalizeScalar(vertexPoint.w, magnitudeRange.x, magnitudeRange.y);\\n' +\n            '}', 'precision mediump float;\\n' +\n\n            'uniform sampler2D textureSampler;\\n' +\n            'uniform int fragMode;\\n' +\n            'uniform vec4 color;\\n' +\n\n            'varying float magnitudeWeight;\\n' +\n\n            'const vec4 white = vec4(1.0, 1.0, 1.0, 1.0);\\n' +\n            'const vec4 grey = vec4(0.5, 0.5, 0.5, 1.0);\\n' +\n\n            'void main() {\\n' +\n            '   if (fragMode == 1) {\\n' +\n            '       gl_FragColor = texture2D(textureSampler, gl_PointCoord);\\n' +\n            '   }\\n' +\n            '   else if (fragMode == 0) {\\n' +\n            //paint the starts in shades of grey, where the brightest star is white and the dimmest star is grey\n            '       gl_FragColor = mix(white, grey, magnitudeWeight);\\n' +\n            '   }\\n' +\n            '   else if (fragMode == 2) {\\n' +\n            '       gl_FragColor = color;\\n' +\n            '   }\\n' +\n            '}', [\"vertexPoint\"]);\n\n        this.FRAG_MODE_MIX_COLOR = 0;\n        this.FRAG_MODE_TEXTURE = 1;\n        this.FRAG_MODE_COLOR = 2;\n\n        /**\n         * The WebGL location for this program's 'vertexPoint' attribute.\n         * @type {Number}\n         * @readonly\n         */\n        this.vertexPointLocation = this.attributeLocation(gl, \"vertexPoint\");\n\n        /**\n         * The WebGL location for this program's 'mvpMatrix' uniform.\n         * @type {WebGLUniformLocation}\n         * @readonly\n         */\n        this.mvpMatrixLocation = this.uniformLocation(gl, \"mvpMatrix\");\n\n        /**\n         * The WebGL location for this program's 'numDays' uniform.\n         * @type {WebGLUniformLocation}\n         * @readonly\n         */\n        this.numDaysLocation = this.uniformLocation(gl, \"numDays\");\n\n        /**\n         * The WebGL location for this program's 'magnitudeRangeLocation' uniform.\n         * @type {WebGLUniformLocation}\n         * @readonly\n         */\n        this.magnitudeRangeLocation = this.uniformLocation(gl, \"magnitudeRange\");\n\n        /**\n         * The WebGL location for this program's 'textureSampler' uniform.\n         * @type {WebGLUniformLocation}\n         * @readonly\n         */\n        this.textureUnitLocation = this.uniformLocation(gl, \"textureSampler\");\n\n        /**\n         * The WebGL location for this program's 'textureEnabled' uniform.\n         * @type {WebGLUniformLocation}\n         * @readonly\n         */\n        this.fragModeLocation = this.uniformLocation(gl, \"fragMode\");\n\n        this.colorLocation = this.uniformLocation(gl, \"color\");\n\n        this.localState = {\n            mvpMatrix: null,\n            numDays: null,\n            magnitudeRange: null,\n            textureUnit: null,\n            fragMode: null,\n            color: null,\n        };\n    }\n\n    /**\n     * Loads the specified matrix as the value of this program's 'mvpMatrix' uniform variable.\n     *\n     * @param {WebGLRenderingContext} gl The current WebGL context.\n     * @param {Matrix} matrix The matrix to load.\n     * @throws {ArgumentError} If the specified matrix is null or undefined.\n     */\n    loadModelviewProjection(gl, matrix) {\n        if (!matrix) {\n            throw new ArgumentError(\n                Logger.logMessage(Logger.LEVEL_SEVERE, \"StarFieldProgram\", \"loadModelviewProjection\", \"missingMatrix\"));\n        }\n\n        let forceLoad = false;\n        if (this.localState.mvpMatrix === null) {\n            forceLoad = true;\n            this.localState.mvpMatrix = Matrix.fromIdentity();\n        }\n\n        if (forceLoad || !this.localState.mvpMatrix.equals(matrix)) {\n            this.loadUniformMatrix(gl, matrix, this.mvpMatrixLocation);\n            this.localState.mvpMatrix.copy(matrix);\n        }\n    }\n\n    /**\n     * Loads the specified number as the value of this program's 'numDays' uniform variable.\n     *\n     * @param {WebGLRenderingContext} gl The current WebGL context.\n     * @param {Number} numDays The number of days (positive or negative) since Greenwich noon, Terrestrial Time,\n     * on 1 January 2000 (J2000.0)\n     * @throws {ArgumentError} If the specified number is null or undefined.\n     */\n    loadNumDays(gl, numDays) {\n        if (numDays == null) {\n            throw new ArgumentError(\n                Logger.logMessage(Logger.LEVEL_SEVERE, \"StarFieldProgram\", \"loadNumDays\", \"missingNumDays\"));\n        }\n        if (this.localState.numDays !== numDays) {\n            gl.uniform1f(this.numDaysLocation, numDays);\n            this.localState.numDays = numDays;\n        }\n    }\n\n    /**\n     * Loads the specified numbers as the value of this program's 'magnitudeRange' uniform variable.\n     *\n     * @param {WebGLRenderingContext} gl The current WebGL context.\n     * @param {Number} minMag\n     * @param {Number} maxMag\n     * @throws {ArgumentError} If the specified numbers are null or undefined.\n     */\n    loadMagnitudeRange(gl, minMag, maxMag) {\n        if (minMag == null) {\n            throw new ArgumentError(\n                Logger.logMessage(Logger.LEVEL_SEVERE, \"StarFieldProgram\", \"loadMagRange\", \"missingMinMag\"));\n        }\n        if (maxMag == null) {\n            throw new ArgumentError(\n                Logger.logMessage(Logger.LEVEL_SEVERE, \"StarFieldProgram\", \"loadMagRange\", \"missingMaxMag\"));\n        }\n        let forceLoad = false;\n        if (this.localState.magnitudeRange === null) {\n            forceLoad = true;\n            this.localState.magnitudeRange = [minMag, maxMag];\n        }\n\n        if (forceLoad || this.localState.magnitudeRange[0] !== minMag || this.localState.magnitudeRange[1] !== maxMag) {\n            gl.uniform2f(this.magnitudeRangeLocation, minMag, maxMag);\n            this.localState.magnitudeRange[0] = minMag;\n            this.localState.magnitudeRange[1] = maxMag;\n        }\n    }\n\n    /**\n     * Loads the specified number as the value of this program's 'textureSampler' uniform variable.\n     * @param {WebGLRenderingContext} gl The current WebGL context.\n     * @param {Number} unit The texture unit.\n     */\n    loadTextureUnit(gl, unit) {\n        if (this.localState.textureUnit !== unit) {\n            gl.uniform1i(this.textureUnitLocation, unit - gl.TEXTURE0);\n            this.localState.textureUnit = unit;\n        }\n    }\n\n    loadFragMode(gl, mode) {\n        if (this.localState.fragMode !== mode) {\n            gl.uniform1i(this.fragModeLocation, mode);\n            this.localState.fragMode = mode;\n        }\n    }\n\n    loadColor(gl, color) {\n        let forceLoad = false;\n        if (this.localState.color === null) {\n            forceLoad = true;\n            this.localState.color = new Color(0, 0, 0, 0);\n        }\n\n        if (forceLoad || !this.localState.color.equals(color)) {\n            this.loadUniformColor(gl, color, this.colorLocation);\n            this.localState.color.copy(color);\n        }\n    }\n}\n\n/**\n * A string that uniquely identifies this program.\n * @type {string}\n * @readonly\n */\nStarFieldProgram.key = \"WorldWindGpuStarFieldFullProgram\";\n\nexport default StarFieldProgram;","/**\n * @exports StarFieldLayer\n */\nimport Celestial from './Celestial';\nimport StarFieldProgram from './StarFieldProgram';\nimport SunPosition from './SunPosition';\n\nimport WorldWind from 'webworldwind-esa';\nconst {\n    Color,\n    Layer,\n    Logger,\n    Matrix,\n    REDRAW_EVENT_TYPE\n} = WorldWind;\n\n\n/**\n * Constructs a layer showing stars and the Sun around the Earth.\n * If used together with the AtmosphereLayer, the StarFieldLayer must be inserted before the AtmosphereLayer.\n *\n * If you want to use your own star data, the file provided must be .json\n * and the fields 'ra', 'dec' and 'vmag' must be present in the metadata.\n * ra and dec must be expressed in degrees.\n *\n * This layer uses J2000.0 as the ref epoch.\n *\n * If the star data .json file is too big, consider enabling gzip compression on your web server.\n * For more info about enabling gzip compression consult the configuration for your web server.\n *\n *\n -- output format : json\n SELECT \"I/239/hip_main\".HIP,  \"I/239/hip_main\".Vmag as vmag, \"I/239/hip_main\".\"_RA.icrs\" as ra,  \"I/239/hip_main\".\"_DE.icrs\" as dec\n FROM \"I/239/hip_main\"\n WHERE \"I/239/hip_main\".Vmag <=6.5\n *\n * @alias StarFieldLayer\n * @constructor\n * @classdesc Provides a layer showing stars, and the Sun around the Earth\n * @param {URL} starDataSource optional url for the stars data\n * @augments Layer\n */\nclass StarFieldLayer extends Layer {\n    constructor(starDataSource) {\n        super('StarField');\n\n        // The StarField Layer is not pickable.\n        this.pickEnabled = false;\n\n        /**\n         * The size of the Sun in pixels.\n         * This can not exceed the maximum allowed pointSize of the GPU.\n         * A warning will be given if the size is too big and the allowed max size will be used.\n         * @type {Number}\n         * @default 128\n         */\n        this.sunSize = 128;\n\n        /**\n         * Indicates weather to show or hide the Sun\n         * @type {Boolean}\n         * @default true\n         */\n        this.showSun = true;\n\n        //Documented in defineProperties below.\n        this._starDataSource = starDataSource || WorldWind.configuration.baseUrl + 'data/stars.json';\n        this._sunImageSource = WorldWind.configuration.baseUrl + 'images/sunTexture.png';\n\n        //Internal use only.\n        //The MVP matrix of this layer.\n        this._matrix = Matrix.fromIdentity();\n\n        //Internal use only.\n        //gpu cache key for the stars vbo.\n        this._starsPositionsVboCacheKey = null;\n\n        //Internal use only.\n        this._numStars = 0;\n\n        //Internal use only.\n        this._starData = null;\n\n        //Internal use only.\n        this._minMagnitude = Number.MAX_VALUE;\n        this._maxMagnitude = Number.MIN_VALUE;\n\n        //Internal use only.\n        //A flag to indicate the star data is currently being retrieved.\n        this._loadStarted = false;\n\n        //Internal use only.\n        this._minScale = 30e6;\n        this._scale = Number.MAX_SAFE_INTEGER || Math.pow(2, 53) - 1;\n        //this._scale = 50e6;\n\n        //Internal use only.\n        this._sunPositionsCacheKey = '';\n        this._sunBufferView = new Float32Array(4);\n\n        //Internal use only.\n        this._MAX_GL_POINT_SIZE = 0;\n\n        this.showPlanets = true;\n\n        const jupiterSize = 32;\n\n        this.planets = [\n            {\n                id: Celestial.MERCURY,\n                url: 'images/Mercury64.png',\n                size: jupiterSize / 4,\n                ra: null,\n                dec: null,\n            },\n            {\n                id: Celestial.VENUS,\n                url: 'images/Venus64.png',\n                size: jupiterSize / 4,\n                ra: null,\n                dec: null,\n            },\n            {\n                id: Celestial.MARS,\n                url: 'images/Mars64.png',\n                size: jupiterSize / 4,\n                ra: null,\n                dec: null,\n            },\n            {\n                id: Celestial.JUPITER,\n                url: 'images/Jupiter64.png',\n                size: jupiterSize,\n                ra: null,\n                dec: null,\n            },\n            {\n                id: Celestial.SATURN,\n                url: 'images/Saturn64.png',\n                size: jupiterSize,\n                ra: null,\n                dec: null,\n            },\n            {\n                id: Celestial.URANUS,\n                url: 'images/Uranus64.png',\n                size: jupiterSize / 2,\n                ra: null,\n                dec: null,\n            },\n            {\n                id: Celestial.NEPTUNE,\n                url: 'images/Neptune64.png',\n                size: jupiterSize / 2,\n                ra: null,\n                dec: null,\n            },\n        ];\n\n        this._planetsBufferView = null;\n\n        this._cacheKeys = {\n            sunPosition: '',\n            planetPositions: '',\n            starPositions: ''\n        };\n    }\n\n    /**\n     * Url for the stars data.\n     * @memberof StarFieldLayer.prototype\n     * @type {URL}\n     */\n    get starDataSource() {\n        return this._starDataSource;\n    }\n    \n    set starDataSource(value) {\n        this._starDataSource = value;\n        this.invalidateStarData();\n    }\n\n    /**\n     * Url for the sun texture image.\n     * @memberof StarFieldLayer.prototype\n     * @type {URL}\n     */\n    get sunImageSource() {\n        return this._sunImageSource;\n    }\n    \n    set sunImageSource(value) {\n        this._sunImageSource = value;\n    }\n\n    // Documented in superclass.\n    doRender(dc) {\n        if (dc.globe.is2D()) {\n            return;\n        }\n\n        if (!this.haveResources(dc)) {\n            this.loadResources(dc);\n            return;\n        }\n\n        this.beginRendering(dc);\n        try {\n            this.doDraw(dc);\n        }\n        finally {\n            this.endRendering(dc);\n        }\n    }\n\n    // Internal. Intentionally not documented.\n    haveResources(dc) {\n        let sunTexture = dc.gpuResourceCache.resourceForKey(this._sunImageSource);\n        let planetTextures = this.planets.every(planet => {\n            const texture = dc.gpuResourceCache.resourceForKey(planet.url);\n            return !!texture;\n        });\n        return (\n            this._starData != null &&\n            sunTexture != null &&\n            planetTextures\n        );\n    }\n\n    // Internal. Intentionally not documented.\n    loadResources(dc) {\n        let gl = dc.currentGlContext;\n        let gpuResourceCache = dc.gpuResourceCache;\n\n        if (!this._starData) {\n            this.fetchStarData();\n        }\n\n        let sunTexture = gpuResourceCache.resourceForKey(this._sunImageSource);\n        if (!sunTexture) {\n            gpuResourceCache.retrieveTexture(gl, this._sunImageSource);\n        }\n\n        this.planets.forEach(planet => {\n            const texture = gpuResourceCache.resourceForKey(planet.url);\n            if (!texture) {\n                gpuResourceCache.retrieveTexture(gl, planet.url);\n            }\n        });\n    }\n\n    // Internal. Intentionally not documented.\n    beginRendering(dc) {\n        let gl = dc.currentGlContext;\n        dc.findAndBindProgram(StarFieldProgram);\n        gl.enableVertexAttribArray(0);\n        gl.depthMask(false);\n    }\n\n    // Internal. Intentionally not documented.\n    doDraw(dc) {\n        this.loadCommonUniforms(dc);\n\n        this.renderStars(dc);\n\n        if (this.showSun) {\n            this.renderSun(dc);\n        }\n\n        if (this.showPlanets) {\n            this.renderPlanets(dc);\n        }\n    }\n\n    // Internal. Intentionally not documented.\n    loadCommonUniforms(dc) {\n        let gl = dc.currentGlContext;\n        let program = dc.currentProgram;\n\n        let mvp = dc.modelviewProjection || dc.navigatorState.modelviewProjection;\n        this._matrix.copy(mvp);\n        this._matrix.multiplyByScale(this._scale, this._scale, this._scale);\n\n        program.loadModelviewProjection(gl, this._matrix);\n\n        //this subtraction does not work properly on the GPU, it must be done on the CPU\n        //possibly due to precision loss\n        //number of days (positive or negative) since Greenwich noon, Terrestrial Time, on 1 January 2000 (J2000.0)\n        let julianDate = SunPosition.computeJulianDate(this.time || new Date());\n        program.loadNumDays(gl, julianDate - 2451545.0);\n    }\n\n    // Internal. Intentionally not documented.\n    renderStars(dc) {\n        let gl = dc.currentGlContext;\n        let gpuResourceCache = dc.gpuResourceCache;\n        let program = dc.currentProgram;\n\n        if (!this._starsPositionsVboCacheKey) {\n            this._starsPositionsVboCacheKey = gpuResourceCache.generateCacheKey();\n        }\n        let vboId = gpuResourceCache.resourceForKey(this._starsPositionsVboCacheKey);\n        if (!vboId) {\n            vboId = gl.createBuffer();\n            let positions = this.createStarsGeometry();\n            gpuResourceCache.putResource(this._starsPositionsVboCacheKey, vboId, positions.length * 4);\n            gl.bindBuffer(gl.ARRAY_BUFFER, vboId);\n            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(positions), gl.STATIC_DRAW);\n        }\n        else {\n            gl.bindBuffer(gl.ARRAY_BUFFER, vboId);\n        }\n        dc.frameStatistics.incrementVboLoadCount(1);\n\n        gl.vertexAttribPointer(0, 4, gl.FLOAT, false, 0, 0);\n\n        program.loadMagnitudeRange(gl, this._minMagnitude, this._maxMagnitude);\n        program.loadFragMode(gl, program.FRAG_MODE_MIX_COLOR);\n\n        gl.drawArrays(gl.POINTS, 0, this._numStars);\n    }\n\n    // Internal. Intentionally not documented.\n    renderPlanets(dc) {\n        let gl = dc.currentGlContext;\n        let program = dc.currentProgram;\n        let gpuResourceCache = dc.gpuResourceCache;\n\n        if (!this._MAX_GL_POINT_SIZE) {\n            this._MAX_GL_POINT_SIZE = gl.getParameter(gl.ALIASED_POINT_SIZE_RANGE)[1];\n        }\n        if (this.sunSize > this._MAX_GL_POINT_SIZE) {\n            Logger.log(Logger.LEVEL_WARNING, 'StarFieldLayer - sunSize is to big, max size allowed is: ' +\n                this._MAX_GL_POINT_SIZE);\n        }\n\n        this.planets.forEach(planet => {\n            const {ra, dec} = Celestial.getCelestialLocation(planet.id, this.time || new Date());\n            planet.ra = ra;\n            planet.dec = dec;\n        }, this);\n\n        if (!this._planetsBufferView) {\n            this._planetsBufferView = new Float32Array(this.planets.length * 4);\n        }\n\n        for (let i = 0; i < this.planets.length; i++) {\n            let planet = this.planets[i];\n            this._planetsBufferView[i * 4 + 0] = planet.dec;\n            this._planetsBufferView[i * 4 + 1] = planet.ra;\n            this._planetsBufferView[i * 4 + 2] = Math.min(planet.size, this._MAX_GL_POINT_SIZE);\n            this._planetsBufferView[i * 4 + 3] = 1;\n        }\n\n        if (!this._planetsPositionsVboCacheKey) {\n            this._planetsPositionsVboCacheKey = gpuResourceCache.generateCacheKey();\n        }\n        let vboId = gpuResourceCache.resourceForKey(this._planetsPositionsVboCacheKey);\n        if (!vboId) {\n            vboId = gl.createBuffer();\n            gpuResourceCache.putResource(this._planetsPositionsVboCacheKey, vboId, this._planetsBufferView.length * 4);\n            gl.bindBuffer(gl.ARRAY_BUFFER, vboId);\n            gl.bufferData(gl.ARRAY_BUFFER, this._planetsBufferView, gl.DYNAMIC_DRAW);\n        }\n        else {\n            gl.bindBuffer(gl.ARRAY_BUFFER, vboId);\n            gl.bufferSubData(gl.ARRAY_BUFFER, 0, this._planetsBufferView);\n        }\n        dc.frameStatistics.incrementVboLoadCount(1);\n        gl.vertexAttribPointer(0, 4, gl.FLOAT, false, 0, 0);\n\n        program.loadFragMode(gl, program.FRAG_MODE_TEXTURE);\n\n        for (let i = 0; i < this.planets.length; i++) {\n            let textureSrc = this.planets[i].url;\n            let texture = dc.gpuResourceCache.resourceForKey(textureSrc);\n            texture.bind(dc);\n            gl.drawArrays(gl.POINTS, i, 1);\n        }\n    }\n\n    // Internal. Intentionally not documented.\n    renderSun(dc) {\n        let gl = dc.currentGlContext;\n        let program = dc.currentProgram;\n        let gpuResourceCache = dc.gpuResourceCache;\n\n        if (!this._MAX_GL_POINT_SIZE) {\n            this._MAX_GL_POINT_SIZE = gl.getParameter(gl.ALIASED_POINT_SIZE_RANGE)[1];\n        }\n        if (this.sunSize > this._MAX_GL_POINT_SIZE) {\n            Logger.log(Logger.LEVEL_WARNING, 'StarFieldLayer - sunSize is to big, max size allowed is: ' +\n                this._MAX_GL_POINT_SIZE);\n        }\n\n        let sunCelestialLocation = SunPosition.getAsCelestialLocation(this.time || new Date());\n\n        this._sunBufferView[0] = sunCelestialLocation.declination;\n        this._sunBufferView[1] = sunCelestialLocation.rightAscension;\n        this._sunBufferView[2] = Math.min(this.sunSize, this._MAX_GL_POINT_SIZE);\n        this._sunBufferView[3] = 1;\n\n        if (!this._sunPositionsCacheKey) {\n            this._sunPositionsCacheKey = gpuResourceCache.generateCacheKey();\n        }\n        let vboId = gpuResourceCache.resourceForKey(this._sunPositionsCacheKey);\n        if (!vboId) {\n            vboId = gl.createBuffer();\n            gpuResourceCache.putResource(this._sunPositionsCacheKey, vboId, this._sunBufferView.length * 4);\n            gl.bindBuffer(gl.ARRAY_BUFFER, vboId);\n            gl.bufferData(gl.ARRAY_BUFFER, this._sunBufferView, gl.DYNAMIC_DRAW);\n        }\n        else {\n            gl.bindBuffer(gl.ARRAY_BUFFER, vboId);\n            gl.bufferSubData(gl.ARRAY_BUFFER, 0, this._sunBufferView);\n        }\n        dc.frameStatistics.incrementVboLoadCount(1);\n        gl.vertexAttribPointer(0, 4, gl.FLOAT, false, 0, 0);\n\n        program.loadFragMode(gl, program.FRAG_MODE_TEXTURE);\n\n        let sunTexture = dc.gpuResourceCache.resourceForKey(this._sunImageSource);\n        sunTexture.bind(dc);\n\n        gl.drawArrays(gl.POINTS, 0, 1);\n    }\n\n    // Internal. Intentionally not documented.\n    endRendering(dc) {\n        let gl = dc.currentGlContext;\n        gl.depthMask(true);\n        gl.disableVertexAttribArray(0);\n    }\n\n    // Internal. Intentionally not documented.\n    fetchStarData() {\n        if (this._loadStarted) {\n            return;\n        }\n\n        this._loadStarted = true;\n        let self = this;\n        let xhr = new XMLHttpRequest();\n\n        xhr.onload = function () {\n            if (this.status >= 200 && this.status < 300) {\n                try {\n                    self._starData = JSON.parse(this.response);\n                    self.sendRedrawRequest();\n                }\n                catch (e) {\n                    Logger.log(Logger.LEVEL_SEVERE, 'StarFieldLayer unable to parse JSON for star data ' +\n                        e.toString());\n                }\n            }\n            else {\n                Logger.log(Logger.LEVEL_SEVERE, 'StarFieldLayer unable to fetch star data. Status: ' +\n                    this.status + ' ' + this.statusText);\n            }\n            self._loadStarted = false;\n        };\n\n        xhr.onerror = function () {\n            Logger.log(Logger.LEVEL_SEVERE, 'StarFieldLayer unable to fetch star data');\n            self._loadStarted = false;\n        };\n\n        xhr.ontimeout = function () {\n            Logger.log(Logger.LEVEL_SEVERE, 'StarFieldLayer fetch star data has timeout');\n            self._loadStarted = false;\n        };\n\n        xhr.open('GET', this._starDataSource, true);\n        xhr.send();\n    }\n\n    // Internal. Intentionally not documented.\n    createStarsGeometry() {\n        let indexes = this.parseStarsMetadata(this._starData.metadata);\n\n        if (indexes.raIndex === -1) {\n            throw new Error(\n                Logger.logMessage(Logger.LEVEL_SEVERE, 'StarFieldLayer', 'createStarsGeometry',\n                    'Missing ra field in star data.'));\n        }\n        if (indexes.decIndex === -1) {\n            throw new Error(\n                Logger.logMessage(Logger.LEVEL_SEVERE, 'StarFieldLayer', 'createStarsGeometry',\n                    'Missing dec field in star data.'));\n        }\n        if (indexes.magIndex === -1) {\n            throw new Error(\n                Logger.logMessage(Logger.LEVEL_SEVERE, 'StarFieldLayer', 'createStarsGeometry',\n                    'Missing vmag field in star data.'));\n        }\n\n        let data = this._starData.data;\n        let positions = [];\n\n        this._minMagnitude = Number.MAX_VALUE;\n        this._maxMagnitude = Number.MIN_VALUE;\n\n        for (let i = 0, len = data.length; i < len; i++) {\n            let starInfo = data[i];\n            let declination = starInfo[indexes.decIndex]; //for latitude\n            let rightAscension = starInfo[indexes.raIndex]; //for longitude\n            let magnitude = starInfo[indexes.magIndex];\n            let pointSize = magnitude < 2 ? 2 : 1;\n            positions.push(declination, rightAscension, pointSize, magnitude);\n\n            this._minMagnitude = Math.min(this._minMagnitude, magnitude);\n            this._maxMagnitude = Math.max(this._maxMagnitude, magnitude);\n        }\n        this._numStars = Math.floor(positions.length / 4);\n\n        return positions;\n    }\n\n    // Internal. Intentionally not documented.\n    parseStarsMetadata(metadata) {\n        let raIndex = -1,\n            decIndex = -1,\n            magIndex = -1;\n        for (let i = 0, len = metadata.length; i < len; i++) {\n            let starMetaInfo = metadata[i];\n            if (starMetaInfo.name === 'ra') {\n                raIndex = i;\n            }\n            if (starMetaInfo.name === 'dec') {\n                decIndex = i;\n            }\n            if (starMetaInfo.name === 'vmag') {\n                magIndex = i;\n            }\n        }\n        return {\n            raIndex: raIndex,\n            decIndex: decIndex,\n            magIndex: magIndex\n        };\n    }\n\n    // Internal. Intentionally not documented.\n    invalidateStarData() {\n        this._starData = null;\n        this._starsPositionsVboCacheKey = null;\n    }\n\n    // Internal. Intentionally not documented.\n    sendRedrawRequest() {\n        let e = document.createEvent('Event');\n        e.initEvent(REDRAW_EVENT_TYPE, true, true);\n        window.dispatchEvent(e);\n    }\n}\n\nexport default StarFieldLayer;\n","import WorldWind from 'webworldwind-esa';\nconst {\n    Color\n} = WorldWind;\n\nconst satConfig = [\n    {\n        key: 's1a',\n        name: 'SENTINEL-1A',\n        shortName: 'S-1A',\n        satIndex: 0,\n        swathTypes: ['black', 'red', 'green', 'white'],\n        swathColors: [\n            Color.colorFromKmlHex('ff000000'), //black\n            Color.colorFromKmlHex('ff0000ff'), //red\n            Color.colorFromKmlHex('ff00ff00'), //green\n            Color.colorFromKmlHex('ffffffff')  //white\n        ],\n        swatModes: ['IW', 'EW', 'SM'],\n        // tleLineOne: '1 39634U 14016A   18124.03591006  .00000001  00000-0  10014-4 0  9998',\n        // tleLineTwo: '2 39634  98.1819 132.0838 0001369  78.7198 281.4156 14.59198520217480',\n        // tleLineOne: '1 39634U 14016A   22206.03053888  .00000001  00000+0  98653-5 0  9990',\n        // tleLineTwo: '2 39634  98.1828 213.0548 0001302  81.4946 278.6403 14.59197888442509',\n        tleLineOne: '1 39634U 14016A   23135.75055234 -.00000139  00000+0 -19716-4 0  9994',\n        tleLineTwo: '2 39634  98.1823 143.5502 0001426  81.2075 278.9272 14.59196457485481',\n        hasModel: true,\n        filePath: './satellites/sentinel1/s1.json',\n        rotations: {\n            x: 0,\n            y: 0,\n            z: 0,\n            headingAxis: [0, 0, 1],\n            headingAdd: -90,\n            headingMultiply: 1\n        },\n        preRotations: {\n            x: 0,\n            y: 0,\n            z: 0\n        },\n        scale: 500000,\n        translations: {\n            x: -0.1,\n            y: -0.1,\n            z: 0\n        },\n        ignoreLocalTransforms: true,\n        launchDate: new Date('2014-04-03T21:02:00.000Z'),\n    },\n    {\n        key: 's2a',\n        name: 'SENTINEL-2A',\n        shortName: 'S-2A',\n        satIndex: 1,\n        swathTypes: ['red', 'purple', 'white', 'darkGrey', 'green', 'greener'],\n        swathColors: [\n            Color.colorFromKmlHex('ff0000ff'), //red\n            Color.colorFromKmlHex('ffff00ff'), //purple\n            Color.colorFromKmlHex('ffffffff'), //white\n            Color.colorFromKmlHex('ff7f7f7f'), //dark grey\n            Color.colorFromKmlHex('ff00ff00'),  //green\n            Color.colorFromKmlHex('ff00fff7')  //greener\n        ],\n        swatModes: ['NOBS'],\n        // tleLineOne: '1 40697U 15028A   22209.03279834  .00000059  00000+0  39204-4 0  9998',\n        // tleLineTwo: '2 40697  98.5679 283.2380 0001239  91.6336 268.4979 14.30822892370656',\n        tleLineOne: '1 40697U 15028A   23135.78094730 -.00000613  00000+0 -21723-3 0  9993',\n        tleLineTwo: '2 40697  98.5701 210.7561 0001081  93.5445 266.5839 14.30810928412372',\n        hasModel: true,\n        filePath: './satellites/senti2version6/s2.json',\n        rotations: {\n            x: 0,\n            y: 0,\n            z: 0,\n            headingAxis: [0, 0, 1],\n            headingAdd: -90,\n            headingMultiply: 1\n        },\n        preRotations: {\n            x: 0,\n            y: 0,\n            z: 0\n        },\n        scale: 1000000,\n        translations: {\n            x: 0.1,\n            y: 0.385,\n            z: 0.02\n        },\n        ignoreLocalTransforms: true,\n        launchDate: new Date('2015-06-23T01:52:00.000Z'),\n    },\n    {\n        key: 's3a',\n        name: 'SENTINEL-3A',\n        shortName: 'S-3A',\n        satIndex: 2,\n        // tleLineOne: '1 41335U 16011A   22209.15666111  .00000036  00000+0  32851-4 0  9998',\n        // tleLineTwo: '2 41335  98.6209 275.8640 0001147  97.0294 263.1017 14.26737212335576',\n        tleLineOne: '1 41335U 16011A   23136.17745299  .00000172  00000+0  89236-4 0  9995',\n        tleLineTwo: '2 41335  98.6226 203.6975 0001316 103.1271 257.0056 14.26742809377217',\n        hasModel: true,\n        filePath: './satellites/Sentinel3/s3.json',\n        rotations: {\n            x: 0, //0\n            y: 0, //180\n            z: 0, //165\n            headingAxis: [0, 0, 1], //0,0,1\n            headingAdd: 180, //-20\n            headingMultiply: 1 //1\n        },\n        preRotations: {\n            x: 0,\n            y: 180,\n            z: 0\n        },\n        scale: 1000000,\n        translations: {\n            x: 0.01, //-0.01\n            y: 1.98, //1.9\n            z: 0.07 //-0.07\n        },\n        ignoreLocalTransforms: true,\n        launchDate: new Date('2016-02-16T17:57:00.000Z'),\n    },\n    {\n        key: 's1b',\n        name: 'SENTINEL-1B',\n        shortName: 'S-1B',\n        satIndex: 3,\n        swathTypes: ['black', 'red', 'green', 'white'],\n        swathColors: [\n            Color.colorFromKmlHex('ff000000'), //black\n            Color.colorFromKmlHex('ff0000ff'), //red\n            Color.colorFromKmlHex('ff00ff00'), //green\n            Color.colorFromKmlHex('ffffffff')  //white\n        ],\n        swatModes: ['IW', 'EW', 'SM'],\n        tleLineOne: '1 41456U 16025A   22209.21862431  .00000042  00000+0  18606-4 0  9996',\n        tleLineTwo: '2 41456  98.1829 216.0238 0001369  88.6708 271.4653 14.59198877333137',\n        hasModel: true,\n        filePath: './satellites/sentinel1/s1.json',\n        rotations: {\n            x: 0,\n            y: 0,\n            z: 0,\n            headingAxis: [0, 0, 1],\n            headingAdd: -90,\n            headingMultiply: 1\n        },\n        preRotations: {\n            x: 0,\n            y: 0,\n            z: 0\n        },\n        scale: 500000,\n        translations: {\n            x: -0.1,\n            y: -0.1,\n            z: 0\n        },\n        ignoreLocalTransforms: true,\n        launchDate: new Date('2016-04-25T21:02:00.000Z'),\n        retirementDate: new Date('2022-04-01T21:55:00.000Z'),\n    },\n    {\n        key: 's2b',\n        name: 'SENTINEL-2B',\n        shortName: 'S-2B',\n        satIndex: 4,\n        swathTypes: ['blue'],\n        swathColors: [\n            Color.colorFromKmlHex('ffffff00'),\n        ],\n        swatModes: ['NOBS'],\n        // tleLineOne: '1 42063U 17013A   22209.13764023  .00000067  00000+0  42146-4 0  9991',\n        // tleLineTwo: '2 42063  98.5689 283.3111 0001478  92.7207 267.4142 14.30818304281580',\n        tleLineOne: '1 42063U 17013A   23136.11735053 -.00000029  00000+0  54738-5 0  9990',\n        tleLineTwo: '2 42063  98.5693 211.0962 0001350 106.3618   5.3753 14.30811798323331',\n        groundPosition: {latitude: 5.2079, longitude: -52.7724, altitude: 0},\n        hasModel: true,\n        filePath: './satellites/senti2version6/s2.json',\n        rotations: {\n            x: 0,\n            y: 0,\n            z: 0,\n            headingAxis: [0, 0, 1],\n            headingAdd: -90,\n            headingMultiply: 1\n        },\n        preRotations: {\n            x: 0,\n            y: 0,\n            z: 0\n        },\n        scale: 1000000,\n        translations: {\n            x: 0.1,\n            y: 0.385,\n            z: 0.02\n        },\n        ignoreLocalTransforms: true,\n        launchDate: new Date('2017-03-07T01:49:00.000Z'),\n    },\n    {\n        key: 's5p',\n        name: 'SENTINEL-5P',\n        shortName: 'S-5P',\n        satIndex: 5,\n        swathTypes: [],\n        swathColors: [],\n\n        // tleLineOne: '1 42969U 17064A   22208.78956647 -.00000001  00000+0  20275-4 0  9995',\n        // tleLineTwo: '2 42969  98.7323 147.9939 0001240  83.7357 276.3960 14.19543785248044',\n        tleLineOne: '1 42969U 17064A   23135.66826956  .00000093  00000+0  64630-4 0  9994',\n        tleLineTwo: '2 42969  98.7022  76.1729 0001376  82.7461 277.3871 14.19557123289458',\n\n        groundPosition: {latitude: 62.927860, longitude: 40.574830, altitude: 0},\n        hasModel: true,\n        filePath: './satellites/sentinel5p/s5p.json',\n        rotations: {\n            x: 0,\n            y: 0,\n            z: 0,\n            headingAxis: [0, 0, 1],\n            headingAdd: -90,\n            headingMultiply: 1\n        },\n        preRotations: {\n            x: 180 + 30,\n            y: 0,\n            z: 0\n        },\n        scale: 70000,\n        translations: {\n            x: 0.5,\n            y: 0.4,\n            z: -1.2\n        },\n        ignoreLocalTransforms: true,\n        launchDate: new Date('2017-10-13T09:27:00.000Z'),\n    },\n    {\n        key: 's3b',\n        name: 'SENTINEL-3B',\n        shortName: 'S-3B',\n        satIndex: 6,\n        // tleLineOne: '1 43437U 18039A   22208.77883229  .00000033  00000+0  31691-4 0  9991',\n        // tleLineTwo: '2 43437  98.6268 275.5208 0001599 102.2196 257.9163 14.26737935221584',\n        tleLineOne: '1 43437U 18039A   23136.15029073  .00000164  00000+0  85856-4 0  9990',\n        tleLineTwo: '2 43437  98.6287 203.7069 0001035  82.6596 277.4702 14.26731362263279',\n        groundPosition: {\n            latitude: 62.925556,\n            longitude: 40.577778,\n            altitude: 0,\n        },\n        hasModel: true,\n        filePath: 'satellites/Sentinel3/s3.json',\n        rotations: {\n            x: 0, //0\n            y: 0, //180\n            z: 0, //165\n            headingAxis: [0, 0, 1], //0,0,1\n            headingAdd: 180, //-20\n            headingMultiply: 1 //1\n        },\n        preRotations: {\n            x: 0,\n            y: 180,\n            z: 0\n        },\n        scale: 1000000,\n        translations: {\n            x: 0.01, //-0.01\n            y: 1.98, //1.9\n            z: 0.07 //-0.07\n        },\n        ignoreLocalTransforms: true,\n        launchDate: new Date('2018-04-25T17:57:00.000Z'),\n    },\n    {\n        key: 'env',\n        name: 'ENVISAT',\n        shortName: 'Envisat',\n        satIndex: 0,\n        swathTypes: ['black', 'red', 'green', 'white'],\n        swathColors: [\n            Color.colorFromKmlHex('ff000000'), //black\n            Color.colorFromKmlHex('ff0000ff'), //red\n            Color.colorFromKmlHex('ff00ff00'), //green\n            Color.colorFromKmlHex('ffffffff')  //white\n        ],\n        swatModes: ['IW', 'EW', 'SM'],\n        // tleLineOne: '1 39634U 14016A   18124.03591006  .00000001  00000-0  10014-4 0  9998',\n        // tleLineTwo: '2 39634  98.1819 132.0838 0001369  78.7198 281.4156 14.59198520217480',\n        tleLineOne: '1 27386U 02009A   22208.94689716  .00000035  00000+0  24922-4 0  9991',\n        tleLineTwo: '2 27386  98.1855 188.1604 0001389  88.0150 331.3538 14.38141701 69354',\n        hasModel: true,\n        filePath: './satellites/sentinel1/s1.json',\n        rotations: {\n            x: 0,\n            y: 0,\n            z: 0,\n            headingAxis: [0, 0, 1],\n            headingAdd: -90,\n            headingMultiply: 1\n        },\n        preRotations: {\n            x: 0,\n            y: 0,\n            z: 0\n        },\n        scale: 500000,\n        translations: {\n            x: -0.1,\n            y: -0.1,\n            z: 0\n        },\n        ignoreLocalTransforms: true,\n        launchDate: new Date('2002-03-01T21:02:00.000Z'),\n        retirementDate: new Date('2012-05-09T21:55:00.000Z'),\n\n    }\n];\n\nexport const getSatConfigByKey = (satKey) => {\n    return satConfig.find((s) => s.key === satKey);\n};\n\n\nexport default satConfig;","/*\n * Copyright 2003-2006, 2009, 2017, United States Government, as represented by the Administrator of the\n * National Aeronautics and Space Administration. All rights reserved.\n *\n * The NASAWorldWind/WebWorldWind platform is licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @exports ColladaScene\n */\nimport WorldWind from 'webworldwind-esa';\n\nconst {\n    ArgumentError,\n    BasicTextureProgram,\n    Color,\n    Logger,\n    Matrix,\n    Position,\n    PickedObject,\n    Renderable,\n    Vec3\n} = WorldWind;\n\n\n/**\n * Constructs a collada scene\n * @alias ColladaScene\n * @constructor\n * @augments Renderable\n * @classdesc Represents a scene. A scene is a collection of nodes with meshes, materials and textures.\n * @param {Position} position The scene's geographic position.\n * @param {Object} sceneData The scene's data containing the nodes, meshes, materials, textures and other\n * info needed to render the scene.\n */\nvar ColladaScene = function (position, sceneData) {\n    if (!position) {\n        throw new ArgumentError(\n            Logger.logMessage(Logger.LEVEL_SEVERE, \"ColladaScene\", \"constructor\", \"missingPosition\"));\n    }\n\n    Renderable.call(this);\n\n    // Documented in defineProperties below.\n    this._position = position;\n\n    // Documented in defineProperties below.\n    this._nodes = [];\n    this._meshes = {};\n    this._materials = {};\n    this._images = {};\n    this._upAxis = '';\n    this._dirPath = '';\n\n    // Documented in defineProperties below.\n    this._xRotation = 0;\n    this._yRotation = 0;\n    this._zRotation = 0;\n\n    this.preX = 0;\n    this.preY = 0;\n    this.preZ = 0;\n\n    // Documented in defineProperties below.\n    this._xTranslation = 0;\n    this._yTranslation = 0;\n    this._zTranslation = 0;\n\n    // Documented in defineProperties below.\n    this._scale = 1;\n\n    // Documented in defineProperties below.\n    this._altitudeMode = WorldWind.ABSOLUTE;\n\n    // Documented in defineProperties below.\n    this._localTransforms = true;\n\n    // Documented in defineProperties below.\n    this._useTexturePaths = true;\n\n    // Documented in defineProperties below.\n    this._nodesToHide = [];\n    this._hideNodes = false;\n\n    // Documented in defineProperties below.\n    this._placePoint = new Vec3(0, 0, 0);\n\n    // Documented in defineProperties below.\n    this._transformationMatrix = Matrix.fromIdentity();\n    this._mvpMatrix = Matrix.fromIdentity();\n\n    // Documented in defineProperties below.\n    this._normalTransformMatrix = Matrix.fromIdentity();\n    this._normalMatrix = Matrix.fromIdentity();\n    this._texCoordMatrix = Matrix.fromIdentity().setToUnitYFlip();\n\n    //Internal. Intentionally not documented.\n    this._entities = [];\n\n    //Internal. Intentionally not documented.\n    this._activeTexture = null;\n\n    //Internal. Intentionally not documented.\n    this._tmpVector = new Vec3(0, 0, 0);\n    this._tmpColor = new Color(1, 1, 1, 1);\n\n    //Internal. Intentionally not documented.\n    this._vboCacheKey = '';\n    this._iboCacheKey = '';\n\n    this.setSceneData(sceneData);\n};\n\nColladaScene.prototype = Object.create(Renderable.prototype);\nColladaScene.prototype.constructor = ColladaScene;\n\nObject.defineProperties(ColladaScene.prototype, {\n\n    /**\n     * The scene's geographic position.\n     * @memberof ColladaScene.prototype\n     * @type {Position}\n     */\n    position: {\n        get: function () {\n            return this._position;\n        },\n        set: function (value) {\n            this._position = value;\n        }\n    },\n\n    /**\n     * An array of nodes extracted from the collada file.\n     * @memberof ColladaScene.prototype\n     * @type {ColladaNode[]}\n     */\n    nodes: {\n        get: function () {\n            return this._nodes;\n        },\n        set: function (value) {\n            this._nodes = value;\n        }\n    },\n\n    /**\n     * An object with meshes extracted from the collada file.\n     * @memberof ColladaScene.prototype\n     * @type {{ColladaMesh}}\n     */\n    meshes: {\n        get: function () {\n            return this._meshes;\n        },\n        set: function (value) {\n            this._meshes = value;\n        }\n    },\n\n    /**\n     * An object with materials and their effects extracted from the collada file.\n     * @memberof ColladaScene.prototype\n     * @type {ColladaMaterial}\n     */\n    materials: {\n        get: function () {\n            return this._materials;\n        },\n        set: function (value) {\n            this._materials = value;\n        }\n    },\n\n    /**\n     * An object with images extracted from the collada file.\n     * @memberof ColladaScene.prototype\n     * @type {ColladaImage}\n     */\n    images: {\n        get: function () {\n            return this._images;\n        },\n        set: function (value) {\n            this._images = value;\n        }\n    },\n\n    /**\n     * The up axis of the collada model extracted from the collada file.\n     * @memberof ColladaScene.prototype\n     * @type {String}\n     */\n    upAxis: {\n        get: function () {\n            return this._upAxis;\n        },\n        set: function (value) {\n            this._upAxis = value;\n        }\n    },\n\n    /**\n     * The path to the directory of the collada file.\n     * @memberof ColladaScene.prototype\n     * @type {String}\n     */\n    dirPath: {\n        get: function () {\n            return this._dirPath;\n        },\n        set: function (value) {\n            this._dirPath = value;\n        }\n    },\n\n    /**\n     * The scene's rotation angle in degrees for the x axis.\n     * @memberof ColladaScene.prototype\n     * @type {Number}\n     */\n    xRotation: {\n        get: function () {\n            return this._xRotation;\n        },\n        set: function (value) {\n            this._xRotation = value;\n        }\n    },\n\n    /**\n     * The scene's rotation angle in degrees for the x axis.\n     * @memberof ColladaScene.prototype\n     * @type {Number}\n     */\n    yRotation: {\n        get: function () {\n            return this._yRotation;\n        },\n        set: function (value) {\n            this._yRotation = value;\n        }\n    },\n\n    /**\n     * The scene's rotation angle in degrees for the x axis.\n     * @memberof ColladaScene.prototype\n     * @type {Number}\n     */\n    zRotation: {\n        get: function () {\n            return this._zRotation;\n        },\n        set: function (value) {\n            this._zRotation = value;\n        }\n    },\n\n    /**\n     * The scene's translation for the x axis.\n     * @memberof ColladaScene.prototype\n     * @type {Number}\n     */\n    xTranslation: {\n        get: function () {\n            return this._xTranslation;\n        },\n        set: function (value) {\n            this._xTranslation = value;\n        }\n    },\n\n    /**\n     * The scene's translation for the y axis.\n     * @memberof ColladaScene.prototype\n     * @type {Number}\n     */\n    yTranslation: {\n        get: function () {\n            return this._yTranslation;\n        },\n        set: function (value) {\n            this._yTranslation = value;\n        }\n    },\n\n    /**\n     * The scene's translation for the z axis.\n     * @memberof ColladaScene.prototype\n     * @type {Number}\n     */\n    zTranslation: {\n        get: function () {\n            return this._zTranslation;\n        },\n        set: function (value) {\n            this._zTranslation = value;\n        }\n    },\n\n    /**\n     * The scene's scale.\n     * @memberof ColladaScene.prototype\n     * @type {Number}\n     */\n    scale: {\n        get: function () {\n            return this._scale;\n        },\n        set: function (value) {\n            this._scale = value;\n        }\n    },\n\n    /**\n     * The scene's Cartesian point on the globe for the specified position.\n     * @memberof ColladaScene.prototype\n     * @type {Vec3}\n     */\n    placePoint: {\n        get: function () {\n            return this._placePoint;\n        },\n        set: function (value) {\n            this._placePoint = value;\n        }\n    },\n\n    /**\n     * The scene's altitude mode. May be one of\n     * <ul>\n     *  <li>[WorldWind.ABSOLUTE]{@link WorldWind#ABSOLUTE}</li>\n     *  <li>[WorldWind.RELATIVE_TO_GROUND]{@link WorldWind#RELATIVE_TO_GROUND}</li>\n     *  <li>[WorldWind.CLAMP_TO_GROUND]{@link WorldWind#CLAMP_TO_GROUND}</li>\n     * </ul>\n     * @default WorldWind.ABSOLUTE\n     * @memberof ColladaScene.prototype\n     * @type {String}\n     */\n    altitudeMode: {\n        get: function () {\n            return this._altitudeMode;\n        },\n        set: function (value) {\n            this._altitudeMode = value;\n        }\n    },\n\n    /**\n     * The scene's transformation matrix containing the scale, rotations and translations\n     * @memberof ColladaScene.prototype\n     * @type {Matrix}\n     */\n    transformationMatrix: {\n        get: function () {\n            return this._transformationMatrix;\n        },\n        set: function (value) {\n            this._transformationMatrix = value;\n        }\n    },\n\n    /**\n     * The scene's normal matrix\n     * @memberof ColladaScene.prototype\n     * @type {Matrix}\n     */\n    normalMatrix: {\n        get: function () {\n            return this._normalMatrix;\n        },\n        set: function (value) {\n            this._normalMatrix = value;\n        }\n    },\n\n    /**\n     * Force the use of the nodes transformation info. Some 3d software may break the transformations when\n     * importing/exporting models to collada format. Set to false to ignore the the nodes transformation.\n     * Only use this option if the model does not render properly.\n     * @memberof ColladaScene.prototype\n     * @default true\n     * @type {Boolean}\n     */\n    localTransforms: {\n        get: function () {\n            return this._localTransforms;\n        },\n        set: function (value) {\n            this._localTransforms = value;\n        }\n    },\n\n    /**\n     * Force the use of the texture path specified in the collada file. Set to false to ignore the paths of the\n     * textures in the collada file and instead get the textures from the same dir as the collada file.\n     * @memberof ColladaScene.prototype\n     * @default true\n     * @type {Boolean}\n     */\n    useTexturePaths: {\n        get: function () {\n            return this._useTexturePaths;\n        },\n        set: function (value) {\n            this._useTexturePaths = value;\n        }\n    },\n\n    /**\n     * An array of node id's to not render.\n     * @memberof ColladaScene.prototype\n     * @type {String[]}\n     */\n    nodesToHide: {\n        get: function () {\n            return this._nodesToHide;\n        },\n        set: function (value) {\n            this._nodesToHide = value;\n        }\n    },\n\n    /**\n     * Set to true to force the renderer to not draw the nodes passed to the nodesToHide list.\n     * @memberof ColladaScene.prototype\n     * @default false\n     * @type {Boolean}\n     */\n    hideNodes: {\n        get: function () {\n            return this._hideNodes;\n        },\n        set: function (value) {\n            this._hideNodes = value;\n        }\n    }\n\n});\n\n// Internal. Intentionally not documented.\nColladaScene.prototype.setSceneData = function (sceneData) {\n    if (sceneData) {\n        this._nodes = sceneData.root.children;\n        this._meshes = sceneData.meshes;\n        this._materials = sceneData.materials;\n        this._images = sceneData.images;\n        this._upAxis = sceneData.metadata.up_axis;\n        this._dirPath = sceneData.dirPath;\n\n        this.flattenModel();\n    }\n};\n\n// Internal. Intentionally not documented.\nColladaScene.prototype.flattenModel = function () {\n    for (var i = 0, nodesLen = this._nodes.length; i < nodesLen; i++) {\n        this.flattenNode(this._nodes[i]);\n    }\n\n    this._entities.sort(function (a, b) {\n        var va = (a.imageKey === null) ? \"\" : \"\" + a,\n            vb = (b.imageKey === null) ? \"\" : \"\" + b;\n        return va > vb ? 1 : (va === vb ? 0 : -1);\n    });\n};\n\n// Internal. Intentionally not documented.\nColladaScene.prototype.flattenNode = function (node) {\n    if (node.mesh) {\n        var meshKey = node.mesh;\n        var buffers = this._meshes[meshKey].buffers;\n\n        for (var i = 0, bufLen = buffers.length; i < bufLen; i++) {\n            var materialBuf = buffers[i].material;\n\n            for (var j = 0; j < node.materials.length; j++) {\n                if (materialBuf === node.materials[j].symbol) {\n                    var materialKey = node.materials[j].id;\n                    break;\n                }\n            }\n\n            var material = this._materials[materialKey];\n            var imageKey = null;\n            var hasTexture = material && material.textures && buffers[i].uvs && buffers[i].uvs.length > 0;\n            if (hasTexture) {\n                if (material.textures.diffuse) {\n                    imageKey = material.textures.diffuse.mapId;\n                } else if (material.textures.reflective) {\n                    imageKey = material.textures.reflective.mapId;\n                }\n            }\n\n            this._entities.push({\n                mesh: buffers[i],\n                material: material,\n                node: node,\n                imageKey: imageKey\n            });\n        }\n    }\n\n    for (var k = 0; k < node.children.length; k++) {\n        this.flattenNode(node.children[k]);\n    }\n};\n\n// Internal. Intentionally not documented.\nColladaScene.prototype.render = function (dc) {\n    var orderedScene;\n    var frustum = dc.frustumInModelCoordinates;\n\n    if (!this.enabled) {\n        return;\n    }\n\n    if (this.lastFrameTime !== dc.timestamp) {\n        orderedScene = this.makeOrderedRenderable(dc);\n    }\n\n    if (!orderedScene) {\n        return;\n    }\n\n    if (!frustum.containsPoint(this._placePoint)) {\n        return;\n    }\n\n    orderedScene.layer = dc.currentLayer;\n\n    this.lastFrameTime = dc.timestamp;\n\n    dc.addOrderedRenderable(orderedScene);\n};\n\n// Internal. Intentionally not documented.\nColladaScene.prototype.makeOrderedRenderable = function (dc) {\n    dc.surfacePointForMode(this._position.latitude, this._position.longitude, this._position.altitude,\n        this._altitudeMode, this._placePoint);\n\n    this.eyeDistance = dc.eyePoint.distanceTo(this._placePoint);\n\n    return this;\n};\n\n// Internal. Intentionally not documented.\nColladaScene.prototype.renderOrdered = function (dc) {\n    this.drawOrderedScene(dc);\n\n    if (dc.pickingMode) {\n        var po = new PickedObject(this.pickColor.clone(), this, this._position, this.layer, false);\n        dc.resolvePick(po);\n    }\n};\n\n// Internal. Intentionally not documented.\nColladaScene.prototype.drawOrderedScene = function (dc) {\n    try {\n        this.beginDrawing(dc);\n    } finally {\n        this.endDrawing(dc);\n    }\n};\n\n// Internal. Intentionally not documented.\nColladaScene.prototype.beginDrawing = function (dc) {\n    var gl = dc.currentGlContext;\n    var gpuResourceCache = dc.gpuResourceCache;\n\n    var vboId = gpuResourceCache.resourceForKey(this._vboCacheKey);\n    var iboId = gpuResourceCache.resourceForKey(this._iboCacheKey);\n\n    if (!vboId) {\n        this.setupBuffers(dc);\n        vboId = gpuResourceCache.resourceForKey(this._vboCacheKey);\n        iboId = gpuResourceCache.resourceForKey(this._iboCacheKey);\n    }\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, vboId);\n    if (iboId) {\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, iboId);\n    }\n\n    dc.findAndBindProgram(BasicTextureProgram);\n    gl.enableVertexAttribArray(0);\n\n    if (dc.pickingMode) {\n        this.pickColor = dc.uniquePickColor();\n    }\n\n    this.computeTransformationMatrix(dc.globe);\n\n    for (var i = 0, len = this._entities.length; i < len; i++) {\n        var mustRenderNode = this.mustRenderNode(this._entities[i].node.id);\n        if (mustRenderNode) {\n            this.draw(dc, this._entities[i]);\n        }\n    }\n};\n\n// Internal. Intentionally not documented.\nColladaScene.prototype.setupBuffers = function (dc) {\n    var gl = dc.currentGlContext;\n    var sizeOfFloat32 = Float32Array.BYTES_PER_ELEMENT || 4;\n    var sizeOfUint16 = Uint16Array.BYTES_PER_ELEMENT || 2;\n    var sizeOfUint32 = Uint32Array.BYTES_PER_ELEMENT || 4;\n    var is32BitIndices = false;\n    var numIndices = 0;\n    var numVertices = 0;\n\n    for (var i = 0, len = this._entities.length; i < len; i++) {\n        var mesh = this._entities[i].mesh;\n        if (mesh.indexedRendering) {\n            numIndices += mesh.indices.length;\n            if (mesh.indices instanceof Uint32Array) {\n                is32BitIndices = true;\n            }\n        }\n        numVertices += mesh.vertices.length;\n        if (this._entities[i].imageKey) {\n            numVertices += mesh.uvs.length;\n        }\n        if (mesh.normals && mesh.normals.length) {\n            numVertices += mesh.normals.length;\n        }\n    }\n\n    var vbo = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, vbo);\n    gl.bufferData(gl.ARRAY_BUFFER, numVertices * sizeOfFloat32, gl.STATIC_DRAW);\n\n    var offset = 0;\n    for (i = 0, len = this._entities.length; i < len; i++) {\n        var data = this._entities[i].mesh.vertices;\n        this._entities[i].vertexOffset = offset;\n        gl.bufferSubData(gl.ARRAY_BUFFER, offset * sizeOfFloat32, data);\n        offset += data.length;\n    }\n\n    for (i = 0, len = this._entities.length; i < len; i++) {\n        if (this._entities[i].imageKey) {\n            data = this._entities[i].mesh.uvs;\n            this._entities[i].uvOffset = offset;\n            gl.bufferSubData(gl.ARRAY_BUFFER, offset * sizeOfFloat32, data);\n            offset += data.length;\n        }\n    }\n\n    for (i = 0, len = this._entities.length; i < len; i++) {\n        data = data = this._entities[i].mesh.normals;\n        if (data && data.length) {\n            this._entities[i].normalOffset = offset;\n            gl.bufferSubData(gl.ARRAY_BUFFER, offset * sizeOfFloat32, data);\n            offset += data.length;\n        }\n    }\n\n    var indexSize = sizeOfUint16;\n    var indexBufferSize = numIndices * indexSize;\n    var uIntExt;\n    if (is32BitIndices) {\n        uIntExt = dc.getExtension('OES_element_index_uint');\n\n        if (!uIntExt) {\n            Logger.log(Logger.LEVEL_SEVERE,\n                'The 3D model is too big and might not render properly. \\n' +\n                'Your browser does not support the \"OES_element_index_uint\" extension, ' +\n                'required to render large models.'\n            );\n        } else {\n            indexSize = sizeOfUint32;\n            indexBufferSize = numIndices * indexSize;\n        }\n    }\n\n    if (numIndices) {\n        var ibo = gl.createBuffer();\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, ibo);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, indexBufferSize, gl.STATIC_DRAW);\n\n        offset = 0;\n        for (i = 0, len = this._entities.length; i < len; i++) {\n            mesh = this._entities[i].mesh;\n            if (mesh.indexedRendering) {\n                data = mesh.indices;\n                if (data instanceof Uint32Array && !uIntExt) {\n                    data = new Uint16Array(data);\n                }\n                this._entities[i].indexOffset = offset;\n                this._entities[i].indexSize = indexSize;\n                gl.bufferSubData(gl.ELEMENT_ARRAY_BUFFER, offset * indexSize, data);\n                offset += data.length;\n            }\n        }\n    }\n\n    this._vboCacheKey = dc.gpuResourceCache.generateCacheKey();\n    dc.gpuResourceCache.putResource(this._vboCacheKey, vbo, numVertices * sizeOfFloat32);\n\n    if (numIndices) {\n        this._iboCacheKey = dc.gpuResourceCache.generateCacheKey();\n        dc.gpuResourceCache.putResource(this._iboCacheKey, ibo, indexBufferSize);\n    }\n};\n\n// Internal. Intentionally not documented.\nColladaScene.prototype.draw = function (dc, entity) {\n    var gl = dc.currentGlContext;\n    var program = dc.currentProgram;\n    var gpuResourceCache = dc.gpuResourceCache;\n\n    var buffers = entity.mesh;\n    var material = entity.material;\n\n    var nodeWorldMatrix = entity.node.worldMatrix;\n    var nodeNormalMatrix = entity.node.normalMatrix;\n\n    var hasLighting = buffers.normals && buffers.normals.length;\n\n    var imageKey = entity.imageKey;\n\n    this.applyColor(dc, material);\n\n    if (imageKey) {\n        var imagePath = this._useTexturePaths ? this._images[imageKey].path : this._images[imageKey].filename;\n        var textureCacheKey = this._dirPath + imagePath;\n        this._activeTexture = gpuResourceCache.resourceForKey(textureCacheKey);\n        if (!this._activeTexture) {\n            var wrapMode = buffers.isClamp ? gl.CLAMP_TO_EDGE : gl.REPEAT;\n            this._activeTexture = gpuResourceCache.retrieveTexture(gl, textureCacheKey, wrapMode);\n        }\n        var textureBound = this._activeTexture && this._activeTexture.bind(dc);\n        if (textureBound) {\n            program.loadTextureEnabled(gl, true);\n            gl.vertexAttribPointer(2, 2, gl.FLOAT, false, 8, entity.uvOffset * 4);\n            gl.enableVertexAttribArray(2);\n            program.loadModulateColor(gl, dc.pickingMode);\n        } else {\n            program.loadTextureEnabled(gl, false);\n            gl.disableVertexAttribArray(2);\n        }\n    } else {\n        program.loadTextureEnabled(gl, false);\n        gl.disableVertexAttribArray(2);\n    }\n\n    if (hasLighting && !dc.pickingMode) {\n        program.loadApplyLighting(gl, 1);\n        gl.vertexAttribPointer(1, 3, gl.FLOAT, false, 12, entity.normalOffset * 4);\n        gl.enableVertexAttribArray(1);\n    } else {\n        program.loadApplyLighting(gl, 0);\n        gl.disableVertexAttribArray(1);\n    }\n\n    this.applyMatrix(dc, hasLighting, textureCacheKey, nodeWorldMatrix, nodeNormalMatrix);\n\n    gl.vertexAttribPointer(0, 3, gl.FLOAT, false, 12, entity.vertexOffset * 4);\n\n    if (buffers.indexedRendering) {\n        var indexOffsetBytes = entity.indexOffset * entity.indexSize;\n        if (buffers.indices instanceof Uint32Array && dc.getExtension('OES_element_index_uint')) {\n            gl.drawElements(gl.TRIANGLES, buffers.indices.length, gl.UNSIGNED_INT, indexOffsetBytes);\n        } else {\n            gl.drawElements(gl.TRIANGLES, buffers.indices.length, gl.UNSIGNED_SHORT, indexOffsetBytes);\n        }\n    } else {\n        gl.drawArrays(gl.TRIANGLES, 0, Math.floor(buffers.vertices.length / 3));\n    }\n};\n\n// Internal. Intentionally not documented.\nColladaScene.prototype.applyColor = function (dc, material) {\n    var gl = dc.currentGlContext,\n        program = dc.currentProgram;\n\n    if (material) {\n        if (material.techniqueType === 'constant') {\n            var diffuse = material.reflective;\n        } else {\n            diffuse = material.diffuse;\n        }\n    }\n\n    var opacity;\n    var r = 1, g = 1, b = 1, a = 1;\n\n    if (diffuse) {\n        r = diffuse[0];\n        g = diffuse[1];\n        b = diffuse[2];\n        a = diffuse[3] != null ? diffuse[3] : 1;\n    }\n\n    this._tmpColor.set(r, g, b, a);\n    opacity = a * this.layer.opacity;\n    gl.depthMask(opacity >= 1 || dc.pickingMode);\n    program.loadColor(gl, dc.pickingMode ? this.pickColor : this._tmpColor);\n    program.loadOpacity(gl, dc.pickingMode ? (opacity > 0 ? 1 : 0) : opacity);\n};\n\n// Internal. Intentionally not documented.\nColladaScene.prototype.applyMatrix = function (dc, hasLighting, hasTexture, nodeWorldMatrix, nodeNormalMatrix) {\n    this._mvpMatrix.copy(dc.modelviewProjection);\n    this._mvpMatrix.multiplyMatrix(this._transformationMatrix);\n\n    if (nodeWorldMatrix && this._localTransforms) {\n        this._mvpMatrix.multiplyMatrix(nodeWorldMatrix);\n    }\n\n    if (hasLighting && !dc.pickingMode) {\n        this._normalMatrix.copy(dc.modelviewNormalTransform);\n        this._normalMatrix.multiplyMatrix(this._normalTransformMatrix);\n        if (nodeNormalMatrix && this._localTransforms) {\n            this._normalMatrix.multiplyMatrix(nodeNormalMatrix);\n        }\n\n        dc.currentProgram.loadModelviewInverse(dc.currentGlContext, this._normalMatrix);\n    }\n\n    if (hasTexture && this._activeTexture) {\n        dc.currentProgram.loadTextureMatrix(dc.currentGlContext, this._texCoordMatrix);\n        this._activeTexture = null;\n    }\n\n    dc.currentProgram.loadModelviewProjection(dc.currentGlContext, this._mvpMatrix);\n};\n\n// Internal. Intentionally not documented.\nColladaScene.prototype.endDrawing = function (dc) {\n    var gl = dc.currentGlContext;\n    var program = dc.currentProgram;\n\n    gl.disableVertexAttribArray(1);\n    gl.disableVertexAttribArray(2);\n    program.loadApplyLighting(gl, 0);\n    program.loadTextureEnabled(gl, false);\n};\n\n// Internal. Intentionally not documented.\nColladaScene.prototype.computeTransformationMatrix = function (globe) {\n    this._transformationMatrix.setToIdentity();\n\n    this._transformationMatrix.multiplyByLocalCoordinateTransform(this._placePoint, globe);\n\n    this._transformationMatrix.multiplyByRotation(1, 0, 0, this._xRotation);\n    this._transformationMatrix.multiplyByRotation(0, 1, 0, this._yRotation);\n    this._transformationMatrix.multiplyByRotation(0, 0, 1, this._zRotation);\n\n    this._transformationMatrix.multiplyByScale(this._scale, this._scale, this._scale);\n\n    this._transformationMatrix.multiplyByTranslation(this._xTranslation, this._yTranslation, this._zTranslation);\n\n    this._transformationMatrix.multiplyByRotation(1, 0, 0, this.preX);\n    this._transformationMatrix.multiplyByRotation(0, 1, 0, this.preY);\n    this._transformationMatrix.multiplyByRotation(0, 0, 1, this.preZ);\n\n    this.computeNormalMatrix();\n};\n\n// Internal. Intentionally not documented.\nColladaScene.prototype.computeNormalMatrix = function () {\n    this._transformationMatrix.extractRotationAngles(this._tmpVector);\n    this._normalTransformMatrix.setToIdentity();\n    this._normalTransformMatrix.multiplyByRotation(-1, 0, 0, this._tmpVector[0]);\n    this._normalTransformMatrix.multiplyByRotation(0, -1, 0, this._tmpVector[1]);\n    this._normalTransformMatrix.multiplyByRotation(0, 0, -1, this._tmpVector[2]);\n};\n\n// Internal. Intentionally not documented.\nColladaScene.prototype.mustRenderNode = function (nodeId) {\n    var draw = true;\n    if (this._hideNodes) {\n        var pos = this._nodesToHide.indexOf(nodeId);\n        draw = (pos === -1);\n    }\n    return draw;\n};\n\nexport default ColladaScene;","import WorldWind from 'webworldwind-esa';\r\nimport ColladaScene from \"../../collada/ColladaScene\";\r\n\r\nconst {\r\n    Matrix,\r\n    Renderable\r\n} = WorldWind;\r\n\r\n/**\r\n * @exports Model\r\n */\r\nclass Model extends Renderable {\r\n    /**\r\n     * Constructs model of the satellite on the given position.\r\n     * @param model {Object} Model information. Collada information.\r\n     * @param satellite {Object} The details about the satellite and the way it should be transformed and presented.\r\n     * @param position {Position} The exact position of the center of the satellite.\r\n     */\r\n    constructor(model, satellite, position) {\r\n        super();\r\n\r\n        this._satellite = satellite;\r\n        const satelliteModel = this.parse(model);\r\n        this.draw(position, satelliteModel);\r\n    }\r\n\r\n    /**\r\n     * Updates the position of the model.\r\n     * @param position {Position} Current position of the model.\r\n     */\r\n    position(position) {\r\n        this._model.position = position;\r\n    }\r\n\r\n    /**\r\n     * Draws the collada model into a Collada Scene.\r\n     * @param position {Position} Position of the satellite.\r\n     * @param modelData Collada Model Information.\r\n     */\r\n    draw(position, modelData) {\r\n        const nodesToHide = [\r\n            'PlatformCircleAndName', 'SolarWingsCircleAndName', 'C-SarCircleAndName',\r\n            'PlatformTextsAndArrows', 'SolarWingsTextsAndArrows', 'C-SarTextsAndArrows',\r\n\r\n            'SolarArrayGroup', 'WingsDetailsGroup', 'Group004', 'MsiGroup', 'SatelliteGroup',\r\n\r\n            'SatelliteDimensionsGroup', 'MWRGroup', 'SRALGroup', 'OLCIGroup', 'SLSTRGroup'\r\n        ];\r\n        const {\r\n            rotations,\r\n            translations,\r\n            preRotations,\r\n            scale,\r\n            shortName,\r\n            ignoreLocalTransforms\r\n        } = this._satellite;\r\n\r\n        const model = new ColladaScene(position, modelData);\r\n        model.type = this.type;\r\n        model.satShortName = shortName;\r\n\r\n        model.nodesToHide = nodesToHide;\r\n        model.hideNodes = true;\r\n        model.useTexturePaths = false;\r\n        model.localTransforms = ignoreLocalTransforms;\r\n        model.scale = scale;\r\n        model.xRotation = rotations.x;\r\n        model.yRotation = rotations.y;\r\n        model.zRotation = rotations.z;\r\n        model.xTranslation = translations.x;\r\n        model.yTranslation = translations.y;\r\n        model.zTranslation = translations.z;\r\n        model.preX = preRotations.x;\r\n        model.preY = preRotations.y;\r\n        model.preZ = preRotations.z;\r\n\r\n        this._model = model;\r\n        modelData = null;\r\n    }\r\n\r\n    /**\r\n     * Parses the collada model and update the information relevant to the satellites.\r\n     * @param {{ meshes:Object, root:Object, materials:{reflective:Array, diffuse:Array} }} jsonData\r\n     * @return {Object} Collada model.\r\n     */\r\n    parse(jsonData) {\r\n        const meshes = jsonData.meshes;\r\n        const nodes = jsonData.root.children;\r\n        const materials = jsonData.materials;\r\n\r\n        for (let key in meshes) {\r\n            if (meshes.hasOwnProperty(key)) {\r\n                const buffers = meshes[key].buffers;\r\n\r\n                for (let i = 0; i < buffers.length; i++) {\r\n                    const vertices = buffers[i].vertices || [];\r\n                    const normals = buffers[i].normals || [];\r\n                    const uvs = buffers[i].uvs || [];\r\n                    const indices = buffers[i].indices || [];\r\n\r\n                    const eVertices = new Float32Array(vertices);\r\n                    const eNormals = new Float32Array(normals);\r\n                    const eUvs = new Float32Array(uvs);\r\n                    const eIndices = new Uint16Array(indices);\r\n\r\n                    buffers[i].vertices = eVertices;\r\n                    buffers[i].normals = eNormals;\r\n                    buffers[i].uvs = eUvs;\r\n                    buffers[i].indices = eIndices;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < nodes.length; i++) {\r\n            const node = nodes[i];\r\n            if (node.mesh) {\r\n                const worldMatrix = node.worldMatrix.slice(0);\r\n                node.worldMatrix = Matrix.fromIdentity();\r\n                node.worldMatrix.copy(worldMatrix);\r\n\r\n                if (node.children.length) {\r\n                    console.info('node has children', node);\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let key in materials) {\r\n            if (materials.hasOwnProperty(key)) {\r\n                const material = materials[key];\r\n\r\n                if (material.id === '_3_-_Default-material') {\r\n                    if (material.reflective) {\r\n                        material.reflective[0] = 0.289219;\r\n                        material.reflective[1] = 0.713497;\r\n                        material.reflective[2] = 0.870753;\r\n                        material.reflective[3] = 1;\r\n                    }\r\n                } else if (material.id === '_1_-_Default_004-material') {\r\n                    material.diffuse[3] = 0;\r\n                } else if (material.id === '_1_-_Default-material') {\r\n                    material.diffuse[3] = 0;\r\n                } else if (material.id === 'Chrome-material') {\r\n                    material.textures = null;\r\n                    material.diffuse[0] = 0.3137;\r\n                    material.diffuse[1] = 0.3137;\r\n                    material.diffuse[2] = 0.3137;\r\n                } else if (material.id === 'Satellite_panel-material') {\r\n                    material.textures.reflective.mapId = 'image9';\r\n                } else if (material.id === '_3_-_Default') {\r\n                    material.textures.reflective.mapId = 'image4';\r\n                } else if (material.id === '_4_-_Default-material') {\r\n                    material.textures.reflective.mapId = 'image5';\r\n                } else if (material.id === '_5_-_Default_002-material') {\r\n                    material.textures.reflective.mapId = 'image6';\r\n                } else if (material.id === '_5_-_Default-material') {\r\n                    material.textures.reflective.mapId = 'image5';\r\n                }\r\n            }\r\n        }\r\n\r\n        return jsonData;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    render(dc) {\r\n        if(!this._model || !this.enabled) {\r\n            return;\r\n        }\r\n\r\n        this._model.render(dc);\r\n    }\r\n}\r\n\r\nexport default Model;","import WorldWind from 'webworldwind-esa';\nimport WorldWindX from 'webworldwind-x';\nimport Model from '../shapes/satellites/Model';\n\nconst {\n    RenderableLayer,\n    Position,\n} = WorldWind;\n\nconst {\n    EoUtils\n} = WorldWindX;\n\n\nconst DEFAULT_MODEL_OPTIONS = {\n    rotations: {\n        x: 0,\n        y: 0,\n        z: 0,\n        headingAxis: [0, 0, 1],\n        headingAdd: -90,\n        headingMultiply: 1\n    },\n    preRotations: {\n        x: 0,\n        y: 0,\n        z: 0\n    },\n    scale: 500000,\n    translations: {\n        x: -0.1,\n        y: -0.1,\n        z: 0\n    },\n    ignoreLocalTransforms: true\n}\n\n/**\n * Class extending WorldWind.RenderableLayer. Layer can render only one model of satellite. It`s possible to set position data of model.\n * @param options {Object}\n * @param options.key {String}\n * @param options.time {Date} Time of the satellite.\n * @param options.onLayerChanged {func}\n * @augments WorldWind.RenderableLayer\n * @constructor\n */\nclass SatelliteModelLayer extends RenderableLayer {\n\tconstructor(options, satelliteOptions) {\n        super(options);\n        this.type = 'SatelliteModelLayer';\n        this._satelliteOptions = satelliteOptions;\n        this._rerenderMap = null;\n        this.key = options.key;\n        this.model = null;\n        this.time = options.time;\n        this.Tle = null;\n        this.heading = null;\n        this.onLayerChanged = options.onLayerChanged || null;\n    };\n    \n    /**\n     * \n     * @param {Object} collada model \n     * @param {Object} options\n     * @param {Position} position\n     */\n    setModel(model, options = DEFAULT_MODEL_OPTIONS, position) {\n        if(model) {\n            this.model = new Model(model, options, position);\n\n            this.removeAllRenderables();\n            this.addRenderable(this.model);\n            this.doRerender();\n        }\n    }\n\n    /**\n     * @param position {Position} Position of the satellite.\n     */\n    setPosition(position) {\n        if(position && this.model) {\n            this.model.position(position);\n        }\n    }\n\n    \n    /**\n     * @param position {Array.<lte>} Lte.\n     */\n    setTle(Tle) {\n        if(Tle) {\n            this.Tle = Tle;\n            this.update();\n        }\n    }\n    \n    /**\n     * @param position {Array.<lte>} Lte.\n     */\n    update() {\n        if(this.Tle && this.time) {\n            const satrec = EoUtils.computeSatrec(...this.Tle);\n            const position = EoUtils.getOrbitPosition(satrec, new Date(this.time));\n            this.setPosition(new Position(position.latitude, position.longitude, position.altitude));\n            if(this.model) {\n                this.alignWithOrbit(this.time, position, EoUtils.computeSatrec(...this.Tle), this._satelliteOptions.rotations, this.model._model);\n            }\n            this.doRerender();\n        }\n    }\n\n    alignWithOrbit(date, currentPosition, satrec, rotations, model) {\n        const now = date.getTime();\n        const nextPosition = EoUtils.getOrbitPosition(satrec, new Date(now + 10000));\n        const headingRad = EoUtils.headingAngleRadians(currentPosition.latitude, currentPosition.longitude, nextPosition.latitude, nextPosition.longitude);\n        const heading = EoUtils.rad2deg(headingRad);\n        this.heading = heading;\n\n        if(typeof this.onLayerChanged === 'function') {\n            this.onLayerChanged({\n                satKey: this.satName,\n                layerKey: this.key,\n                type: this.type,\n            }, {update: {\n                heading: this.heading\n            }});\n        }\n\n        const angle = (heading + rotations.headingAdd) * rotations.headingMultiply;\n\n        if (heading !== 0) {\n            if (rotations.headingAxis[0] === 1) {\n                model.xRotation = angle;\n            }\n            else if (rotations.headingAxis[1] === 1) {\n                model.yRotation = angle;\n            }\n            else if (rotations.headingAxis[2] === 1) {\n                model.zRotation = angle;\n            }\n        }\n    }\n\n    /**\n     * @param time {Date} Time of the satellite.\n     */\n    setTime(time) {\n        if(time) {\n            this.time = time;\n            this.update();\n        }\n    }\n    \n\tsetRerender(rerenderer) {\n\t\tif(typeof rerenderer === 'function') {\n\t\t\tthis._rerenderMap = rerenderer;\n\t\t}\n\t}\n\n\tdoRerender() {\n\t\tif(typeof this._rerenderMap === 'function') {\n\t\t\tthis._rerenderMap();\n\t\t}\n\t}\n}\n\nexport default SatelliteModelLayer;\n\n","// import WorldWind from 'webworldwind-esa';\nimport wwx from 'webworldwind-x';\nimport satConfig from './satConfig'\n// import SatelliteModel from './wwwx/shapes/satellites/Model';\nimport SatelliteModelLayer from './wwwxx/layer/SatelliteModelLayer'\n\n// const Location = WorldWind.Location,\n//     Sector = WorldWind.Sector,\n//     WmsLayer = WorldWind.WmsLayer;\n\n// class modelsLayer extends Layer {\n//     constructor(){\n//         super({\n//             service: \"https://tiles.maps.eox.at/wms\",\n//             layerNames: \"s2cloudless-2018\",\n//             title: \"Sentinel Cloudless Layer\",\n//             sector: new Sector(-90, 90, -180, 180),\n//             levelZeroDelta: new Location(45, 45),\n//             numLevels: 19,\n//             format: \"image/jpg\",\n//             opacity: 1,\n//             size: 256,\n//             version: \"1.3.0\"\n//         });\n//     }\n// }\n// const options = {\n//     rotations: layerConfig.satData.rotations,\n//     preRotations: layerConfig.satData.preRotations,\n//     scale: layerConfig.satData.scale,\n//     translations: layerConfig.satData.translations,\n//     ignoreLocalTransforms: layerConfig.satData.ignoreLocalTransforms,\n// }\n// const layer = new SatelliteModelLayer({key: layerKey, time: time, onLayerChanged}, options);\n// layer.setRerender(() => wwd.redraw());\n// getModel(`${layerConfig.satData.filePath}${layerConfig.satData.fileName}`, layerKey).then(\n//     (model) => {\n//         const satrec = EoUtils.computeSatrec(layerConfig.satData.tleLineOne, layerConfig.satData.tleLineTwo);\n//         const position = EoUtils.getOrbitPosition(satrec, new Date(time));\n//         layer.setModel(model, options, position)\n//         layer.setTle([layerConfig.satData.tleLineOne, layerConfig.satData.tleLineTwo]);\n//     }\n// );\n\n// export default SentinelCloudlessLayer;\n// const {\n//     Position,\n// } = WorldWind;\nconst {\n    EoUtils,\n} = wwx;\n\nvar satelliteLayers = []\n\nlet satend, satstart = null\n\n    for(let i=0 ; i<satConfig.length ; i++) {\n        console.log(satConfig[i].name)\n\n        const options = {\n            rotations: satConfig[i].rotations,\n            preRotations: satConfig[i].preRotations,\n            scale: satConfig[i].scale,\n            translations: satConfig[i].translations,\n            ignoreLocalTransforms: satConfig[i].ignoreLocalTransforms\n        }\n        satstart = new Date(satConfig[i].launchDate.getTime())\n        \n        if(satConfig[i].retirementDate == null) {\n            satend = new Date(satstart.getTime())\n            satend.setUTCFullYear( satend.getUTCFullYear()+20 )\n        } else {\n            satend = new Date(satConfig[i].retirementDate.getTime())\n        }\n        let layer = new SatelliteModelLayer({key: satConfig[i].key, time: new Date() }, options)\n\n        layer.timeRange = [satstart, satend]\n\n        const satrec = EoUtils.computeSatrec(satConfig[i].tleLineOne, satConfig[i].tleLineTwo);\n        const position = EoUtils.getOrbitPosition(satrec, new Date());\n\n        fetch(satConfig[i].filePath).then(response => {\n            return response.json();\n        }).then(satelliteData => {\n            layer.setModel(satelliteData, {\n                rotations: satConfig[i].rotations,\n                preRotations: satConfig[i].preRotations,\n                scale: satConfig[i].scale,\n                translations: satConfig[i].translations,\n                ignoreLocalTransforms: satConfig[i].ignoreLocalTransforms\n            }, position );\n        });\n\n        // layer.setModel(model, options, position)\n        layer.setTle([satConfig[i].tleLineOne, satConfig[i].tleLineTwo]);\n\n\n        satelliteLayers.push(layer)\n    }\n\n\nexport default satelliteLayers","import WorldWind from 'webworldwind-esa';\nimport WordWindX from 'webworldwind-x';\nconst {\n    EoUtils,\n} = WordWindX;\n\nconst {\n    ABSOLUTE,\n    Color,\n    Renderable,\n    Path,\n    ShapeAttributes\n} = WorldWind;\n\n\n/**\n * @exports Orbits\n */\nclass Orbits extends Renderable {\n    /**\n     * Constructs Orbits displaying the past and future position. The positions are calculated from the satrec. The\n     * orbits are displayed from now back to past and\n     * @param satrec {Object} SDG format representing the satellite.\n     * @param time {Date} Date for which the orbits will be displayed.\n     * @param timeWindow {Number} Amount of milliseconds for the time window.\n     * @param orbitPoints {Number} Amount of the Panther.\n     */\n    constructor(satrec, startTime = new Date(), endTime = new Date(), color, orbitPoints = 120) {\n        super();\n\n        if(!satrec) {\n            throw new Error('Orbits#constructor Satellite Record is missing.');\n        }\n\n        this._satrec = satrec;\n\n        // this._timeWindow = timeWindow;\n        this._orbitPoints = orbitPoints;\n\n        this._trail = this.trail(this.trailAttributes(color));\n        // this._futureTrail = this.trail(this.trailAttributes(new Color(1, 1, 0, 1)));\n\n        if(endTime.getTime() === startTime.getTime()) {\n            this._currentEndTime = new Date(startTime.getTime() + orbitPoints * 1000);\n            this._previousEndTime = new Date(startTime.getTime() + orbitPoints * 1000);\n        } else {\n            this._currentEndTime = endTime;\n            this._previousEndTime = endTime;\n        }\n\n        this._currentStartTime = startTime;\n        this._previousStartTime = startTime;\n\n        this.populate();\n    }\n\n    /**\n     * Update information about when and where the satellite was. It fully rebuilds the positions for the trails.\n     * @param satelliteRecord SPG format representing the satellite.\n     */\n    satrec(satelliteRecord, preventPopulate) {\n        if(!satelliteRecord) {\n            throw Error('No satellite record was provided');\n        }\n        this._satrec = satelliteRecord;\n        // This must signalize somehow that it needs to be recalculated.\n\n        if(preventPopulate !== true) {\n            this.populate();\n        }\n    }\n\n    /**\n     * Update current time for this set of orbits.\n     * @param startTime {Date} Start date for the orbit.\n     * @param endTime {Date} End date for the orbit.\n     */\n    time(startTime, endTime, preventUpdate) {\n        if(!startTime) {\n            throw Error('No startTime was provided');\n        }\n        if(!endTime) {\n            throw Error('No endTime was provided');\n        }\n        this._previousStartTime = this._currentStartTime;\n        this._previousEndTime = this._currentEndTime;\n        this._currentStartTime = startTime;\n        this._currentEndTime = endTime;\n\n        if(preventUpdate !== true) {\n            this.update();\n        }\n    }\n\n    /**\n     * Renders all trails belonging to this Orbit if it is enabled.\n     * @param dc {DrawContext} Shared state for one rendering.\n     */\n    render(dc) {\n        if(!this.enabled) {\n            return;\n        }\n\n        this._trail.render(dc);\n        // this._futureTrail.render(dc);\n    }\n\n    /**\n     * Updates the trails associated with this Orbit based on the current time and satrec. If there is no change in\n     * either of these parameters nothing changes.\n     * @param force {Boolean} If force, recalculate all positions\n     * @private\n     */\n    update(force = false) {\n        const startDate = this._currentStartTime.getTime();\n        const now = startDate;\n        const previousStartTime = this._previousStartTime.getTime();\n        const previousTime = previousStartTime;\n        const changeStart = startDate - previousStartTime;\n        const endDate = this._currentEndTime.getTime();\n        const previousEndTime = this._previousEndTime.getTime();\n        const changeEnd = endDate - previousEndTime;\n        if(changeStart === 0 && changeEnd === 0 && !force) {\n            return;\n        }\n\n        if(force) {\n            this.populate();\n            return;\n        }\n\n        const timeWindow = endDate - startDate;\n\n        const tick = Math.floor(timeWindow / this._orbitPoints);\n        let positionsToReplace = (Math.ceil(Math.abs(now - previousTime) / tick)) + Math.ceil(Math.abs(endDate - previousEndTime) / tick);\n        if(positionsToReplace > this._orbitPoints) {\n            this.populate();\n            return;\n        }\n\n        //if start change\n        //update start\n        if(changeStart) {\n            //change to future\n            if(changeStart > 0) {\n                //remove olded possitions than current startDate\n                let i = 0;\n                while (this._trail.positions[i].time < startDate) {\n                    this._trail.positions.shift();\n                }\n            }\n\n            if(changeStart < 0) {\n                //add possitions to startDate\n                const positionsToReplace = Math.ceil(Math.abs(now - previousTime) / tick);\n                for(let positionIndex = 0; positionIndex < positionsToReplace; positionIndex++) {\n                    const time = new Date(previousTime - positionIndex * tick);\n                    const position = EoUtils.getOrbitPositionWithPositionalData(this._satrec, time).position;\n                    position.time = time.getTime();\n                    this._trail.positions = [position, ...this._trail.positions];\n                }\n            }\n        }\n        \n\n        //if end change\n        //update end\n        if(changeEnd) {\n            //change to future\n            if(changeEnd > 0) {\n                //change to future\n                const positionsToReplace = Math.ceil(Math.abs(endDate - previousEndTime) / tick);\n                for(let positionIndex = 0; positionIndex < positionsToReplace; positionIndex++) {\n                    const time = new Date(previousEndTime + positionIndex * tick);\n                    const position = EoUtils.getOrbitPositionWithPositionalData(this._satrec, time).position;\n                    position.time = time.getTime();\n                    this._trail.positions.push(position);\n                }\n            }\n\n            if(changeEnd < 0) {\n                //remove olded possitions than current endDate\n                let i = this._trail.positions.length - 1;\n                while (this._trail.positions[i].time > endDate) {\n                    this._trail.positions.pop();\n                    i = this._trail.positions.length - 1;\n                }\n            }\n        }\n        this._trail.positions = [...this._trail.positions];\n    }\n\n    populate() {\n        const startDate = this._currentStartTime.getTime();\n        const endDate = this._currentEndTime.getTime();\n        const timeWindow = endDate - startDate;\n        const tick = Math.floor(timeWindow / this._orbitPoints);\n\n        const positions = [];\n        for(let positionIndex = 0; positionIndex < this._orbitPoints; positionIndex++) {\n            const time = new Date(startDate + positionIndex * tick);\n            const position = EoUtils.getOrbitPositionWithPositionalData(this._satrec, time).position;\n            position.time = time.getTime();\n            positions.push(position);\n        }\n        this._trail.positions = [...positions];\n    }\n\n    /**\n     * Create the relevant shape which is used to display the orbit on the globe.\n     * @private\n     * @param attributes\n     */\n    trail(attributes) {\n        const trail = new Path([]);\n        trail.enabled = true;\n        trail.altitudeMode = ABSOLUTE;\n        trail.numSubSegments = 1;\n        trail.attributes = attributes;\n        // trail.extrude = true\n        return trail;\n    }\n\n    /**\n     * Create attributes for the proper visualization of the Orbit in more than one color.\n     * @private\n     * @param color\n     */\n    trailAttributes(color) {\n        const attributes = new ShapeAttributes(null);\n        attributes.outlineColor = color;\n        attributes.outlineWidth = 2;\n        attributes.drawOutline = true;\n        attributes.drawInterior = true;\n        return attributes;\n    }\n}\n\nexport default Orbits;","import WorldWind from 'webworldwind-esa';\nimport Orbits from './wwwxx/shapes/Orbits';\nconst {\n    RenderableLayer,\n    Color\n} = WorldWind;\n\n/**\n * Class extending WorldWind.RenderableLayer. It`s possible to set time of orbit.\n * @param options {Object}\n * @param options.key {String}\n * @param options.time {Date} Selected time\n * @param options.currentTime {Date} \n * @param options.opacity {Number} \n * @augments WorldWind.RenderableLayer\n * @constructor\n */\nclass OrbitLayer extends RenderableLayer {\n\tconstructor(options) {\n        super(options);\n        this._rerenderMap = null;\n        this.satRec = null;\n        this.key = options.key;\n        this.timeWindow = 1000 * 60 * 15\n        this.opacity = Number.isFinite(options.opacity) && options.opacity > -1 && options.opacity < 101 ? options.opacity : 100;\n        this._beforeCurrentOrbit = new Orbits(options.satRec, new Date(), new Date(), new Color(213 / 255, 214  / 255, 210 / 255, 0.5));\n        this._afterCurrentOrbit = new Orbits(options.satRec, new Date(), new Date(), new Color(1, 1, 0, 0.5));\n        this.addRenderable(this._beforeCurrentOrbit);\n        // this.addRenderable(this._afterCurrentOrbit);\n        this.currentTime = null;\n        this.selectTime = null;\n        this.endTime = null;\n        this.endTime = null;\n        this.satRec = null;\n        this.setSatRec(options.satRec);\n        this.setTime(options.currentTime, options.time);\n        \n    };\n\n    \n    /**\n     * @param {Array.<lte>} satRec  Lte.\n     */\n    setSatRec(satRec, preventUpdate) {\n        if(satRec) {\n            // this.satRec = satRec;\n            // console.log(satRec)\n\n            this._beforeCurrentOrbit.satrec(satRec, true);\n            if(preventUpdate !== true) {\n                this._beforeCurrentOrbit.update(true);\n            }\n            this._afterCurrentOrbit.satrec(satRec, true);\n            if(preventUpdate !== true) {\n                this._afterCurrentOrbit.update(true);\n            }\n            this.doRerender();\n        }\n    }\n\n    /**\n     * @param {Date} time Time of the orbit.\n     */\n     setTime(selectTime) {\n        if(selectTime) {\n            // this.currentTime = currentTime;\n            this.selectTime = selectTime;\n\n            this.startTime = new Date(selectTime.getTime() - this.timeWindow);\n            this.endTime = new Date(selectTime.getTime() + this.timeWindow);\n\n            // this.removeRenderable(this._beforeCurrentOrbit);\n            // this.removeRenderable(this._afterCurrentOrbit);\n\n            this._beforeCurrentOrbit.time(this.startTime, this.selectTime, false);\n            // this._afterCurrentOrbit.time(this.selectTime, this.endTime, false);\n            // this.addRenderable(this._beforeCurrentOrbit);\n            // this.addRenderable(this._afterCurrentOrbit);\n\n            this.doRerender();\n        }\n    }\n\n    setTime2(currentTime, selectTime, preventUpdate) {\n        if(currentTime && selectTime) {\n            this.currentTime = currentTime;\n            this.selectTime = selectTime;\n\n            this.startTime = new Date(selectTime.getTime() - this.timeWindow);\n            this.endTime = new Date(selectTime.getTime() + this.timeWindow);\n\n            this.removeRenderable(this._beforeCurrentOrbit);\n            this.removeRenderable(this._afterCurrentOrbit);\n\n            if(currentTime.getTime() < this.startTime.getTime()) {\n                //all in future\n                this._afterCurrentOrbit.time(this.startTime, this.endTime, preventUpdate);\n                this.addRenderable(this._afterCurrentOrbit);\n            } else if(this.startTime.getTime() < currentTime.getTime() && currentTime.getTime() < this.endTime.getTime()) {\n                //select time visible\n                this._beforeCurrentOrbit.time(this.startTime, currentTime, preventUpdate);\n                this._afterCurrentOrbit.time(currentTime, this.endTime, preventUpdate);\n                this.addRenderable(this._beforeCurrentOrbit);\n                this.addRenderable(this._afterCurrentOrbit);\n            } else if(currentTime.getTime() > this.endTime.getTime()) {\n                //all in past\n                this._beforeCurrentOrbit.time(this.startTime, this.endTime, preventUpdate);\n                this.addRenderable(this._beforeCurrentOrbit);\n            }\n\n            this.doRerender();\n        }\n    }\n\n    forceUpdate() {\n        this._afterCurrentOrbit.update(true);\n        this._beforeCurrentOrbit.update(true);\n    }\n    \n\tsetRerender(rerenderer) {\n\t\tif(typeof rerenderer === 'function') {\n\t\t\tthis._rerenderMap = rerenderer;\n\t\t}\n\t}\n\n\tdoRerender() {\n\t\tif(typeof this._rerenderMap === 'function') {\n\t\t\tthis._rerenderMap();\n\t\t}\n\t}\n}\n\nexport default OrbitLayer;\n\n","// import WorldWind from 'webworldwind-esa';\nimport wwwx from 'webworldwind-x';\nimport satConfig from './satConfig'\nimport OrbitLayer from './OrbitLayer'\n// import Orbits from './wwwxx/util/Orbits';\n// import Orbits from './wwwxx/shapes/Orbits'\n\n\nconst {\n    EoUtils,\n} = wwwx;\n\nvar orbitLayers = []\n    let satstart, satend = null\n    for(let i=0 ; i<satConfig.length ; i++) {\n        satstart = new Date(satConfig[i].launchDate.getTime())\n        if(satConfig[i].retirementDate == null) {\n            satend = new Date(satstart.getTime())\n            satend.setUTCFullYear( satend.getUTCFullYear()+20 )\n        } else {\n            satend = new Date(satConfig[i].retirementDate.getTime())\n        }\n\n\n        let layerKey = satConfig[i].key\n        let satrec = EoUtils.computeSatrec(satConfig[i].tleLineOne, satConfig[i].tleLineTwo);\n        // let satrec = {tle1: satConfig[i].tleLineOne, tle2: satConfig[i].tleLineTwo}\n        let layer = new OrbitLayer({key: layerKey, satRec: satrec, time: new Date(), currentTime: new Date(), opacity: 0.7})\n        \n        layer.timeRange = [satstart, satend]\n        layer.displayName = 'Orbit'\n        orbitLayers.push(layer)\n    }\n\n\nexport default orbitLayers","import WorldWind from \"webworldwind-esa\";\n\nexport const bgLayers = [\n    {\n        service: \"https://tiles.maps.eox.at/wms\",\n        layerNames: \"s2cloudless-2018\",\n        title: \"s2cloudless-2018\",\n        numLevels: 19,\n        format: \"image/png\",\n        size: 256,\n        sector: WorldWind.Sector.FULL_SPHERE,\n        levelZeroDelta: new WorldWind.Location(90, 90)\n    },\n    {\n        service: \"https://tiles.esa.maps.eox.at/wms\",\n        layerNames: \"s2cloudless-2018\",\n        title: \"s2cloudless-2018 esa\",\n        numLevels: 19,\n        format: \"image/png\",\n        size: 256,\n        sector: WorldWind.Sector.FULL_SPHERE,\n        levelZeroDelta: new WorldWind.Location(90, 90)\n    },\n    {\n        service: \"https://tiles.esa.maps.eox.at/wms\",\n        layerNames: \"osm\",\n        title: \"osm\",\n        numLevels: 19,\n        format: \"image/png\",\n        size: 256,\n        sector: WorldWind.Sector.FULL_SPHERE,\n        levelZeroDelta: new WorldWind.Location(90, 90)\n    },\n    {\n        service: \"https://tiles.esa.maps.eox.at/wms\",\n        layerNames: \"terrain-light\",\n        title: \"terrain-light\",\n        numLevels: 19,\n        format: \"image/png\",\n        size: 256,\n        sector: WorldWind.Sector.FULL_SPHERE,\n        levelZeroDelta: new WorldWind.Location(90, 90)\n    },\n    {\n        service: \"https://tiles.esa.maps.eox.at/wms\",\n        layerNames: \"terrain-light\",\n        title: \"terrain-light\",\n        numLevels: 19,\n        format: \"image/png\",\n        size: 256,\n        sector: WorldWind.Sector.FULL_SPHERE,\n        levelZeroDelta: new WorldWind.Location(90, 90)\n    },\n    {\n        service: \"https://s2maps-tiles.eu/wms\",\n        layerNames: \"s2cloudless-2021\",\n        title: \"s2cloudless-2021\",\n        numLevels: 19,\n        format: \"image/png\",\n        size: 256,\n        sector: WorldWind.Sector.FULL_SPHERE,\n        levelZeroDelta: new WorldWind.Location(90, 90)\n    }\n    \n]\nexport const ovLayers = [\n\n    {\n        service: \"https://tiles.maps.eox.at/wms\",\n        layerNames: \"hydrography\",\n        title: \"hydrography\",\n        numLevels: 19,\n        format: \"image/png\",\n        size: 256,\n        sector: WorldWind.Sector.FULL_SPHERE,\n        levelZeroDelta: new WorldWind.Location(90, 90)\n    },\n    {\n        service: \"https://tiles.maps.eox.at/wms\",\n        layerNames: \"overlay_bright\",\n        title: \"overlay_bright\",\n        numLevels: 19,\n        format: \"image/png\",\n        size: 256,\n        sector: WorldWind.Sector.FULL_SPHERE,\n        levelZeroDelta: new WorldWind.Location(90, 90)\n    },\n    {\n        service: \"https://tiles.esa.maps.eox.at/wms\",\n        layerNames: \"overlay\",\n        title: \"overlay\",\n        numLevels: 19,\n        format: \"image/png\",\n        size: 256,\n        sector: WorldWind.Sector.FULL_SPHERE,\n        levelZeroDelta: new WorldWind.Location(90, 90)\n    }\n]\n\n\n","import WorldWind from \"webworldwind-esa\";\nimport './wwwxx/www-overrides/DrawContext';\nimport './wwwxx/www-overrides/SurfaceShapeTileBuilder';\nimport './wwwxx/www-overrides/SurfaceShapeTile';\nimport './wwwxx/www-overrides/TiledImageLayer';\nimport './wwwxx/www-overrides/GeoJSONParser';\nimport  WorldWindow  from './wwwxx/WorldWindow';\nimport  { useState, useEffect, useRef } from \"react\";\nimport StarFieldLayer from \"./wwwxx/layer/starfield/StarFieldLayer\" // import a custom one as the base url is not set when using wwwx\nimport TexturedSurfacePolygon from './wwwxx/textured/TexturedSurfacePolygon'\n// import wwwx from \"webworldwind-x\";\n\n// import modelsLayer from './satelliteLayer';\nimport satelliteLayers from './satelliteLayers';\nimport orbitLayers from './orbitLayers';\n\nimport {bgLayers, ovLayers} from './layerConfig'; \n\nimport { OAuth2Client, OAuth2Fetch } from '@badgateway/oauth2-client'    \n\n\nexport function useEww({ id }) {\n    \n    // const TRAIL_PRODUCT = 1000 * 60 * 60 * 24 //1 day\n    const TRAIL_PRODUCT = 1000 * 60 * 60 * 24 * 10000 //1 day\n    const HEAD_PRODUCT = 1000 * 60 * 60 * 24 * 10000 //1 day\n    const TRAIL_QUICKLOOK = 1000 * 60 * 60 * 24  //1 hour\n    const TRAIL_QUICKLOOKWMS = 1000 * 60 * 60 * 24 //1 day\n\n    const ProductTrail = useRef(1000 * 60 * 60 * 24 * 10000)\n    const QLTrail = useRef(1000 * 60 * 60 )\n    const ProductHead = useRef(1000 * 60 * 60 * 24 * 10000)\n\n    const ZINDEX_QUICKLOOKWMS = 900\n    const ZINDEX_QUICKLOOKS = 800\n    const ZINDEX_STARFIELD = 100\n    const ZINDEX_ATMOSPHERE = 600\n    const ZINDEX_PRODUCTS = 700\n    const ZINDEX_BACKGROUND = 500\n    const ZINDEX_OVERLAY = 1000\n    const ZINDEX_SATELLITE = 200\n  \n    const eww = useRef(null)\n   \n    // const [aoi, setAoi] = useState({type: null, value: null})\n    const [aoi, setAoi] = useState('')\n    const [ewwstate, setEwwState] = useState({})\n    const bg = useRef(1)\n    const ov = useRef(0)\n    const modelOn = useRef(false)\n    const satList = useRef([])\n    const atm = useRef(false)\n    const star = useRef(false)\n    const na = useRef(false)\n    const ge = useRef(false)\n    const qu = useRef(false)\n    const qw = useRef(false)\n    const dem = useRef(false)\n    const proj = useRef(0)\n    // const filter = useRef([])\n    // const [filter,setfilter] = useState(true)\n\n    const s2lut = useRef([])\n\n    const lastepoch = useRef(new Date())\n\n    // QL loader queue\n    const qlqueue = useRef([])\n    const qlcontroller = useRef(null)\n    \n    const color = useRef()\n\n    // Initialise mapsettings\n    function initMap({ clon, clat, alt, atmosphere, starfield, satellites, overlay, satelliteList, background, names, dem, projection}) {\n        eww.current.navigator.range = alt\n        toggleAtmosphere(atmosphere)\n        toggleStarfield(starfield)\n        toggleModel(satellites,satelliteList)\n        toggleBg(background)\n        toggleNames(names)\n        toggleOv(overlay)\n        toggleDem(dem)\n        toggleProjection(projection)\n        moveTo(clat, clon, alt)\n        // eww.current.redraw();\n        setTime()\n    }\n\n    // Turn the globe up north\n    function northUp() {\n        const wwd = eww.current\n        let headingIncrement = wwd.navigator.heading / -20;\n        let runOperation = () => {\n            if (Math.abs(wwd.navigator.heading) > Math.abs(headingIncrement)) {\n                wwd.navigator.heading += headingIncrement;\n                setTimeout(runOperation, 10);\n            } else {\n                wwd.navigator.heading = 0;\n            }\n            wwd.redraw();\n        };\n        setTimeout(runOperation, 10);\n    }\n\n    //toggle atmosphere\n    function toggleAtmosphere(bool) {\n        console.log('toggleAtmosphere: '+bool)\n        let la = getLayerByName('Atmosphere')\n        atm.current = (bool!== null)?bool:!atm.current\n        la.enabled = atm.current\n        eww.current.redraw();\n    }\n\n    //toggle model\n    function toggleModel(bool, satelliteList) {\n        // if(satelliteList)\n        modelOn.current = (bool!= null)?bool:!modelOn.current\n        satList.current = satelliteList\n\n        enableSatelliteLayers(lastepoch.current,modelOn.current,satList.current)\n        enableOrbitLayers(lastepoch.current,modelOn.current,satList.current)\n\n        eww.current.redraw();\n    }\n\n    //toggle starField\n    function toggleStarfield(bool) {\n        console.log('toggleStarfield: '+bool)\n        let ls = getLayerByName('StarField')\n        star.current = (bool!= null)?bool:!star.current\n        ls.enabled = star.current\n        eww.current.redraw();\n    }\n\n    //toggle name overlay\n    function toggleNames(bool) {\n        // console.log('toggleNames: '+bool)\n        let lo = getLayerByName('overlay_bright')\n        na.current = (bool !== null)?bool:!na.current\n        lo.enabled = na.current\n        sortLayers()\n\n        eww.current.redraw()\n    }\n\n    //toggle products and quicklooks layers\n    function toggleGeojson(bool) {\n        // console.log('toggleGeojson: '+bool)\n        let lp = getLayerByName('Products')\n        ge.current = (bool !== null)?bool:!ge.current\n        lp.enabled = ge.current\n        eww.current.redraw()\n    }\n\n    function toggleQuicklooks(bool) {\n        // console.log('toggleQuicklooks: '+bool)\n        let ql = getLayerByName('Quicklooks')\n        qu.current = (bool !== null)?bool:!qu.current\n        ql.enabled = qu.current\n        eww.current.redraw()\n    }\n\n    function setColor(value) {\n        color.current = WorldWind.Color.colorFromHex(value.substring(1)+'99')\n        let products = getLayerByName('Products').renderables\n        for( let i = 0; i < products.length; i++) {\n            products[i].highlightAttributes.interiorColor = color.current\n            products[i].highlightAttributes.outlineColor = new WorldWind.Color(0, 0, 1, 1);\n\n\n        }\n        eww.current.redraw()\n    }\n\n    function setMode(value) {\n        // console.log('set mode'+value)\n        switch (value) {\n            case \"point\":\n                ProductHead.current = 0\n                // ProductHead.current = 1000 * 60 * 60 * 24 *12\n                ProductTrail.current = 1000 * 60 * 60 * 24 \n                // QLTrail.current = 1000 * 60 * 60 * 24 *12\n                break;\n            case \"global\":\n                ProductHead.current = 1000 * 60 * 60 * 24 * 10000\n                ProductTrail.current =  1000 * 60 * 60 * 24 * 10000\n                break;\n            case \"animated\":\n                ProductHead.current = 0\n                ProductTrail.current =  1000 * 60 * 60 * 24 * 60\n                break;\n            default:\n                ProductHead.current = 1000 * 60 * 60 * 24 * 10000\n                ProductTrail.current =  1000 * 60 * 60 * 24 * 10000\n        }\n    }\n\n\n\n    function toggleBg(background) {\n        let bgindex = -1\n        background = (background === null)?  (bg.current + 1)%bgLayers.length : background % bgLayers.length\n        bg.current = background\n        for(let i=0 ; i<eww.current.layers.length ; i++) {\n            if(eww.current.layers[i].type === 'background' && eww.current.layers[i].type) {\n                bgindex += 1\n                eww.current.layers[i].enabled = (bgindex === background) ? true : false\n            }\n        }\n        eww.current.redraw();\n    }\n\n\n    // to be redone!!\n    function toggleOv(overlay) {\n        // console.log(overlay+' '+(ovLayers.length+1)+' '+ov.current)\n        // console.log((ov.current + 1)%(ovLayers.length+1))\n        let ovindex = -1\n        ov.current = (overlay == null)?  (ov.current + 1)%(ovLayers.length+1) : overlay % (ovLayers.length+1)\n        \n        for(let i=0 ; i<eww.current.layers.length ; i++) {\n            if(eww.current.layers[i].type === 'overlay' && eww.current.layers[i].type) {\n                ovindex +=1\n                eww.current.layers[i].enabled = (ovindex === ov.current) ? true : false\n            }\n        }\n        eww.current.redraw();\n    }\n    \n    //toggle DEM \n    function toggleDem(bool) {\n        // console.log('toogleDem: '+bool)\n        dem.current = (bool !== null)?bool:!dem.current\n        var elevationModel\n        if(dem.current) {\n            console.log('Switching to Copernicus Dem')\n            elevationModel = new WorldWind.ElevationModel();\n            elevationModel.addCoverage(new WorldWind.TiledElevationCoverage({\n                coverageSector: WorldWind.Sector.FULL_SPHERE,\n                resolution: 0.008333333333333,\n                retrievalImageFormat: \"image/tiff\",\n                minElevation: -11000,\n                maxElevation: 8850,\n                urlBuilder: new WorldWind.WcsTileUrlBuilder(\"https://dem.esa.maps.eox.at/elevation\", \"copdem\", \"2.0.1\")\n                }));    \n            \n        } else {\n            console.log('Switching to NASA Dem')\n            elevationModel = new WorldWind.EarthElevationModel()\n        }\n        eww.current.globe.elevationModel = elevationModel\n        eww.current.redraw();\n    }\n\n    function toggleProjection(projection) {\n\n        let supportedProjections = [ \"3D\", \"Equirectangular\", \"Mercator\",\"North Polar\",\"South Polar\"]\n        let nbproj = supportedProjections.length\n        proj.current = (projection === null) ? (proj.current + 1)%nbproj : projection%nbproj\n\n        switch (supportedProjections[proj.current]) {\n            case \"3D\":\n                eww.current.globe.projection = new WorldWind.ProjectionWgs84();\n                break;\n            case \"Equirectangular\":\n                eww.current.globe.projection = new WorldWind.ProjectionEquirectangular();\n                break;\n            case \"Mercator\":\n                eww.current.globe.projection = new WorldWind.ProjectionMercator();\n                break;\n            case \"North Polar\":\n                eww.current.globe.projection = new WorldWind.ProjectionPolarEquidistant(\"North\");\n                break;\n            case \"South Polar\":\n                eww.current.globe.projection = new WorldWind.ProjectionPolarEquidistant(\"South\");\n                break;\n            default:\n            eww.current.globe.projection = new WorldWind.ProjectionWgs84();\n        }\n        eww.current.redraw() \n    }\n\n    const sortLayers = ()=>{\n        eww.current.layers.sort((a, b) => {\n            return a.zIndex - b.zIndex;\n        })\n    }\n    \n    const setFilter = (filter)=>{\n        if (filter == []) return\n        console.log(filter)\n        // setfilter(filter)\n        let layer = getLayerByName('Products')\n        for (let j = 0; j < layer.renderables.length; j++) {\n            layer.renderables[j].filtered = !filterRenderable(layer.renderables[j],filter)\n        }\n        enableRenderables(layer, lastepoch.current, ProductHead.current, ProductTrail.current)\n\n        let tics = getTics(layer)\n\n        layer = getLayerByName('Quicklooks')\n        for (let j = 0; j < layer.renderables.length; j++) {\n            layer.renderables[j].filtered = !filterRenderable(layer.renderables[j],filter)\n        }\n        enableRenderables(layer, lastepoch.current, 0, QLTrail.current)\n\n\n        setEwwState((ewwstate) => { return {...ewwstate, tics: tics}})\n        eww.current.redraw() \n    }\n \n    function  getViewPolygon () {\n        let view = eww.current.viewport\n        let area = {}\n        let polygon = ''\n        // console.log('view: ' + view.x + '/' + view.y + '/' + view.width + '/' + view.height);\n\n        let bl ;\n        try { \n            bl =  eww.current.pickTerrain(eww.current.canvasCoordinates(view.x, view.y + view.height)).terrainObject().position\n            bl.latitude = Math.round(bl.latitude * 10000)/10000\n            bl.longitude = Math.round(bl.longitude * 10000)/10000\n        }\n        catch(err) {bl = null;}\n\n\n        let tr ;\n        try { \n            tr = eww.current.pickTerrain(eww.current.canvasCoordinates(view.x + view.width, view.y)).terrainObject().position\n            tr.latitude = Math.round(tr.latitude * 10000)/10000\n            tr.longitude = Math.round(tr.longitude * 10000)/10000\n        }\n        catch(err) {tr = null;}\n\n        //console.log(bl.longitude+'/'+bl.latitude+'/'+tr.longitude+'/'+tr.latitude);\n        if(bl == null || tr == null )  {\n            //   area = {type:\"bbox\", value:\"-180,-90,180,90\"};\n              polygon = ''\n        } else {\n              area = {\n                    type: \"bbox\",\n                    value:\n                           bl.longitude +','\n                          + bl.latitude +','\n                          +tr.longitude +','\n                          +tr.latitude\n              };\n\n              polygon = 'POLYGON((' \n                + bl.longitude + ' ' + bl.latitude + ',' \n                + tr.longitude + ' ' + bl.latitude + ',' \n                + tr.longitude + ' ' + tr.latitude + ',' \n                + bl.longitude + ' ' + tr.latitude + ',' \n                + bl.longitude + ' ' + bl.latitude + '))' \n        }\n        return polygon\n\n    }\n    \n    const addGeojson = (url,epoch) => {\n\n        // console.log('adding geo: ')\n\n        function shapeConfigurationCallback(geometry, properties) {\n            let configuration = {};\n            configuration.userProperties = properties\n    \n            \n            //placemarkAttributes.imageSource = whiteDot;\n    \n    \n            if (geometry.isPointType() || geometry.isMultiPointType()) {\n                let placemarkAttributes = new WorldWind.PlacemarkAttributes(null);\n                placemarkAttributes.imageScale = 10;\n                placemarkAttributes.imageColor = new WorldWind.Color(0, 1, 1, 0.2);\n                placemarkAttributes.labelAttributes.offset = new WorldWind.Offset(\n                WorldWind.OFFSET_FRACTION, 5,\n                WorldWind.OFFSET_FRACTION, 5);\n                configuration.attributes = new WorldWind.PlacemarkAttributes(placemarkAttributes);\n                \n            } else if (geometry.isLineStringType() || geometry.isMultiLineStringType()) {\n                console.log('config call back line string')\n                configuration.attributes = new WorldWind.ShapeAttributes(null);\n                configuration.attributes.drawOutline = true;\n                configuration.attributes.outlineColor = new WorldWind.Color(\n                    0.1 * configuration.attributes.interiorColor.red,\n                    0.3 * configuration.attributes.interiorColor.green,\n                    0.7 * configuration.attributes.interiorColor.blue,\n                    1\n                );\n                configuration.attributes.outlineWidth = 1;\n\n                configuration.highlightAttributes = new WorldWind.ShapeAttributes(configuration.attributes);\n                configuration.highlightAttributes.interiorColor = color.current;\n                configuration.highlightAttributes.outlineColor = new WorldWind.Color(0, 0, 1, 1);\n                configuration.highlightAttributes.outlineWidth = 5;\n                configuration.highlightAttributes.drawOutline = true\n\n            } else if (geometry.isPolygonType() || geometry.isMultiPolygonType()) {\n                configuration.attributes = new WorldWind.ShapeAttributes(null);\n                configuration.attributes.interiorColor = new WorldWind.Color(1, 0, 0, 0.2);\n                // configuration.attributes.outlineColor = new WorldWind.Color(1, 0, 1, 0.3);\n                // configuration.attributes.outlineWidth = 5;\n\n                configuration.highlightAttributes = new WorldWind.ShapeAttributes(configuration.attributes);\n                configuration.highlightAttributes.interiorColor = color.current;\n                configuration.highlightAttributes.outlineColor = new WorldWind.Color(0, 0, 1, 1);\n                configuration.highlightAttributes.outlineWidth = 5;\n                configuration.highlightAttributes.drawOutline = true\n\n                // configuration.attributes.applyLighting = true;\n                // configuration.attributes.imageSource = properties.quicklookUrl\n\n            }\n    \n            //console.log(configuration.attributes);\n            return configuration;\n        }\n\n        function setProductTimeRange(productlayer) {\n            for(let i=0; i<productlayer.renderables.length; i++) {\n                let acq = productlayer.renderables[i].userProperties.earthObservation.acquisitionInformation[0].acquisitionParameter\n                let start = new Date(acq.acquisitionStartTime.getTime() )\n                let end = new Date(acq.acquisitionStopTime.getTime())\n                productlayer.renderables[i].timeRange = [start, end]\n            }\n        }\n        \n        function loadCompleteCallback() {\n            // console.log(renderableLayer)\n            setProductTimeRange(productlayer)\n            let closestrenderable = enableRenderables(productlayer, epoch, ProductHead.current, ProductTrail.current)\n            let tics = getTics(productlayer)\n            // let newtics = []\n            // newtics = state.geojson.features.map( (item) => {\n            // return item.properties.earthObservation.acquisitionInformation[0].acquisitionParameter.acquisitionStartTime.getTime()\n            sortLayers()\n            setEwwState((ewwstate) => { return {...ewwstate, closestRenderable: closestrenderable, tics: tics}})\n\n\n            eww.current.redraw();\n        }\n    \n        let productlayer = getLayerByName('Products')\n        // we use a custom version of GeoJson Parser which only creates TexturedSurfacePolygon renderables extending our custom SurfaceShape\n        // !!! Only Polygon and multi-Polygon geometries are supported. Other types will cause the worldwind engine to crash in endless loops...\n        let geoJson = new WorldWind.GeoJSONParser(url);\n        geoJson.load(loadCompleteCallback, shapeConfigurationCallback, productlayer);\n    }\n\n    function removeGeojson() {\n\n        getLayerByName('Products').removeAllRenderables()\n        setEwwState((ewwstate) => { return {...ewwstate, closestRenderable: null, tics: []}})\n        eww.current.redraw();\n      }\n\n    function addWMS() {\n    }\n\n    async function addQuicklookWMS(renderable) {\n        // console.log(renderable)\n        // console.log(renderable.computeSectors(eww.current.drawContext))\n        // console.log(WorldWind.Sector.FULL_SPHERE)\n\n        // for S2:  \n        // https://view.onda-dias.eu/instance00/ows?&service=WMS&request=GetMap&layers=S2L1C_TRUE_COLOR&styles=&format=image/png&transparent=true&version=1.1.1&width=1500&height=1000&srs=EPSG:4326&bbox=12.357903,41.800495,12.625694,41.984760\n\n        // for S1:  \n        // https://view.onda-dias.eu/instance00/ows?&service=WMS&request=GetMap&layers=S1B_IW_GRDH_1SDV_20190520T050758_20190520T050823_016323_01EB81_6EB6&styles=&format=image%2Fpng&transparent=true&version=1.1.1&width=256&height=256&srs=EPSG%3A3857&bbox=2035059.441064533,7044436.526761846,2191602.4749925737,7200979.560689885\n        let layername = null\n        if(renderable.userProperties.title.indexOf('MSIL1C') >= 0) layername = 'S2L1C_TRUE_COLOR'\n        if(renderable.userProperties.title.indexOf('MSIL2A') >= 0) layername = 'S2L2A_TRUE_COLOR'\n        if(renderable.userProperties.title.indexOf('GRD') >= 0) layername = 'S1_IW_GRDH_FullResolution'\n\n        if (layername === null) return\n\n        let wmsConfigQL = {\n            service: \"https://view.onda-dias.eu/instance00/ows\",\n            // layerNames: renderable.userProperties.title,\n            layerNames: layername,\n            // layerNames: 'S1_IW_GRDH_FullResolution',\n            \n            // title: renderable.userProperties.title,\n            title: 'QuicklookWMS',\n            numLevels: 19,\n            format: \"image/png\",\n            size: 256,\n            sector: renderable.sector,\n            // sector: renderable.sector,\n            // sector: WorldWind.Sector.FULL_SPHERE,\n            levelZeroDelta: new WorldWind.Location(90, 90)\n        }\n\n        // eww.current.removeLayer(getLayerByName('quicklookWMS') )\n        removeQuicklookWMS()\n        let qllayer =  new WorldWind.WmsLayer(wmsConfigQL, renderable.timeRange[1].toJSON())\n        let timerange = []\n        timerange[1] = renderable.timeRange[1]\n        timerange[0] = new Date(timerange[1].getTime() - TRAIL_QUICKLOOKWMS)\n        qllayer.timeRange = timerange\n        qllayer.zIndex = ZINDEX_QUICKLOOKWMS \n        qllayer.maxActiveAltitude = 3000000\n        eww.current.addLayer(qllayer)\n        sortLayers()\n        eww.current.redraw()\n        console.log(eww.current.layers)\n    }\n\n    function removeQuicklookWMS() {\n        eww.current.removeLayer(getLayerByName('QuicklookWMS'))\n        eww.current.redraw()\n    }\n\n\n    function toggleQuicklookWMS(bool) {\n        console.log('QuicklookWMS: '+bool)\n        let ql = getLayerByName('QuicklookWMS')\n        if (!ql) return\n        qw.current = (bool !== null)?bool:!qw.current\n        ql.enabled = qw.current\n        eww.current.redraw()\n    }\n\n\n    function getLayerByName(name) {\n        for (let i = 0; i < eww.current.layers.length; i++) {\n            // console.log('display name: '+eww.current.layers[i].displayName)\n            if (eww.current.layers[i].displayName === name) return eww.current.layers[i]\n        }\n        return null\n    }\n\n    function getIndexOfRenderable(renderable,layer) {\n        for (let j = 0; j < layer.renderables.length; j++) {\n            if (layer.renderables[j].userProperties.title === renderable.userProperties.title) return j\n        }\n        return null\n    }\n\n    function enableSatelliteLayers(epoch,bool,satlist) {\n        for(let l=0 ; l<satelliteLayers.length ; l++) {\n            if(satelliteLayers[l].timeRange[0].getTime() > epoch || satelliteLayers[l].timeRange[1].getTime() < epoch) {\n                satelliteLayers[l].enabled = false\n\n                // console.log('satstart: '+satelliteLayers[l].timeRange[0]+'  /  '+(new Date(epoch)))\n            } else {\n                satelliteLayers[l].setTime(new Date(epoch))\n                satelliteLayers[l].enabled = satlist.includes(satelliteLayers[l].key) && bool\n            }\n        }\n        // console.log(satelliteLayers)\n    }\n\n    function enableOrbitLayers(epoch,bool,satlist) {\n        for(let l=0 ; l<orbitLayers.length ; l++) {\n            if(orbitLayers[l].timeRange[0].getTime() > epoch || orbitLayers[l].timeRange[1].getTime() < epoch) {\n                orbitLayers[l].enabled = false\n                // console.log('satstart: '+satelliteLayers[l].timeRange[0]+'  /  '+(new Date(epoch)))\n            } else {\n                orbitLayers[l].setTime(new Date(epoch))\n                orbitLayers[l].enabled = satlist.includes(satelliteLayers[l].key) && bool\n            }\n        }\n    }\n\n    function enableLayer(layer, epoch, trailduration) {\n        return\n        if(layer === null) return\n        if(epoch !== 0) {\n            let visibilityend = layer.timeRange[1].getTime()\n            layer.enabled = (epoch-trailduration < visibilityend && visibilityend <= epoch) ? true : false   \n        } else {\n            layer.enabled = false\n        }         \n    }\n\n    function getTics(layer) {\n        let newtics = []\n        for(let i = 0 ; i < layer.renderables.length ; i++) {\n            if(!layer.renderables[i].filtered || layer.renderables[i].filtered !== true ) {\n                newtics.push(layer.renderables[i].userProperties.earthObservation.acquisitionInformation[0].acquisitionParameter.acquisitionStartTime.getTime())\n            }\n        }\n        // console.log(newtics)\n        return newtics\n    }\n\n    function filterRenderable(renderable,filter) {\n        // let newtics = []\n        // if(!state.geojson) return\n        // newtics = state.geojson.features.map( (item) => {\n        //     return item.properties.earthObservation.acquisitionInformation[0].acquisitionParameter.acquisitionStartTime.getTime()\n        // })\n        let test = true\n        if(!renderable.userProperties || filter === undefined ) return true\n        // console.log(renderable)\n        for(let i = 0; i < filter.length; i++) {\n\n            // if(filter[i].attribute === 'relativePassNumber' ) {\n            //     test *= renderable.userProperties.earthObservation.acquisitionInformation[0].acquisitionParameter.relativePassNumber === filter[i].value\n            // }\n            \n\n            switch(filter[i].attribute) {\n                case 'relativePassNumber': test *= renderable.userProperties.earthObservation.acquisitionInformation[0].acquisitionParameter.relativePassNumber === filter[i].value\n                break\n                case 'cloudCoverPercentage': {\n                    let cc = renderable.userProperties.earthObservation.productInformation.cloudCoverPercentage?renderable.userProperties.earthObservation.productInformation.cloudCoverPercentage:0\n                    test *= cc <= filter[i].value\n                break\n                }\n                default: test = test\n            }\n\n        }\n        // console.log(test)\n        return test\n    }\n\n    function enableRenderables(layer, time, head, trail) {\n        // console.log('enabling '+time+' ' +head+'/'+trail)\n        // console.log(layer)\n        if(layer.renderables.length === 0) {\n            return null\n        }\n        let closestrenderableindex = -1\n        let previousrenderableindex = -1\n        let nextrenderableindex = -1\n        let lastpreviousdistance = 99999999999999999\n        let lastnextdistance = 99999999999999999\n\n        let start, end, filtered\n        for (let j = 0; j < layer.renderables.length; j++) {\n            start = layer.renderables[j].timeRange[0].getTime()\n            end = layer.renderables[j].timeRange[1].getTime()\n            filtered = layer.renderables[j].filtered?layer.renderables[j].filtered:false\n            // layer.renderables[j].enabled = true\n            // layer.renderables[j].highlighted = true\n\n\n\n\n            if ( end  >= (time.getTime() - trail) && start <= (time.getTime() + head) && !filtered) {\n                layer.renderables[j].enabled = true\n                layer.renderables[j].highlighted = false \n            } else {\n                layer.renderables[j].enabled = false\n                layer.renderables[j].highlighted = false\n            }\n\n            //find closest in the past\n            let timediff = start - time.getTime()\n            if (!filtered) {\n                if( timediff < 0 && Math.abs(timediff) <= lastpreviousdistance) {\n                    // previousrenderableindex = closestrenderableindex\n                    previousrenderableindex = j\n                    lastpreviousdistance = Math.abs(timediff)\n                }\n                if(timediff == 0) closestrenderableindex = j\n                if(timediff > 0 && Math.abs(timediff) <= lastnextdistance) {\n                    // nextrenderableindex = nextrenderableindex\n                    nextrenderableindex = j\n                    lastnextdistance = Math.abs(timediff)\n                }\n            }\n            \n\n\n        }\n\n        // find closest\n\n        if(closestrenderableindex == -1) {\n            // console.log(\"closest not found\")\n            closestrenderableindex = lastnextdistance >= lastpreviousdistance ? previousrenderableindex : nextrenderableindex\n\n            // closestrenderableindex = layer.renderables.length - 1\n        }\n        // make the closest one always visible \n        layer.renderables[closestrenderableindex].enabled = true\n        layer.renderables[closestrenderableindex].highlighted = true\n        // if(nextrenderableindex != -1) layer.renderables[nextrenderableindex].enabled = true\n        // layer.renderables[nextrenderableindex].highlighted = true\n        // console.log(previousrenderableindex,closestrenderableindex,nextrenderableindex)\n        // console.log(layer.renderables)\n        return {\n            closest: layer.renderables[closestrenderableindex],\n            previous:layer.renderables[previousrenderableindex == -1?0:previousrenderableindex],\n            next:layer.renderables[nextrenderableindex == -1?layer.renderables.length-1:nextrenderableindex]\n        }\n\n\n    }\n\n\n\n    const controller = useRef([])\n\n    const flipImage = (srcBase64, callback) => {\n        const img = new Image();\n    \n        // https://stackoverflow.com/questions/20600800/js-client-side-exif-orientation-rotate-and-mirror-jpeg-images\n        // https://stackoverflow.com/questions/7584794/accessing-jpeg-exif-rotation-data-in-javascript-on-the-client-side/32490603#32490603\n        const srcOrientation = 3; // for CDSE descending\n        // const srcOrientation = 4; // for CDSE Aescending\n        // const srcOrientation = 4; //for DHUS\n        img.onload = function() {\n            var width = img.width,\n                height = img.height,\n                canvas = document.createElement('canvas'),\n                ctx = canvas.getContext(\"2d\");\n        \n            // set proper canvas dimensions before transform & export\n            if (4 < srcOrientation && srcOrientation < 9) {\n              canvas.width = height;\n              canvas.height = width;\n            } else {\n              canvas.width = width;\n              canvas.height = height;\n            }\n            // transform context before drawing image\n            switch (srcOrientation) {\n              case 2: ctx.transform(-1, 0, 0, 1, width, 0); break;\n              case 3: ctx.transform(-1, 0, 0, -1, width, height); break;\n              case 4: ctx.transform(1, 0, 0, -1, 0, height); break;\n            //   case 4: ctx.scale(1,-1); break;\n              case 5: ctx.transform(0, 1, 1, 0, 0, 0); break;\n              case 6: ctx.transform(0, 1, -1, 0, height, 0); break;\n              case 7: ctx.transform(0, -1, -1, 0, height, width); break;\n              case 8: ctx.transform(0, -1, 1, 0, 0, width); break;\n              default: break;\n            }\n        \n            // draw image\n            ctx.drawImage(img, 0, 0);\n        \n            // export base64\n            callback(canvas.toDataURL());\n\n          };\n    \n          img.src = srcBase64;\n        //   return(img)\n          \n    }\n\n\n    const getS2LUT = async (url) => {\n        try {\n            \n            let response = await fetch (url, {cache: \"force-cache\"})\n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n            let text = await response.text()\n\n            let templut= text.split('\\n')\n            let lut = []\n            let extract = []\n            for( let i= 0; i< templut.length; i++) {\n                extract = templut[i].split(':')\n                lut[i] = {tile:extract[0], footprint: extract[1]}\n\n            }\n            // console.log(s2lut)\n            s2lut.current = lut\n        }\n        catch (err) {\n            console.log('error getting LUT')\n        }\n    }\n\n    const getPolygonbyS2tile = (tile) => {\n        let i= 0\n        while(s2lut.current[i].tile !== tile) {\n            i++\n        }\n        let coordstring = s2lut.current[i].footprint.slice(15,s2lut.current[i].footprint.length-3)\n        let coordlist = coordstring.split(',')\n        let boundaries = []\n        for(let j = 0; j < coordlist.length; j++) {\n            let coord = coordlist[j].split(' ')\n            let lat = coord[1]\n            let lon = coord[0]\n            boundaries.push({latitude: lat, longitude: lon})\n        }\n        let multiboundaries = []\n        multiboundaries[0] = boundaries\n        return multiboundaries\n    }\n\n    const createQL = async (url, footprint, timerange, attributes, userProperties, quicklookLayer, renderable, credential, server, tokenendpoint, granttype, fetchURL, abort_fetchURL) => {\n\n        async function createImage(url) {\n            return new Promise((resolve, reject) => {\n                flipImage(url, (base64src) => {\n                    const imageOfQuickLook = new Image();\n                    imageOfQuickLook.addEventListener('load', () => {\n                        resolve(imageOfQuickLook);\n                    }, false);\n                    imageOfQuickLook.src = base64src;\n                });\n            });\n        }\n    \n\n        let abortcontroller = new AbortController()\n        controller.current.push(abortcontroller)\n\n        // if quicklook is already there, do nothing\n        for(let i = 0; i < quicklookLayer.renderables.length; i++) {\n            if(quicklookLayer.renderables[i].displayName === timerange[1].toUTCString()) {\n                // console.log('QL already there')\n                enableRenderables(quicklookLayer, lastepoch.current, 0, QLTrail.current)\n    \n                return\n            }\n        }\n      // hack:\n    //   url = url.replace('catalogue.dataspace.copernicus.eu','zipper.dataspace.copernicus.eu')\n\n        try {\n            let response = await fetchURL(url, server, tokenendpoint, granttype, credential.user, credential.pass) \n            // let response\n            // console.log(token)\n            // if(token) {\n            //     console.log('fetch with token)')\n            //     response = await token.fetch(url, \n            //         {\n            //         mode: 'cors', \n            //         credentials: 'include', \n            //         signal: abortcontroller.signal\n            //         })\n            //     console.log(response)\n            // } else {\n            //     response = await fetch (url, \n            //         {mode: 'cors', \n            //         credentials: 'include', \n            //         signal: abortcontroller.signal, \n            //         headers: {\n            //             \"Content-Type\": \"text/plain\",\n            //             'Authorization': 'Basic ' + window.btoa(credential.user+\":\"+credential.pass),\n            //         },\n            //         cache: \"force-cache\"})\n\n            // }\n            if (!response.ok) {\n                throw new Error(`HTTP error (QL)! status: ${response.status}`);\n            }\n            \n            let blob = await response.blob()\n            let objectURL = URL.createObjectURL(blob)\n            let image = await createImage(objectURL) // for dhus\n            // let image = new Image()\n            // image.src = objectURL\n            // image.rotate(180)\n\n            let quicklook =  new TexturedSurfacePolygon(footprint,attributes)\n            // quicklook.maxImageWidth = 64\n            // quicklook.maxImageHeight = 64\n            quicklook.maximumNumEdgeIntervals = 2;\n            quicklook.polarThrottle = 1;\n            quicklook.timeRange = timerange\n            quicklook.displayName = timerange[1].toUTCString()\n            quicklook.zIndex = ZINDEX_QUICKLOOKS\n            quicklook.userProperties = userProperties\n            // quicklook.enabled = renderable.enabled\n            \n            quicklook.image = image\n\n            // setEwwState((ewwstate) => { return {...ewwstate, image: image}})\n            quicklookLayer.addRenderable(quicklook)\n\n            // keep the last 20\n            // while (quicklookLayer.renderables.length > 20) {\n            //     quicklookLayer.renderables.shift()\n            // }\n    \n            URL.revokeObjectURL(objectURL)\n            sortLayers()\n            // console.log(eww.current.layers)\n            enableRenderables(quicklookLayer, lastepoch.current, 0, QLTrail.current)\n            eww.current.redraw()\n        } catch(err) {\n            console.log(\"Error contacting server (QL)...\")\n            console.log(err)\n        }\n    }\n\n// const {fetchURL, init_fetcher, abort_fetchURL} = useFetcher()\n    const addQuicklook =  (renderable, server, tokenendpoint, granttype, credential, forward, fetchURL, abort_fetchURL) => {\n\n        const abortqlloader = () => {\n            // console.log('aborting ql loader')\n            qlcontroller.current.abort()\n            qlcontroller.current = null\n        }\n\n        if(renderable) {\n            let prodlayer = getLayerByName('Products')\n            // console.log(renderable)\n            let idx = getIndexOfRenderable(renderable,prodlayer)\n            let j = 0\n\n            let qltoadd = []\n\n            if(forward == null || forward == false) {\n                for(let i = idx ; idx < prodlayer.renderables.length && j < 10 ; idx++) {\n                    if(!prodlayer.renderables[idx].filtered || prodlayer.renderables[idx].filtered !== true ) {\n                        j+=1\n                        // qlqueue.current.push(prodlayer.renderables[idx])\n                        qltoadd.push(prodlayer.renderables[idx])\n                        // insert at begening of queue\n                        \n                    }\n                }\n    \n            } else {\n                for(let i = idx ; idx >= 0 && j < 10 ; idx--) {\n                    if(!prodlayer.renderables[idx].filtered || prodlayer.renderables[idx].filtered !== true ) {\n                        j+=1\n                        // qlqueue.current.push(prodlayer.renderables[idx])\n                        qltoadd.push(prodlayer.renderables[idx])\n                        // insert at begening of queue\n                        \n                    }\n                }\n    \n            }\n\n            for(let i=qltoadd.length ; i >= 0  ; i --) {\n                qlqueue.current.splice(0,0,qltoadd[i])\n            }\n            qlqueue.current.splice(100,1000)    // queue max: 100 items\n            // \n            if(qlcontroller.current == null) {\n                qlcontroller.current = new AbortController();\n                QLLoader(credential, server, tokenendpoint, granttype, fetchURL, abort_fetchURL, qlcontroller.current.signal).then( ()=>abortqlloader() )\n            }\n        }\n\n    }\n\n    const QLLoader = async (credential, server, tokenendpoint, granttype, fetchURL, abort_fetchURL, abortsignal) => {\n\n        // const delay = ms => new Promise(res => setTimeout(res, ms))\n        return new Promise( async ( resolve, reject ) => {\n            // console.log(renderables)\n\n            abortsignal.addEventListener( 'abort', () => { \n                // console.log('aborting QL')\n                reject()\n            })\n\n            \n            while(qlqueue.current.length > 0) {\n                // console.log('QL queue: '+qlqueue.current.length)\n                let prod = qlqueue.current.shift()\n                await  add1Quicklook(prod, server, tokenendpoint, granttype, credential, fetchURL, abort_fetchURL)\n            }\n            resolve()\n        } )\n    }\n\n\n\n\n\n    const add1Quicklook = async (renderable, server, tokenendpoint, granttype, credential, fetchURL, abort_fetchURL) => {\n        // console.log(credential)\n        // console.log(token)\n\n        if(renderable) {\n\n            let url = renderable.userProperties.quicklookUrl\n            if (url == null) {\n                // console.log(\"no QL\")\n                return\n            }\n            // console.log(renderable)\n            let footprint \n            // console.log(renderable.boundaries[0])\n\n            // hack to replace the S2 footprints by the LUT footprints (UMS tile coordinates)\n            if(renderable.userProperties.earthObservation.productInformation.tile) {\n                footprint = getPolygonbyS2tile(renderable.userProperties.earthObservation.productInformation.tile)\n            } else {\n                footprint = renderable.boundaries[0]\n            }\n            \n            let highestlat = 0\n            for(let i = 0 ; i < footprint.length ; i++) {\n                if(Math.abs(footprint[i].latitude) > highestlat) highestlat = footprint[i].latitude\n            }\n            // try to filter the quicklook that crashes the shape\n            if(highestlat > 84) {\n                console.log('I refuse')\n                console.log(renderable.boundaries[0])\n                return\n            }\n\n            let timerange =[]\n            timerange[1] = renderable.timeRange[1]\n            timerange[0] = renderable.timeRange[0]\n            let attributes = renderable.attributes\n            let userProperties = renderable.userProperties\n            let quicklookLayer = getLayerByName('Quicklooks')\n            let enabled = renderable.enabled\n\n            await createQL(url, footprint, timerange, attributes, userProperties, quicklookLayer, renderable, credential, server, tokenendpoint, granttype, fetchURL, abort_fetchURL)\n        }\n    }\n\n\n    function abortAddQuicklooks() {\n        // abort ongoing QL calls\n        for (let i = 0; i < controller.current.length; i++) {\n            controller.current[i].abort()\n        }\n        controller.current = []\n    }\n\n    function removeQuicklooks() {        \n        qlqueue.current = []\n\n        getLayerByName('Quicklooks').removeAllRenderables()\n\n        eww.current.redraw()\n    }\n\n    async function setTime(epoch) {\n        epoch = (epoch)?epoch:lastepoch.current\n        // console.log(epoch)\n\n        if(star.current) {\n            getLayerByName('StarField').time = new Date(epoch)\n        }\n        if(atm.current) {\n            getLayerByName('Atmosphere').time = new Date(epoch)\n        }\n        if(qu.current) {\n            enableRenderables(getLayerByName('Quicklooks'), epoch, 0, QLTrail.current)\n        }\n\n        let closestrenderable = null\n        closestrenderable = enableRenderables(getLayerByName('Products'), epoch, ProductHead.current, ProductTrail.current)\n        // console.log(closestrenderable)\n        if(qw.current) {\n            enableLayer(getLayerByName('QuicklookWMS'), epoch, 0,  QLTrail.current)\n        }\n\n        if(modelOn.current) {\n            enableSatelliteLayers(epoch,modelOn.current,satList.current)\n            enableOrbitLayers(epoch,modelOn.current,satList.current)\n        }\n\n        eww.current.redraw();\n        lastepoch.current = epoch\n        setEwwState((ewwstate) => { return {...ewwstate, closestRenderable: closestrenderable}})\n    }\n\n    async function moveTo(lat, lon, alt) {\n        // setTimeout(() => {\n            //  console.log('move to: '+alt)\n\n            // check if lat/lon is same as last time.\n            if(lat === ewwstate.latitude && lon === ewwstate.longitude) {\n                console.log('already moved there...')\n                return\n            }\n            eww.current.goToAnimator.travelTime = 1300;\n\n            try { \n                eww.current.goTo(new WorldWind.Position(lat, lon, lat));\n                // if(alt) {\n                //     eww.current.goTo(new WorldWind.Position(lat, lon, alt));\n                // } else {\n                //     eww.current.goTo(new WorldWind.Position(lat, lon));\n                // }\n            } catch(e) {console.log(e)}\n\n            eww.current.navigator.range = alt;\n            // console.log(eww.current.navigator.range)\n            eww.current.navigator.camera.applyLimits()\n            eww.current.redraw();\n            setTime()\n\n            // }, 1000)\n        }\n\n\n    function getRenderables(x,y) {\n        let pickList = eww.current.pick(eww.current.canvasCoordinates(x, y))\n        let pickedItems = []\n        for (let i = 0; i < pickList.objects.length; i++) {\n            if (pickList.objects[i].userObject instanceof TexturedSurfacePolygon && pickList.objects[i].parentLayer.displayName==='Products') {\n                pickedItems.push(pickList.objects[i].userObject) \n            }\n        }\n        return pickedItems\n    }\n\n    // callback from eww   \n    const setGlobeStates = (wwd ,stage) => {\n\n        if (stage === WorldWind.AFTER_REDRAW) {\n            let lo = wwd.navigator.lookAtLocation.longitude\n            let la = wwd.navigator.lookAtLocation.latitude\n            let al = wwd.navigator.range\n            let vp = (al < 2000000?getViewPolygon():'')\n            let vpp = 'POINT('+lo.toFixed(4)+' '+la.toFixed(4)+')' \n            setEwwState((ewwstate) => { return {...ewwstate, longitude:lo, latitude: la, altitude: al, viewpolygon: vp, viewpoint:vpp}}) \n        }\n\n    }\n\n    // handler for tap/click\n\n    const handleClick  = (recognizer) => {\n        // console.log('click')\n        let x = recognizer.clientX\n        let y = recognizer.clientY\n        // Perform the pick. Must first convert from window coordinates to canvas coordinates, which are\n        // relative to the upper left corner of the canvas rather than the upper left corner of the page.\n        let pickList = eww.current.pick(eww.current.canvasCoordinates(x, y));\n        // console.log(pickList)\n        if (pickList.terrainObject()) {\n            // position = pickList.terrainObject().position;\n            // store list of selected footprints in a string for later comparison\n            eww.current.removeLayer(getLayerByName('quicklook') )\n            // de-highlight all rendereables\n            for (let i = 0; i < eww.current.layers.length; i++) {\n                if (eww.current.layers[i].displayName.includes('Products:')) {                    \n                    for (let j = 0; j < eww.current.layers[i].renderables.length; j++) {\n                        let renderable = eww.current.layers[i].renderables[j]\n                        renderable.highlighted = false\n                    }\n                }\n            }\n    \n            // ... and now highlight all picked rendereables\n            let pickedItems = []\n            for (let i = 0; i < pickList.objects.length; i++) {\n                if (pickList.objects[i].userObject instanceof WorldWind.SurfaceShape) {\n                    pickedItems.push(pickList.objects[i].userObject) \n                    pickList.objects[i].userObject.highlighted = !pickList.objects[i].userObject.highlighted\n                    \n                    addQuicklookWMS(pickList.objects[i].userObject)\n                }\n            }\n            // console.log(pickedItems)\n            setEwwState((ewwstate) => { return {...ewwstate, pickedItems: pickedItems}})\n            eww.current.redraw()\n        } else {\n            console.log('No position !');\n            return;\n        }\n\n\n    }\n    const handleDoubleClick  = (recognizer) => {\n        console.log('double click')\n    }\n\n    const handleDoubleClick2  = (recognizer) => {\n        console.log('double click')\n        let x = recognizer.clientX\n        let y = recognizer.clientY\n        let pickList = eww.current.pick(eww.current.canvasCoordinates(x, y));\n\n        let position;\n  \n  \n        // Get coordinates of clicked point and list of selected footprints. Do nothing if click done outside the globe.\n        if (pickList.terrainObject()) {\n            position = pickList.terrainObject().position;\n            // eww.current.goTo(new WorldWind.Location(position.latitude, position.longitude));\n\n            let point = \"POINT(\"+position.longitude+' '+position.latitude+\")\"\n            \n            setEwwState((ewwstate) => { return {...ewwstate, aoi: point}}) \n    \n        } else {\n              console.log('No position !');\n              setEwwState((ewwstate) => { return {...ewwstate, aoi: ''}})\n        }\n    }\n\n\n    // didMount effect\n    useEffect(() => {\n        console.log(\"Creating the world...\")\n\n        // to use DEM from Eox ESA Map server\n        var elevationModel = new WorldWind.ElevationModel();\n        elevationModel.removeAllCoverages()\n        elevationModel.addCoverage(new WorldWind.TiledElevationCoverage({\n            coverageSector: WorldWind.Sector.FULL_SPHERE,\n            resolution: 0.008333333333333,\n            retrievalImageFormat: \"image/tiff\",\n            minElevation: -11000,\n            maxElevation: 8850,\n            urlBuilder: new WorldWind.WcsTileUrlBuilder(\"https://dem.esa.maps.eox.at/elevation\", \"copdem\", \"2.0.1\")\n            }));\n        // eww.current = new WorldWind.WorldWindow(id, elevationModel);\n\n\n        eww.current = new WorldWindow(id);\n\n        \n\n        eww.current.worldWindowController = null;\n\n\n        eww.current.redrawCallbacks().push(setGlobeStates)\n\n        // better do it after the layers are altered manually\n        // eww.current.redrawCallbacks().push( (wwd, stage) => {\n        //     console.log(stage)\n        //     if (stage === WorldWind.BEFORE_REDRAW) {\n        //         wwd.layers.sort(function (a, b) {\n        //             return a.zIndex - b.zIndex;\n        //         });\n        //     }\n        // })\n        \n        WorldWind.configuration.baseUrl = window.location.href\n\n        let starFieldLayer = new StarFieldLayer();\n\n        let atmosphereLayer = new WorldWind.AtmosphereLayer('images/BlackMarble_2016_01deg.jpg');\n        // let atmosphereLayer = new WorldWind.AtmosphereLayer('images/BlackMarble_2016_3km.jpg');\n        //atmosphereLayer.minActiveAltitude = 5000000\n\n        let quicklookLayer = new WorldWind.RenderableLayer('Quicklooks')\n        quicklookLayer.pickEnabled = false\n\n        let productLayer =  new WorldWind.RenderableLayer('Products')\n\n    \n        let layers = [\n            // { layer: new WorldWind.WmsLayer(wmsConfigBg_s2, \"\"), enabled: true },\n            // { layer: new WorldWind.WmsLayer(wmsConfigBg_terrain, \"\"), enabled: false },\n            // { layer: new WorldWind.WmsLayer(wmsConfigNames, \"\"), enabled: names },\n            { layer: starFieldLayer, enabled: false, zIndex: ZINDEX_STARFIELD },\n            { layer: atmosphereLayer, enabled: false, zIndex: ZINDEX_ATMOSPHERE },\n            { layer: productLayer, enabled: true, zIndex: ZINDEX_PRODUCTS },\n            { layer: quicklookLayer, enabled: true, zIndex: ZINDEX_QUICKLOOKS },\n        ];\n    \n        for (let l = 0; l < bgLayers.length; l++) {\n            let layer = new WorldWind.WmsLayer(bgLayers[l], \"\")\n            layer.enabled = false\n            layer.zIndex= ZINDEX_BACKGROUND+l\n            layer.type='background'\n            eww.current.addLayer(layer, \"\")\n        }\n        for (let l = 0; l < ovLayers.length; l++) {\n            let layer = new WorldWind.WmsLayer(ovLayers[l], \"\")\n            layer.enabled = false\n            layer.type='overlay'\n            layer.zIndex= ZINDEX_OVERLAY+l\n            eww.current.addLayer(layer, \"\")\n        }\n\n        for (let l = 0; l < layers.length; l++) {\n            layers[l].layer.enabled = layers[l].enabled;\n            layers[l].layer.zIndex = layers[l].zIndex;\n            eww.current.addLayer(layers[l].layer);\n        }\n        for (let l = 0; l < satelliteLayers.length; l++) {\n            satelliteLayers[l].enabled = modelOn.current\n            satelliteLayers[l].zIndex= ZINDEX_SATELLITE+l\n            eww.current.addLayer(satelliteLayers[l]);\n        }\n\n        for (let l = 0; l < orbitLayers.length; l++) {\n            orbitLayers[l].enabled = modelOn.current\n            // orbitLayers[l].zIndex= ZINDEX_SATELLITE+l\n            eww.current.addLayer(orbitLayers[l]);\n        }\n\n\n        sortLayers()\n        console.log(eww.current.layers)\n    \n        eww.current.redraw();\n        getS2LUT('./data/s2lut.txt')\n        // eww.current.deepPicking = true;\n        // eww.current.orderedRenderingFilters.push(declutterByTime)\n\n        // return () => eww.current = null\n    }, []); // effect runs only once\n        \n  return { \n      eww, \n      ewwstate, \n      initMap, \n      moveTo, \n      removeGeojson, \n      addGeojson,\n      toggleGeojson,\n      getRenderables, \n      addQuicklookWMS, \n      removeQuicklookWMS,\n      toggleQuicklookWMS,\n      removeQuicklooks, \n      addQuicklook, \n      toggleQuicklooks,\n      toggleStarfield, \n      toggleAtmosphere, \n      setTime, \n      setFilter,\n      toggleProjection, \n      toggleNames, \n      toggleModel, \n      toggleBg, \n      toggleOv, \n      toggleDem, \n      northUp,\n      setMode,\n      setColor\n    }\n}\n","import React, {useState, useEffect, useRef, memo} from 'react'\nimport WorldWind from 'webworldwind-esa';\nimport { useGesture, useDrag } from 'react-use-gesture'\nimport {useSpring, config, animated} from 'react-spring'\nimport { add, sub, scale } from 'vec-la'\nimport './Earth.css'\nimport LogPanel from '../logpanel';\n\n\n// todo:\n//      set limits to the navigator.camera\n\n\nexport const FluidWorldWindowController = memo( ({world, onSimpleClick}) => {\n\n    const controllerRef = useRef()\n    const MAX_ALT = 100000000\n    const EYE_ALT = 2\n    // to detect double taps\n    const lastTap = useRef()\n    const doubleTap = useRef()\n    const longclickdetected = useRef(null)\n    const button = useRef()\n    const clicktimeout = useRef()\n    const tilttimeout = useRef()\n    const dragtimeout = useRef()\n\n    //\n    const gesturestartposition = useRef()\n    // const [dragenabled, setdragenabled] = useState(true)\n    const dragenabled = useRef(true)\n    const rotationmode = useRef(false)\n    const pinchmode = useRef('undefined')\n    // const [logitems,setlogitems] = useState({})\n\n    // debug snippet\n    // add {debughtml} in returned dom\n    // use with: logdebug({key:value,...})\n    const debug = useRef()\n    const [debugtext,setdebugtext] = useState([])\n    const [{ x, y }, api] = useSpring(() => ({ x: 0, y: 0 }))\n    const bind2 = useDrag(({ offset: [x, y] }) => api.start({ x, y }))\n    const debughtml =     (      <animated.div {...bind2()} style={{ x, y }}  className='Debug'>{debugtext}</animated.div>)\n    const logdebug = (items) => {\n        let dd = []\n        debug.current = {...debug.current,...items}\n        // debugtext.current = []\n        for (let [key, value] of Object.entries(debug.current)) {\n            // console.log(`${key}: ${value}`);\n            dd.push([key,value])\n          }\n          setdebugtext( dd.map( (item) => <div key={item[0]}>{item[0]}: {item[1]}</div> ))\n    }    \n    // end debug snippet  \n    \n    const detectDoubleTap = (e) => {\n        // console.log(e)\n        button.current = e.button\n        e.preventDefault()\n        if (lastTap.current && (e.timeStamp - lastTap.current) < 300) {\n            doubleTap.current = true\n        } else {\n            lastTap.current = e.timeStamp\n            doubleTap.current = false\n        }\n    }\n\n\n    const bind = useGesture({\n        onDrag: ({  event, xy, vxvy, previous, first, down, initial, delta, movement, offset, velocity, direction, tap, scrolling, touches, pinching, origin}) => {\n\n            if(first) {\n                longclickdetected.current = null\n                gesturestartposition.current = positionAtPickPoint(xy[0],xy[1])\n                if(!gesturestartposition.current) {\n                    gesturestartposition.current = positionAtPickPoint(world.current.canvas.clientWidth/2,world.current.canvas.clientHeight/2)\n                }\n\n                detectDoubleTap(event)\n                if(doubleTap.current) clearTimeout(clicktimeout.current)\n                // console.log('double:'+doubleTap.current+' tap: '+tap)\n            }\n\n            switch (true) {\n\n                // case (touches === 2):\n                //     // 2 finger tap: tilt\n                //     handletilt(down, delta, false, first, vxvy)\n                //     // tilttimeout.current = setTimeout(() => {\n                //     //     handletilt(down, delta, false, first)\n                //     // }, 300);                \n                //     break\n\n\n                case (!doubleTap.current && tap):  \n                    // simple click or tap\n                    clicktimeout.current = setTimeout(() => {\n                        if(event.timeStamp - lastTap.current < 800) {\n                            handleSimpleClick(event)\n                        } else {\n                            handleLongClick(event)\n                        }\n                    }, 300);\n                    break\n                case (doubleTap.current && tap): {\n                    clearTimeout(clicktimeout.current)\n\n                    // double click or tap\n                    console.log(\"double click\")\n                    northUp()\n                    break\n                }\n                case ((!doubleTap.current && !tap) && button.current != 2 && touches !=2  ):\n                    // Pan\n                    // console.log('pan')\n                    if(!dragenabled.current) return\n\n                    if(event.timeStamp - lastTap.current < 800) {\n                    }\n\n                    zoomspring.stop()\n                    pinchzoomspring.stop()\n                    pinchrotatespring.stop()\n                    pinchtiltspring.stop()\n                    if (world.current.globe.is2D()) {\n                        handlepan2d(event,initial,down,delta,offset,movement,velocity, direction, xy, previous,first,scrolling)\n                    } else {\n                        handlepan3d(event,initial,down,delta,offset,vxvy,velocity, direction, xy, previous,first,scrolling,touches,pinching)\n                    }\n                    break\n                case (doubleTap.current && !tap):\n                    // zoom\n                    zoomspring.stop()\n                    handlezoom(event,initial,down,delta,offset,movement,velocity, direction, xy, previous,first,scrolling)\n                    break\n\n                case (!doubleTap.current && !tap && button.current == 2):\n                    // right click button: tilt and rotate\n                    handletilt(down, delta, true)\n                    break\n    \n        \n                default:\n                // console.log(\"default \")\n\n            }\n\n        },\n        onDragend: () => {\n            console.log('drag end')\n        },\n        onWheel: ({event, xy, previous, first, down, initial, delta, movement, offset, velocity, direction, tap, wheeling}) => {\n            if(first) {\n                gesturestartposition.current = positionAtPickPoint(event.clientX,event.clientY)\n            }\n            // delta[1] *= 0.1         \n            // delta[0] *= 0.1         \n            handlezoom(event,initial,down,delta,offset,movement,velocity, direction, xy, previous,first,wheeling)\n        },\n        onPinchStart: (origin)=>{\n            dragenabled.current = false\n            panspring.stop()\n            zoomspring.stop()\n            pinchzoomspring.stop()\n            pinchrotatespring.stop()\n            pinchzoomrotatespring.stop()\n            pinchtiltspring.stop()\n            // memo.lastY = origin[1]\n            // gesturestartposition.current = positionAtPickPoint(origin[0],origin[1])\n            pinchmode.current = 'undefined'\n\n            // tilttimeout.current = setTimeout(() => {\n            //     pinchmode.current = 'tilt'\n            //     }, 300);        \n                \n        },\n        onPinch: ({event, da, vdva, origin, pinching, delta, first, initial, direction, previous, elapsedTime, memo = {lastY:0} }) => {\n            handlepinch(event, da, vdva, origin, pinching, delta, first, initial, direction, previous, memo, elapsedTime)\n            memo.lastY = origin[1]\n            return memo\n        },\n        onPinchEnd: () => { \n            clearTimeout(dragtimeout.current)\n            dragtimeout.current = setTimeout(() => {\n                dragenabled.current = true\n                // logdebug({drag: (dragenabled.current)?'true':'false'})\n                }, 300);\n            pinchmode.current = 'undefined'\n            \n            //    console.log('pinch end')\n        }\n    },\n    // {reset: false, drag: {useTouch: true}, filterTaps: true }\n    {\n        domTarget: controllerRef,\n        drag: {useTouch: true},\n        pinch: {useTouch: true},\n        eventOptions: {passive: false}\n    }\n    )\n\n    const normalize = (val,min,max)=> {\n        var delta = max - min;\n        return (val - min) / delta\n    }\n\n\n    function handleSimpleClick(event) {\n        // console.log('simple click')\n        onSimpleClick(event)\n    }\n\n    function handleLongClick(event) {\n        console.log('long click')\n        onSimpleClick(event)\n    }\n    // north up\n    // todo: spring ?\n    function northUp() {\n        let headingIncrement = world.current.navigator.heading / -20;\n        let runOperation = () => {\n            if (Math.abs(world.current.navigator.heading) > Math.abs(headingIncrement)) {\n                world.current.navigator.heading += headingIncrement;\n                setTimeout(runOperation, 10);\n            } else {\n                world.current.navigator.heading = 0;\n                rotationmode.current = false\n            }\n            world.current.redraw();\n        };\n        setTimeout(runOperation, 10);\n    }\n\n    // pinching\n    const handlepinch = (event, da, vdva, origin, pinching, delta, first, initial, direction, previous, memo, elapsedTime) => {\n        // if(first) console.log(event)\n        // console.log(elapsedTime)\n        if(pinchmode.current === 'undefined' && elapsedTime >= 100) {\n            // console.log(initial)\n            // pinchmode.current = (Math.abs(direction[0]) > Math.abs(direction[1]*1.2))?'zoom':'rotation'\n            if(Math.abs(origin[1]-memo.lastY) > 4) {\n                pinchmode.current = 'tilt' \n            } else pinchmode.current = 'zoomrotate' \n            // console.log(origin)\n            // if(da[1]>3) pinchmode.current = 'rotation'\n            // else if(da[0]>10) pinchmode.current = 'zoom'\n        } \n        // if(pinchmode.current === 'undefined' && !first) {\n        //     pinchmode.current = (Math.abs(direction[0]) > Math.abs(direction[1]*1.2))?'zoom':'rotation'\n        //     clearTimeout(tilttimeout.current)    \n        // }\n\n        switch (pinchmode.current) {\n\n            case 'tilt':\n                handlepinchtilt(pinching, delta, origin, initial, memo)\n                break\n\n            // case 'zoom':\n            //     // handlezoomrotate(pinching,delta)\n            //     handlepinchzoom(pinching,delta,vdva)\n            //     break\n\n            // case 'rotation':\n            //     handlepinchrotate(pinching, delta, vdva)\n            //     break\n\n            case 'zoomrotate':\n                handlezoomrotate(pinching, delta, origin, vdva)\n                break\n\n            default:\n\n            break\n        }\n\n    }\n\n    const [{ pinchtiltvalue }, pinchtiltspring] = useSpring(() => ({ pinchtiltvalue: [0,0] }))\n    const handlepinchtilt = (pinching, delta, origin, initial, memo ) => {\n        pinchtiltspring.start({\n            // pinchtiltvalue: delta,\n            pinchtiltvalue: sub(origin,[0,memo.lastY]),\n            immediate: pinching,\n            // config: config.stiff,\n            config: { mass: 1, tension: 100, friction: 40 },\n            onChange: ()=>{\n                let enabler = 1\n                if(!pinching) pinchmode.current = 'undefined'\n                // if (!pinching) enabler = (pinchtiltvalue.get()[1] < 0.2)?0:1\n                let tiltfactor = (pinching)?0.5:0.2 \n                world.current.navigator.tilt -= pinchtiltvalue.get()[1] * tiltfactor * enabler\n                applyLimits()\n                world.current.redraw()\n\n            }\n        })\n    }\n\n\n\n    const [{ pinchzoomrotatevalue }, pinchzoomrotatespring] = useSpring(() => ({ pinchzoomrotatevalue: [0,0] }))\n    const handlezoomrotate = (pinching,delta,origin, vdva) => {\n        let zenabler = 1\n        let tenabler = 1\n        if (!pinching) {\n            zenabler = (Math.abs(vdva[0]) < 0.2)?0:1\n            tenabler = (Math.abs(vdva[1]) < 0.2)?0:1\n        }\n        pinchzoomrotatespring.start({\n            pinchzoomrotatevalue: delta,\n            immediate: pinching,\n            config: config.molasses,\n            // config: {...config.molasses},\n            // config: { mass: 1, tension: 100, friction: 40, duration: 200 },\n            onChange: ()=>{\n                let rangefactor = 1-pinchzoomrotatevalue.get()[0]/300 * zenabler\n                moveZoom(gesturestartposition.current,rangefactor )\n                world.current.navigator.range *= rangefactor \n                // logdebug({angle: pinchzoomrotatevalue.get()[1]})\n                // logdebug({dist: pinchzoomrotatevalue.get()[0]})\n                \n                world.current.navigator.heading -= pinchzoomrotatevalue.get()[1] * tenabler\n                if(world.current.navigator.heading !== 0) rotationmode.current = true\n\n                // world.current.navigator.heading -= hpinchval.get()  \n                applyLimits()\n\n                world.current.redraw()\n\n            }\n        })        \n    }\n\n    const [{ pinchzoomvalue }, pinchzoomspring] = useSpring(() => ({ pinchzoomvalue: 0 }))\n    const handlepinchzoom = (pinching,delta,vdva) => {\n        let enabler = 1\n        if (!pinching) enabler = (Math.abs(vdva[0]) < 0.2)?0:1\n        pinchzoomspring.start({\n            pinchzoomvalue: delta[0],\n            immediate: pinching,\n            // config: config.stiff,\n            // config: {...config.molasses},\n            config: { mass: 1, tension: 100, friction: 40 },\n            onChange: ()=>{\n                if(!pinching) pinchmode.current = 'undefined'\n                let rangefactor = 1-pinchzoomvalue.get()/300 * enabler\n                moveZoom(gesturestartposition.current,rangefactor)\n                world.current.navigator.range *= rangefactor\n                // world.current.navigator.heading -= hpinchval.get()  \n                applyLimits()\n\n                world.current.redraw()\n\n            }\n        })        \n    }\n\n\n    const [{ pinchrotatevalue }, pinchrotatespring] = useSpring(() => ({ pinchrotatevalue: 0 }))\n    const handlepinchrotate = (pinching,delta,vdva) => {\n        let enabler = 1\n        if (!pinching) enabler = (Math.abs(vdva[1]) < 0.2)?0:1\n        pinchrotatespring.start({\n            pinchrotatevalue: delta[1],\n            immediate: pinching,\n            // config: config.stiff,\n            config: { mass: 1, tension: 100, friction: 40 },\n            // config: { mass: 1, tension: 100, friction: 40, duration: 200 },\n            onChange: ()=>{\n                    world.current.navigator.heading -= pinchrotatevalue.get() * enabler \n                    if(world.current.navigator.heading !== 0) rotationmode.current = true\n                    applyLimits()\n\n                    world.current.redraw()\n\n            }\n        })\n    \n    }\n\n\n     // tilting\n    const [{ tiltvalue }, tiltspring] = useSpring(() => ({ tiltvalue: [0,0] }))\n\n    const handletilt = (down, delta, dorotation ) => {\n        // let enabler = 1\n        // if (!pinching) enabler = (Math.abs(vdva[1]) < 0.2)?0:1\n        tiltspring.start({\n            to: {tiltvalue: delta},\n            immediate: down,\n            // config: config.stiff,\n            config: { mass: 1, tension: 100, friction: 40 },\n            onChange: ()=>{\n                let tiltoffset = -90 * tiltvalue.get()[1]*2 / world.current.canvas.clientHeight\n                let headingoffset = -90 * tiltvalue.get()[0]*2 / world.current.canvas.clientWidth\n                // world.current.navigator.tilt += tiltvalue.get()[1]/8\n                world.current.navigator.tilt -= tiltoffset \n                if(dorotation) {\n                    world.current.navigator.heading -= headingoffset\n                    if(world.current.navigator.heading !== 0) rotationmode.current = true\n                }\n                applyLimits()\n                world.current.redraw()\n\n            }\n        })\n    }\n\n    // panning\n    const [{ panvalue }, panspring] = useSpring(() => ({ panvalue: [0,0] }))\n\n    const handlepan2d = (event,initial,down,delta,offset,movement,velocity, direction, xy, previous,first,wheeling) => {\n        let enabler = 1\n        if (!down) enabler = (velocity < 0.2)?0:1\n        let correction = (event.type === 'touchmove')?1:1\n        // logdebug({pinching: pinching})\n        panspring.start({\n            panvalue: delta,\n            // to: {panvalue: (down)?movement:add(movement,scale(movement,velocity))},\n            // to: {panvalue: (down)?movement:movement[1]+movement[1]*velocity*5},\n            immediate: down,\n            // config: config.stiff,\n            config: { mass: 1, tension: 150, friction: 80 },\n            onChange: ()=>{\n                let lookatxy = [world.current.canvas.clientWidth/2, world.current.canvas.clientHeight/2]\n                let nextlookatxy = sub(lookatxy,scale(panvalue.get(),correction*enabler))\n                let currentposition = positionAtPickPoint(lookatxy[0],lookatxy[1])\n                if(!currentposition) console.log('no currentpos !')\n                let nextposition = positionAtPickPoint(nextlookatxy[0],nextlookatxy[1])\n                if(!nextposition) console.log('no nextposition !')\n\n                let currentpoint = new WorldWind.Vec3(0,0,0)\n                let nextpoint = new WorldWind.Vec3(0,0,0)\n                if(!world.current.globe.computePointFromPosition(currentposition.latitude, currentposition.longitude, currentposition.altitude, currentpoint)) return\n                if(!world.current.globe.computePointFromPosition(nextposition.latitude, nextposition.longitude, nextposition.altitude, nextpoint)) return\n\n                let viewMatrix = WorldWind.Matrix.fromIdentity();\n                world.current.computeViewingTransform(null, viewMatrix)\n                viewMatrix.multiplyByTranslation(currentpoint[0] - nextpoint[0], currentpoint[1] - nextpoint[1], currentpoint[2] - nextpoint[2])\n\n                // Compute the globe point at the screen center from the perspective of the transformed navigator state.\n                var ray = world.current.rayThroughScreenPoint(world.current.canvasCoordinates(xy[0], xy[1]))\n\n                viewMatrix.extractEyePoint(ray.origin);\n                viewMatrix.extractForwardVector(ray.direction);\n\n                let origin = new WorldWind.Vec3(0, 0, 0);\n\n                if (!world.current.globe.intersectsLine(ray, origin)) {\n                    return;\n                }\n\n                // Convert the transformed modelview matrix to a set of navigator properties, then apply those\n                // properties to this navigator.\n                let params = viewMatrix.extractViewingParameters(origin, world.current.navigator.roll, world.current.globe, {});\n                world.current.navigator.lookAtLocation.copy(params.origin);\n                world.current.navigator.range = params.range;\n                world.current.navigator.heading = params.heading;\n                world.current.navigator.tilt = params.tilt;\n                world.current.navigator.roll = params.roll;\n                applyLimits();\n                world.current.redraw();\n\n\n            },\n            onRest: () => {\n                // logdebug({status: 'finsished: '})\n            }\n        })\n    }\n       \n\n    const handlepan3d = (event,initial,down,delta,offset,vxvy,velocity, direction, xy, previous,first,wheeling, touches,pinching) => {\n        try {\n            if(first){\n                // console.log('first drag')\n                // can crash the drag:\n                // if(Math.abs(gesturestartposition.current.latitude) > 85 || world.current.navigator.heading > 2 ) {\n                if(Math.abs(gesturestartposition.current.latitude) > 80 || world.current.navigator.heading > 2 ) {\n                    rotationmode.current = true\n                }\n            }\n        } catch {\n            console.log('Position at start not detected')\n        }\n\n\n        let enabler = 1\n        if (!down) enabler = (velocity < 0.2)?0:1\n        let correction = (event.type === 'touchmove')?1:1\n        if(!down) correction *= 1\n\n        panspring.start({\n            panvalue: delta,\n            // to: {panvalue: (down)?movement:add(movement,scale(movement,velocity))},\n            // to: {panvalue: (down)?movement:movement[1]+movement[1]*velocity*5},\n            immediate: down,\n            // config: config.stiff,\n            // config: { mass: 1, tension: 150, friction: 80 },\n            config: { mass: 1, tension: 100, friction: 40 },\n            onChange: ()=>{\n                if(!longclickdetected.current) {\n                    longclickdetected.current = (event.timeStamp - lastTap.current < 400)\n                }\n                try{\n                    let lookatxy = [world.current.canvas.clientWidth/2, world.current.canvas.clientHeight/2]\n                    let nextlookatxy = sub(lookatxy,scale(panvalue.get(),correction*enabler))\n                    let currentposition = positionAtPickPoint2(lookatxy[0],lookatxy[1])\n                    if(!currentposition) console.log('no currentpos !')\n                    let nextposition = positionAtPickPoint2(nextlookatxy[0],nextlookatxy[1])\n                    if(!nextposition) console.log('no nextposition !')\n\n                    let currentpoint = new WorldWind.Vec3(0,0,0)\n                    let nextpoint = new WorldWind.Vec3(0,0,0)\n                    if(!world.current.globe.computePointFromPosition(currentposition.latitude, currentposition.longitude, currentposition.altitude, currentpoint)) return\n                    if(!world.current.globe.computePointFromPosition(nextposition.latitude, nextposition.longitude, nextposition.altitude, nextpoint)) return\n\n                    let rotationVector = new WorldWind.Vec3(0, 0, 0)\n                    let rotationAngle = computeRotationVectorAndAngle( nextpoint,currentpoint, rotationVector);\n                    // logdebug({delta: panvalue.get()[1]})\n\n                    if(nextposition && (nextposition.latitude > 80 || nextposition.latitude < -80) && rotationmode.current === false) {\n                        console.log('out')\n                        panspring.stop()\n                        return\n                    }\n                    // nextposition.latitude = WorldWind.WWMath.clamp(nextposition.latitude,-80,80)\n\n\n                    rotateShpere(rotationVector, rotationAngle, nextpoint, nextposition)\n                    if(rotationmode.current === false) world.current.navigator.heading = 0\n                    world.current.redraw()\n                }\n                catch {\n                    console.log('probl !')\n                }\n            },\n            onRest: () => {\n                // logdebug({status: 'finsished: '})\n            }\n        })\n    }\n\n\n    // zooming\n    const [{ range }, zoomspring] = useSpring(() => ({ range: [0,0] }))\n    const handlezoom = (event,initial,down,delta,offset,movement,velocity, direction, xy, previous,first,wheeling) => {\n\n        let enabler = 1\n        if (!down) enabler = (velocity < 0.2)?0:0.5\n\n        zoomspring.start({\n            // to: {range: [1-delta[1]/200,0]},\n            range: delta,\n            immediate: (down||wheeling),\n            // immediate: (down),\n            // config: config.stiff,\n            config: { mass: 1, tension: 100, friction: 40 },\n            onChange: ()=>{\n                    // logdebug({rangefactor: spring.value.range})\n                    // let rangefactor = (enabler === 0)?1:range.get()[0]\n                    let rangefactor = (enabler === 0)?1:1-range.get()[1]/(wheeling?300:100)\n                    moveZoom(gesturestartposition.current,rangefactor)\n                    world.current.navigator.range *= rangefactor\n                    applyLimits()\n\n                    world.current.redraw()\n\n            },\n            onRest: () => {\n                // logdebug({status: 'finsished: '+world.current.navigator.range})\n            }\n        })\n\n    }\n\n    const moveZoom = function (refposition, amount) {\n        if (!refposition || amount >= 1) return\n        let lookAtLocation = world.current.navigator.lookAtLocation;\n        let lookatAltitude = world.current.globe.elevationAtLocation(lookAtLocation.latitude, lookAtLocation.longitude)\n        let lookAtPosition = new WorldWind.Position(lookAtLocation.latitude, lookAtLocation.longitude, lookatAltitude)\n        let position\n        if(amount <1) {\n            position = WorldWind.Position.interpolateGreatCircle(\n                amount, \n                refposition,\n                lookAtPosition, \n                new WorldWind.Position(0, 0, 0)\n                )\n    \n        } \n        else { // may be better to do nothing...\n            return\n            let intermediatePosition = WorldWind.Position.interpolateGreatCircle(\n                1/amount, \n                refposition,\n                lookAtPosition, \n                new WorldWind.Location(0, 0)\n            )\n            let distanceRadians = WorldWind.Location.greatCircleDistance(lookAtPosition, intermediatePosition)\n            let greatCircleAzimuthDegrees = WorldWind.Location.greatCircleAzimuth(lookAtPosition, intermediatePosition)\n            let location =  WorldWind.Location.greatCircleLocation(lookAtPosition, greatCircleAzimuthDegrees ,\n                    distanceRadians, new WorldWind.Location(0, 0));\n            position = new WorldWind.Position(location.latitude, location.longitude, intermediatePosition.altitude)\n        }\n\n        lookAtLocation.latitude = position.latitude;\n        lookAtLocation.longitude = position.longitude;\n        lookAtLocation.altitude = position.altitude;\n    }\n\n\n    const locationAtPickPoint = (x, y) => {\n        var coordinates = world.current.canvasCoordinates(x, y)\n        var pickList = world.current.pickTerrain(coordinates);\n\n        for (var i = 0; i < pickList.objects.length; i++) {\n            var pickedObject = pickList.objects[i];\n            if (pickedObject.isTerrain) {\n                var pickedPosition = pickedObject.position;\n                if (pickedPosition) {\n                    return new WorldWind.Location(pickedPosition.latitude, pickedPosition.longitude);\n                }\n            }\n        }\n    };\n\n    \n    const positionAtPickPoint2 = (x, y) => {\n\n        // another way to do it (but no altitude):\n        let ray = world.current.rayThroughScreenPoint(world.current.canvasCoordinates(x, y))\n        let position = new WorldWind.Position(0,0,0)\n        let intersectpoint = [0,0,0]\n        if (world.current.globe.intersectsLine(ray, intersectpoint)) {\n            world.current.globe.computePositionFromPoint(intersectpoint[0], intersectpoint[1], intersectpoint[2], position)\n            return(position)\n        }\n        return null\n    }\n\n    const positionAtPickPoint = (x, y) => {\n\n        let coordinates = world.current.canvasCoordinates(x, y)\n        let pickList = world.current.pickTerrain(coordinates);\n\n        for (let i = 0; i < pickList.objects.length; i++) {\n            let pickedObject = pickList.objects[i];\n            if (pickedObject.isTerrain) {\n                let pickedPosition = pickedObject.position;\n                if (pickedPosition) {\n                    return new WorldWind.Position(pickedPosition.latitude, pickedPosition.longitude, pickedPosition.altitude);\n                }\n            }\n        }\n\n    };\n\n    const computeRotationVectorAndAngle = function (vec1, vec2, rotationVector) {\n        var angleRad = WorldWind.MeasurerUtils.angleBetweenVectors(vec1, vec2);\n        var angle = angleRad * WorldWind.Angle.RADIANS_TO_DEGREES;\n        rotationVector.copy(vec1);\n        rotationVector.cross(vec2);\n        rotationVector.normalize();\n        return angle;\n    };\n\n    const rotateShpere = function (rotationVector, angle, nextpoint, nextposition) {\n        if (!isFinite(angle) || !isFinite(rotationVector[0]) || !isFinite(rotationVector[1]) || !isFinite(rotationVector[2])) {\n            return false;\n        }\n\n        var wwd = world.current;\n        var navigator = wwd.navigator;\n        var viewMatrix = WorldWind.Matrix.fromIdentity();\n        var altitude = navigator.lookAtLocation.altitude;\n        var tilt = navigator.tilt;\n        var scratchRay = new WorldWind.Line(new WorldWind.Vec3(0, 0, 0), new WorldWind.Vec3(0, 0, 0));\n        \n        navigator.tilt = 0;\n        wwd.computeViewingTransform(null, viewMatrix);\n        viewMatrix.multiplyByRotation(rotationVector[0], rotationVector[1], rotationVector[2], angle);\n\n        viewMatrix.extractEyePoint(scratchRay.origin);\n        viewMatrix.extractForwardVector(scratchRay.direction);\n        if (!wwd.globe.intersectsLine(scratchRay, nextpoint)) {\n            navigator.tilt = tilt;\n            return false;\n        }\n\n        var params = viewMatrix.extractViewingParameters(nextpoint, navigator.roll, wwd.globe, {});\n        // if (Math.abs(navigator.heading) < 5 && Math.abs(navigator.lookAtLocation.latitude < 70) && Math.abs(nextposition.latitude) < 70) {\n        //     navigator.heading = Math.round(params.heading);\n        //     console.log('rounding')\n        // }\n        // else {\n        //     navigator.heading = params.heading;\n        // }\n\n        navigator.heading = params.heading;\n\n        navigator.lookAtLocation.copy(params.origin);\n        navigator.lookAtLocation.altitude = altitude;\n        navigator.tilt = tilt;\n\n        return true;\n    }\n\n\n    const applyLimits = () => {\n        let nav = world.current.navigator\n        nav.camera.applyLimits() // not sure if not done by default by www\n        nav.range = WorldWind.WWMath.clamp(\n            nav.range, \n            world.current.globe.elevationAtLocation(nav.lookAtLocation.latitude, nav.lookAtLocation.longitude) + EYE_ALT, \n            MAX_ALT \n        )\n        nav.tilt = WorldWind.WWMath.clamp(nav.tilt,0,90)\n        // logdebug({\n        //     range: nav.range, \n        //     lookAtlat: nav.lookAtLocation.latitude, \n        //     lookAtlon: nav.lookAtLocation.longitude, \n        //     lookAtalt: nav.lookAtLocation.altitude, \n        //     clookAtalt: world.current.globe.elevationAtLocation(nav.lookAtLocation.latitude, nav.lookAtLocation.longitude),\n        //     // initlat: gesturestartposition.current.latitude,\n        //     // initlon: gesturestartposition.current.longitude,\n        // })\n    \n    }\n\n    useEffect(() => {\n        // this prevents the browser from intercepting the right click\n        window.addEventListener(\"contextmenu\", e => e.preventDefault());\n    },[])\n\n\n    return (\n        <div>\n            <div className={'EarthController'} ref={controllerRef}></div>\n            {/* <div  className='Debug'>\n                {debugtext.current}\n            </div> */}\n            {/* <animated.div {...bind2()} style={{ x, y }}  className='Debug'>\n                {debugtext}\n            </animated.div> */}\n            {/* {debughtml} */}\n            {/* <LogPanel items={logitems}/> */}\n        </div>\n    )\n\n    \n})","import React from 'react';\nimport './LookAtWidget.css' \n// npm install --save-dev @iconify/react @iconify-icons/ic\nimport { Icon } from '@iconify/react';\n// import baselineFlare from '@iconify-icons/ic/baseline-flare';\nimport focusIcon from '@iconify-icons/et/focus';\n\n\n\n\n\nfunction LookAtWidget({active}) {\n\n    return (\n        <div className='LookAtWidget' style={{display:active?'flex':'none'}}>\n            <div className='Mire'>\n                <Icon icon={focusIcon} width='30px' height='40px'/>\n            </div>\n            \n        </div>\n     )\n}\n\nexport default LookAtWidget;\n","import React, {useCallback} from 'react'\nimport { Icon } from '@iconify/react';\nimport {AppContext} from '../app/context'\n\nimport outlineRemoveRedEye from '@iconify-icons/ic/outline-remove-red-eye';\nimport baselineArrowCircleRight from '@iconify-icons/ic/baseline-arrow-circle-right';\nimport baselineArrowCircleLeft from '@iconify-icons/ic/baseline-arrow-circle-left';\n\nimport './ViewProductControl.css' \n\nfunction ViewProductControl({active}) {\n\n    const [ state, dispatch ] = React.useContext(AppContext)\n    \n    const previous = useCallback( (event) => {\n        event.stopPropagation()\n        dispatch({type:'gotopreviousitem'})\n        // dispatch({type:'gotopreviousitem'})\n    }, [])\n\n    const closest = useCallback( (event) => {\n        event.stopPropagation()\n        dispatch({type:'gotoclosestitem'})\n        // dispatch({type:'gotopreviousitem'})\n    }, [])\n\n    const next = useCallback( (event) => {\n        event.stopPropagation()\n        dispatch({type:'gotonextitem'})\n    }, [])\n\n    return (\n        <div className={state.leftHanded?'ViewProductControlL':'ViewProductControl'} style={{display:active?'flex':'none'}}>\n            <Icon icon={baselineArrowCircleLeft} width='50px' onClick={previous}/>      \n            {/* <Icon icon={outlineRemoveRedEye} width='40px' onClick={closest}/>       */}\n            <Icon icon={baselineArrowCircleRight} width='50px' onClick={next}/>      \n        </div>\n     )\n}\n\nexport default ViewProductControl\n","import React, {useState, useEffect, useCallback} from 'react'\nimport { Icon } from '@iconify/react';\nimport {AppContext} from '../app/context'\nimport outlineFilterAlt from '@iconify-icons/ic/outline-filter-alt';\nimport baselineFilterAlt from '@iconify-icons/ic/baseline-filter-alt';\n\n\n\n\n\nimport './FilterProductControl.css' \n\nfunction FilterProductControl({active}) {\n\n    const [ state, dispatch ] = React.useContext(AppContext)\n    const [ filter, setfilter ] = useState(state.filter)\n    \n    const handleClick = useCallback( (event) => {\n        event.stopPropagation()\n        dispatch({type:'set_filter'})\n    },[])\n\n    // useEffect(() => {\n    //     // console.log('filter')\n    //     console.log(state.filter)\n\n    //     // setfilter(state.filter)\n    // },[state.filter])\n\n\n    return (\n        <div className={state.leftHanded?'FilterProductControlL':'FilterProductControl'} style={{display:active?'flex':'none'}}>\n            {/* <Icon icon={filter.length === 0 || filter == null ?outlineFilterAlt:baselineFilterAlt} width='40px' onClick={handleClick}/>             */}\n            <Icon icon={state.filter.length == 0 ?outlineFilterAlt:baselineFilterAlt} width='40px' onClick={handleClick}/>            \n        </div>\n     )\n}\n\nexport default FilterProductControl\n","import {useState, useEffect, useRef} from 'react'\nimport { OAuth2Client, OAuth2Fetch } from '@badgateway/oauth2-client'    \n\n\nexport default function useFetcher() {\n    // State and setters for debounced value\n    const controller = useRef(null)\n    const token = useRef(null) \n    const lastServer = useRef(null)\n    const [param, setParam] = useState({})\n\n    const get_token = async (server, tokenendpoint, granttype, user, pass) => {\n        // server, tokenendpoint, granttype, user, pass\n    //   console.log(server)\n    //   console.log(tokenendpoint)\n      let client = null\n      switch(granttype) {\n          case \"client_credentials\":\n              console.log('client_credentials!!!')\n              client = new OAuth2Client({\n                  server: server,\n                  clientId: user,\n                //   clientId: \"rs-ddip-frontend\"\n                  clientSecret: pass,         \n                  tokenEndpoint: tokenendpoint,        \n              })       \n              return new OAuth2Fetch({\n                  client: client,\n                  getNewToken: async () => {\n                      return  client.clientCredentials()\n                  },\n                  onError: (err) => {\n                      console.log(err)\n                      throw new Error(`401`)\n                      }\n                  })\n          case 'password':\n              console.log('password!!!')\n              client = new OAuth2Client({\n                  server: server,\n                  clientId: \"cdse-public\",\n                //   clientId: \"user-web-client\",\n                  tokenEndpoint: tokenendpoint,        \n              })   \n\n              console.log(client)\n\n\n              return new OAuth2Fetch({\n                  client: client,\n                  getNewToken: async () => {\n                    return  client.password({\n                        username: user,\n                        password: pass,         \n                    })\n                    \n                  },\n                  // storeToken: (token) => {\n                  //     console.log(token)\n                  //     dispatch({ type: \"set_token\", value: JSON.stringify(token)})\n                  // },\n                  // getStoredToken: () => {\n                  //     if (state.token) return JSON.parse(state.token)\n                  //     return null\n                  //   },\n                  onError: (err) => {\n                      console.log(err)\n                      throw new Error(`401`)\n                      }\n                  })\n      \n          default:\n            console.log('default')\n              client = new OAuth2Client({\n                  server: server,\n                  clientId: user,\n                  clientSecret: pass,         \n                  tokenEndpoint: tokenendpoint,        \n              })       \n\n              return new OAuth2Fetch({\n                  client: client,\n                  getNewToken: async () => {\n                      return client.clientCredentials()\n                  },\n                  onError: (err) => {\n                      console.log(err)\n                      throw new Error(`401`)\n                      }\n                  })\n      \n\n      }\n    }\n\n    const fetchURL = async (url, server, tokenendpoint, grantType, user, pass) => {\n      controller.current = new AbortController()\n    //   console.log('server:'+server+'  tokenendpoint:'+tokenendpoint+'  grantType:'+grantType+'  user:'+user+'  pass:'+pass)\n    //   console.log('fetching: '+url)\n      let response\n\n        // reset token if server changed\n        if (server !== lastServer.current) {\n            token.current = null\n            lastServer.current = server\n            console.log('token reset')\n        }\n      if(tokenendpoint) {\n        // console.log(token.current)\n        if(token.current == null || token.current.token == null) {\n            console.log('will get token')\n            try {\n                token.current =  await get_token(server, tokenendpoint, grantType, user, pass)\n            }\n            catch(err) {\n                console.log(err)\n                throw new Error('401')\n                return null\n            }\n            \n          }\n        //   console.log(token.current)\n\n        // if(token.current.token == null) {\n        //     console.log('empty token !')\n        //     // token.current = null\n        //     throw new Error('401')\n        // }\n    \n          try {\n            response = await token.current.fetch(url, \n                {\n                mode: 'cors', \n                credentials: 'include', \n                signal: controller.current.signal,\n                headers: {\n                    \"Content-Type\": \"text/plain\",\n                    // 'Authorization': 'Bearer ' + window.btoa(user+\":\"+pass),\n                },\n                })\n            if(response.status == 401) {\n                // setStatus(newurl)\n                token.current = null\n                throw new Error('401')\n            }\n            return response\n            }\n          catch(err) {\n              console.log(err)\n              console.log(\"error token fetch\")\n              token.current = null\n              throw new Error(err)\n          }\n      } else {\n            try {\n                response = await fetch(url, \n                    {\n                    mode: 'cors', \n                    credentials: 'include', \n                    headers: {\n                        \"Content-Type\": \"text/plain\",\n                        'Authorization': 'Basic ' + window.btoa(user+\":\"+pass),\n                    },\n                    signal: controller.current.signal\n                    })\n                if(response.status == 401) {\n                    // setStatus(newurl)\n                    token.current = null\n                    // throw new Error('401')\n                }\n                return response\n            }\n            catch (err) {\n                console.log(err)\n                console.log(\"error basic fetch\")\n                // if(err == 401) throw new Error('401')\n                \n            }\n\n        }\n\n    }\n\n    const abort_fetchURL = () => {\n        if(controller && controller.current) {\n            controller.current.abort()\n        }\n    }\n\n    const init_fetcher = async (server, tokenendpoint, grantType, user, pass) => {\n        setParam({\n            server: server, \n            tokenendpoint: tokenendpoint, \n            grantType:grantType,\n            user: user, \n            pass: pass})\n    }\n\n\n    // useEffect(\n    //   () => {\n    //     // Update debounced value after delay\n    //     const handler = setTimeout(() => {\n    //       setDebouncedValue(value);\n    //     }, delay);\n  \n    //     // Cancel the timeout if value changes (also on delay change or unmount)\n    //     // This is how we prevent debounced value from updating if value is changed ...\n    //     // .. within the delay period. Timeout gets cleared and restarted.\n    //     return () => {\n    //       clearTimeout(handler);\n    //     };\n    //   },\n    //   [value, delay] // Only re-call effect if value or delay changes\n    // );\n  \n    return { fetchURL, init_fetcher, abort_fetchURL}\n  }","import React, {useEffect, useRef} from 'react';\nimport {AppContext} from '../app/context'\n\nimport './Earth.css'\nimport { useEww } from \"./useEww\"\nimport { useDebounce } from '../../hooks/useDebounce';\nimport {FluidWorldWindowController} from './FluidWorldWindowController'\n// import InfoPanel from \"../infopanel\"\nimport LookAtWidget from './LookAtWidget'\nimport ViewProductControl from '../viewproductcontrol/ViewProductControl'\nimport FilterProductControl from './FilterProductControl'\nimport useFetcher  from '../../hooks/useFetcher';\n\nimport { useKey, useKeyRef } from 'rooks'\n\nconst Earth = ({ id }) => {\n\n    const [ state, dispatch ] = React.useContext(AppContext)\n\n    const ref = useRef('keys')\n\n\n\n    const handleSimpleClick = (e) => {\n        let selection = getRenderables(e.pageX,e.pageY)\n        if (selection.length === 0) return\n        // selection[0].highlighted = true\n        console.log('items clicked: '+selection.length)\n        dispatch({type: 'set_selectedProduct', value: selection[0]})\n    }\n\n\n    const {\n        eww,\n        ewwstate,\n        initMap,\n        moveTo,\n        addGeojson,\n        removeGeojson,\n        toggleGeojson,\n        toggleQuicklooks,\n        addQuicklook,\n        removeQuicklooks,\n        getRenderables,\n        addQuicklookWMS,\n        removeQuicklookWMS,\n        toggleQuicklookWMS,\n        toggleProjection,\n        toggleAtmosphere,\n        toggleStarfield,\n        toggleBg,\n        toggleNames,\n        toggleOv,\n        toggleModel,\n        setTime,\n        setFilter,\n        toggleDem,\n        northUp,\n        setMode,\n        setColor\n    } = useEww({\n        id: id\n    })\n\n    const debouncedclosestItem = useDebounce(state.closestItem, 500)\n    const debouncedviewpoint = useDebounce(ewwstate.viewpoint, 500)\n    // const debouncedewwstate = useDebounce(ewwstate, 100)\n\n    const {fetchURL, abort_fetchURL} = useFetcher()\n\n    const myDispatch = (event,action) => {\n        console.log(event.target.tagName)\n        if(event.target.tagName === 'BODY') dispatch({type: action.type})\n    }\n\n    // const myUseKey = (event,callback) => {\n    //     console.log(event.target.tagName)\n    //     if(event.target.tagName === 'BODY') callback(event)\n    // }\n\n    useKey(['p'],(e) => myDispatch(e,{ type: \"toggle_projection\" }))\n    useKey(['c'],(e) => myDispatch(e,{ type: \"clearResult\"}))\n    useKey(['u'],(e) => myDispatch(e,{ type: \"north_up\"}))\n    useKey(['w'],(e) => myDispatch(e,{ type: \"toggle_quicklooks\"}))\n    useKey(['b'],(e) => myDispatch(e,{ type: \"toggle_background\" }))\n    useKey(['m'],(e) => myDispatch(e,{ type: \"toggle_satellites\" }))\n    useKey(['d'],(e) => myDispatch(e,{ type: \"toggle_dem\" }))\n    useKey(['o'],(e) => myDispatch(e,{ type: \"toggle_overlay\" }))\n    useKey(['a'],(e) => myDispatch(e,{ type: \"toggle_atmosphere\" }))\n    useKey(['s'],(e) => myDispatch(e,{ type: \"toggle_starfield\" }))\n    useKey(['n'],(e) => myDispatch(e,{ type: \"toggle_names\" }))\n\n    useEffect(() => {\n        // console.log('set_altitude')\n        if(ewwstate.altitude) {\n            // console.log('set_altitude: '+ewwstate.altitude)\n            dispatch({ type: \"set_altitude\", value: ewwstate.altitude})\n        }\n    },[ewwstate.altitude, dispatch])\n\n    useEffect(() => {\n        // console.log('set_searchPoint')\n        dispatch({ type: \"set_searchPoint\", value: ewwstate.viewpoint})\n    },[debouncedviewpoint, dispatch])\n\n    useEffect(() => {\n        // console.log('set_position')\n        dispatch({ type: \"set_position\", value: {lat:ewwstate.latitude, lon:ewwstate.longitude}})\n    },[ewwstate.longitude, ewwstate.latitude, dispatch])\n\n\n    useEffect(() => {\n        dispatch({ type: \"set_tics\", value: ewwstate.tics})\n    },[ewwstate.tics, dispatch])\n\n\n\n    useEffect(() => {\n        // console.log('viewdate')\n        setTime(new Date(state.viewDate))\n    },[state.viewDate])\n\n    useEffect(() => {\n        setColor(state.appColor)\n    },[state.appColor])\n\n    useEffect(() => {\n        if(!state.productOn) return\n        toggleGeojson(state.productOn)\n        toggleQuicklooks(state.productOn)\n        toggleQuicklookWMS(!state.productOn)\n    },[state.productOn])\n\n    useEffect(() => {\n        if(state.geojson !== null) {\n            addGeojson(state.geojson,new Date(state.viewDate))\n        } \n    },[state.geojson])\n\n    useEffect(() => {\n        if(state.filter !== null) {\n            setFilter(state.filter)\n        } \n    },[state.filter])\n\n    useEffect(() => {\n        removeGeojson()\n        removeQuicklooks()\n        removeQuicklookWMS()\n        // dispatch({type: 'set_selectedProduct', value: null})\n\n        // dispatch({ type: \"set_closestitem\", value: null})\n        // dispatch({ type: \"set_goToDate\", value: null})\n        // dispatch({ type: \"set_tics\", value: []})\n    }, [state.clearResultsTrigger]);\n\n    useEffect(() => {\n        toggleAtmosphere(state.mapSettings.atmosphere)\n        setTime()\n    }, [state.mapSettings.atmosphere]);\n\n    useEffect(() => {\n        if(state.mapSettings.satelliteList) toggleModel(state.mapSettings.satellites, state.mapSettings.satelliteList)\n    }, [state.mapSettings.satellites, state.mapSettings.satelliteList]);\n\n    // useEffect(() => {\n    //     console.log(state.mapSettings.satelliteList)\n    // }, [state.mapSettings.satelliteList]);\n\n    useEffect(() => {\n        toggleStarfield(state.mapSettings.starfield)\n        setTime()\n\n    }, [state.mapSettings.starfield]);\n\n    useEffect(() => {\n        console.log(state.mapSettings.names)\n        toggleNames(state.mapSettings.names)\n    }, [state.mapSettings.names]);\n\n    useEffect(() => {\n        toggleProjection(state.mapSettings.projection)\n    }, [state.mapSettings.projection]);\n\n    useEffect(() => {\n        toggleBg(state.mapSettings.background)\n    }, [state.mapSettings.background]);\n\n    useEffect(() => {\n        northUp()\n    }, [state.mapSettings.northup]);\n\n    useEffect(() => {\n        console.log('Overlay: '+state.mapSettings.overlay)\n        toggleOv(state.mapSettings.overlay)\n    }, [state.mapSettings.overlay]);\n\n    useEffect(() => {\n        toggleDem(state.mapSettings.dem)\n    }, [state.mapSettings.dem]);\n\n    useEffect(() => {\n        toggleQuicklooks(state.mapSettings.quicklooks)\n    }, [state.mapSettings.quicklooks]);\n\n    useEffect(() => {\n        // console.log('closest item changed')\n        dispatch({ type: \"set_closestitem\", value: ewwstate.closestRenderable})\n    },[ewwstate.closestRenderable])\n\n  \n    const getcredential = (key) => {\n        for(let i=0; i < state.credentials.length; i++) {\n            if(state.credentials[i].key === key) {\n                return {user:state.credentials[i].user,pass:state.credentials[i].pass,grantType:state.credentials[i].grantType}\n            }\n        }\n        return {user:\"\",pass:\"\",grantType:''}\n    }\n    \n    const getcollection = (code) => {\n        for(let i=0; i < state.collections.length; i++) {\n            if(state.collections[i].code === code) {\n                return state.collections[i]\n            }\n        }\n        return null\n    }\n\n\n    useEffect(() => {\n        if(state.mapSettings.quicklooks && debouncedclosestItem && !state.searching) {\n            // should set credentials as a state to not redo this each time\n            let target = getcollection(state.dataset)\n            let key = target.templateUrl.split(\"/\")[2]\n            let credential = getcredential(key)\n\n            let idx, server, tokenendpoint, granttype = ''\n            if(target.tokenEndpoint) {\n                idx = target.tokenEndpoint.split('/', 3).join('/').length\n                server = target.tokenEndpoint.substring(0,idx)\n                tokenendpoint = target.tokenEndpoint.substring(idx)\n                granttype = target.grantType\n            }\n            addQuicklook(debouncedclosestItem.closest, server, tokenendpoint, granttype, credential, state.animated, fetchURL, abort_fetchURL)\n        }\n    }, [debouncedclosestItem]);\n\n    useEffect(() => {\n        if(state.closestItem != null && state.goToPos != null) {\n            moveTo(state.goToPos.lat, state.goToPos.lon, state.goToPos.alt)\n        }\n    }, [state.goToPos])\n \n    useEffect(() => {\n        if(state.addQuicklookWMSTrigger !== null) {\n            addQuicklookWMS(state.selectedProduct)\n        }\n    }, [state.addQuicklookWMSTrigger]);\n \n    useEffect(() => {\n        if(state.animated) {\n            setMode('animated')\n        } else {\n            setMode(state.browseMode)\n        }\n    }, [state.browseMode, state.animated]);\n \n    \n    useEffect(() => {\n        let geolocation = null\n        let ilat = state.position.clat\n        let ilon = state.position.clon\n        let ialt = state.altitude\n\n        // if(window.navigator && window.navigator.geolocation) {\n        //     geolocation = window.navigator.geolocation\n        // }\n        // if(geolocation) {\n        //     geolocation.watchPosition(onLocationUpdate, onError,{\n        //         enableHighAccuracy:true,\n        //         maximumAge:1000\n        //     })\n        // } else {\n        //     console.log('No geoloc')\n        // }\n        // function onLocationUpdate(event) {\n        //     console.log(event.coords.latitude)\n        //     ilat = event.coords.latitude\n        //     ilon = event.coords.longitude\n        //     ialt = 3000\n        // }\n        // function onError(err) {\n        //     console.log(\"Error geoloc: \"+err)\n        // }\n\n        console.log(\"Creating world\"+' / '+ilat+' / '+ilon+' / '+ialt)\n\n        setTimeout(() => {\n            initMap({\n                clat: ilat,\n                clon: ilon,\n                alt: ialt,\n                starfield: state.mapSettings.starfield,\n                atmosphere: state.mapSettings.atmosphere,\n                background: state.mapSettings.background,\n                overlay: state.mapSettings.overlay,\n                satellites: state.mapSettings.satellites,\n                satelliteList: state.mapSettings.satelliteList,\n                names: state.mapSettings.names,\n                projection: state.mapSettings.projection,\n                dem: state.mapSettings.dem\n            })\n            setTime(new Date(state.viewDate))\n            // moveTo(state.position.clat, state.position.clon, state.altitude) \n        }, 1000)\n\n    }, []);\n    \n\n\n    let globeStyle = {\n        background: 'black',\n        position: \"fixed\",\n        left: 0,\n        top: 10,\n        width: '100%',\n        height: '100%'\n    };\n\n    let globeControllerStyle = {\n        background: 'red',\n        position: \"fixed\",\n        left: '100px',\n        bottom:'100px',\n        width: '100%',\n        height: '200px',\n    };\n\n        \n    return (\n        <div>\n            {/* {useMemo(\n                () => { return(<canvas className={'Earth'} id={id} />)},\n                [id]\n            )} */}\n            <canvas  ref={ref} id={id} className={'Earth'} />\n            <FluidWorldWindowController world={eww} onSimpleClick={handleSimpleClick}/>\n            <LookAtWidget active={(state.searchMode === 'point')}/>\n            <ViewProductControl active={state.closestItem != null}/>\n            <FilterProductControl active={state.closestItem != null}/>\n            {/* <InfoPanel top= '100px' left= '5px'>\n                <div className='Quiklook'><img src={QLimage?QLimage.src:''}  alt='' width='150px'/></div>\n            </InfoPanel> */}\n        </div>\n    );\n}\n\nexport default Earth\n","import React, {useState} from \"react\";\nimport {useSpring, animated} from 'react-spring'\nimport { useGesture } from 'react-use-gesture'\nimport \"./controlpanel.css\"\n// npm install --save-dev @iconify/react @iconify-icons/ic\nimport { Icon } from '@iconify/react';\n// import baselineExplore from '@iconify-icons/ic/baseline-explore';\nimport baselinePalette from '@iconify-icons/ic/baseline-palette';\nimport {AppContext} from '../app/context'\n\n\n\n\n\n// import MissionSelector from \"./missionselector\";\n\n\n\n\n\nfunction ControlPanel(props) {\n\n    const [open, setOpen] = useState(false)\n    const [mask, setMask] = useState(false)\n    const panelcontrol = React.useRef(null)\n\n    const [ state,  ] = React.useContext(AppContext)\n\n\n    const [{ mr },set] = useSpring(() =>({ mr:  -300 }))\n    const bind = useGesture( {\n        onDragStart: ()=>setMask(true),\n        onDrag: ({ down, delta, vxvy, movement }) => {\n            // if(vxvy[1]>1 ) {\n            //     openPanel()\n            //     // set.start({\n            //     //     mr: -300,\n            //     //     immediate: false,\n            //     //     onRest: ()=>{setTimeout(()=>setOpen( true),2000)} \n            //     // })\n                \n            // } else {\n                set.start({\n                    mr: down?-movement[1]:(movement[1]>100)?-300:open?-300:0,\n                    immediate: false,\n                    onChange: ()=>{ \n                        setOpen( (mr.get() === 0)?true:false)\n                    },\n                    onRest: ()=> {\n                        if(!down) {\n                            setOpen( (mr.get() === 0)?true:false)\n                        }\n                    }\n                })\n            // }\n        },\n        onDragEnd: () => {\n            setTimeout( ()=>setMask(false), 600)\n        },\n    },\n    {\n        // domTarget: panelcontrol,\n        drag: {useTouch: true},\n        pinch: {useTouch: true},\n    })\n\n    return   (\n\n        <animated.div  style={{ bottom: mr, left:0 }} className='ControlPanel'>\n            <div ref={panelcontrol} {...bind()} className={state.leftHanded?'PanelControlL shadow':'PanelControl shadow'} >\n                {/* <img id='logo'className='Logo' src='./images/EOi_logo.png' alt='' onClick={()=>!open?set({mr:-300}):set({mr:0})} /> */}\n                {/* <div className='PanelControl' alt='' onClick={()=>!open?set({mr:-300}):set({mr:0})}></div> */}\n                <Icon icon={baselinePalette} width='100%'/>\n            </div>\n            <div className='ControlPanelMask' style={{display: !mask?'none':'block'}}/>\n            <div className='ControlPanelBlend'>\n                {props.children}\n                </div>\n        \n        </animated.div>\n\n\n    )\n    \n}\n\nexport default ControlPanel\n","import React from \"react\";\nimport {useSpring, animated} from 'react-spring'\nimport { useDrag } from 'react-use-gesture'\nimport \"./InfoPanel.css\"\n\n\n\n// import MissionSelector from \"./missionselector\";\n\n\n\n\n\nfunction InfoPanel(props) {\n\n    const [{ x, y }, api] = useSpring(() => ({ x: 0, y: 0 }))\n    const bind2 = useDrag(({ offset: [x, y] }) => api.start({ x, y }))\n\n\n    return   (\n\n        <animated.div {...bind2()} style={{ x, y }}  className='Infopanel'>\n        {props.children}\n    </animated.div>\n\n\n    )\n    \n}\n\nexport default InfoPanel\n","import React  from 'react';\nimport {AppContext} from '../app/context'\nimport { useKey } from 'rooks'\n\n\nimport './Mood.css' \nimport { useEffect, useState } from 'react';\n\nfunction Mood() {\n\n    // const [altitude, ] = useGlobal('altitude')\n    const [ state, dispatch  ] = React.useContext(AppContext)\n\n\n    const [mood, setmood] =  useState('🙂')\n    const [defmood, setdefmood] =  useState('🙂')\n\n    // useKey(['l'],()=>{\n    //     dispatch({type:'toggle_lefthanded'})\n    // })\n\n    useKey(['l'],(e) => {console.log('l:  '+e.target.tagName);if(e.target.tagName === 'BODY') dispatch({type:'toggle_lefthanded'})})\n\n\n    useEffect(() => {\n        setdefmood(state.animated?'🥵':'🙂')\n        setmood(state.animated?'🥵':'🙂')\n    }, [state.animated]);\n\n    useEffect(() => {\n        // console.log('searching...')\n        // console.log('searching: '+state.searching)\n        setmood(state.searching?'🧐':defmood)\n    }, [state.searching]);\n\n\n    return (\n        <div className='Mood'>\n            <div className='offset'>{mood}</div>\n        </div>\n     )\n}\n\nexport default Mood;\n","import React, {useCallback} from 'react'\nimport { Icon } from '@iconify/react';\nimport {AppContext} from '../app/context'\nimport JSONCrush from \"jsoncrush\"\n\n\nimport outlineIosShare from '@iconify/icons-ic/outline-ios-share';\n\nimport './Share.css' \n\nfunction Share({active}) {\n\n    const [ state, dispatch ] = React.useContext(AppContext)\n    \n    const handleClick = useCallback( (event) => {\n        let newloc = window.location.href.split('?')[0]\n        let savedstate = JSON.parse(window.localStorage.getItem(\"eoi_state\"))\n        newloc = newloc + '?s=' + encodeURIComponent(JSONCrush.crush(JSON.stringify(savedstate)))\n        console.log(newloc)\n        navigator.share({url:newloc, text:'Care for the Earth...'})\n    }, [])\n\n    return (\n        <div className={state.leftHanded?'ShareL':'Share'} >\n            <Icon icon={outlineIosShare} width='40px' onClick={handleClick}/>            \n        </div>\n     )\n}\n\nexport default Share\n","import React, { useState, useEffect } from \"react\";\nimport {AppContext} from '../app/context'\n\n\nimport './DatasetSelector.css'\n\n\n// should use a prop\n\nfunction DatasetSelector() {\n\n    const [ state, dispatch ] = React.useContext(AppContext)\n\n    \n\n    return (\n        <div className='DatasetSelectorContainer'>\n            <div className='DatasetSelector'>\n                {state.collections.map( (coll)  => (\n                    <div key={coll.code} className={(state.dataset === coll.code)?'CircleButtonSelected':'CircleButton'}>\n                        <img className='DatasetIcon' src={coll.logo} alt={coll.code} onClick={\n                            () => dispatch({ type: \"set_dataset\", value: [coll.code, coll.satellites, coll.cycle, coll.defaultFreetext?coll.defaultFreetext:coll.code, coll.windowSize]})\n                        } /></div>\n                    ))}\n                </div>\n        </div>\n        \n    )\n\n}\n\nexport default DatasetSelector;\n","import React from \"react\";\nimport {AppContext} from '../app/context'\nimport { Icon } from '@iconify/react';\nimport roundLayers from '@iconify/icons-ic/round-layers';\nimport twotoneLayers from '@iconify/icons-ic/twotone-layers';\nimport baselineBlurOn from '@iconify/icons-ic/baseline-blur-on';\nimport baselineExplore from '@iconify/icons-ic/baseline-explore';\n\n\nimport './MapSelector.css'\n\n\n// should use a prop\n\nfunction MapSelector() {\n\n    const [ state, dispatch ] = React.useContext(AppContext)\n\n    const toggleAtmosphere = () => dispatch({ type: \"toggle_atmosphere\" })\n    const toggleStarfield = () => dispatch({ type: \"toggle_starfield\" })\n    const toggleNames = () => dispatch({ type: \"toggle_names\" })\n    const toggleOverlay = () => dispatch({ type: \"toggle_overlay\" })\n    const toggleBg = () => dispatch({ type: \"toggle_background\" })\n    const togglePr = () => dispatch({ type: \"toggle_projection\" })\n\n\n    \n    //console.log('mission rendering')\n    return (\n        <div className='MapSelectorContainer'>\n            <div className='MapSelector'>\n                <div className={(state.mapSettings.atmosphere)?'CircleButtonSelected':'CircleButton'}><img className='MapIcon' draggable=\"false\" src='./images/atmosphere.png' alt='' onClick={toggleAtmosphere} /></div>\n                <div className={(state.mapSettings.starfield)?'CircleButtonSelected':'CircleButton'}><img className='MapIcon' draggable=\"false\" src='./images/starfield.png' alt='' onClick={toggleStarfield} /></div>\n                {/* <div className={(state.mapSettings.names)?'CircleButtonSelected':'CircleButton'}><Icon icon={baselineExplore}  onClick={toggleNames} width='50px'/></div> */}\n                <div className='CircleButton'><Icon icon={roundLayers}  onClick={toggleBg} width='50px'/></div>\n                <div className='CircleButton'><Icon icon={twotoneLayers}  onClick={toggleOverlay} width='50px'/></div>\n                <div className='CircleButton'><Icon icon={baselineBlurOn}  onClick={togglePr} width='50px'/></div>\n\n                \n                {/* <div className={(state.mapSettings.names)?'CircleButtonSelected':'CircleButton'}><img className='MapIcon' draggable=\"false\" src='./images/names.png' alt='' onClick={toggleNames} /></div> */}\n                {/* <div className='CircleButton'><img className='MapIcon' draggable=\"false\" src='./images/names.png' alt='' onClick={toggleBg} /></div> */}\n                {/* <div className='CircleButton'><img className='MapIcon' draggable=\"false\" src='./images/names.png' alt='' onClick={toggleOverlay} /></div> */}\n                {/* <div className='CircleButton'><img className='MapIcon' draggable=\"false\" src='./images/names.png' alt='' onClick={togglePr} /></div> */}\n            </div>\n        </div>\n    )\n}\n\nexport default MapSelector;\n","\nimport React, { useEffect } from \"react\";\nimport {AppContext} from '../components/app/context'\n\nimport './ColorSelector.css'\nimport { HexColorPicker } from \"react-colorful\";\n\nfunction ColorSelectorContainer() {\n\n\n    const [ state, dispatch ] = React.useContext(AppContext)\n\n\n    useEffect(() => {\n        document.documentElement.style.setProperty('--color', state.appColor);\n        document.documentElement.style.setProperty('--colort', state.appColor+'66');\n    }, [state.appColor]);\n    \n    const handleChangeComplete = (color) => {\n        if(color !== null) dispatch({type: 'set_color', value: color})\n        // document.documentElement.style.setProperty('--color', color);\n         \n        // document.documentElement.style.setProperty('--colort', color+'66');\n        // setappColor(color );\n        // console.log(appColor)\n\n      };\n\n    //   useEffect(() => {\n    //     document.documentElement.style.setProperty('--color', state.appColor);\n    //     document.documentElement.style.setProperty('--colort', state.appColor+'66');\n    // }, []);\n\n    \n    //console.log('mission rendering')\n    return (\n        <div className='ColorSelector'>\n            <HexColorPicker color={state.appColor} onChange={handleChangeComplete} style={{height:'150px', width:'140px'}}/>\n        </div>\n    )\n    // <AlphaPicker />  \n}\n\nexport default ColorSelectorContainer;\n\n\n\n","\nimport React from \"react\";\nimport {AppContext} from '../app/context'\nimport { useKey } from 'rooks'\n\n\nimport './OptionsSelector.css'\nimport Switch from \"react-switch\";\n\nfunction OptionsSelector() {\n\n  useKey(['0'],()=>dispatch({ type: \"set_dataset\", value: [state.dataset,['s1a','s1b','s2a','s2b','s3a','s3b','s5p']]}))\n  useKey(['1'],()=>dispatch({ type: \"set_dataset\", value: [state.dataset,['s1a','s1b']]}))\n  useKey(['2'],()=>dispatch({ type: \"set_dataset\", value: [state.dataset,['s2a','s2b']]}))\n  useKey(['3'],()=>dispatch({ type: \"set_dataset\", value: [state.dataset,['s3a','s3b']]}))\n  useKey(['5'],()=>dispatch({ type: \"set_dataset\", value: [state.dataset,['s5p']]}))\n\n\n\n    const [ state, dispatch ] = React.useContext(AppContext)\n\n    \n    const handleDemChange = (checked) => {\n      dispatch({ type: \"set_dem\", value: checked})\n    }\n    const handleSatChange = (checked) => {\n      dispatch({ type: \"toggle_satellites\",  value: checked})\n    }\n    const handleConstellationChange = (checked) => {\n      dispatch({ type: \"set_constellation\", value: [['s1a','s1b','s2a','s2b','s3a','s3b','s5p'],checked]})\n    }\n    const handleStarfieldChange = (checked) => {\n      dispatch({ type: \"toggle_starfield\"})\n    }\n    const handleAtmosphereChange = (checked) => {\n      dispatch({ type: \"toggle_atmosphere\"})\n    }\n    const handleQuicklooksChange = (checked) => {\n      dispatch({ type: \"toggle_quicklooks\"})\n    }\n    \n    const handleLeftHanded = (checked) => {\n      dispatch({ type: \"toggle_lefthanded\"})\n    }\n    \n    //console.log('mission rendering')\n    return (\n        <div className='DemSelectorContainer'>\n          <div className='verticalContainer DemSelector' >\n\n          <div className='Selector horizontalContainer'>\n                <Switch id='satellites' onChange={handleSatChange} checked={state.mapSettings.satellites} />\n                <span className='Label'>Satellites</span>\n            </div>\n            <div className='Selector horizontalContainer'>\n                <Switch id='constellation' onChange={handleConstellationChange} checked={state.mapSettings.constellation} />\n                <span className='Label'>Constellation</span>\n            </div>\n            <div className='Selector horizontalContainer'>\n              <Switch id='dem' onChange={handleDemChange} checked={state.mapSettings.dem} />\n                <span className='Label'>Copernicus DEM</span>\n            </div>\n            <div className='Selector horizontalContainer'>\n              <Switch id='starfield' onChange={handleStarfieldChange} checked={state.mapSettings.starfield} />\n                <span className='Label'>Stars and Planets</span>\n            </div>\n            <div className='Selector horizontalContainer'>\n              <Switch id='atmosphere' onChange={handleAtmosphereChange} checked={state.mapSettings.atmosphere} />\n                <span className='Label'>Sun and Atmosphere</span>\n            </div>\n            <div className='Selector horizontalContainer'>\n              <Switch id='quicklooks' onChange={handleQuicklooksChange} checked={state.mapSettings.quicklooks} />\n                <span className='Label'>Quicklooks</span>\n            </div>\n            <div className='Selector horizontalContainer'>\n              <Switch id='lefthanded' onChange={handleLeftHanded} checked={state.leftHanded} />\n                <span className='Label'>Left Handed UI</span>\n            </div>\n            <div height='200px' flexgrow='2'>&nbsp;</div>\n          </div>\n        </div>\n    )\n}\n\nexport default OptionsSelector\n\n\n\n","import React, {useRef, useEffect, useCallback} from 'react';\nimport {AppContext} from '../app/context'\n\nimport './CollectionLabel.css' \n\nfunction CollectionLabel() {\n\n    // const [altitude, ] = useGlobal('altitude')\n    const [ state, dispatch ] = React.useContext(AppContext)\n\n    const inputRef = useRef(null)\n    \n\n    const getcollection = (code) => {\n        for(let i=0; i < state.collections.length; i++) {\n            if(state.collections[i].code === code) {\n                return state.collections[i]\n            }\n        }\n        return state.collections[0]\n    }\n\n\n\n    const search =  (event) => {\n        event.preventDefault()\n        event.stopPropagation()\n        inputRef.current.blur()\n        // console.log(event.target.value)\n        console.log(event)\n        if(inputRef.current.value == '') {\n            let collection= getcollection(state.dataset)\n            inputRef.current.value = collection.defaultFreetext?collection.defaultFreetext:collection.code\n        }\n        dispatch({ type: \"freetextsearch\", value: inputRef.current.value })\n    } \n    \n    useEffect(() => {\n        console.log(state.dataset)\n        let collection= getcollection(state.dataset)\n        console.log(collection)\n        inputRef.current.value = collection.defaultFreetext?collection.defaultFreetext:collection.code\n    }, [state.dataset])\n    \n\n    return (\n        // <div className='GenericLabel'>{state.dataset}</div>\n\n\n        <div className='FreeTextContainer'>\n            <form onSubmit={search}>\n                <label htmlFor=\"freetext\" className='CollCode'>{getcollection(state.dataset).name}: \n                    <input ref={inputRef} id='freetext' className='FreeText' type=\"text\" size='20' style={{width:200}}/>\n                </label>\n            </form>\n        </div>\n    )\n}\n\nexport default CollectionLabel;\n\n","import React from 'react';\nimport {AppContext} from '../app/context'\n\nimport './AltitudeLabel.css' \n\nfunction AltitudeLabel() {\n\n    // const [altitude, ] = useGlobal('altitude')\n    const [ state,  ] = React.useContext(AppContext)\n\n\n    const formatLat = (lat) => {\n        return (state.altitude >= 10000)?Math.floor(state.altitude / 1000)+ ' Km' : Math.floor(state.altitude)+ ' m'\n    }\n\n    return (\n        <div className='GenericLabel'>{formatLat(state.altitude)}</div>\n     )\n}\n\nexport default AltitudeLabel;\n","import React from 'react';\nimport {AppContext} from '../app/context'\n\nimport './SearchLabel.css' \n\nfunction SearchLabel() {\n\n    const [ state,  ] = React.useContext(AppContext)\n\n    return (\n        <div className='SearchLabel'>{state.resultDesc.totalLoaded === 0?'':state.resultDesc.totalLoaded+'/'+state.resultDesc.totalResults}</div>\n     )\n}\n\nexport default SearchLabel\n","import React from 'react';\nimport {AppContext} from '../app/context'\nimport Slider from '@mui/material/Slider'\nimport './WindowSizeController.css' \nimport { useKey } from 'rooks'\nimport { useEffect } from 'react'\nimport { useDebounce } from '../../hooks/useDebounce';\n\n\n\n\n\nexport default function WindowSizeController() {\n\n    const [ state, dispatch ] = React.useContext(AppContext)\n    const debouncedviewDate = useDebounce(state.viewDate, 200)\n\n\n    useKey([\"=\"],()=>handleSliderChange(state.searchWindow + 1000 * 60 * 60 * 24))\n    useKey([\"-\"],()=>handleSliderChange(state.searchWindow - 1000 * 60 * 60 * 24))\n\n    const handleSliderChange = (event) => {\n        // console.log(event)\n        let day = 1000 * 60 * 60 * 24\n        let value = typeof event ===\"number\"?Math.max(event,1000 * 60 * 60 * 24):event.target.value\n        // let startdate = Math.floor((state.searchDate - (event.target.value/2))/day) * day\n        // let enddate = Math.floor((state.searchDate + (event.target.value/2))/day) * day\n\n        let searchWinDay = Math.floor(value / day) * day\n        // console.log(searchWinDay/day)\n\n        // let startdate = Math.floor(state.searchDate/searchWinDay) * searchWinDay\n        let startdate = Math.floor(state.viewDate/searchWinDay) * searchWinDay\n        let enddate = startdate + searchWinDay\n\n\n        dispatch({ type: \"set_searchWindow\", value: {win: value, wins: startdate, wine: enddate} })\n    }\n\n    useEffect(() => {\n        console.log('slider chnge')\n        handleSliderChange(state.searchWindow)\n    }, [debouncedviewDate])\n\n\n\n    return (\n        // <Box sx={{ width: 300 }}>\n\n        <Slider className='Slider'\n            min = {1000 * 60 * 60 * 24}\n            max = {1000 * 60 * 60 * 24 * 100}\n            aria-label=\"Search Window\"\n            // defaultValue={state.searchWindow?state.searchwindow:1000 * 60 * 60 * 24}\n            value={typeof state.searchWindow === 'number' ? state.searchWindow : 1000 * 60 * 60 * 24}\n            // defaultValue = {1000 * 60 * 60 * 24}\n            // getAriaValueText={valuetext}\n            onChange={handleSliderChange}\n            color=\"secondary\"\n      />\n    // </Box>\n\n    );\n}","import React from 'react';\nimport dateFormat from \"dateformat\"\nimport './DateLabelCard.css';\n\nfunction DateLabel({date, highlight, handleLabelClick}) {\n\n    return (\n        <div className='LabelContainer' >\n            <span className={highlight ==='year'?'Highlighted':'NotHighlighted'} onClick={()=>handleLabelClick('year')}>{date.getUTCFullYear()}</span>-\n            <span className={highlight ==='month'?'Highlighted':'NotHighlighted'} onClick={()=>handleLabelClick('month')}>{dateFormat(date,'UTC:mmm').toUpperCase()}</span>-\n            <span className={highlight ==='day'?'Highlighted':'NotHighlighted'} onClick={()=>handleLabelClick('day')}>{dateFormat(date,'UTC:dd')}</span>\n            <span>&nbsp;&nbsp;&nbsp;</span> \n            <span className={highlight ==='hour'?'Highlighted':'NotHighlighted'} onClick={()=>handleLabelClick('hour')}>{dateFormat(date,'UTC:HH')}</span>:\n            <span className={highlight ==='minute'?'Highlighted':'NotHighlighted'} onClick={()=>handleLabelClick('minute')}>{dateFormat(date,'UTC:MM')}</span>:\n            <span className={highlight ==='second'?'Highlighted':'NotHighlighted'} onClick={()=>handleLabelClick('second')}>{dateFormat(date,'UTC:ss')}</span>  \n            <span>&nbsp;&nbsp;</span> \n        </div>\n    )\n}\nexport default DateLabel\n","\n    import { useState, useRef } from \"react\"\n    \n    export default function useHandleDoubleTap(tapCallback,doubleTapCallback) {\n\n        const [lastTap, setLasttap] = useState()\n        const clicktimeout = useRef()\n    \n        const handleTap = (event) => {\n            // console.log(event)\n            event.stopPropagation()\n            event.preventDefault()\n            const now = Date.now();\n            if (lastTap && (now - lastTap) < 300) {\n                clearTimeout(clicktimeout.current)   \n                doubleTapCallback();\n            } else {\n                setLasttap(now)    \n                clicktimeout.current = setTimeout(() => {\n                    tapCallback()\n                }, 300);\n            }\n\n        }\n\n        return {handleTap}\n\n\n    }\n    \n","import React, {useEffect, useState } from 'react';\nimport { useClock } from \"./useClock\"\nimport { useKey } from 'rooks'\nimport { Icon } from '@iconify/react'\n\n// npm install --save-dev @iconify/react @iconify-icons/ic\nimport roundFastForward from '@iconify-icons/ic/round-fast-forward';\nimport roundFastRewind from '@iconify-icons/ic/round-fast-rewind';\n\nimport roundPlayArrow from '@iconify-icons/ic/round-play-arrow';\nimport roundPause from '@iconify-icons/ic/round-pause';\n\nimport useHandleDoubleTap from '../../../../hooks/useHandleDoubleTap'\n\n\n\n\nimport './DateController.css';\n\nfunction DateController({startdate, onDateChange, onStateChange, animated, lefthanded}) {\n\n    // useClock must be redone to support real time increments\n    const {\n        date,\n        speed,\n        start,\n        stop,\n        reset,\n        increaseSpeed,\n        decreaseSpeed,\n        forceDate\n    } = useClock({\n        initdate: startdate\n    })\n\n    const [playing, setplaying ] = useState(animated) \n\n    useKey([\"t\"],()=>{setplaying((state)=>!state) })\n    useKey([\"r\"],()=>{reset() })\n    useKey([\".\"],()=>{increaseSpeed() })\n    useKey([\",\"],()=>{decreaseSpeed() })\n\n    \n    useEffect(() => {\n        onStateChange(playing)\n        if(playing === true) {\n            start()\n         } else stop()\n    },[playing, onStateChange, start, stop]);\n\n    useEffect(() => {\n        console.log('animated: '+animated)\n    },[animated]);\n\n    // useEffect(() => {\n    //     console.log('lefthanded: '+lefthanded)\n    // },[lefthanded]);\n\n    useEffect(() => {\n        // console.log(\"date from useclock :\"+date)\n        onDateChange(date)\n        //forceDate(date)\n        //setAppdate({appdate: new Date(date)})\n    },[date, onDateChange]);\n\n    useEffect(() => {\n        // console.log(\" force date: \"+startdate)\n        if(startdate !== null) forceDate(startdate)\n        \n        //forceDate(date)\n        //setAppdate({appdate: new Date(date)})\n    },[startdate, forceDate]);\n\n    const {handleTap} = useHandleDoubleTap(()=>{setplaying((state)=>!state)}, reset)\n\n//     <div className='buttoncontainer'>\n//     <Icon icon={roundFastRewind} onClick={decreaseSpeed} className='smallcontrolbutton shadow' style={{display:playing?'block':'none'}}/>\n// </div>\n// <div className='buttoncontainer'>\n//     <Icon icon={roundPlayArrow} onClick={handleTap} className='controlbutton shadow'/>\n// </div>\n// <div className='buttoncontainer'>\n//     <Icon icon={roundFastForward} onClick={increaseSpeed} className='smallcontrolbutton shadow' style={{display:playing?'block':'none'}}/>\n// </div>\n\n\n    return (\n        <div className={lefthanded?'DateControllerL':'DateController'} >\n                <div className={speed>0?'controlbutton shadow':'controlbutton shadow flipped'}>\n                    <Icon icon={playing?roundPause:roundPlayArrow} onClick={handleTap} className='controlbutton shadow'/>\n                </div>\n                <div className={lefthanded?'speedbarL':'speedbar'}>\n                    <Icon icon={roundFastRewind} onClick={decreaseSpeed} className='smallcontrolbutton shadow Backward' style={{display:playing?'block':'none'}}/>\n                    <span className='Speed' style={{display:playing?'block':'none'}}>x{Math.abs(speed)}</span>\n                    <Icon icon={roundFastForward} onClick={increaseSpeed} className='smallcontrolbutton shadow Forward' style={{display:playing?'block':'none'}}/>\n                </div>\n        </div>\n    )\n}\nexport default DateController\n\n\n","import { useState, useRef, useCallback } from \"react\";\n\n\nexport function useClock({  initdate }) {\n    // console.log('useClock renders')\n    //const { autoStart, duration } = settings || {};\n  \n    // let initDate = startdate\n    const [date, setDate] = useState(initdate)\n    const [speed, setSpeed] = useState(1)\n    const [playing, setplaying] = useState(false)\n    // const [stepstate, setStepstate] = useState(1000*60*60)\n    // const [refreshrate, setrefreshrate] = useState(200)\n    // const playing = useRef()\n    const step = useRef() \n    const refreshrate = useRef() \n    refreshrate.current = 200\n    // step.current = refreshrate.current\n    \n    const ldate = useRef()\n\n      // Control functions\n    const intervalRef = useRef()\n    const timeoutRef = useRef()\n    \n\n    function increaseSpeed() {\n        // stop()\n        step.current = (step.current > 0)? step.current *= 2:step.current /= 2\n        if(Math.abs(step.current) < refreshrate.current) step.current = refreshrate.current\n        console.log('step: '+step.current)\n        setSpeed(step.current/200)\n        // setStepstate((st)=>st*2)\n        // start()\n    }\n    function decreaseSpeed() {\n        step.current = (step.current > 0)? step.current /= 2:step.current *= 2\n        if(Math.abs(step.current) < refreshrate.current) step.current = -1 * refreshrate.current\n        console.log('step: '+step.current)\n        setSpeed(step.current/200)\n        // setStepstate((st)=>st/2)\n    }\n\n    function togglePause() {\n        if (playing) {\n            stop()\n        } else {\n            start()\n        }\n    }\n    \n    const start = useCallback( () => {\n        console.log('start clock')\n        if(!step.current) step.current = refreshrate.current\n        if (!playing) {\n            intervalRef.current = setInterval( ()=>{\n                ldate.current += step.current\n                setDate(new Date(ldate.current))\n            },refreshrate.current)\n        }\n        setplaying(true)\n    }, [])\n    \n    const stop = useCallback( () => {\n        console.log('stop clock')\n        if(timeoutRef.current) clearTimeout(timeoutRef.current)\n        if (intervalRef.current) clearInterval(intervalRef.current)\n        setplaying(false)\n    }, [])\n    \n\n    function reset() {\n        ldate.current = new Date().getTime()\n        setDate(new Date(ldate.current))\n\n    }\n\n     \n    const forceDate = useCallback( (newdate) => {\n        // console.log('forcedate useclock: '+newdate.toJSON())\n        ldate.current = newdate.getTime()\n        setDate(new Date(ldate.current))\n    }, [])\n\n    // useEffect(() => {\n    //     console.log('init start useclock '+initdate.toJSON())\n    //     ldate.current = initdate.getTime()\n    //     setDate(new Date(ldate.current))\n    // }, [initdate])\n\n\n\n  \n  return { date, speed, playing, togglePause, start, stop, reset, increaseSpeed, decreaseSpeed, forceDate };\n}\n","import React, {useState, useEffect, useRef} from 'react';\nimport './DateSelector.css';\n\nfunction DateSelectorScale({date, zoomfactor, resulttics, lefthanded, searchWinStart, searchWinEnd}) {\n\n    const scale = useRef(0)\n    const canvas = useRef(null)\n    const [timescale, setTimescale] = useState('')   \n    const leftHanded = useRef(lefthanded)   \n    // const [resultepochs, ] = useState(resulttics)   \n    \n    // saves the current zoom and date to handle the widow resize\n    const izoom = useRef(zoomfactor)    \n    const idate = useRef(date)    \n    const itics = useRef(resulttics)    \n    const isearchwinstart = useRef(0)    \n    const isearchwinend = useRef(0)    \n\n\n        \n    const scaleText = (_start, _zoom, _resulttics, _searchwinstart, _searchwinend) => {\n        // console.log('_start: '+_start.toJSON()+'  zoom: '+_zoom)\n        // if(!scale.current) return\n\n        let ctx = canvas.current.getContext(\"2d\");\n        ctx.font = \"14px Arial\"\n        ctx.shadowColor = \"rgba(0,0,0,0.8\"\n        ctx.shadowOffsetX = 1\n        ctx.shadowOffsetY = 1\n        ctx.shadowBlur = 2\n        ctx.clearRect(0, 0, window.innerWidth, window.innerHeight)\n\n            \n        const monthcode = ['JAN','FEB','MAR','APR','MAY','JUN','JUL','AUG','SEP','OCT','NOV','DEC']\n        const YEAR_LEVEL = 1000*60*60*24*30*3\n        const MONTH4_LEVEL = 1000*60*60*24*4\n        const MONTH_LEVEL = 1000*60*60*24*2\n        const DAY5_LEVEL = 1000*60*60*8\n        const DAY_LEVEL = 1000*60*70\n        const DAY_HOUR_LEVEL = 1000*60*30\n        const HOUR6_LEVEL = 1000*60*20\n        const HOUR3_LEVEL = 1000*60*7\n        const HOUR_LEVEL = 1000*60*3\n        const MIN20_LEVEL = 1000*60\n        const MIN10_LEVEL = 1000*30\n        const MIN2_LEVEL = 1000*5\n        const MIN_LEVEL = 1000*3\n\n        function pad(number, length) {  \n            var str = '' + number;\n            while (str.length < length) {\n                str = '0' + str;\n            }           \n            return str;        \n        }\n\n        function lefthand(classname)  {\n            return leftHanded.current?classname+'L':classname\n        }\n\n        let day, month, hour, year, minute = 0\n        let lastday =0\n        let lastmonth = 0\n        let lastyear = 0\n        let lasthour = 0\n        let lastminute = 0\n        let tics = []\n        let lastticslength = 0   \n        let labeloffset = 0\n\n        // let skip = parseInt(scale.current.style.fontSize)\n        // let iteration = 0\n        for ( let i=0 ; i < scale.current.offsetHeight ; i+=1 ) {\n            let refdate = new Date( (i- scale.current.offsetHeight/2) * _zoom + _start.getTime()  )\n            day = refdate.getUTCDate()\n            month = refdate.getUTCMonth()\n            hour = refdate.getUTCHours()\n            year = refdate.getUTCFullYear()\n            minute = refdate.getUTCMinutes()\n            \n\n            switch (true) {\n                case _zoom < MIN_LEVEL:\n                    labeloffset = 60000\n                    if(minute !== lastminute && i!==0) {\n                        if (minute !== 0 || hour !== 0) {\n                            tics.push({class:lefthand('HourTic'), pos: i, label: pad(hour,2)+':'+pad(minute,2)})\n                            // ctx.fillText(pad(hour,2)+':'+pad(minute,2), 2, i);\n                        } else {\n                            if (minute === 0 && hour === 0) {\n                                tics.push({class:lefthand('DayTic_h'), pos: i, label: pad(day,2)})\n                                tics.push({class:lefthand('MonthTic_h2'), pos: i, label: monthcode[month]})\n                                //tics.push({class:'YearTic_h', pos: i, label: year})\n\n                            }     \n                        }\n                    }\n                break\n\n                case _zoom < MIN2_LEVEL:\n                    labeloffset = 60000*2\n                    if(minute !== lastminute  && i!==0) {\n                        if( (minute !== 0 || hour !==0) && minute % 2 === 0) {\n                            tics.push({class:lefthand('HourTic'), pos: i, label: pad(hour,2)+':'+pad(minute,2)})\n                        } else {\n                            if (minute === 0 && hour === 0) {\n                                tics.push({class:lefthand('DayTic_h'), pos: i, label: pad(day,2)})\n                                tics.push({class:lefthand('MonthTic_h2'), pos: i, label: monthcode[month]})\n                                //tics.push({class:'YearTic_h', pos: i, label: year})\n                            }     \n                        }\n                    }\n                break\n\n\n                case _zoom < MIN10_LEVEL:\n                    labeloffset = 60000*10\n                    if(minute !== lastminute  && i!==0) {\n                        if( (minute !== 0 || hour !==0) && minute % 10 === 0) {\n                            tics.push({class:lefthand('HourTic'), pos: i, label: pad(hour,2)+':'+pad(minute,2)})\n                        } else {\n                            if (minute === 0 && hour === 0) {\n                                tics.push({class:lefthand('DayTic_h'), pos: i, label: pad(day,2)})\n                                tics.push({class:'MonthTic_h2', pos: i, label: monthcode[month]})\n                                //tics.push({class:'YearTic_h', pos: i, label: year})\n                            }     \n                        }\n                    }\n                break\n\n                case _zoom < MIN20_LEVEL:\n                    labeloffset = 60000*20\n                    if(minute !== lastminute && i!==0) {\n                        if( (minute !== 0 || hour !==0) && minute % 20 === 0) {\n                            tics.push({class:lefthand('HourTic'), pos: i, label: pad(hour,2)+':'+pad(minute,2)})\n                        } else {\n                            if (minute === 0 && hour === 0) {\n                                tics.push({class:lefthand('DayTic_h'), pos: i, label: pad(day,2)})\n                                tics.push({class:lefthand('MonthTic_h2'), pos: i, label: monthcode[month]})\n                                //tics.push({class:'YearTic_h', pos: i, label: year})\n                            }     \n                        }\n                    }\n                break\n\n                case _zoom < HOUR_LEVEL:\n                    labeloffset = 60000*60\n                    if(hour !== lasthour && i!==0) {\n                        if (hour !== 0) {\n                            tics.push({class:lefthand('HourTic'), pos: i, label: pad(hour,2)+':00'})\n                        \n                        } else  {\n                            tics.push({class:lefthand('DayTic_h'), pos: i, label: pad(day,2)})\n                            tics.push({class:lefthand('MonthTic_h2'), pos: i, label: monthcode[month]})\n                            // tics.push({class:'YearTic_h', pos: i, label: year})            \n                        }\n                    }\n                break\n\n                case _zoom < HOUR3_LEVEL:\n                    labeloffset = 60000*60*3\n                    if(hour !== lasthour && i!==0) {\n                        if (hour !== 0 &&  (hour % 3 === 0 )) {\n                            tics.push({class:lefthand('HourTic'), pos: i, label: pad(hour,2)+':00'})\n                        } else  {\n                            if (hour === 0) {\n                                tics.push({class:lefthand('DayTic_h'), pos: i, label: pad(day,2)})\n                                tics.push({class:lefthand('MonthTic_h2'), pos: i, label: monthcode[month]})\n                                // tics.push({class:'YearTic_h', pos: i, label: year})            \n                            }\n                        }\n                    }    \n                break\n\n                case _zoom < HOUR6_LEVEL:\n                    labeloffset = 60000*60*6\n                    if(hour !== lasthour && i!==0) {\n                        if (hour !== 0 &&  (hour % 6 === 0 )) {\n                            tics.push({class:lefthand('HourTic'), pos: i, label: pad(hour,2)+':00'})\n                        } else  {\n                            if (hour === 0) {\n                                tics.push({class:lefthand('DayTic_h'), pos: i, label: pad(day,2)})\n                                tics.push({class:lefthand('MonthTic_h2'), pos: i, label: monthcode[month]})\n                                // tics.push({class:'YearTic_h', pos: i, label: year})            \n                            }\n                        }\n                    }    \n                break\n\n\n\n                case _zoom < DAY_HOUR_LEVEL:\n                    labeloffset = 60000*60*24\n                    if(day !== lastday && i!==0) {\n                        tics.push({class:lefthand('DayTic_h'), pos: i, label: pad(day,2)})\n                        tics.push({class:lefthand('MonthTic_h2'), pos: i, label: monthcode[month]})\n\n                    }    \n                break\n\n\n                case _zoom < DAY_LEVEL:\n                    labeloffset = 60000*60*24\n                    if(day !== lastday && i!==0) {\n                        if ( day !== 1 ) {\n                            tics.push({class:lefthand('DayTic'), pos: i, label: day})\n                        } else {\n                            tics.push({class:lefthand('MonthTic_h'), pos: i, label: monthcode[month]})\n                            if (month === 0) tics.push({class:lefthand('YearTic_h2'), pos: i, label: year})\n                            // tics.push({class:'YearTic_h2', pos: i, label: year})\n                         }\n                        \n                    }    \n                break\n\n                case _zoom < DAY5_LEVEL:\n                    labeloffset = 60000*60*24*5\n                    if(day !== lastday && i!==0) {\n                        if ( day !== 1 && day !== 30 && day % 5 === 0 ) {\n                            tics.push({class:lefthand('DayTic'), pos: i, label: day})\n                        } else {\n                            if (day === 1) {\n                                // tics.push({class:'DayTic', pos: i, label: day})\n                                tics.push({class:lefthand('MonthTic_h'), pos: i, label: monthcode[month]})\n                                if (month === 0) tics.push({class:lefthand('YearTic_h2'), pos: i, label: year})\n                                // tics.push({class:'YearTic_h2', pos: i, label: year})\n                            }\n                         }\n                        \n                    }    \n\n                break\n\n                case _zoom < MONTH_LEVEL:\n                    labeloffset = 60000*60*24*28\n                    if( month !== lastmonth  && i!==0) {\n                        if (month !== 0) {\n                            tics.push({class:lefthand('MonthTic'), pos: i, label: monthcode[month]})\n                        } else {\n                            tics.push({class:lefthand('MonthTic_h'), pos: i, label: monthcode[month]})\n                            tics.push({class:lefthand('YearTic_h2'), pos: i, label: year})\n                        }\n                    }\n    \n                break\n\n                case _zoom < MONTH4_LEVEL:\n                    labeloffset = 60000*60*24*28*3\n                    if( month !== lastmonth  && i!==0) {\n                        if (month !== 0 && month !== 11 && (month) % 3 === 0 ) {\n                            tics.push({class:lefthand('MonthTic'), pos: i, label: monthcode[month]})\n                        } else {\n                            if (month === 0) {\n                                tics.push({class:lefthand('MonthTic_h'), pos: i, label: monthcode[month]})\n                                tics.push({class:lefthand('YearTic_h2'), pos: i, label: year})\n                            }\n                        }\n                    }\n    \n                break\n\n                case _zoom < YEAR_LEVEL:\n                    labeloffset = 60000*60*24*30*12\n                    if(year !== lastyear  && i!==0) {\n                        if (month !== 0) {\n                            tics.push({class:lefthand('MonthTic'), pos: i, label: monthcode[month]})\n                        } else {\n                            // tics.push({class:'MonthTic', pos: i, label: month})\n                            tics.push({class:lefthand('YearTic'), pos: i, label: year})\n                        }\n                    }\n    \n                break\n\n                default:\n                break\n            }\n            lastday = day\n            lastyear = year\n            lastmonth = month\n            lasthour = hour\n            lastminute = minute\n            // optimisation to skip a fontsize number of pixels\n            if (tics.length !== lastticslength) {\n                // console.log('off: '+labeloffset/_zoom+'   labeloffset: '+labeloffset)\n                i+=labeloffset/_zoom - 4\n            }\n            lastticslength = tics.length\n            // iteration +=1\n        }\n\n        // draw searchWindow\n        if(_searchwinstart && _searchwinend) {\n            let winstartpos = ( _searchwinstart - _start.getTime()  ) / _zoom + scale.current.offsetHeight/2\n            // let winendpos = ( _searchwinend - _start.getTime() ) / _zoom + scale.current.offsetHeight/2\n            ctx.font = \"30px Arial\"\n            ctx.fillStyle = \"green\"\n            // ctx.fillText('_', leftHanded.current?0:scale.current.offsetWidth -28, winstartpos -1);\n            // ctx.fillText('_', leftHanded.current?0:scale.current.offsetWidth -28, winendpos-1)\n            ctx.fillRect(\n                leftHanded.current?0:scale.current.offsetWidth -4, winstartpos +5,\n                4, (_searchwinend - _searchwinstart) / _zoom\n            )\n            // ctx.beginPath()\n            // ctx.strokeStyle = \"green\"\n            // ctx.moveTo(leftHanded.current?0:scale.current.offsetWidth -18, winstartpos +5);\n            // ctx.lineTo(leftHanded.current?0:scale.current.offsetWidth -18, winendpos +5);\n            // ctx.stroke()\n        }\n        \n        if(_resulttics) {\n            // _resulttics.sort((a,b)=>b-a)\n            let lastticpos = -10\n            for ( let i=_resulttics.length ; i >= 0  ; i-=1 ) {\n            // for ( let i=0 ; i < _resulttics.length  ; i+=1 ) {\n            \n                let ticpos = (_resulttics[i] - _start.getTime() ) / _zoom + scale.current.offsetHeight/2\n                if(ticpos > 0 && ticpos < scale.current.offsetHeight) {\n                    // tics.push({class:'ResultTic', pos: ticpos, label: ''})\n                    // ctx.shadowColor = null\n                    // ctx.shadowOffsetX = null\n                    // ctx.shadowOffsetY = null\n                    // ctx.shadowBlur = null\n                    ctx.font = \"30px Arial\"\n                    ctx.fillStyle = \"red\"\n                    if(ticpos - lastticpos > 3) {\n                        lastticpos = ticpos\n                        ctx.fillText('.', leftHanded.current?0:scale.current.offsetWidth -8, ticpos +5);\n                    }\n            \n                    \n\n                }\n            }\n        \n        }\n\n    //   console.log('iterations: '+iteration)\n        return tics.map(item => ( <div className={item.class} key={item.class+item.pos} style={{top:item.pos,opacity:1}}>{item.label}</div>))\n    }\n\n\n    // useEffect(() => {\n    //     console.log('zoomfactor / date: '+zoomfactor + '/ ' + date)\n    //     console.log(resulttics)\n    //     izoom.current = zoomfactor\n    //     idate.current = date\n    //     itics.current = resulttics\n    //     setTimescale(scaleText(idate.current,izoom.current,itics.current))\n    // },[ zoomfactor,date,resulttics])\n\n    useEffect(() => {\n        // console.log(zoomfactor)\n        izoom.current = zoomfactor\n        setTimescale(scaleText(idate.current,izoom.current,itics.current,isearchwinstart.current,isearchwinend.current))\n    },[zoomfactor])\n\n    useEffect(() => {\n        // console.log(date)\n        idate.current = date\n        setTimescale(scaleText(idate.current,izoom.current,itics.current,isearchwinstart.current,isearchwinend.current))\n    },[date])\n\n    useEffect(() => {\n        leftHanded.current = lefthanded\n        setTimescale(scaleText(idate.current,izoom.current,itics.current,isearchwinstart.current,isearchwinend.current))\n    },[lefthanded])\n\n    useEffect(() => {\n        // console.log(resulttics)\n        itics.current = resulttics\n        if(itics.current) itics.current.sort((a,b)=>b-a)\n\n        setTimescale(scaleText(idate.current,izoom.current,itics.current,isearchwinstart.current,isearchwinend.current))\n    },[resulttics])\n\n    useEffect(() => {\n        isearchwinstart.current = searchWinStart\n        isearchwinend.current = searchWinEnd\n        setTimescale(scaleText(idate.current,izoom.current,itics.current,isearchwinstart.current,isearchwinend.current))\n    },[searchWinStart, searchWinEnd])\n\n    useEffect(() => {\n        const handleResize =  (e) => {\n            e.preventDefault()\n            e.stopPropagation()\n            // console.log('resize')\n            setTimescale(scaleText(idate.current,izoom.current,itics.current,isearchwinstart.current,isearchwinend.current))\n        }\n        window.addEventListener('resize', handleResize)\n        return ()=>{window.removeEventListener('resize', handleResize)}\n    },[])\n\n\n    return (\n        <div>\n            <canvas ref={canvas} className='DateSelectorCanvas' width='{window.innerWidth}' height={window.innerHeight}></canvas>\n            <div ref={scale} className='DateSelectorScale' id='DateSelectorScale' style={{fontSize:'14px'} }>\n                {timescale}\n            </div>\n        </div>\n    )\n}\nexport default DateSelectorScale\n","import React, {useState, useEffect, useRef, useCallback} from 'react'\nimport {useSpring} from 'react-spring'\nimport { useGesture } from 'react-use-gesture'\n// import { add, scale } from 'vec-la'\nimport DateSelectorScale from './DateSelectorScale'\n// import useLog from '../../../../hooks/useLog.js';\n\n\n\nimport './DateSelector.css';\n// import { start } from 'repl';\n\nfunction DateSelector({startdate, tics, gotoscalezoom, onDateChange, onFinalDateChange, onStepChange, onZoomChange, satcycle, leftHanded, searchWinStart, searchWinEnd}) {\n\n\n    // const [ setlog, renderlog] = useLog()\n    // const [ setlog2, renderlog2] = useLog()\n\n    // zoomfactor of the date scale: ms/pixel\n    const MAXZOOM = 1000*60*60*24*15\n    const MINZOOM = 1000\n    const DEFZOOM = 1000*60*60\n    const ZOOMDIR = -1\n    const lastZoom = useRef(DEFZOOM)\n    const [zoomfactor, setZoomfactor ] = useState(DEFZOOM)\n\n    const selector = useRef()\n\n    const [scaledate, setScaledate ] = useState(startdate)\n    // const debouncedScaledate = useDebounce(scaledate, 10);\n\n    \n    const isActive = useRef(false)\n    // const [step, setStep ] = useState([60000])\n    const [stepLabel, setStepLabel ] = useState('hour')\n    // const [cycle, setcycle ] = useState('hour')\n\n    // to detect double taps\n    const lastTap = useRef()\n    const lastTapdate = useRef(new Date(0))\n    const doubleTap = useRef()\n    const button = useRef()\n\n    const startingdate = useRef(startdate)\n    const discreetdate = useRef(startdate)\n    const cycle = useRef(satcycle)\n    const step = useRef(satcycle)\n\n    // const setStep = (value) => step.current = value\n\n    const detectDoubleTap = (e) => {\n        const now = Date.now();\n        button.current = e.button\n        // console.log(lastTapdate.current.getTime()-discreetdate.current.getTime())\n        // if (lastTap.current && (now - lastTap.current) < 300  && Math.abs(lastTapdate.current.getTime()-scaledate.getTime()) < 1 ) {\n        if (lastTap.current && (now - lastTap.current) < 300 ) {\n            doubleTap.current = true\n        } else {\n            lastTap.current = now\n            lastTapdate.current = scaledate\n            doubleTap.current = false\n        }\n    }\n\n\n    const [{ posy_wheel }, setyOnWheel] = useSpring(() => ({posy_wheel: 0 }))\n    const [{ zoom }, springzoom] = useSpring(() => ({ zoom: 0 }))\n\n    const [{ test }, springtest] = useSpring(() => ({ test: 0 }))\n    \n    const bind = useGesture({\n\n        // onWheelEnd: () => { \n        //     isActive.current = false\n        //     onFinalDateChange(discreetdate.current)\n        //     console.log('finaldate')\n        //         // lastZoom.current = zoomfactor\n        // },\n\n        onWheel: ( {active, delta, first, down, direction, velocity, xy, movement, wheeling, ctrlKey, shiftKey } ) => {\n            // console.log(down)\n            // console.log(first)\n            \n            if (first) {\n                springtest.stop()\n            //   isActive.current = true\n              discreetdate.current = scaledate\n            }\n\n            if (ctrlKey || shiftKey) {\n\n                springzoom.start({\n                    zoom: delta[1],\n                    immediate: true,\n                    config: { mass: 1, tension: 100, friction: 25, precision: 0.1 },\n                    onChange: () => {\n                        let newzoom = lastZoom.current + lastZoom.current / 300 * zoom.get() * ZOOMDIR\n                        // let newzoom = lastZoom.current + zoom.get() * ZOOMDIR *5000\n                        if (newzoom < MINZOOM) newzoom = MINZOOM\n                        if (newzoom > MAXZOOM) newzoom = MAXZOOM\n                        setZoomfactor(newzoom)\n                        lastZoom.current = newzoom\n        \n                    }\n                })\n                return\n            }\n\n            setyOnWheel.start({                 \n                posy_wheel: delta[1], \n                immediate: true, \n                config: { mass: 1, tension: 100, friction: 40},\n                onChange: ()=>{\n                    isActive.current = true\n                    let newdate\n                    const rounder = (posy_wheel.get() < 0)?Math.ceil:Math.floor\n                    let nbstep = rounder(posy_wheel.get() * zoomfactor  / step.current[0])\n                    if(nbstep === 0) {\n                        // onFinalDateChange(discreetdate.current)\n                        // isActive.current = false\n                        setyOnWheel.stop()\n                        // return\n                    }\n                    if(stepLabel==='month') {\n                        \n                        // setlog({olddate:discreetdate.current.toJSON()})\n                        newdate = new Date(discreetdate.current.getTime())\n                        newdate.setUTCMonth( newdate.getUTCMonth()-nbstep )\n                        // setlog({newdate:discreetdate.current.toJSON()})\n                    } else { \n                        newdate = new Date(discreetdate.current.getTime() - nbstep * step.current[0]) \n                    }\n                    discreetdate.current = newdate\n                    setScaledate(newdate)\n                    onDateChange(newdate)\n                },\n                onRest: ()=>{\n                    if (!wheeling) {\n                        onFinalDateChange(discreetdate.current)\n                        isActive.current = false\n                    }\n                }\n            })\n        },\n        onDragStart: ()=>{\n            isActive.current = true\n        },\n\n        onDrag: ({  event, active, first, down, touches, offset, delta, initial, distance, velocity, direction, shiftKey, ctrlKey, xy, movement,vxvy, wheeling}) => {\n            event.preventDefault()\n            if (first) {\n                setyOnWheel.stop()\n                detectDoubleTap(event)\n                startingdate.current = discreetdate.current\n                // setlog2({ startingdate: startingdate.current.toJSON()  })\n\n   \n            }\n\n\n\n            // setlog2({velocity1: velocity})\n            velocity = (velocity < 0.2)?0:velocity\n\n            if ((doubleTap.current || shiftKey || ctrlKey || button.current === 2) ) {\n                // let zoom = lastZoom.current + lastZoom.current / 50 *  delta[1] * ZOOMDIR\n                // if (zoom < MINZOOM) zoom = MINZOOM\n                // if (zoom > MAXZOOM) zoom = MAXZOOM\n                // setZoomfactor(zoom)\n                // lastZoom.current = zoom\n\n                handleZoom(delta,down,velocity,false)\n                // handleZoom2(delta,down,velocity,offset,wheeling,movement,vxvy)\n                \n                // \n                return\n                // if(!down) setActive(false)\n            }\n\n \n\n            // Working !!\n            springtest.start({  \n                // test: scale(delta,[0,zoomfactor]),\n                // test: delta[1]*zoomfactor,\n                test: (down)?movement[1]:movement[1]+movement[1]*velocity*5,\n                immediate: down,\n                config: { mass: 1, tension: 100, friction: 25, precision: 0.1 },\n                onChange: () => {\n                    isActive.current = true\n                    \n\n                    // if(Math.floor(Math.abs(test.get()*zoomfactor   / step.current[0]))==0) test.stop()\n\n                    // let even = (test.get()<0 ? Math.ceil:Math.floor)\n                        // setlog({anim:test.get(), velocity: velocity*5})\n\n                        // this avoids the double tap to be detected while touch dragging fast\n                        if(Math.abs(movement[1]) > 5) lastTap.current = new Date(0)\n\n                        if(stepLabel==='month') {\n                            let nbstep = Math.ceil(test.get() * zoomfactor  / step.current[0])\n                            // setlog({olddate:discreetdate.current.toJSON()})\n                            let adate = new Date(startingdate.current.getTime())\n                            adate.setUTCMonth( adate.getUTCMonth()-nbstep )\n                            discreetdate.current = adate\n                            // setlog({newdate:discreetdate.current.toJSON()})\n                        } else {\n                            discreetdate.current = new Date(startingdate.current.getTime() - Math.ceil(test.get()*zoomfactor   / step.current[0]) * step.current[0])\n                        }\n                        \n                    \n                    setScaledate(discreetdate.current)\n                    onDateChange(discreetdate.current)\n                    // lastTapdate.current = new Date(0)\n                },\n                onRest: () => {\n                    if (!down) {\n                        // console.log('rest')\n                        onFinalDateChange(discreetdate.current)\n                        isActive.current = false\n                    }\n                },\n                // stop: (spring)=>{\n                //     let even = (test.get()<0 ? Math.ceil:Math.floor)\n                //     return (even(test.get()*zoomfactor   / step.current[0])<=0)\n                // }\n            }) \n\n\n        },\n        onDragEnd: (down) => { \n            // isActive.current = false\n            onFinalDateChange(discreetdate.current)\n            isActive.current = false\n\n\n                // lastZoom.current = zoomfactor\n        }\n    },\n    // {initial: ()=> [0,test.get()],drag: {useTouch: true} }\n    {drag: {useTouch: true} }\n    )\n\n    const handleZoom = (delta,down,velocity,wheeling) => {\n        let enabler = 1\n        if (!down) enabler = (velocity < 0.2)?0:0.5\n\n        springzoom.start({\n            zoom: delta[1],\n            immediate: down,\n            config: { mass: 1, tension: 100, friction: 25, precision: 0.1 },\n            onChange: () => {\n                let newzoom = lastZoom.current + lastZoom.current / 50 *  zoom.get() * ZOOMDIR * enabler\n                if (newzoom < MINZOOM) newzoom = MINZOOM\n                if (newzoom > MAXZOOM) newzoom = MAXZOOM\n                setZoomfactor(newzoom)\n                lastZoom.current = newzoom\n\n            }\n        })\n    }\n\n    // // new approach where spring value is the actual zoom value\n    // const [ {zoom2} , springzoom2] = useSpring(() => ( {zoom2: 0} ))\n    // const handleZoom2 = (delta,down,velocity,offset,wheeling,movement,vxvy) => {\n    //     // console.log('delta / vy: '+delta[1]+ ' / '+vxvy[1])\n    //     let deltadest = down?delta[1]:vxvy[1]*1000\n    //     let newzoom = zoomfactor - deltadest * zoomfactor/100\n    //     let zoomdest = Math.max(newzoom,MINZOOM)\n    //     zoomdest = Math.min(zoomdest,MAXZOOM)\n    //     springzoom2.start({\n    //         zoom2: zoomdest,\n    //         immediate: down,\n    //         config: { mass: 1, tension: 170, friction: 25},\n    //         onChange: () => {\n    //             setZoomfactor(zoom2.get())\n    //             // console.log(zoom.get())\n    //         },\n    //         onProps: ()=> {\n\n    //         }\n    //     })\n        \n    // }\n\n    const [{ xy2 }, sety2] = useSpring(() => ({ xy2: [0,0] }))\n    const moveToDate = useCallback( (newdate) => {\n        // console.log('go from: '+discreetdate.current.toJSON()+' to: '+newdate.toJSON())\n        if(newdate.getTime() === discreetdate.current.getTime()) return\n        let fromtime = discreetdate.current.getTime()\n        // sety2.stop()\n        // if (!isActive.current) {\n            let deltaoffset = [0,(fromtime - newdate.getTime())  ]\n\n            sety2.start({ \n                from: {xy2: [0,0]},\n                to: {xy2: deltaoffset},\n                immediate: false, \n                config: {reset: true, duration: 300 },\n                // config: { mass: 1, tension: 100, friction: 25, precision: 0.1 },\n                onChange: ()=>{\n                    // setlog(({animgoto: xy2.get()[1]}))\n                    // isActive.current = true\n\n                    let adate = new Date(fromtime - xy2.get()[1] )\n                    // console.log('adate: '+adate.toJSON() )\n                    discreetdate.current = adate\n                    setScaledate(adate)\n                    onDateChange(adate)\n                },\n                onRest: ()=>{\n                    // isActive.current = false\n                // console.log(\"rest move\")\n                    onFinalDateChange(discreetdate.current)\n                }\n            })\n        // }\n\n    }, [])\n\n    useEffect(() => {\n        if(!isActive.current) {\n            moveToDate(startdate)\n        } \n    },[startdate, moveToDate])\n\n    useEffect(() => {\n        console.log('gotoscalezoom: '+gotoscalezoom)\n        if(gotoscalezoom) {\n            setZoomfactor(gotoscalezoom)\n            lastZoom.current = gotoscalezoom\n        }\n        switch (gotoscalezoom) {\n            case 'year':\n                setZoomfactor(1029135270)\n                lastZoom.current = 1029135270\n                break\n            case 'month':\n                setZoomfactor(167184283)\n                lastZoom.current = 167184283\n                break\n            case 'day':\n                setZoomfactor(17046262)\n                lastZoom.current = 17046262\n                break\n            case 'hour':\n                setZoomfactor(735260)\n                lastZoom.current = 735260\n                break\n            case 'minute':\n                setZoomfactor(32276)\n                lastZoom.current = 32276\n                break\n            case 'second':\n                setZoomfactor(1058)\n                lastZoom.current = 1058\n                break\n        }\n\n    },[gotoscalezoom])\n\n\n// },[startdate, resetToStartDateTrigger])\n\n    // useEffect(() => {\n    //     console.log('laststartdate changed: '+lastStartdate.toJSON())\n    // },[lastStartdate])\n\n    // useEffect(() => {\n    //     console.log('Selector active: '+isActive.current)\n    // },[isActive.current])\n\n\n    useEffect(() => {\n        onStepChange(stepLabel)\n    },[stepLabel,onStepChange])\n\n    // useEffect(() => {\n    //     console.log(searchWindow/86400000+' Days')\n    // },[searchWindow])\n\n    useEffect(() => {\n        console.log('cycle changed to: '+satcycle)\n        cycle.current = satcycle\n        if(stepLabel === 'cycle') {\n            console.log('new step')\n            step.current= [satcycle]\n        }\n    },[satcycle])\n\n    \n    useEffect(() => {\n        // console.log(zoomfactor)\n        switch (true) {\n            case zoomfactor > 120426316:\n                step.current = [\n                    1000*60*60*24*31,\n                    1000*60*60*24*28,\n                    1000*60*60*24*31,\n                    1000*60*60*24*30,\n                    1000*60*60*24*31,\n                    1000*60*60*24*30,\n                    1000*60*60*24*31,\n                    1000*60*60*24*31,\n                    1000*60*60*24*30,\n                    1000*60*60*24*31,\n                    1000*60*60*24*30,\n                    1000*60*60*24*31,\n                    ]\n                setStepLabel('month')\n                break\n            case zoomfactor > 94544702:\n                step.current = [cycle.current]\n                setStepLabel('cycle')\n                break\n            case zoomfactor > 14544702:\n                step.current = [1000*60*60*24]\n                setStepLabel('day')\n                break\n            case zoomfactor > 735259:\n                step.current = [1000*60*60]\n                setStepLabel('hour')\n                break\n            case zoomfactor > 32274:\n                step.current = [1000*60]\n                setStepLabel('minute')\n                break\n            default:\n                step.current = [1000]\n                setStepLabel('second')\n        }\n        onZoomChange(zoomfactor)\n    },[zoomfactor])\n\n    \n\n\n    return (\n        <div>\n            <div className={leftHanded?'DateSelectorL':'DateSelector'} ref={selector} >\n            <div {...bind()} className={leftHanded?\"touchMaskL\":\"touchMask\"}> </div>\n            <div className=\"Mask\"  >\n\n                    <DateSelectorScale className={leftHanded?'scale lefthanded':'scale'} \n                        date={scaledate} \n                        zoomfactor={zoomfactor} \n                        resulttics={tics} \n                        lefthanded={leftHanded} \n                        searchWinStart={searchWinStart}\n                        searchWinEnd={searchWinEnd}>\n                    </DateSelectorScale>\n                    \n                    <div className={leftHanded?'TriangleContainerL':'TriangleContainer'} >\n                        <svg height=\"40\" width=\"20\" className=\"Triangle\">\n                            <polygon points=\"20,5 20,35 12,20\" />   \n                        </svg> \n                    </div>        \n                </div>\n            </div>\n            {/* {renderlog()}\n            {renderlog2()} */}\n        </div>\n                                   )\n}\nexport default DateSelector\n","import React, { useState, useCallback, useEffect} from 'react';\nimport DateLabel from './components/datelabel'\nimport DateController from './components/datecontroller'\nimport DateSelector from './components/dateselector'\n\n\nfunction DateManager({ onDateChange, onFinalDateChange, onStateChange, onStepChange, onZoomChange, animated, searching, startdate, tics, gotoscalezoom, cycle, leftHanded, searchWinStart, searchWinEnd, searchDate}) {\n\n    // if(!startdate) startdate = new Date()\n    const [selectorStartdate, setselectorStartdate] = useState(startdate)\n    const [labeldate, setLabelDate] = useState(startdate)\n    const [scalezoom, setscalezoom] = useState(gotoscalezoom)\n    const [dateLabelHighlight,setDateLabelHighlight] = useState(1)\n\n    const handleSelectorDateChange = useCallback( (date) => {\n        // console.log('handleSelectorDateChange:' + date.toJSON())\n        setLabelDate(date)\n        onDateChange(date)\n        // setscontrollerStartdate(date)\n    }, [onDateChange])\n\n    const handleSelectorFinalDateChange = useCallback( (date) => {\n        // console.log('handleSelectorFinalDateChange:' + date.toJSON())\n        // setcontrollerStartdate(date)\n        onFinalDateChange(date)\n    }, [onFinalDateChange])\n    \n    const handleControllerDateChange = useCallback( (date) => {\n        // console.log('handleControllerDateChange' + date.toJSON())\n        setselectorStartdate(date)\n        // onFinalDateChange(date)\n    }, [])\n\n    const handleSelectorStepChange = useCallback( (step) => {\n        onStepChange(step)\n        setDateLabelHighlight(step)\n    },[])\n\n    const handleSelectorZoomChange = useCallback( (zoom) => {\n        onZoomChange(zoom)\n    },[])\n\n    const handleLabelClick = useCallback( (zoom) => {\n        console.log(zoom)\n        setscalezoom(zoom)\n    },[])\n\n\n\n    return (\n        <div >\n          <DateController startdate={startdate}  onDateChange={handleControllerDateChange} onStateChange={onStateChange} animated={animated} lefthanded={leftHanded}/>\n          <DateLabel date={labeldate} highlight={dateLabelHighlight} handleLabelClick={handleLabelClick}/>\n          <DateSelector startdate={selectorStartdate}  tics={tics} gotoscalezoom={scalezoom} satcycle={cycle}\n                onDateChange={handleSelectorDateChange} \n                onFinalDateChange={handleSelectorFinalDateChange} \n                onStepChange={handleSelectorStepChange}\n                onZoomChange={handleSelectorZoomChange}\n                leftHanded={leftHanded}\n                searchWinStart={searchWinStart}\n                searchWinEnd={searchWinEnd}/>\n        </div>\n    ) \n}\nexport default DateManager","import React, {  useEffect, useState, useCallback } from 'react';\nimport {AppContext} from '../components/app/context'\n\nimport DateManager from \"../components/datemanager\"\n\nfunction DateManagerContainer() {\n\n    const [ state, dispatch ] = React.useContext(AppContext)\n\n\n    const [tics, settics] = useState(state.tics)\n    const [startdate, setstartdate] = useState(new Date(state.goToDate))\n\n    const handleFinalDate =  useCallback( (finaldate) => {\n        dispatch({type:'set_searchDate', value: finaldate})\n    },[dispatch])\n\n    const handleDateChanged = useCallback( (date) => {\n        // console.log('handleDateChanged')\n        // console.log(date)\n        dispatch({type:'set_viewDate', value: date})\n    },[dispatch])\n\n    const handleStateChange = useCallback( (animated) => {\n        dispatch({type:'set_animated', value: animated})\n    },[dispatch])\n\n    const handleZoomChange = useCallback( (zoom) => {\n        dispatch({type:'set_zoomscale', value: zoom})\n    },[dispatch])\n\n    const handleStepChange = useCallback( (step) => {\n         dispatch({type:'set_step', value: step})\n    },[dispatch])\n\n    // useEffect(() => {\n    //     let newtics = []\n    //     if(!state.geojson) return\n    //     newtics = state.geojson.features.map( (item) => {\n    //         return item.properties.earthObservation.acquisitionInformation[0].acquisitionParameter.acquisitionStartTime.getTime()\n    //     })\n    //     settics((tics)=>[...tics,...newtics])\n    // }, [state.geojson]);\n\n    // useEffect(() => {\n    //     console.log(state.tics)\n    //     settics(state.tics)\n    // }, [state.tics]);\n\n    useEffect(() => {\n        // console.log('state.goToDate:')\n        // console.log(new Date(state.goToDate))\n        setstartdate((state.goToDate === null)?null:new Date(state.goToDate))\n    }, [state.goToDate]);\n\n    // let startDate = (state.goToDate === null)?null:new Date(state.goToDate)\n    // console.log(startDate)\n\n    return (\n        <DateManager \n            onDateChange={handleDateChanged} \n            onFinalDateChange={handleFinalDate} \n            onStepChange={handleStepChange} \n            onZoomChange={handleZoomChange} \n            startdate={startdate} \n            tics={state.tics} \n            gotoscalezoom={state.zoomScale} \n            onStateChange={handleStateChange} \n            animated={state.animated} \n            cycle={state.cycle} \n            searching={state.searching} \n            leftHanded={state.leftHanded} \n            searchWinStart={state.searchWinStart} \n            searchWinEnd={state.searchWinEnd} /> \n     )\n}\n\nexport default DateManagerContainer;\n","\nexport default function eocatToGeojson(response) {\n\n    \n    function mapFromHubOpenSearch(item) {    \n\n        try {\n            var downloadurl = null\n            var quicklookurl = null\n            for (let i = 0; i < item.properties.link.length; i++) {\n                if (item.properties.link[i]['@']['title'] === 'Download') downloadurl = item.properties.link[i]['@']['href']\n                if (item.properties.link[i]['@']['title'] === 'Quicklook') quicklookurl = item.properties.link[i]['@']['href']\n            }\n            \n\n            var newItem = {\n                id: item.id,\n                geometry: item.geometry,\n                type: \"Feature\",\n                properties: {\n                    updated: item.properties.updated,\n                    title: item.properties.title,\n                    name: item.properties.title,\n                    uuid: item.properties.identifier,\n                    date: item.properties.date,\n                    downloadUrl: downloadurl,\n                    quicklookUrl: quicklookurl,\n                    // links: {\n                    //     data: [{\n                    //         href: item.link[0].href,\n                    //     }]\n                    // },\n                    earthObservation: {\n                        parentIdentifier: item.properties.EarthObservation.metaDataProperty.EarthObservationMetaData.parentIdentifier,\n                        status: \"ARCHIVED\",\n                        acquisitionInformation: [{\n                            platform: {\n                                platformShortName: item.properties.EarthObservation.procedure.EarthObservationEquipment.platform.Platform.shortName,\n                                platformSerialIdentifier: null\n                            },\n                            sensor: {\n                                instrument: item.properties.EarthObservation.procedure.EarthObservationEquipment.instrument.Instrument.shortName,\n                                operationalMode: item.properties.EarthObservation.procedure.EarthObservationEquipment.sensor.Sensor.operationalMode\n                            },\n                            acquisitionParameter: {\n                                acquisitionStartTime: new Date(item.properties.EarthObservation.phenomenonTime.TimePeriod.beginPosition),\n                                acquisitionStopTime: new Date(item.properties.EarthObservation.phenomenonTime.TimePeriod.endPosition),\n                                relativePassNumber: null,\n                                orbitNumber: item.properties.EarthObservation.procedure.EarthObservationEquipment.acquisitionParameters.Acquisition.orbitNumber,\n                                startTimeFromAscendingNode: null,\n                                stopTimeFromAscendingNode: null,\n                                orbitDirection: item.properties.EarthObservation.procedure.EarthObservationEquipment.acquisitionParameters.Acquisition.orbitDirection\n\n                            }\n                        }],\n                        productInformation: {\n                            productType: item.properties.EarthObservation.metaDataProperty.EarthObservationMetaData.productType,\n                            //timeliness: indexes[\"product\"][\"Timeliness Category\"],\n                            downloadUrl: downloadurl,\n                            quicklookUrl: quicklookurl,\n        \n                            size: null\n                        }\n                    }\n                }\n            }\n        // console.log(item)\n            return newItem;\n        } catch (err) {\n            console.log(\"error parsing item from dhus: \"+err.message);\n            return {};\n        }\n    }\n\n    let features = [];\n    try {\n        if( response.features ) {\n            if(Array.isArray(response.features)) {\n                console.log('features is an  array')\n                features = response.features.map( item =>  mapFromHubOpenSearch(item)).filter(item => item !== {});\n            } \n                \n        } else {\n            features = []\n        }\n        \n    } catch (err) {\n        console.log(response);\n        console.log(\"Error: \");\n        console.log(err);\n        features = []\n    }\n    //console.log(JSON.stringify(features));\n    let geojson = {   \n            type: \"FeatureCollection\",\n            id: \"search\",\n            properties: {\n                totalResults: response.properties.totalResults,\n                startIndex: response.properties.startIndex,\n                itemsPerPage: response.properties.itemsPerPage,\n                title: response.properties.title,\n                updated: response.properties.updated\n            },\n            features: features\n        };\n\n    return geojson\n\n}\n","\nexport default function rsstacToGeojson(response,startIndex) {\n\n    \n    function mapFromHubOpenSearch(item) {    \nconsole.log(item)\n        try {\n            var downloadurl = null\n            var quicklookurl = null\n            // for (let i = 0; i < item.properties.link.length; i++) {\n            //     if (item.properties.link[i]['@']['title'] === 'Download') downloadurl = item.properties.link[i]['@']['href']\n            //     if (item.properties.link[i]['@']['title'] === 'Quicklook') quicklookurl = item.properties.link[i]['@']['href']\n            // }\n                // ignore items without a geometry\n                let geometry = {}\n                if (item.geometry == null) {\n                    geometry = {type: \"Point\",\n                    coordinates: [\n                                 0,\n                                 0\n                               ]}\n                } else {\n                    geometry = item.geometry\n                    // if(geometry.type == \"LineString\") return null\n                    // delete geometry.crs\n                    // console.log(item.Footprint.type+\":\")\n                    // console.log(geometry.coordinates)\n                }\n\n            \n\n            var newItem = {\n                id: item.id,\n                geometry: geometry,\n                type: \"Feature\",\n                properties: {\n                    updated: null,\n                    title: item.properties.Name.string,\n                    name: item.properties.Name.string,\n                    uuid: item.id,\n                    date: item.properties.date,\n                    downloadUrl: downloadurl,\n                    quicklookUrl: quicklookurl,\n                    // links: {\n                    //     data: [{\n                    //         href: item.link[0].href,\n                    //     }]\n                    // },\n                    earthObservation: {\n                        parentIdentifier: null,\n                        status: \"ARCHIVED\",\n                        acquisitionInformation: [{\n                            // platform: {\n                            //     platformShortName: item.properties.EarthObservation.procedure.EarthObservationEquipment.platform.Platform.shortName,\n                            //     platformSerialIdentifier: null\n                            // },\n                            // sensor: {\n                            //     instrument: item.properties.EarthObservation.procedure.EarthObservationEquipment.instrument.Instrument.shortName,\n                            //     operationalMode: item.properties.EarthObservation.procedure.EarthObservationEquipment.sensor.Sensor.operationalMode\n                            // },\n                            acquisitionParameter: {\n                                acquisitionStartTime: new Date(item.properties.ContentDate.Start),\n                                acquisitionStopTime: new Date(item.properties.ContentDate.End),\n                                // relativePassNumber: item.properties.AdditionalAttributes.IntegerAttributes.relativeOrbitNumber,\n                                // orbitNumber: item.properties.AdditionalAttributes.IntegerAttributes.orbitNumber,\n                                startTimeFromAscendingNode: null,\n                                stopTimeFromAscendingNode: null,\n                                orbitDirection: null\n\n                            }\n                        }],\n                        productInformation: {\n                            // productType: item.properties.AdditionalAttributes.StringAttributes.productType,\n                            //timeliness: indexes[\"product\"][\"Timeliness Category\"],\n                            // downloadUrl: item.assets.products.href,\n                            quicklookUrl: null,\n        \n                            size: null\n                        }\n                    }\n                }\n            }\n        \n            return newItem;\n        } catch (err) {\n            console.log(\"error parsing item from rs stac: \"+err.message);\n            return {};\n        }\n    }\n\n    let features = [];\n    console.log(response.features)\n\n    try {\n        if( response.features ) {\n            if(Array.isArray(response.features)) {\n                console.log('features is an  array')\n                features = response.features.map( item =>  mapFromHubOpenSearch(item)).filter(item => item !== {});\n            } \n                \n        } else {\n            features = []\n        }\n        \n    } catch (err) {\n        console.log(response);\n        console.log(\"Error: \");\n        console.log(err);\n        features = []\n    }\n    //console.log(JSON.stringify(features));\n    let geojson = {   \n            type: \"FeatureCollection\",\n            id: \"search\",\n            properties: {\n                totalResults: response.features.length,\n                startIndex: startIndex,\n                itemsPerPage: response.features.length,\n                title: 'stac search',\n                updated: null\n            },\n            features: features\n        };\n\n    return geojson\n\n}\n","import wellknown from 'wellknown';\n\nexport default function CDSEOdataToGeojson(response,startIndex) {\n\n    function gmlToWkt(gmlfootprint) {\n        let coord = gmlfootprint.slice(gmlfootprint.indexOf('<gml:coordinates>')+17,gmlfootprint.indexOf('</gml:coordinates>'))\n        let coordlist = coord.replaceAll(',',' ')\n        let coordarray = coordlist.split(' ')\n        let wkt = 'MULTIPOLYGON((('\n        for(let i=0; i< coordarray.length; i+=2) {\n            wkt = wkt + coordarray[i+1] + ' ' + coordarray[i] + ','\n        }\n        wkt = wkt.slice(0,-1)\n        wkt = wkt+')))'\n        return wkt\n    }\n    \n    function mapFromHubOpenSearch(item) {    \n        function reshuffle(array) {\n            let json = {};\n            for(let i=0; i < array.length; i++) {\n                json[array[i].name] =  array[i].content;\n            }\n            return json;\n        }\n\n        try {\n            // let hubItem = {};\n            // if(item.date) Object.assign(hubItem,reshuffle(item.date));\n            // if(item.int) Object.assign(hubItem,reshuffle(item.int));\n            // if(item.double) Object.assign(hubItem,reshuffle(item.double));\n            // if(item.str) Object.assign(hubItem,reshuffle(item.str));\n\n\n            // var sizeArray = hubItem.size.split(\" \");\n            // var sizeInBytes;\n            // switch (sizeArray[1]) {\n            //     case \"B\":\n            //         sizeInBytes = Math.round(parseFloat(sizeArray[0]));\n            //         break;\n            //     case \"MB\":\n            //         sizeInBytes = Math.round(parseFloat(sizeArray[0])*1024);\n            //         break;\n            //     case \"GB\":\n            //         sizeInBytes = Math.round(parseFloat(sizeArray[0])*1024*1024);\n            //         break;\n            //     case \"TB\":\n            //         sizeInBytes = Math.round(parseFloat(sizeArray[0])*1024*1024*1024);\n            //         break;\n            //     default: \n            //         sizeInBytes = Math.round(parseFloat(sizeArray[0]));\n            //         break;\n\n            // }\n            \n\n            // console.log(gmlToWkt(hubItem.gmlfootprint))\n\n            let defaultgeometry = { type: \"Point\",coordinates: [0,0]}\n\n                // ignore items without a geometry\n                let geometry = item.GeoFootprint?item.GeoFootprint:defaultgeometry\n\n            var newItem = {\n                id: item.Id,\n                geometry: geometry,\n                type: \"Feature\",\n                properties: {\n                    updated: new Date(item.PublicationDate),\n                    title: item.Name,\n                    name: item.Name,\n                    uuid: item.Id,\n                    date: item.ContentDate.Start  +'/'+ item.ContentDate.End,\n                    downloadUrl: null,\n                    // quicklookUrl: 'https://catalogue.dataspace.copernicus.eu/odata/v1/Assets('+item.Id+\")/$value\",\n                    quicklookUrl: item.Assets[0].DownloadLink,\n                    // links: {\n                    //     data: [{\n                    //         href: item.link[0].href,\n                    //     }]\n                    // },\n                    earthObservation: {\n                        parentIdentifier: \"\",\n                        status: \"ARCHIVED\",\n                        acquisitionInformation: [{\n                            platform: {\n                                platformShortName: \"any\",\n                                platformSerialIdentifier: \"any\"\n                            },\n                            sensor: {\n                                instrument: \"any\",\n                                operationalMode: \"any\"\n                            },\n                            acquisitionParameter: {\n                                acquisitionStartTime: new Date(item.ContentDate.Start),\n                                // acquisitionStopTime: parseInt(item.ContentDate.End.substr(0, 4))<2100?new Date(item.ContentDate.End):new Date(),\n                                acquisitionStopTime: new Date(item.ContentDate.End),\n                                relativePassNumber: 0,\n                                orbitNumber: 0,\n                                startTimeFromAscendingNode: null,\n                                stopTimeFromAscendingNode: null,\n                                orbitDirection: null\n\n                            }\n                        }],\n                        productInformation: {\n                            productType: null,\n                            //timeliness: indexes[\"product\"][\"Timeliness Category\"],\n                            tile: null,\n                            size: item.ContentLength\n                        }\n                    }\n                }\n            }\n            return newItem;\n        } catch (err) {\n            console.log(\"error parsing item from PRIP: \"+err.message);\n            return null;\n        }\n    }\n\n    let features = [];\n    // console.log(response.value)\n    try {\n\n            if(Array.isArray(response.value)) {\n                // console.log(response.value[0])\n                features = response.value.filter(it => it !== null).map( item =>  mapFromHubOpenSearch(item)).filter(it => it !== null);\n            } else {\n                features = []\n            }\n                \n\n        \n    } catch (err) {\n        console.log(response);\n        console.log(\"Error: \");\n        console.log(err);\n        // features = []\n    }\n    //console.log(JSON.stringify(features));\n    let geojson = {   \n            type: \"FeatureCollection\",\n            id: \"search\",\n            properties: {\n                totalResults: response[\"@odata.count\"] - (response.value.length - features.length),\n                // totalResults: response.value.length,\n                startIndex: startIndex,\n                itemsPerPage: response.value.length,\n                title: \"PRIP search response\",\n                updated: new Date()\n            },\n            features: features\n        };\n        // console.log(JSON.stringify(geojson))\n    return geojson\n\n}\n","\nexport default function CDSEStacToGeojson(response,startIndex) {\n\n    \n    function mapFromHubOpenSearch(item) {    \n// console.log(item)\n        try {\n            var downloadurl = null\n            // var quicklookurl = null\n            var quicklookurl = item.assets.QUICKLOOK?item.assets.QUICKLOOK.href:null\n            // console.log(quicklookurl)\n            // for (let i = 0; i < item.properties.link.length; i++) {\n            //     if (item.properties.link[i]['@']['title'] === 'Download') downloadurl = item.properties.link[i]['@']['href']\n            //     if (item.properties.link[i]['@']['title'] === 'Quicklook') quicklookurl = item.properties.link[i]['@']['href']\n            // }\n                // ignore items without a geometry\n                let geometry = {}\n                if (item.geometry == null) {\n                    geometry = {type: \"Point\",\n                    coordinates: [\n                                 0,\n                                 0\n                               ]}\n                } else {\n                    geometry = item.geometry\n                    // if(geometry.type == \"LineString\") return null\n                    // delete geometry.crs\n                    // console.log(item.Footprint.type+\":\")\n                    // console.log(geometry.coordinates)\n                }\n\n            \n\n                var newItem = {\n                    id: item.id,\n                    geometry: geometry,\n                    type: \"Feature\",\n                    properties: {\n                        updated: null,\n                        title: item.id,\n                        name: item.id,\n                        uuid: item.id,\n                        date: item.properties.start_datetime,\n                        downloadUrl: null,\n                        quicklookUrl: quicklookurl,\n                        // links: {\n                        //     data: [{\n                        //         href: item.link[0].href,\n                        //     }]\n                        // },\n                        earthObservation: {\n                            parentIdentifier: null,\n                            status: \"ARCHIVED\",\n                            acquisitionInformation: [{\n                                // platform: {\n                                //     platformShortName: item.properties.EarthObservation.procedure.EarthObservationEquipment.platform.Platform.shortName,\n                                //     platformSerialIdentifier: null\n                                // },\n                                // sensor: {\n                                //     instrument: item.properties.EarthObservation.procedure.EarthObservationEquipment.instrument.Instrument.shortName,\n                                //     operationalMode: item.properties.EarthObservation.procedure.EarthObservationEquipment.sensor.Sensor.operationalMode\n                                // },\n                                acquisitionParameter: {\n                                    acquisitionStartTime: new Date(item.properties.start_datetime),\n                                    acquisitionStopTime: new Date(item.properties.end_datetime),\n                                    relativePassNumber: item.properties.relativeOrbitNumber,\n                                    orbitNumber: item.properties.orbitNumber,\n                                    orbitDirection: item.properties.orbitDirection,\n                                    startTimeFromAscendingNode: null,\n                                    stopTimeFromAscendingNode: null,\n                                    orbitDirection: null\n    \n                                }\n                            }],\n                            productInformation: {\n                                productType: item.properties.productType,\n                                //timeliness: indexes[\"product\"][\"Timeliness Category\"],\n                                // downloadUrl: item.assets.products.href,\n                                quicklookUrl: null,\n            \n                                size: null\n                            }\n                        }\n                    }\n                }\n     \n            return newItem;\n        } catch (err) {\n            console.log(\"error parsing item from cdse stac: \"+err.message);\n            return {};\n        }\n    }\n\n    let features = [];\n\n    try {\n        if( response.features ) {\n            if(Array.isArray(response.features)) {\n                // console.log('features is an  array')\n                features = response.features.map( item =>  mapFromHubOpenSearch(item)).filter(item => item != {});\n            } \n                \n        } else {\n            features = []\n        }\n        \n    } catch (err) {\n        console.log(\"Error: \");\n        console.log(response);\n        console.log(err);\n        features = []\n    }\n    //console.log(JSON.stringify(features));\n    let geojson = {   \n            type: \"FeatureCollection\",\n            id: \"search\",\n            properties: {\n                // totalResults: response.features.length,\n                totalResults: response.features.length == 0 ? 0: 1000, // since we don't know, we limit to the max number accepted by the App...\n                startIndex: startIndex,\n                itemsPerPage: response.features.length,\n                title: 'CDSE Stac search',\n                updated: null\n            },\n            features: features\n        };\n    \n    return geojson\n\n}\n","import wellknown from 'wellknown';\n\nexport default function PRIPToGeojson(response,startIndex) {\n\n    function gmlToWkt(gmlfootprint) {\n        let coord = gmlfootprint.slice(gmlfootprint.indexOf('<gml:coordinates>')+17,gmlfootprint.indexOf('</gml:coordinates>'))\n        let coordlist = coord.replaceAll(',',' ')\n        let coordarray = coordlist.split(' ')\n        let wkt = 'MULTIPOLYGON((('\n        for(let i=0; i< coordarray.length; i+=2) {\n            wkt = wkt + coordarray[i+1] + ' ' + coordarray[i] + ','\n        }\n        wkt = wkt.slice(0,-1)\n        wkt = wkt+')))'\n        return wkt\n    }\n    \n    function mapFromHubOpenSearch(item) {    \n        function reshuffle(array) {\n            let json = {};\n            for(let i=0; i < array.length; i++) {\n                json[array[i].name] =  array[i].content;\n            }\n            return json;\n        }\n\n        try {\n            // let hubItem = {};\n            // if(item.date) Object.assign(hubItem,reshuffle(item.date));\n            // if(item.int) Object.assign(hubItem,reshuffle(item.int));\n            // if(item.double) Object.assign(hubItem,reshuffle(item.double));\n            // if(item.str) Object.assign(hubItem,reshuffle(item.str));\n\n\n            // var sizeArray = hubItem.size.split(\" \");\n            // var sizeInBytes;\n            // switch (sizeArray[1]) {\n            //     case \"B\":\n            //         sizeInBytes = Math.round(parseFloat(sizeArray[0]));\n            //         break;\n            //     case \"MB\":\n            //         sizeInBytes = Math.round(parseFloat(sizeArray[0])*1024);\n            //         break;\n            //     case \"GB\":\n            //         sizeInBytes = Math.round(parseFloat(sizeArray[0])*1024*1024);\n            //         break;\n            //     case \"TB\":\n            //         sizeInBytes = Math.round(parseFloat(sizeArray[0])*1024*1024*1024);\n            //         break;\n            //     default: \n            //         sizeInBytes = Math.round(parseFloat(sizeArray[0]));\n            //         break;\n\n            // }\n            \n\n            // console.log(gmlToWkt(hubItem.gmlfootprint))\n\n            let defaultgeometry = { type: \"Point\",coordinates: [0,0]}\n\n                // ignore items without a geometry\n                let geometry = item.Footprint?item.Footprint:defaultgeometry\n\n            var newItem = {\n                id: item.Id,\n                geometry: geometry,\n                type: \"Feature\",\n                properties: {\n                    updated: new Date(item.PublicationDate),\n                    title: item.Name,\n                    name: item.Name,\n                    uuid: item.Id,\n                    date: item.ContentDate.Start  +'/'+ item.ContentDate.End,\n                    downloadUrl: null,\n                    // quicklookUrl: null,\n                    //ex: https://processing.platform.ops-csc.com/ddip/odata/v1/Products(6ad185e9-44b5-4c3e-b4c1-5b3115863199)/Quicklooks('S1A_EW_GRDM_1SDH_20240117T083035_20240117T083135_052144_064D8A_F07E.SAFE_bwi.png')/$value\n                    quicklookUrl: 'https://processing.platform.ops-csc.com/odata/v1/Products('+item.Id+\")/Quicklooks('\"+item.Name.slice(0, -4)+\"_bwi.png')/$value\",\n                    // quicklookUrl: null,\n                    // links: {\n                    //     data: [{\n                    //         href: item.link[0].href,\n                    //     }]\n                    // },\n                    earthObservation: {\n                        parentIdentifier: \"\",\n                        status: \"ARCHIVED\",\n                        acquisitionInformation: [{\n                            platform: {\n                                platformShortName: \"any\",\n                                platformSerialIdentifier: \"any\"\n                            },\n                            sensor: {\n                                instrument: \"any\",\n                                operationalMode: \"any\"\n                            },\n                            acquisitionParameter: {\n                                acquisitionStartTime: new Date(item.ContentDate.Start),\n                                // acquisitionStopTime: parseInt(item.ContentDate.End.substr(0, 4))<2100?new Date(item.ContentDate.End):new Date(),\n                                acquisitionStopTime: new Date(item.ContentDate.End),\n                                relativePassNumber: 0,\n                                orbitNumber: 0,\n                                startTimeFromAscendingNode: null,\n                                stopTimeFromAscendingNode: null,\n                                orbitDirection: null\n\n                            }\n                        }],\n                        productInformation: {\n                            productType: null,\n                            //timeliness: indexes[\"product\"][\"Timeliness Category\"],\n                            tile: null,\n                            size: item.ContentLength\n                        }\n                    }\n                }\n            }\n            return newItem;\n        } catch (err) {\n            console.log(\"error parsing item from PRIP: \"+err.message);\n            return null;\n        }\n    }\n\n    let features = [];\n    // console.log(response.value)\n    try {\n\n            if(Array.isArray(response.value)) {\n                // console.log(response.value[0])\n                features = response.value.filter(it => it !== null).map( item =>  mapFromHubOpenSearch(item)).filter(it => it !== null);\n            } else {\n                features = []\n            }\n                \n\n        \n    } catch (err) {\n        console.log(response);\n        console.log(\"Error: \");\n        console.log(err);\n        // features = []\n    }\n    //console.log(JSON.stringify(features));\n    let geojson = {   \n            type: \"FeatureCollection\",\n            id: \"search\",\n            properties: {\n                totalResults: response[\"@odata.count\"] - (response.value.length - features.length),\n                // totalResults: response.value.length,\n                startIndex: startIndex,\n                itemsPerPage: response.value.length,\n                title: \"PRIP search response\",\n                updated: new Date()\n            },\n            features: features\n        };\n        // console.log(JSON.stringify(geojson))\n    return geojson\n\n}\n","import wellknown from 'wellknown';\n\nexport default function LTAToGeojson(response,startIndex) {\n\n    function gmlToWkt(gmlfootprint) {\n        let coord = gmlfootprint.slice(gmlfootprint.indexOf('<gml:coordinates>')+17,gmlfootprint.indexOf('</gml:coordinates>'))\n        let coordlist = coord.replaceAll(',',' ')\n        let coordarray = coordlist.split(' ')\n        let wkt = 'MULTIPOLYGON((('\n        for(let i=0; i< coordarray.length; i+=2) {\n            wkt = wkt + coordarray[i+1] + ' ' + coordarray[i] + ','\n        }\n        wkt = wkt.slice(0,-1)\n        wkt = wkt+')))'\n        return wkt\n    }\n    \n    function mapFromHubOpenSearch(item) {    \n        function reshuffle(array) {\n            let json = {};\n            for(let i=0; i < array.length; i++) {\n                json[array[i].name] =  array[i].content;\n            }\n            return json;\n        }\n\n        try {\n            // let hubItem = {};\n            // if(item.date) Object.assign(hubItem,reshuffle(item.date));\n            // if(item.int) Object.assign(hubItem,reshuffle(item.int));\n            // if(item.double) Object.assign(hubItem,reshuffle(item.double));\n            // if(item.str) Object.assign(hubItem,reshuffle(item.str));\n\n\n            // var sizeArray = hubItem.size.split(\" \");\n            // var sizeInBytes;\n            // switch (sizeArray[1]) {\n            //     case \"B\":\n            //         sizeInBytes = Math.round(parseFloat(sizeArray[0]));\n            //         break;\n            //     case \"MB\":\n            //         sizeInBytes = Math.round(parseFloat(sizeArray[0])*1024);\n            //         break;\n            //     case \"GB\":\n            //         sizeInBytes = Math.round(parseFloat(sizeArray[0])*1024*1024);\n            //         break;\n            //     case \"TB\":\n            //         sizeInBytes = Math.round(parseFloat(sizeArray[0])*1024*1024*1024);\n            //         break;\n            //     default: \n            //         sizeInBytes = Math.round(parseFloat(sizeArray[0]));\n            //         break;\n\n            // }\n            \n\n            // console.log(gmlToWkt(hubItem.gmlfootprint))\n\n\n                // ignore items without a geometry\n                let geometry = {}\n                if (item.GeoFootprint == null) {\n                    geometry = {type: \"Point\",\n                    coordinates: [\n                                 0,\n                                 0\n                               ]}\n                } else {\n                    geometry = item.GeoFootprint\n                    // if(geometry.type == \"LineString\") return null\n                    // delete geometry.crs\n                    // console.log(item.Footprint.type+\":\")\n                    // console.log(geometry.coordinates)\n                }\n\n            var newItem = {\n                id: item.Id,\n                geometry: geometry,\n                type: \"Feature\",\n                properties: {\n                    updated: new Date(item.PublicationDate),\n                    title: item.Name,\n                    name: item.Name,\n                    uuid: item.Id,\n                    date: item.ContentDate.Start  +'/'+ item.ContentDate.End,\n                    downloadUrl: null,\n                    quicklookUrl: null,\n                    // links: {\n                    //     data: [{\n                    //         href: item.link[0].href,\n                    //     }]\n                    // },\n                    earthObservation: {\n                        parentIdentifier: \"\",\n                        status: \"ARCHIVED\",\n                        acquisitionInformation: [{\n                            platform: {\n                                platformShortName: \"any\",\n                                platformSerialIdentifier: \"any\"\n                            },\n                            sensor: {\n                                instrument: \"any\",\n                                operationalMode: \"any\"\n                            },\n                            acquisitionParameter: {\n                                acquisitionStartTime: new Date(item.ContentDate.Start),\n                                // acquisitionStopTime: parseInt(item.ContentDate.End.substr(0, 4))<2100?new Date(item.ContentDate.End):new Date(),\n                                acquisitionStopTime: new Date(item.ContentDate.End),\n                                relativePassNumber: 0,\n                                orbitNumber: 0,\n                                startTimeFromAscendingNode: null,\n                                stopTimeFromAscendingNode: null,\n                                orbitDirection: null\n\n                            }\n                        }],\n                        productInformation: {\n                            productType: null,\n                            //timeliness: indexes[\"product\"][\"Timeliness Category\"],\n                            tile: null,\n                            size: item.ContentLength\n                        }\n                    }\n                }\n            }\n            return newItem;\n        } catch (err) {\n            console.log(\"error parsing item from LTA: \"+err.message);\n            return null;\n        }\n    }\n\n    let features = [];\n    console.log(response.value)\n    try {\n\n            if(Array.isArray(response.value)) {\n                console.log(response.value[0])\n                features = response.value.filter(it => it !== null).map( item =>  mapFromHubOpenSearch(item)).filter(it => it !== null);\n            } else {\n                features = []\n            }\n                \n\n        \n    } catch (err) {\n        console.log(response);\n        console.log(\"Error: \");\n        console.log(err);\n        // features = []\n    }\n    //console.log(JSON.stringify(features));\n    let geojson = {   \n            type: \"FeatureCollection\",\n            id: \"search\",\n            properties: {\n                totalResults: response[\"@odata.count\"] - (response.value.length - features.length),\n                // totalResults: response.value.length,\n                startIndex: startIndex,\n                itemsPerPage: response.value.length,\n                title: \"LTA search response\",\n                updated: new Date()\n            },\n            features: features\n        };\n        // console.log(JSON.stringify(geojson))\n    return geojson\n\n}\n","import { useState, useRef, useContext } from \"react\";\nimport dhusToGeojson from \"./dhusToGeojson\";\nimport eocatToGeojson from \"./eocatToGeojson\"\nimport rsstacToGeojson from \"./rsstacToGeojson\"\nimport CDSEOdataToGeojson from \"./CDSEOdataToGeojson\"\nimport CDSEStacToGeojson from \"./CDSEStacToGeojson\"\nimport PRIPToGeojson from \"./PRIPToGeojson\"\nimport LTAToGeojson from \"./LTAToGeojson\"\n// import OAuth2 from \"fetch-mw-oauth2\"\n// to be done: use OAuth2Client instead of OAuth2\nimport { OAuth2Client, OAuth2Fetch } from '@badgateway/oauth2-client'    \nimport {AppContext} from '../app/context'\nimport useFetcher  from '../../hooks/useFetcher';\n\n\n// export default function useDatahub({searchdate, dataset, searchpoint})  {\nexport default function useDatahub()  {\n\n    // const searchparam = useRef({})\n    const controller = useRef(null)\n\n    const MAX_ITEMS = 1000\n    const PAGE_SIZE = 100\n\n    const [geojsonResults, setGeojsonResults] = useState(null)\n    const [loading, setLoading] = useState(false)\n    const [status, setStatus] = useState(-1) // not really a status. changes whenever a 401 occurs`\n    // const [token,setToken] = useState(null)\n    const [ state, dispatch ] = useContext(AppContext) //remove!\n\n    const token = useRef(null)\n\n    const {fetchURL, init_fetcher, abort_fetchURL} = useFetcher()\n\n    const getcredential = (key,credentials) => {\n        for(let i=0; i < credentials.length; i++) {\n            if(credentials[i].key === key) {\n                return {user:credentials[i].user,pass:credentials[i].pass}\n            }\n        }\n        return {user:\"\",pass:\"\"}\n    }\n\n    const buildUrl = ({dataset, polygon, start, end, freetext }) => {\n\n            console.log(start+'   /   '+end)\n\n        // let target = getcollection(code)\n        if(!dataset) return null\n        let newurl = dataset.templateUrl\n\n        if(polygon != null) {\n            newurl = newurl.replace(\"{polygon}\", polygon)\n        } else {\n            newurl = newurl.replace(dataset.areaOff, '')\n        }\n\n        if (start != null  && end != null) {\n            newurl = newurl.replace(\"{start}\", start)\n            newurl = newurl.replace(\"{end}\", end)\n        } else {\n            newurl = newurl.replace(dataset.dateOff, '')\n        }\n\n        if (freetext != null && freetext != '') {\n            newurl = newurl.replace(\"{freetext}\", freetext)\n        } else {\n            newurl = newurl.replace(\"{freetext}\", dataset.defaultFreetext)\n        }\n        \n        // startindex = startindex == 0 ? startindex : startindex + target.startIndexOrigin\n        // newurl = newurl.replace(\"{startindex}\",target.startIndexOrigin)\n\n\n        return newurl\n    }\n\n\n\n\n    const fetchURLpaginated = async (url,index,target,user,pass) => {\n        setLoading(true)\n        controller.current = new AbortController()\n        let newurl = url\n        newurl = newurl.replace(\"{startindex}\",index)\n        newurl = newurl.replace(\"{pagesize}\",PAGE_SIZE)\n        let page = Math.ceil(index / PAGE_SIZE)\n        newurl = newurl.replace(\"{page}\",page)\n        console.log('Search: '+newurl)\n        let paging = {totalresults:0, startindex:0, itemsperpage:0}\n  \n\n        let idx = target.grantType?target.tokenEndpoint.split('/', 3).join('/').length:0\n        let server = target.grantType?target.tokenEndpoint.substring(0,idx):null\n\n        let tokenendpoint = target.grantType?target.tokenEndpoint.substring(idx):null\n        let granttype = target.grantType\n        let response\n        try {\n            response = await fetchURL(newurl, server, tokenendpoint, granttype, user, pass)    \n        }\n        catch (err) {\n            console.log(err.message)\n            if(err.message  == 'Error: 401') setStatus(Math.random())\n            setLoading(false)           \n            return\n        }\n        // console.log(response)\n\n        if(!response) {\n            setStatus(-1)\n            setLoading(false)\n            return null\n        }\n        \n\n        // if (!response.ok) {\n        //     window.alert(`HTTP error! status: ${response.status}`)\n        //     if(response.status == 401) {\n        //         // setStatus(newurl)\n        //         throw new Error('401')\n        //     } else {\n        //         throw new Error(`HTTP error! status: ${response.status}`)\n        //     }\n        // }\n\n            try {\n                const json = await response.json()\n                console.log(\"Response:\")\n                console.log(json)\n\n                let geoJson\n                // console.log(coll_type)\n                switch(target.type) {\n                    case \"DHUS\":\n                        console.log( \"Mapping DHUS/OpenSearch:\")\n                        geoJson = dhusToGeojson(json)\n                        break;\n                    case \"PRIP\":\n                        console.log(\"Mapping RS/PRIP:\")\n                        geoJson = PRIPToGeojson(json,index)\n                        break;\n                    case \"EOCAT\":\n                        console.log(\"Mapping EOCAT:\")\n                        geoJson = eocatToGeojson(json)\n                        break;\n                    case \"STAC\":\n                        console.log(\"Mapping RS/STAC:\")\n                        geoJson = rsstacToGeojson(json,index)\n                        break;\n                    case \"CDSEOdata\":\n                        console.log(\"Mapping CDSE/DDIP:\")\n                        geoJson = CDSEOdataToGeojson(json,index)\n                        break;\n                    case \"CDSEStac\":\n                        console.log(\"Mapping CDSE/STAC:\")\n                        geoJson = CDSEStacToGeojson(json,index)\n                        break;\n                    case \"LTA\":\n                        console.log(\"Mapping LTA/AUXIP:\")\n                        geoJson = LTAToGeojson(json,index)\n                        break;\n                    default:\n                        setLoading(false)\n                        \n    \n                }\n                console.log(geoJson)\n\n                // console.log('totalResults: ' + geoJson.properties.totalResults)\n                paging = {\n                    totalresults: geoJson.properties.totalResults == null ? MAX_ITEMS : Number(geoJson.properties.totalResults) ,\n                    startindex:  Number(geoJson.properties.startIndex), \n                    itemsperpage:  Number(geoJson.properties.itemsPerPage)\n                }\n                // console.log(paging)\n\n                // setPagination(paging)\n                if(paging.totalresults>0) setGeojsonResults(geoJson) \n\n                if (paging.startindex + paging.itemsperpage < Math.min(paging.totalresults,MAX_ITEMS) && paging.itemsperpage != 0 ) {\n                    console.log(\"There's More...\")  \n                    // uncomment to get other pages\n                    fetchURLpaginated(url,(paging.startindex + paging.itemsperpage),target,user,pass)\n                } else {\n                    console.log(\"Finished...\")  \n\n                    // token.current = null\n                    // dispatch({ type: \"set_token\", value: null})\n                    setLoading(false)  \n                }\n\n            } catch (err) {\n                console.log(\"Didn't receive a json !\")\n                console.log(err)\n                setLoading(false)\n                setStatus(-1)\n            }\n    }\n\n    const abort = () => {\n        if(controller && controller.current) {\n            abort_fetchURL()\n        }\n    }\n\n\n\n    const search = ({ dataset, freetext, searchpoint, windowStart, windowEnd,credentials}) => {\n        // console.log(windowStart)\n        //  console.log(searchdate+' / '+ dataset+' / '+ searchpoint)\n        // console.log(credentials) \n        let startdate, enddate = ''\n        // let target = getcollection(dataset)\n        \n        if(!dataset || windowStart == 0) {\n            console.log('No dataset to search')\n            return null\n        }\n\n        if(loading) controller.current.abort()\n\n\n        if(windowStart && windowEnd) {\n            // let windowSize = state.searchWindow\n            // let windowSize = target.windowSize\n            // console.log('start date: '+searchdate)\n            // console.log('windowSize: '+windowSize)\n            // let julianstart = Math.floor(searchdate.getTime()/windowSize) * windowSize\n            startdate = (new Date(windowStart)).toJSON()\n            enddate = (new Date(windowEnd - 1000)).toJSON()\n            // startdate = (new Date(searchdate.getTime() - offset)).toJSON()\n            // console.log('start date: '+searchdate)\n            \n            // enddate = (new Date(searchdate.getTime() + offset - 1000)).toJSON()\n        }\n        let url = buildUrl({\n            dataset: dataset,\n            polygon: searchpoint, \n            start: startdate,\n            end: enddate,\n            freetext: freetext\n        })\n        // searchparam.current.searchdate = searchdate\n        // searchparam.current.dataset = dataset\n        // searchparam.current.searchpoint = searchpoint\n\n        let startindex = dataset.startIndexOrigin\n\n        let tokenendpoint = dataset.tokenEndpoint\n\n        let credential = getcredential(url.split(\"/\")[2],credentials)\n\n\n        fetchURLpaginated(url,startindex,dataset,credential.user,credential.pass,tokenendpoint)\n        \n    }\n    \n\n\n    return {geojsonResults, loading, status, search, abort}\n}\n","import wellknown from 'wellknown';\n\nexport default function dhusToGeojson(response) {\n\n    function gmlToWkt(gmlfootprint) {\n        let coord = gmlfootprint.slice(gmlfootprint.indexOf('<gml:coordinates>')+17,gmlfootprint.indexOf('</gml:coordinates>'))\n        let coordlist = coord.replaceAll(',',' ')\n        let coordarray = coordlist.split(' ')\n        let wkt = 'MULTIPOLYGON((('\n        for(let i=0; i< coordarray.length; i+=2) {\n            wkt = wkt + coordarray[i+1] + ' ' + coordarray[i] + ','\n        }\n        wkt = wkt.slice(0,-1)\n        wkt = wkt+')))'\n        return wkt\n    }\n    \n    function mapFromHubOpenSearch(item) {    \n        function reshuffle(array) {\n            let json = {};\n            if(Array.isArray(array)) {\n                for(let i=0; i < array.length; i++) {\n                    json[array[i].name] =  array[i].content;\n                }\n            } else {\n                json[array.name] = array.content\n            }\n            return json;\n        }\n\n        try {\n            let hubItem = {};\n            if(item.date) Object.assign(hubItem,reshuffle(item.date));\n            if(item.int) Object.assign(hubItem,reshuffle(item.int));\n            if(item.double) Object.assign(hubItem,reshuffle(item.double));\n            if(item.str) Object.assign(hubItem,reshuffle(item.str));\n\n\n            var sizeArray = hubItem.size.split(\" \");\n            var sizeInBytes;\n            switch (sizeArray[1]) {\n                case \"B\":\n                    sizeInBytes = Math.round(parseFloat(sizeArray[0]));\n                    break;\n                case \"MB\":\n                    sizeInBytes = Math.round(parseFloat(sizeArray[0])*1024);\n                    break;\n                case \"GB\":\n                    sizeInBytes = Math.round(parseFloat(sizeArray[0])*1024*1024);\n                    break;\n                case \"TB\":\n                    sizeInBytes = Math.round(parseFloat(sizeArray[0])*1024*1024*1024);\n                    break;\n                default: \n                    sizeInBytes = Math.round(parseFloat(sizeArray[0]));\n                    break;\n\n            }\n            \n            // console.log(gmlToWkt(hubItem.gmlfootprint))\n            // console.log(hubItem)\n            var newItem = {\n                id: item.title,\n                geometry: wellknown(gmlToWkt(hubItem.gmlfootprint)),\n                type: \"Feature\",\n                properties: {\n                    updated: new Date(hubItem.ingestiondate),\n                    title: item.title,\n                    name: item.title,\n                    uuid: item.id,\n                    date: hubItem.beginposition  +'/'+  hubItem.endposition,\n                    downloadUrl: item.link[0].href,\n                    quicklookUrl: (item.link.length >= 2) ? item.link[2].href: null,\n                    // links: {\n                    //     data: [{\n                    //         href: item.link[0].href,\n                    //     }]\n                    // },\n                    earthObservation: {\n                        parentIdentifier: \"\",\n                        status: \"ARCHIVED\",\n                        acquisitionInformation: [{\n                            platform: {\n                                platformShortName: hubItem.platformname,\n                                platformSerialIdentifier: hubItem.platformserialidentifier\n                            },\n                            sensor: {\n                                instrument: hubItem.instrumentshortname,\n                                operationalMode: hubItem.sensoroperationalmode\n                            },\n                            acquisitionParameter: {\n                                acquisitionStartTime: new Date(hubItem.beginposition),\n                                acquisitionStopTime: new Date(hubItem.endposition),\n                                relativePassNumber: parseInt(hubItem.relativeorbitnumber),\n                                orbitNumber: parseInt(hubItem.orbitnumber),\n                                startTimeFromAscendingNode: null,\n                                stopTimeFromAscendingNode: null,\n                                orbitDirection: hubItem.orbitdirection\n\n                            }\n                        }],\n                        productInformation: {\n                            productType: hubItem.producttype,\n                            //timeliness: indexes[\"product\"][\"Timeliness Category\"],\n                            tile: hubItem.tileid,\n                            size: sizeInBytes,\n                            cloudCoverPercentage: hubItem.cloudcoverpercentage\n                        }\n                    }\n                }\n            }\n        \n            return newItem;\n        } catch (err) {\n            console.log(\"error parsing item from dhus: \"+err.message);\n            return {};\n        }\n    }\n\n    let features = [];\n    try {\n        if( response.feed.entry ) {\n            if(Array.isArray(response.feed.entry)) {\n                // console.log('entry is an  array')\n                features = response.feed.entry.map( item =>  mapFromHubOpenSearch(item)).filter(item => item !== {});\n            } else {\n                features = [mapFromHubOpenSearch(response.feed.entry)]\n            }\n                \n        } else {\n            features = []\n        }\n        \n    } catch (err) {\n        console.log(response);\n        console.log(\"Error: \");\n        console.log(err);\n        features = []\n    }\n    //console.log(JSON.stringify(features));\n    let geojson = {   \n            type: \"FeatureCollection\",\n            id: \"search\",\n            properties: {\n                totalResults: response.feed[\"opensearch:totalResults\"],\n                startIndex: (response.feed[\"opensearch:startIndex\"])?response.feed[\"opensearch:startIndex\"]:1,\n                itemsPerPage: response.feed[\"opensearch:itemsPerPage\"],\n                title: \"DHuS search response\",\n                updated: new Date()\n            },\n            features: features\n        };\n\n    return geojson\n\n}\n","import React, { useState, useEffect, useRef } from \"react\";\n\nimport { useKey } from 'rooks'\nimport './SearchManager.css'\nimport useDatahub from \"./useDatahub\"\nimport useHandleDoubleTap from '../../hooks/useHandleDoubleTap'\n\n \n// npm install --save-dev @iconify/react @iconify-icons/ic\nimport { Icon } from '@iconify/react';\nimport outlineRefresh from '@iconify-icons/ic/outline-refresh';\n// import useFetcher  from '../../hooks/useFetcher';\n\n\n\nfunction SearchManager({searchdate, searchpoint, searchmode, searchWinStart, searchWinEnd, credentials, dataset, animated, searching, freetext, trigger, altitude, onClearResult, onSearchStart, onPageSearch, onSearchComplete, on401, lefthanded}) {\n\n\n    // const [ searching, setsearching ] = useState(false);\n    const [ searchtrigger, setsearchtrigger ] = useState(0);\n    const firstresultdate = useRef(new Date(0))\n    const lastresultdate = useRef(new Date())\n    const totalresults = useRef(0)\n    const totalloaded = useRef(0)\n\n\n    const [param, setparam] = useState({})\n\n    const { geojsonResults, loading, status, search, abort } = useDatahub({});\n    \n    const {handleTap} = useHandleDoubleTap( ()=>{setsearchtrigger(Math.random())}, onClearResult )\n\n\n    // useKey(['x'],(e) => myDispatch(e,{ type: \"toggle_projection\" }))\n    useKey([\"x\"],()=>setsearchtrigger(Math.random())) \n\n\n\n    useEffect(() => {\n        setsearchtrigger(Math.random())\n    }, [trigger])\n\n    useEffect(() => {\n        if(geojsonResults) {\n            // console.slog(JSON.stringify(geojsonResults))\n\n            // saves first and last item dates\n            let firstitemdate = (new Date(geojsonResults.features[0].properties.earthObservation.acquisitionInformation[0].acquisitionParameter.acquisitionStartTime))\n            if(firstresultdate.current.getTime() < firstitemdate.getTime() || firstresultdate.current === null) {\n                firstresultdate.current = firstitemdate\n            }\n            let lastitemdate = (new Date(geojsonResults.features[geojsonResults.features.length-1].properties.earthObservation.acquisitionInformation[0].acquisitionParameter.acquisitionStartTime))\n            if(lastresultdate.current.getTime() > lastitemdate.getTime() || lastitemdate.current === null) {\n                lastresultdate.current = lastitemdate\n            }\n            totalloaded.current += geojsonResults.features.length\n            totalresults.current = Number(geojsonResults.properties.totalResults)\n            let resultdesc = {\n                totalResults: totalresults.current, \n                totalLoaded: totalloaded.current\n            }\n            onPageSearch(geojsonResults, resultdesc)\n\n        }\n    }, [geojsonResults]);\n\n    useEffect(() => {\n        // setsearching(loading)\n        // if(loading === false && firstresultdate.current.getTime() !== 0 ) {\n        if(loading === false  ) {\n            onSearchComplete({\n                firstResultDate: firstresultdate.current, \n                lastResultDate: lastresultdate.current,\n                totalResults: totalresults.current,\n                totalLoaded: totalloaded.current\n            })\n        }\n    }, [loading])\n\n    useEffect(() => {\n        console.log('status: ')\n        console.log(status)\n        // console.log(credentials)\n        if(status !== -1) on401(dataset)\n    }, [status]);\n\n    useEffect(() => {\n        if(!searchtrigger || searchtrigger == 0) return\n        if(loading && !animated) {\n            console.log('aborting current search')\n            abort()\n        } else {\n            if (animated) abort()\n            firstresultdate.current = new Date(0)\n            lastresultdate.current = new Date()\n            totalloaded.current = 0\n            totalresults.current = 0\n\n            onSearchStart()\n            // console.log(param)\n            search(param)    \n        }\n\n    }, [searchtrigger]);\n\n\n    useEffect(() => {\n        console.log('should reset token')\n    }, [dataset]);\n\n\n    useEffect(() => {\n        console.log('search param changed:')\n        // console.log(searchdate)\n        // console.log(searchWindow)\n        let sd = new Date(searchdate)\n        let sp = searchpoint\n        if(searchmode === 'global') {\n            sp = null\n        } else {\n            sd = null\n        }\n        setparam((param)=>{ return {...param, dataset: dataset, freetext: freetext, searchpoint: sp, windowStart: searchWinStart, windowEnd: searchWinEnd, credentials: credentials}})\n    }, [ dataset, freetext, searchpoint, searchmode, searchWinStart, searchWinEnd, credentials]);\n\n    useEffect(() => {\n        console.log('auto search')\n        if (animated) {\n            // if(loading) {\n            //     console.log('aborting current search')\n            //     abort()\n            // }\n            setsearchtrigger(Math.random())\n        }\n    }, [searchWinStart, searchWinEnd]);\n\n\n    //console.log('dataset rendering')\n    return (\n            <div className={(searching === true?'SearchController Active':'SearchController')+ (lefthanded?' lefthanded':'')} onClick={handleTap}>\n                {/* {searching === true?<Icon icon={outlineSync} width='50px'/>:<span/>} */}\n                <Icon icon={outlineRefresh} width='50px'/>\n            </div>\n    )\n}\n\nexport default SearchManager;\n","\nimport React, {  useState, useCallback } from \"react\";\nimport {AppContext} from '../components/app/context'\n\nimport SearchManager from \"../components/searchmanager\"\nimport { useDebounce } from '../hooks/useDebounce';\n\n\n\nconst SearchManagerContainer = () => {\n\n  const [ state, dispatch ] = React.useContext(AppContext)\n\n  const debouncedsearchPoint = useDebounce(state.searchPoint, 200)\n  const debouncedaltitude = useDebounce(state.altitude, 200)\n\n \n  \n  const getcredential = (key) => {\n    for(let i=0; i < state.credentials.length; i++) {\n        if(state.credentials[i].key === key) {\n            return {user:state.credentials[i].user,pass:state.credentials[i].pass}\n        }\n    }\n    return {user:\"\",pass:\"\"}\n}\n\n    const getcollection = (code) => {\n        for(let i=0; i < state.collections.length; i++) {\n            if(state.collections[i].code === code) {\n                return state.collections[i]\n            }\n        }\n        return null\n    }\n\n\n  \n    const handlePageSearch = useCallback ( (results, resultdesc) => {\n      dispatch({ type: \"onResultPage\", value: {resultdesc: resultdesc, results: results} })\n    }, [dispatch])\n    \n    const handleSearchStart = useCallback ( () => {\n      dispatch({ type: \"onSearchStart\", value: Math.random()})\n    }, [dispatch])\n    \n    const handleClearResult = useCallback ( () => {\n      dispatch({ type: \"clearResult\"})\n    }, [dispatch])\n    \n    const handleSearchComplete = useCallback (  (searchDesc) => {\n      dispatch({ type: \"onSearchComplete\", value: searchDesc})\n    }, [dispatch])\n\n    const handleCredentials = useCallback ( (dataset) => {\n      console.log(dataset)\n      // let key = getcollection(state.dataset).templateUrl.split(\"/\")[2]\n      let key = dataset.templateUrl.split(\"/\")[2]\n      let credential = getcredential(key)\n      console.log(key)\n      let user = window.prompt(\"Please enter your username for \\n\"+key,credential.user?credential.user:'')\n      let pass = window.prompt(\"Please enter your password for \\n\"+key,credential.pass?credential.pass:'')\n      dispatch({ type: \"set_credentials\", value: {key: key, user:user, pass:pass}})\n      return\n    }, [dispatch])\n\n\n    return (\n        <SearchManager \n          searchdate={state.searchDate} \n          searchpoint={debouncedsearchPoint} \n          searchmode={state.searchMode}\n          searchWinStart={state.searchWinStart}\n          searchWinEnd={state.searchWinEnd}\n          dataset={getcollection(state.dataset)} \n          animated={state.animated}\n          searching={state.searching}\n          freetext={state.freetext}\n          trigger={state.searchtrigger}\n          credentials={state.credentials}\n          altitude={debouncedaltitude} \n          onClearResult={handleClearResult}\n          onSearchStart={handleSearchStart}\n          onPageSearch={handlePageSearch}\n          onSearchComplete={handleSearchComplete}\n          on401={handleCredentials}\n          lefthanded={state.leftHanded}\n        />\n    )\n}\n\nexport default SearchManagerContainer;\n\n\n\n","import React from 'react'\nimport {AppContext} from '../app/context'\nimport './ProductInfo.css' \n\nfunction ProductInfo() {\n\n    const [ state,  ] = React.useContext(AppContext)\n\n\n    return (\n        <div className='ProductInfo Small'>{state.closestItem?state.closestItem.closest.userProperties.title:''}</div>\n     )\n}\n\nexport default ProductInfo\n\n","//todo: replace hotkeys by rook useKey\n\nimport React, {useRef} from 'react'\nimport { AppProvider } from \"./context\"\n\n\nimport './App.css'\nimport Earth from '../earth'\nimport ControlPanel from \"../controlpanel\"\nimport InfoPanel from \"../infopanel\"\nimport Mood from \"../mood\"\nimport Share from \"../share\"\nimport DatasetSelector from \"../datasetselector\"\nimport MapSelector from \"../mapselector\"\nimport ColorSelectorContainer from \"../../containers/ColorSelectorContainer\"\nimport OptionsSelector from \"../optionsselector\"\nimport CollectionLabel from \"../collectionlabel\"\nimport AltitudeLabel from \"../altitudelabel\"\nimport SearchLabel from \"../searchlabel\"\n// import GeoName from \"../geoname\"\nimport WindowSizeController from \"../WindowSizeController\"\n\nimport DateManagerContainer from '../../containers/DateManagerContainer'\nimport SearchManagerContainer from '../../containers/SearchManagerContainer'\nimport { useFullscreen } from 'rooks';\nimport { useKey } from 'rooks'\nimport ProductInfo from '../productinfo/ProductInfo'\n\nfunction App() {\n    \n    \n\n\n    const container = useRef();\n    const {\n        // isEnabled,\n        toggle\n        // onChange,\n        // onError,\n        // request,\n        // exit,\n        // isFullscreen,\n        // element\n    } = useFullscreen();\n\n\n    useKey(['f'],(e) => {if(e.target.tagName === 'BODY') toggle(container.current)})\n    // useKey(['f'],()=>{toggle(container.current)})\n\n\n    return (\n        <AppProvider>\n        <div className=\"App\" ref={container} id=\"container\">\n             {/* <FullScreen handle={fshandle}> */}\n                <Earth id=\"globe\" />\n\n                {/* <DateManager startdate={startdate} onDateChange={changeDate} onFinalDateChange={finalChangeDate} animated={searching}/> */}\n                <DateManagerContainer/>\n                <Mood/>\n                <CollectionLabel/>\n                <WindowSizeController/>\n                <Share/>\n                <SearchManagerContainer/>\n                <ControlPanel active=\"false\" >\n                    {/* <div class='logo'><img  src='./images/ESA_logo_2020_White.png' height=\"40\" ></img></div> */}\n                    {/* <div className='logo'><img alt='' src='./images/EOi_logo.png' height=\"100\" ></img></div> */}\n                    <div className='horizontalContainer'>\n                        <DatasetSelector></DatasetSelector>\n                        <MapSelector ></MapSelector>\n                        <div className='horizontalContainer'>\n                            <ColorSelectorContainer></ColorSelectorContainer>\n                            <OptionsSelector/>\n\n                        </div>\n                    </div>\n                </ControlPanel>\n                <AltitudeLabel/>\n                <InfoPanel>\n                    {/* <CollectionLabel/> */}\n                    <SearchLabel/>\n                    <ProductInfo/>\n\n                </InfoPanel>\n                {/* <FreeText/> */}\n            {/* </FullScreen> */}\n        </div>\n        </AppProvider>\n    )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}