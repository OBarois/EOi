{"version":3,"sources":["components/earth/wwwxx/layer/starfield/SunPosition.js","components/earth/wwwxx/layer/starfield/Celestial.js","components/earth/wwwxx/layer/starfield/StarFieldProgram.js","components/earth/wwwxx/layer/starfield/StarFieldLayer.js","components/earth/wwwxx/collada/ColladaScene.js","components/earth/satelliteLayers.js","components/earth/wwwxx/shapes/satellites/Model.js","components/earth/satConfig.js","components/earth/wwwxx/layer/SatelliteModelLayer.js","components/earth/layerConfig.js","components/earth/useEww.js","components/earth/FluidWorldWindowController.js","components/earth/Earth.js","components/controlpanel/ControlPanel.js","components/missionselector/MissionSelector.js","containers/MissionSelectorContainer.js","components/mapselector/MapSelector.js","containers/MapSelectorContainer.js","containers/ColorSelectorContainer.js","containers/AltitudeLabelContainer.js","components/datemanager/components/datelabel/DateLabel.js","components/datemanager/components/datecontroller/useClock.js","components/datemanager/components/datecontroller/DateController.js","components/datemanager/components/dateselector/DateSelectorScale.js","components/datemanager/components/dateselector/DateSelector.js","components/datemanager/DateManager.js","containers/DateManagerContainer.js","components/app/App.js","reportWebVitals.js","initGlobalStates.js","index.js"],"names":["Angle","WorldWind","ArgumentError","Logger","SunPosition","getAsGeographicLocation","date","Date","logMessage","LEVEL_SEVERE","celestialLocation","this","getAsCelestialLocation","celestialToGeographic","numDays","computeJulianDate","meanLongitude","normalizeAngle360","meanAnomaly","DEGREES_TO_RADIANS","eclipticLongitude","Math","sin","eclipticLongitudeRad","obliquityOfTheEcliptic","declination","asin","RADIANS_TO_DEGREES","rightAscension","atan","cos","tan","GMST","GHA","longitude","normalizedDegreesLongitude","latitude","year","getUTCFullYear","month","getUTCMonth","day","getUTCDate","dayFraction","getUTCHours","getUTCMinutes","getUTCSeconds","A","trunc","B","degrees","angle","Celestial","SUN","MERCURY","VENUS","MARS","JUPITER","SATURN","URANUS","NEPTUNE","getCelestialLocation","id","orbitalElements","d","computeSun","computeMercury","computeVenus","computeMars","computeJupiter","computeSaturn","computeUranus","computeNeptune","computePosition","N","i","w","a","e","M","E","aa","E1","abs","xv","yv","sqrt","v","atan2","r","xh","yh","zh","lon_corr","lonecl","latecl","getLonSun","lonsun","rsun","xg","yg","zg","ecl","xe","ye","ze","ra","dec","GpuProgram","Matrix","Color","StarFieldProgram","gl","FRAG_MODE_MIX_COLOR","FRAG_MODE_TEXTURE","FRAG_MODE_COLOR","vertexPointLocation","attributeLocation","mvpMatrixLocation","uniformLocation","numDaysLocation","magnitudeRangeLocation","textureUnitLocation","fragModeLocation","colorLocation","localState","mvpMatrix","magnitudeRange","textureUnit","fragMode","color","matrix","forceLoad","fromIdentity","equals","loadUniformMatrix","copy","uniform1f","minMag","maxMag","uniform2f","unit","uniform1i","TEXTURE0","mode","loadUniformColor","key","Layer","REDRAW_EVENT_TYPE","StarFieldLayer","starDataSource","pickEnabled","sunSize","showSun","_starDataSource","configuration","baseUrl","_sunImageSource","_matrix","_starsPositionsVboCacheKey","_numStars","_starData","_minMagnitude","Number","MAX_VALUE","_maxMagnitude","MIN_VALUE","_loadStarted","_minScale","_scale","MAX_SAFE_INTEGER","pow","_sunPositionsCacheKey","_sunBufferView","Float32Array","_MAX_GL_POINT_SIZE","showPlanets","jupiterSize","planets","url","size","_planetsBufferView","_cacheKeys","sunPosition","planetPositions","starPositions","value","invalidateStarData","dc","globe","is2D","haveResources","beginRendering","doDraw","endRendering","loadResources","sunTexture","gpuResourceCache","resourceForKey","planetTextures","every","planet","currentGlContext","fetchStarData","retrieveTexture","forEach","findAndBindProgram","enableVertexAttribArray","depthMask","loadCommonUniforms","renderStars","renderSun","renderPlanets","program","currentProgram","mvp","modelviewProjection","navigatorState","multiplyByScale","loadModelviewProjection","julianDate","time","loadNumDays","generateCacheKey","vboId","bindBuffer","ARRAY_BUFFER","createBuffer","positions","createStarsGeometry","putResource","length","bufferData","STATIC_DRAW","frameStatistics","incrementVboLoadCount","vertexAttribPointer","FLOAT","loadMagnitudeRange","loadFragMode","drawArrays","POINTS","getParameter","ALIASED_POINT_SIZE_RANGE","log","LEVEL_WARNING","min","_planetsPositionsVboCacheKey","bufferSubData","DYNAMIC_DRAW","textureSrc","bind","sunCelestialLocation","disableVertexAttribArray","self","xhr","XMLHttpRequest","onload","status","JSON","parse","response","sendRedrawRequest","toString","statusText","onerror","ontimeout","open","send","indexes","parseStarsMetadata","metadata","raIndex","Error","decIndex","magIndex","data","len","starInfo","magnitude","pointSize","push","max","floor","starMetaInfo","name","document","createEvent","initEvent","window","dispatchEvent","BasicTextureProgram","PickedObject","Position","Renderable","Vec3","ColladaScene","position","sceneData","call","_position","_nodes","_meshes","_materials","_images","_upAxis","_dirPath","_xRotation","_yRotation","_zRotation","preX","preY","preZ","_xTranslation","_yTranslation","_zTranslation","_altitudeMode","ABSOLUTE","_localTransforms","_useTexturePaths","_nodesToHide","_hideNodes","_placePoint","_transformationMatrix","_mvpMatrix","_normalTransformMatrix","_normalMatrix","_texCoordMatrix","setToUnitYFlip","_entities","_activeTexture","_tmpVector","_tmpColor","_vboCacheKey","_iboCacheKey","setSceneData","prototype","Object","create","constructor","defineProperties","get","set","nodes","meshes","materials","images","upAxis","dirPath","xRotation","yRotation","zRotation","xTranslation","yTranslation","zTranslation","scale","placePoint","altitudeMode","transformationMatrix","normalMatrix","localTransforms","useTexturePaths","nodesToHide","hideNodes","root","children","up_axis","flattenModel","nodesLen","flattenNode","sort","b","va","imageKey","vb","node","mesh","meshKey","buffers","bufLen","materialBuf","material","j","symbol","materialKey","textures","uvs","diffuse","mapId","reflective","k","render","orderedScene","frustum","frustumInModelCoordinates","enabled","lastFrameTime","timestamp","makeOrderedRenderable","containsPoint","layer","currentLayer","addOrderedRenderable","surfacePointForMode","altitude","eyeDistance","eyePoint","distanceTo","renderOrdered","drawOrderedScene","pickingMode","po","pickColor","clone","resolvePick","beginDrawing","endDrawing","iboId","setupBuffers","ELEMENT_ARRAY_BUFFER","uniquePickColor","computeTransformationMatrix","mustRenderNode","draw","sizeOfFloat32","BYTES_PER_ELEMENT","sizeOfUint16","Uint16Array","sizeOfUint32","Uint32Array","is32BitIndices","numIndices","numVertices","indexedRendering","indices","vertices","normals","vbo","offset","vertexOffset","uvOffset","normalOffset","uIntExt","indexSize","indexBufferSize","getExtension","ibo","indexOffset","entity","nodeWorldMatrix","worldMatrix","nodeNormalMatrix","hasLighting","applyColor","imagePath","path","filename","textureCacheKey","wrapMode","isClamp","CLAMP_TO_EDGE","REPEAT","loadTextureEnabled","loadModulateColor","loadApplyLighting","applyMatrix","indexOffsetBytes","drawElements","TRIANGLES","UNSIGNED_INT","UNSIGNED_SHORT","opacity","techniqueType","g","loadColor","loadOpacity","hasTexture","multiplyMatrix","modelviewNormalTransform","loadModelviewInverse","loadTextureMatrix","setToIdentity","multiplyByLocalCoordinateTransform","multiplyByRotation","multiplyByTranslation","computeNormalMatrix","extractRotationAngles","nodeId","indexOf","Model","model","satellite","_satellite","satelliteModel","_model","modelData","rotations","translations","preRotations","shortName","ignoreLocalTransforms","type","satShortName","x","y","z","jsonData","hasOwnProperty","eVertices","eNormals","eUvs","eIndices","slice","console","info","satConfig","satIndex","swathTypes","swathColors","colorFromKmlHex","swatModes","tleLineOne","tleLineTwo","hasModel","filePath","headingAxis","headingAdd","headingMultiply","launchDate","groundPosition","RenderableLayer","EoUtils","WorldWindX","DEFAULT_MODEL_OPTIONS","SatelliteModelLayer","options","satelliteOptions","_satelliteOptions","_rerenderMap","Tle","heading","onLayerChanged","removeAllRenderables","addRenderable","doRerender","update","satrec","computeSatrec","getOrbitPosition","setPosition","alignWithOrbit","currentPosition","now","getTime","nextPosition","headingRad","headingAngleRadians","rad2deg","satKey","satName","layerKey","rerenderer","wwx","satelliteLayers","fetch","then","json","satelliteData","setModel","setTle","bgLayers","service","layerNames","title","numLevels","format","sector","Sector","FULL_SPHERE","levelZeroDelta","Location","ovLayers","useEww","clon","clat","alt","starfield","atmosphere","background","overlay","names","satellites","dem","eww","useRef","useState","setProjection","geojsonlayers","setGeojsonlayers","aoi","pickedItems","ewwstate","setEwwState","copDemOn","bgIndex","ovIndex","northUp","wwd","current","headingIncrement","navigator","setTimeout","runOperation","redraw","toggleAtmosphere","bool","getLayerByName","toggleModel","l","toggleStarfield","toggleNames","toggleBg","layers","displayName","toggleOv","toggleDem","elevationModel","EarthElevationModel","ElevationModel","addCoverage","TiledElevationCoverage","coverageSector","resolution","retrievalImageFormat","minElevation","maxElevation","urlBuilder","WcsTileUrlBuilder","enableRenderables","setGlobeStates","lo","lookAtLocation","la","al","range","vp","bl","tr","view","viewport","polygon","pickTerrain","canvasCoordinates","height","terrainObject","round","err","width","getViewPolygon","viewpolygon","handleDoubleClick","recognizer","useEffect","removeAllCoverages","WorldWindow","redrawCallbacks","BasicWorldWindowController","applyLimits","WWMath","clamp","appDoubleClickRecognizer","ClickRecognizer","numberOfClicks","maxClickInterval","worldWindowController","clickDownRecognizer","recognizeSimultaneouslyWith","appDoubleTapRecognizer","TapRecognizer","numberOfTaps","tapDownRecognizer","location","href","starFieldLayer","atmosphereLayer","AtmosphereLayer","quicklookLayer","WmsLayer","addLayer","deepPicking","moveTo","goToAnimator","travelTime","goTo","camera","removeGeojson","removeLayer","addGeojson","epoch","renderableLayer","properties","updated","ceil","random","GeoJSONParser","load","geometry","userProperties","placemarkAttributes","PlacemarkAttributes","imageScale","imageColor","labelAttributes","Offset","OFFSET_FRACTION","isPointType","isMultiPointType","attributes","isLineStringType","isMultiLineStringType","drawOutline","outlineColor","interiorColor","red","green","blue","outlineWidth","isPolygonType","isMultiPolygonType","ShapeAttributes","highlightAttributes","addWMS","setTime","toggleProjection","prevProj","supportedProjections","newProj","projection","ProjectionWgs84","ProjectionEquirectangular","ProjectionMercator","ProjectionPolarEquidistant","FluidWorldWindowController","world","lastTap","doubleTap","button","clicktimeout","gesturestartposition","rotationmode","debugtext","useSpring","api","bind2","useDrag","start","debughtml","div","style","className","posxy_drag","useGesture","onDrag","event","xy","vxvy","previous","first","down","initial","delta","movement","velocity","direction","tap","scrolling","touches","pinching","positionAtPickPoint","canvas","clientWidth","clientHeight","timeStamp","clearTimeout","zoomspring","stop","handlepan3d","handlezoom","handletilt","onWheel","clientX","clientY","drag","useTouch","tiltvalue","tiltspring","dorotation","to","immediate","config","mass","tension","friction","onChange","tiltoffset","headingoffset","tilt","onRest","panvalue","panspring","wheeling","enabler","correction","lookatxy","nextlookatxy","sub","currentposition","nextposition","currentpoint","nextpoint","computePointFromPosition","rotationVector","rotationAngle","computeRotationVectorAndAngle","rotateShpere","spring","moveZoom","refposition","amount","lookatAltitude","elevationAtLocation","lookAtPosition","interpolateGreatCircle","coordinates","pickList","objects","pickedObject","isTerrain","pickedPosition","vec1","vec2","MeasurerUtils","angleBetweenVectors","cross","normalize","isFinite","viewMatrix","scratchRay","Line","computeViewingTransform","extractEyePoint","origin","extractForwardVector","intersectsLine","params","extractViewingParameters","roll","nav","addEventListener","preventDefault","Earth","useGlobal","mapSettings","setMapSettings","setAltitude","viewDate","setSatellites","mapSet","setMapSet","sat","setSat","useHotkeys","ControlPanel","props","setOpen","mr","right","top","onClick","icon","baselinePalette","MissionSelector","initialmission","onMissionChange","mission","setMission","src","C_MissionSelector","MapSelector","onMapSettingsChange","draggable","C_MapSelector","ColorSelectorContainer","appcolor","setAppcolor","documentElement","setProperty","hex","AltitudeLabelContainer","DateLabel","highlight","animated","dateFormat","toUpperCase","useClock","autoStart","initdate","setDate","playing","step","refreshrate","ldate","intervalRef","timeoutRef","setInterval","toJSON","togglePause","clearInterval","reset","increaseSpeed","decreaseSpeed","forceDate","newdate","DateController","startdate","onDateChange","setLasttap","DateSelectorScale","zoomfactor","timescale","setTimescale","useLayoutEffect","_start","_zoom","hour","monthcode","minute","lastday","lastmonth","lastyear","lasthour","lastminute","tics","offsetHeight","refdate","class","pos","label","pad","map","item","number","str","scaleText","ref","DateSelector","onFinalDateChange","onStepChange","MAXZOOM","DEFZOOM","lastZoom","setZoomfactor","selector","scaledate","setScaledate","setstatus","setStep","stepLabel","setStepLabel","startingdate","discreetdate","xy2","sety2","posy_wheel","setyOnWheel","zoom","springzoom","test","springtest","onDragEnd","active","nbstep","setUTCMonth","distance","shiftKey","detectDoubleTap","precision","newzoom","adate","fromtime","deltaoffset","from","duration","moveToDate","points","DateManager","selectorStartdate","setselectorStartdate","controllerStartdate","setcontrollerStartdate","labeldate","setLabelDate","dateLabelHighlight","setDateLabelHighlight","C_DateManager","setViewDate","App","container","toggle","useFullscreen","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","setGlobal","appColor","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9b5bb52b.chunk.js","sourcesContent":["/*\n * Copyright 2015-2017 WorldWind Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport WorldWind from 'webworldwind-esa';\nconst {\n    Angle,\n    ArgumentError,\n    Logger\n} = WorldWind;\n\n/**\n * Provides utilities for determining the Sun geographic and celestial location.\n * @exports SunPosition\n */\nconst SunPosition = {\n\n    /**\n     * Computes the geographic location of the sun for a given date\n     * @param {Date} date\n     * @throws {ArgumentError} if the date is missing\n     * @return {{latitude: Number, longitude: Number}} the geographic location\n     */\n    getAsGeographicLocation: function (date) {\n        if (date instanceof Date === false) {\n            throw new ArgumentError(\n                Logger.logMessage(Logger.LEVEL_SEVERE, \"SunPosition\", \"getAsGeographicLocation\",\n                    \"missingDate\"));\n        }\n\n        let celestialLocation = this.getAsCelestialLocation(date);\n        return this.celestialToGeographic(celestialLocation, date);\n    },\n\n    /**\n     * Computes the celestial location of the sun for a given julianDate\n     * @param {Date} date\n     * @throws {ArgumentError} if the date is missing\n     * @return {{declination: Number, rightAscension: Number}} the celestial location\n     */\n    getAsCelestialLocation: function (date) {\n        if (date instanceof Date === false) {\n            throw new ArgumentError(\n                Logger.logMessage(Logger.LEVEL_SEVERE, \"SunPosition\", \"getAsCelestialLocation\",\n                    \"missingDate\"));\n        }\n\n        let julianDate = this.computeJulianDate(date);\n\n        //number of days (positive or negative) since Greenwich noon, Terrestrial Time, on 1 January 2000 (J2000.0)\n        let numDays = julianDate - 2451545;\n\n        let meanLongitude = this.normalizeAngle360(280.460 + 0.9856474 * numDays);\n\n        let meanAnomaly = this.normalizeAngle360(357.528 + 0.9856003 * numDays) * Angle.DEGREES_TO_RADIANS;\n\n        let eclipticLongitude = meanLongitude + 1.915 * Math.sin(meanAnomaly) + 0.02 * Math.sin(2 * meanAnomaly);\n        let eclipticLongitudeRad = eclipticLongitude * Angle.DEGREES_TO_RADIANS;\n\n        let obliquityOfTheEcliptic = (23.439 - 0.0000004 * numDays) * Angle.DEGREES_TO_RADIANS;\n\n        let declination = Math.asin(Math.sin(obliquityOfTheEcliptic) * Math.sin(eclipticLongitudeRad)) *\n            Angle.RADIANS_TO_DEGREES;\n\n        let rightAscension = Math.atan(Math.cos(obliquityOfTheEcliptic) * Math.tan(eclipticLongitudeRad)) *\n            Angle.RADIANS_TO_DEGREES;\n\n        //compensate for atan result\n        if (eclipticLongitude >= 90 && eclipticLongitude < 270) {\n            rightAscension += 180;\n        }\n        rightAscension = this.normalizeAngle360(rightAscension);\n\n        return {\n            declination: declination,\n            rightAscension: rightAscension\n        };\n    },\n\n    /**\n     * Converts from celestial coordinates (declination and right ascension) to geographic coordinates\n     * (latitude, longitude) for a given julian date\n     * @param {{declination: Number, rightAscension: Number}} celestialLocation\n     * @param {Date} date\n     * @throws {ArgumentError} if celestialLocation or julianDate are missing\n     * @return {{latitude: Number, longitude: Number}} the geographic location\n     */\n    celestialToGeographic: function (celestialLocation, date) {\n        if (!celestialLocation) {\n            throw new ArgumentError(\n                Logger.logMessage(Logger.LEVEL_SEVERE, \"SunPosition\", \"celestialToGeographic\",\n                    \"missingCelestialLocation\"));\n        }\n        if (date instanceof Date === false) {\n            throw new ArgumentError(\n                Logger.logMessage(Logger.LEVEL_SEVERE, \"SunPosition\", \"celestialToGeographic\", \"missingDate\"));\n        }\n\n        let julianDate = this.computeJulianDate(date);\n\n        //number of days (positive or negative) since Greenwich noon, Terrestrial Time, on 1 January 2000 (J2000.0)\n        let numDays = julianDate - 2451545;\n\n        //Greenwich Mean Sidereal Time\n        let GMST = this.normalizeAngle360(280.46061837 + 360.98564736629 * numDays);\n\n        //Greenwich Hour Angle\n        let GHA = this.normalizeAngle360(GMST - celestialLocation.rightAscension);\n\n        let longitude = Angle.normalizedDegreesLongitude(-GHA);\n\n        return {\n            latitude: celestialLocation.declination,\n            longitude: longitude\n        };\n    },\n\n    /**\n     * Computes the julian date from a javascript date object\n     * @param {Date} date\n     * @throws {ArgumentError} if the date is missing\n     * @return {Number} the julian date\n     */\n    computeJulianDate: function (date) {\n        if (date instanceof Date === false) {\n            throw new ArgumentError(\n                Logger.logMessage(Logger.LEVEL_SEVERE, \"SunPosition\", \"computeJulianDate\", \"missingDate\"));\n        }\n\n        let year = date.getUTCFullYear();\n        let month = date.getUTCMonth() + 1;\n        let day = date.getUTCDate();\n        let hour = date.getUTCHours();\n        let minute = date.getUTCMinutes();\n        let second = date.getUTCSeconds();\n\n        let dayFraction = (hour + minute / 60 + second / 3600) / 24;\n\n        if (month <= 2) {\n            year -= 1;\n            month += 12;\n        }\n\n        let A = Math.trunc(year / 100);\n        let B = 2 - A + Math.trunc(A / 4);\n        let JD0h = Math.trunc(365.25 * (year + 4716)) + Math.trunc(30.6001 * (month + 1)) + day + B - 1524.5;\n\n        return JD0h + dayFraction;\n    },\n\n    /**\n     * Restricts an angle to the range [0, 360] degrees, wrapping angles outside the range.\n     * Wrapping takes place as though traversing the edge of a unit circle;\n     * angles less than 0 wrap back to 360, while angles greater than 360 wrap back to 0.\n     *\n     * @param {Number} degrees the angle to wrap in degrees\n     *\n     * @return {Number} the specified angle wrapped to [0, 360] degrees\n     */\n    normalizeAngle360: function(degrees) {\n        let angle = degrees % 360;\n        return angle >= 0 ? angle : (angle < 0 ? 360 + angle : 360 - angle);\n    }\n\n};\n\nexport default SunPosition;","import WorldWind from 'webworldwind-esa';\nimport SunPosition from './SunPosition';\nconst {\n    Angle\n} = WorldWind;\n\nconst Celestial = {\n\n    SUN: 0,\n    MERCURY: 1,\n    VENUS: 2,\n    MARS: 4,\n    JUPITER: 5,\n    SATURN: 6,\n    URANUS: 7,\n    NEPTUNE: 8,\n\n    getCelestialLocation(id, date) {\n        let orbitalElements;\n        const julianDate = SunPosition.computeJulianDate(date);\n        let d = julianDate - 2451543.5;\n        //d = -3543.0;\n\n        switch (id) {\n            case this.SUN:\n                orbitalElements = this.computeSun(d);\n                break;\n\n            case this.MERCURY:\n                orbitalElements = this.computeMercury(d);\n                break;\n\n            case this.VENUS:\n                orbitalElements = this.computeVenus(d);\n                break;\n\n            case this.MARS:\n                orbitalElements = this.computeMars(d);\n                break;\n\n            case this.JUPITER:\n                orbitalElements = this.computeJupiter(d);\n                break;\n\n            case this.SATURN:\n                orbitalElements = this.computeSaturn(d);\n                break;\n\n            case this.URANUS:\n                orbitalElements = this.computeUranus(d);\n                break;\n\n            case this.NEPTUNE:\n                orbitalElements = this.computeNeptune(d);\n                break;\n        }\n\n        return this.computePosition(d, orbitalElements);\n    },\n\n    computeMercury(d) {\n        const N = 48.3313 + 3.24587E-5 * d;\n        const i = 7.0047 + 5.00E-8 * d;\n        const w = 29.1241 + 1.01444E-5 * d;\n        const a = 0.387098;  //(AU)\n        const e = 0.205635 + 5.59E-10 * d;\n        const M = 168.6562 + 4.0923344368 * d;\n\n        return {N, i, w, a, e, M};\n    },\n\n    computeVenus(d) {\n        const N = 76.6799 + 2.46590E-5 * d;\n        const i = 3.3946 + 2.75E-8 * d;\n        const w = 54.8910 + 1.38374E-5 * d;\n        const a = 0.723330;//  (AU)\n        const e = 0.006773 - 1.302E-9 * d;\n        const M = 48.0052 + 1.6021302244 * d;\n\n        return {N, i, w, a, e, M};\n    },\n\n    computeMars(d) {\n        const N = 49.5574 + 2.11081E-5 * d;\n        const i = 1.8497 - 1.78E-8 * d;\n        const w = 286.5016 + 2.92961E-5 * d;\n        const a = 1.523688;  //(AU)\n        const e = 0.093405 + 2.516E-9 * d;\n        const M = 18.6021 + 0.5240207766 * d;\n\n        return {N, i, w, a, e, M};\n    },\n\n    computeJupiter(d) {\n        const N = 100.4542 + 2.76854E-5 * d;\n        const i = 1.3030 - 1.557E-7 * d;\n        const w = 273.8777 + 1.64505E-5 * d;\n        const a = 5.20256;  //(AU)\n        const e = 0.048498 + 4.469E-9 * d;\n        const M = 19.8950 + 0.0830853001 * d;\n\n        return {N, i, w, a, e, M};\n    },\n\n    computeSaturn(d) {\n        const N = 113.6634 + 2.38980E-5 * d;\n        const i = 2.4886 - 1.081E-7 * d;\n        const w = 339.3939 + 2.97661E-5 * d;\n        const a = 9.55475;  //(AU)\n        const e = 0.055546 - 9.499E-9 * d;\n        const M = 316.9670 + 0.0334442282 * d;\n\n        return {N, i, w, a, e, M};\n    },\n\n    computeUranus(d) {\n        const N = 74.0005 + 1.3978E-5 * d;\n        const i = 0.7733 + 1.9E-8 * d;\n        const w = 96.6612 + 3.0565E-5 * d;\n        const a = 19.18171 - 1.55E-8 * d;//  (AU)\n        const e = 0.047318 + 7.45E-9 * d;\n        const M = 142.5905 + 0.011725806 * d;\n\n        return {N, i, w, a, e, M};\n    },\n\n    computeNeptune(d) {\n        const N = 131.7806 + 3.0173E-5 * d;\n        const i = 1.7700 - 2.55E-7 * d;\n        const w = 272.8461 - 6.027E-6 * d;\n        const a = 30.05826 + 3.313E-8 * d;//  (AU)\n        const e = 0.008606 + 2.15E-9 * d;\n        const M = 260.2471 + 0.005995147 * d;\n\n        return {N, i, w, a, e, M};\n    },\n\n    computeSun(d) {\n        const N = 0.0;\n        const i = 0.0;\n        const w = 282.9404 + 4.70935E-5 * d;\n        const a = 1.000000;  //(AU)\n        const e = 0.016709 - 1.151E-9 * d;\n        const M = 356.0470 + 0.9856002585 * d;\n\n        return {N, i, w, a, e, M};\n    },\n\n    computePosition(d, {N, i, w, a, e, M}) {\n        N = SunPosition.normalizeAngle360(N) * Angle.DEGREES_TO_RADIANS;\n        i = SunPosition.normalizeAngle360(i) * Angle.DEGREES_TO_RADIANS;\n        w = SunPosition.normalizeAngle360(w) * Angle.DEGREES_TO_RADIANS;\n        //e = SunPosition.normalizeAngle360(e) * Angle.DEGREES_TO_RADIANS;\n        M = SunPosition.normalizeAngle360(M) * Angle.DEGREES_TO_RADIANS;\n\n        let E = M + e * Math.sin(M) * (1.0 + e * Math.cos(M));\n\n        if (e >= 0.06) {\n            for (var aa = 0; aa < 10; aa++) {\n                var E1 = E - (E - e * Math.sin(E) - M) / (1 - e * Math.cos(E));\n                if (Math.abs(E1 - E) < 0.001) {\n                    E = E1;\n                    break;\n                }\n                E = E1;\n            }\n        }\n\n        const xv = a * (Math.cos(E) - e);\n        const yv = a * (Math.sqrt(1.0 - e * e) * Math.sin(E));\n\n        const v = Math.atan2(yv, xv);\n        const r = Math.sqrt(xv * xv + yv * yv);\n\n        let xh = r * (Math.cos(N) * Math.cos(v + w) - Math.sin(N) * Math.sin(v + w) * Math.cos(i));\n        let yh = r * (Math.sin(N) * Math.cos(v + w) + Math.cos(N) * Math.sin(v + w) * Math.cos(i));\n        let zh = r * (Math.sin(v + w) * Math.sin(i));\n\n        const Epoch = 2000.0;\n        const lon_corr = 3.82394E-5 * (365.2422 * (Epoch - 2000.0) - d) * Angle.DEGREES_TO_RADIANS;\n\n        const lonecl = Math.atan2(yh, xh) + lon_corr;\n        const latecl = Math.atan2(zh, Math.sqrt(xh * xh + yh * yh));\n\n\n        /*** perturbations ***/\n        /*** not implemented ***/\n\n\n        xh = r * Math.cos(lonecl) * Math.cos(latecl);\n        yh = r * Math.sin(lonecl) * Math.cos(latecl);\n        zh = r * Math.sin(latecl);\n\n        let {lonsun, rsun} = this.getLonSun(d, this.computeSun(d));\n        lonsun *= Angle.RADIANS_TO_DEGREES;\n        lonsun = SunPosition.normalizeAngle360(lonsun) * Angle.DEGREES_TO_RADIANS;\n\n        const xs = rsun * Math.cos(lonsun);\n        const ys = rsun * Math.sin(lonsun);\n\n        const xg = xh + xs;\n        const yg = yh + ys;\n        const zg = zh;\n\n        const ecl = SunPosition.normalizeAngle360(23.4393 - 3.563E-7 * d) * Angle.DEGREES_TO_RADIANS;\n\n        const xe = xg;\n        const ye = yg * Math.cos(ecl) - zg * Math.sin(ecl);\n        const ze = yg * Math.sin(ecl) + zg * Math.cos(ecl);\n\n        const ra = SunPosition.normalizeAngle360(Math.atan2(ye, xe) * Angle.RADIANS_TO_DEGREES);\n        const dec = Math.atan2(ze, Math.sqrt(xe * xe + ye * ye)) * Angle.RADIANS_TO_DEGREES;\n\n        return {ra, dec};\n    },\n\n    getLonSun(d, {w, e, M}) {\n        w = SunPosition.normalizeAngle360(w) * Angle.DEGREES_TO_RADIANS;\n        //e = SunPosition.normalizeAngle360(e) * Angle.DEGREES_TO_RADIANS;\n        M = SunPosition.normalizeAngle360(M) * Angle.DEGREES_TO_RADIANS;\n\n        const E = M + e * Math.sin(M) * (1.0 + e * Math.cos(M));\n\n        const xv = Math.cos(E) - e;\n        const yv = Math.sqrt(1.0 - e * e) * Math.sin(E);\n\n        const v = Math.atan2(yv, xv);\n        const rsun = Math.sqrt(xv * xv + yv * yv);\n\n        const lonsun = v + w;\n\n        return {lonsun, rsun};\n    },\n\n};\n\nexport default Celestial;","/**\n * @exports StarFieldProgram\n */\nimport WorldWind from 'webworldwind-esa';\n\nconst {\n    ArgumentError,\n    GpuProgram,\n    Logger,\n    Matrix,\n    Color\n} = WorldWind;\n\n/**\n * Constructs a new program.\n * Initializes, compiles and links this GLSL program with the source code for its vertex and fragment shaders.\n * <p>\n * This method creates WebGL shaders for the program's shader sources and attaches them to a new GLSL program.\n * This method then compiles the shaders and then links the program if compilation is successful.\n * Use the bind method to make the program current during rendering.\n *\n * @alias StarFieldProgram\n * @constructor\n * @augments GpuProgram\n * @classdesc StarFieldProgram is a GLSL program that draws points representing stars.\n * @param {WebGLRenderingContext} gl The current WebGL context.\n * @throws {ArgumentError} If the shaders cannot be compiled, or linking of the compiled shaders into a program\n * fails.\n */\nclass StarFieldProgram extends GpuProgram {\n    constructor(gl) {\n        super(gl, 'attribute vec4 vertexPoint;\\n' +\n\n            'uniform mat4 mvpMatrix;\\n' +\n            //number of days (positive or negative) since Greenwich noon, Terrestrial Time,\n            // on 1 January 2000 (J2000.0)\n            'uniform float numDays;\\n' +\n            'uniform vec2 magnitudeRange;\\n' +\n\n            'varying float magnitudeWeight;\\n' +\n\n            //normalizes an angle between 0.0 and 359.0\n            'float normalizeAngle(float angle) {\\n' +\n            '   float angleDivisions = angle / 360.0;\\n' +\n            '   return 360.0 * (angleDivisions - floor(angleDivisions));\\n' +\n            '}\\n' +\n\n            //transforms declination and right ascension in cartesian coordinates\n            'vec3 computePosition(float dec, float ra) {\\n' +\n            '   float GMST = normalizeAngle(280.46061837 + 360.98564736629 * numDays);\\n' +\n            '   float GHA = normalizeAngle(GMST - ra);\\n' +\n            '   float lon = -GHA + 360.0 * step(180.0, GHA);\\n' +\n            '   float latRad = radians(dec);\\n' +\n            '   float lonRad = radians(lon);\\n' +\n            '   float radCosLat = cos(latRad);\\n' +\n            '   return vec3(radCosLat * sin(lonRad), sin(latRad), radCosLat * cos(lonRad));\\n' +\n            '}\\n' +\n\n            //normalizes a value between 0.0 and 1.0\n            'float normalizeScalar(float value, float minValue, float maxValue){\\n' +\n            '   return (value - minValue) / (maxValue - minValue);\\n' +\n            '}\\n' +\n\n            'void main() {\\n' +\n            '   vec3 vertexPosition = computePosition(vertexPoint.x, vertexPoint.y);\\n' +\n            '   gl_Position = mvpMatrix * vec4(vertexPosition.xyz, 1.0);\\n' +\n            '   gl_Position.z = gl_Position.w - 0.00001;\\n' +\n            '   gl_PointSize = vertexPoint.z;\\n' +\n            '   magnitudeWeight = normalizeScalar(vertexPoint.w, magnitudeRange.x, magnitudeRange.y);\\n' +\n            '}', 'precision mediump float;\\n' +\n\n            'uniform sampler2D textureSampler;\\n' +\n            'uniform int fragMode;\\n' +\n            'uniform vec4 color;\\n' +\n\n            'varying float magnitudeWeight;\\n' +\n\n            'const vec4 white = vec4(1.0, 1.0, 1.0, 1.0);\\n' +\n            'const vec4 grey = vec4(0.5, 0.5, 0.5, 1.0);\\n' +\n\n            'void main() {\\n' +\n            '   if (fragMode == 1) {\\n' +\n            '       gl_FragColor = texture2D(textureSampler, gl_PointCoord);\\n' +\n            '   }\\n' +\n            '   else if (fragMode == 0) {\\n' +\n            //paint the starts in shades of grey, where the brightest star is white and the dimmest star is grey\n            '       gl_FragColor = mix(white, grey, magnitudeWeight);\\n' +\n            '   }\\n' +\n            '   else if (fragMode == 2) {\\n' +\n            '       gl_FragColor = color;\\n' +\n            '   }\\n' +\n            '}', [\"vertexPoint\"]);\n\n        this.FRAG_MODE_MIX_COLOR = 0;\n        this.FRAG_MODE_TEXTURE = 1;\n        this.FRAG_MODE_COLOR = 2;\n\n        /**\n         * The WebGL location for this program's 'vertexPoint' attribute.\n         * @type {Number}\n         * @readonly\n         */\n        this.vertexPointLocation = this.attributeLocation(gl, \"vertexPoint\");\n\n        /**\n         * The WebGL location for this program's 'mvpMatrix' uniform.\n         * @type {WebGLUniformLocation}\n         * @readonly\n         */\n        this.mvpMatrixLocation = this.uniformLocation(gl, \"mvpMatrix\");\n\n        /**\n         * The WebGL location for this program's 'numDays' uniform.\n         * @type {WebGLUniformLocation}\n         * @readonly\n         */\n        this.numDaysLocation = this.uniformLocation(gl, \"numDays\");\n\n        /**\n         * The WebGL location for this program's 'magnitudeRangeLocation' uniform.\n         * @type {WebGLUniformLocation}\n         * @readonly\n         */\n        this.magnitudeRangeLocation = this.uniformLocation(gl, \"magnitudeRange\");\n\n        /**\n         * The WebGL location for this program's 'textureSampler' uniform.\n         * @type {WebGLUniformLocation}\n         * @readonly\n         */\n        this.textureUnitLocation = this.uniformLocation(gl, \"textureSampler\");\n\n        /**\n         * The WebGL location for this program's 'textureEnabled' uniform.\n         * @type {WebGLUniformLocation}\n         * @readonly\n         */\n        this.fragModeLocation = this.uniformLocation(gl, \"fragMode\");\n\n        this.colorLocation = this.uniformLocation(gl, \"color\");\n\n        this.localState = {\n            mvpMatrix: null,\n            numDays: null,\n            magnitudeRange: null,\n            textureUnit: null,\n            fragMode: null,\n            color: null,\n        };\n    }\n\n    /**\n     * Loads the specified matrix as the value of this program's 'mvpMatrix' uniform variable.\n     *\n     * @param {WebGLRenderingContext} gl The current WebGL context.\n     * @param {Matrix} matrix The matrix to load.\n     * @throws {ArgumentError} If the specified matrix is null or undefined.\n     */\n    loadModelviewProjection(gl, matrix) {\n        if (!matrix) {\n            throw new ArgumentError(\n                Logger.logMessage(Logger.LEVEL_SEVERE, \"StarFieldProgram\", \"loadModelviewProjection\", \"missingMatrix\"));\n        }\n\n        let forceLoad = false;\n        if (this.localState.mvpMatrix === null) {\n            forceLoad = true;\n            this.localState.mvpMatrix = Matrix.fromIdentity();\n        }\n\n        if (forceLoad || !this.localState.mvpMatrix.equals(matrix)) {\n            this.loadUniformMatrix(gl, matrix, this.mvpMatrixLocation);\n            this.localState.mvpMatrix.copy(matrix);\n        }\n    }\n\n    /**\n     * Loads the specified number as the value of this program's 'numDays' uniform variable.\n     *\n     * @param {WebGLRenderingContext} gl The current WebGL context.\n     * @param {Number} numDays The number of days (positive or negative) since Greenwich noon, Terrestrial Time,\n     * on 1 January 2000 (J2000.0)\n     * @throws {ArgumentError} If the specified number is null or undefined.\n     */\n    loadNumDays(gl, numDays) {\n        if (numDays == null) {\n            throw new ArgumentError(\n                Logger.logMessage(Logger.LEVEL_SEVERE, \"StarFieldProgram\", \"loadNumDays\", \"missingNumDays\"));\n        }\n        if (this.localState.numDays !== numDays) {\n            gl.uniform1f(this.numDaysLocation, numDays);\n            this.localState.numDays = numDays;\n        }\n    }\n\n    /**\n     * Loads the specified numbers as the value of this program's 'magnitudeRange' uniform variable.\n     *\n     * @param {WebGLRenderingContext} gl The current WebGL context.\n     * @param {Number} minMag\n     * @param {Number} maxMag\n     * @throws {ArgumentError} If the specified numbers are null or undefined.\n     */\n    loadMagnitudeRange(gl, minMag, maxMag) {\n        if (minMag == null) {\n            throw new ArgumentError(\n                Logger.logMessage(Logger.LEVEL_SEVERE, \"StarFieldProgram\", \"loadMagRange\", \"missingMinMag\"));\n        }\n        if (maxMag == null) {\n            throw new ArgumentError(\n                Logger.logMessage(Logger.LEVEL_SEVERE, \"StarFieldProgram\", \"loadMagRange\", \"missingMaxMag\"));\n        }\n        let forceLoad = false;\n        if (this.localState.magnitudeRange === null) {\n            forceLoad = true;\n            this.localState.magnitudeRange = [minMag, maxMag];\n        }\n\n        if (forceLoad || this.localState.magnitudeRange[0] !== minMag || this.localState.magnitudeRange[1] !== maxMag) {\n            gl.uniform2f(this.magnitudeRangeLocation, minMag, maxMag);\n            this.localState.magnitudeRange[0] = minMag;\n            this.localState.magnitudeRange[1] = maxMag;\n        }\n    }\n\n    /**\n     * Loads the specified number as the value of this program's 'textureSampler' uniform variable.\n     * @param {WebGLRenderingContext} gl The current WebGL context.\n     * @param {Number} unit The texture unit.\n     */\n    loadTextureUnit(gl, unit) {\n        if (this.localState.textureUnit !== unit) {\n            gl.uniform1i(this.textureUnitLocation, unit - gl.TEXTURE0);\n            this.localState.textureUnit = unit;\n        }\n    }\n\n    loadFragMode(gl, mode) {\n        if (this.localState.fragMode !== mode) {\n            gl.uniform1i(this.fragModeLocation, mode);\n            this.localState.fragMode = mode;\n        }\n    }\n\n    loadColor(gl, color) {\n        let forceLoad = false;\n        if (this.localState.color === null) {\n            forceLoad = true;\n            this.localState.color = new Color(0, 0, 0, 0);\n        }\n\n        if (forceLoad || !this.localState.color.equals(color)) {\n            this.loadUniformColor(gl, color, this.colorLocation);\n            this.localState.color.copy(color);\n        }\n    }\n}\n\n/**\n * A string that uniquely identifies this program.\n * @type {string}\n * @readonly\n */\nStarFieldProgram.key = \"WorldWindGpuStarFieldFullProgram\";\n\nexport default StarFieldProgram;","/**\n * @exports StarFieldLayer\n */\nimport Celestial from './Celestial';\nimport StarFieldProgram from './StarFieldProgram';\nimport SunPosition from './SunPosition';\n\nimport WorldWind from 'webworldwind-esa';\nconst {\n    Color,\n    Layer,\n    Logger,\n    Matrix,\n    REDRAW_EVENT_TYPE\n} = WorldWind;\n\n\n/**\n * Constructs a layer showing stars and the Sun around the Earth.\n * If used together with the AtmosphereLayer, the StarFieldLayer must be inserted before the AtmosphereLayer.\n *\n * If you want to use your own star data, the file provided must be .json\n * and the fields 'ra', 'dec' and 'vmag' must be present in the metadata.\n * ra and dec must be expressed in degrees.\n *\n * This layer uses J2000.0 as the ref epoch.\n *\n * If the star data .json file is too big, consider enabling gzip compression on your web server.\n * For more info about enabling gzip compression consult the configuration for your web server.\n *\n *\n -- output format : json\n SELECT \"I/239/hip_main\".HIP,  \"I/239/hip_main\".Vmag as vmag, \"I/239/hip_main\".\"_RA.icrs\" as ra,  \"I/239/hip_main\".\"_DE.icrs\" as dec\n FROM \"I/239/hip_main\"\n WHERE \"I/239/hip_main\".Vmag <=6.5\n *\n * @alias StarFieldLayer\n * @constructor\n * @classdesc Provides a layer showing stars, and the Sun around the Earth\n * @param {URL} starDataSource optional url for the stars data\n * @augments Layer\n */\nclass StarFieldLayer extends Layer {\n    constructor(starDataSource) {\n        super('StarField');\n\n        // The StarField Layer is not pickable.\n        this.pickEnabled = false;\n\n        /**\n         * The size of the Sun in pixels.\n         * This can not exceed the maximum allowed pointSize of the GPU.\n         * A warning will be given if the size is too big and the allowed max size will be used.\n         * @type {Number}\n         * @default 128\n         */\n        this.sunSize = 128;\n\n        /**\n         * Indicates weather to show or hide the Sun\n         * @type {Boolean}\n         * @default true\n         */\n        this.showSun = true;\n\n        //Documented in defineProperties below.\n        this._starDataSource = starDataSource || WorldWind.configuration.baseUrl + 'data/stars.json';\n        this._sunImageSource = WorldWind.configuration.baseUrl + 'images/sunTexture.png';\n\n        //Internal use only.\n        //The MVP matrix of this layer.\n        this._matrix = Matrix.fromIdentity();\n\n        //Internal use only.\n        //gpu cache key for the stars vbo.\n        this._starsPositionsVboCacheKey = null;\n\n        //Internal use only.\n        this._numStars = 0;\n\n        //Internal use only.\n        this._starData = null;\n\n        //Internal use only.\n        this._minMagnitude = Number.MAX_VALUE;\n        this._maxMagnitude = Number.MIN_VALUE;\n\n        //Internal use only.\n        //A flag to indicate the star data is currently being retrieved.\n        this._loadStarted = false;\n\n        //Internal use only.\n        this._minScale = 30e6;\n        this._scale = Number.MAX_SAFE_INTEGER || Math.pow(2, 53) - 1;\n        //this._scale = 50e6;\n\n        //Internal use only.\n        this._sunPositionsCacheKey = '';\n        this._sunBufferView = new Float32Array(4);\n\n        //Internal use only.\n        this._MAX_GL_POINT_SIZE = 0;\n\n        this.showPlanets = true;\n\n        const jupiterSize = 32;\n\n        this.planets = [\n            {\n                id: Celestial.MERCURY,\n                url: 'images/Mercury64.png',\n                size: jupiterSize / 4,\n                ra: null,\n                dec: null,\n            },\n            {\n                id: Celestial.VENUS,\n                url: 'images/Venus64.png',\n                size: jupiterSize / 4,\n                ra: null,\n                dec: null,\n            },\n            {\n                id: Celestial.MARS,\n                url: 'images/Mars64.png',\n                size: jupiterSize / 4,\n                ra: null,\n                dec: null,\n            },\n            {\n                id: Celestial.JUPITER,\n                url: 'images/Jupiter64.png',\n                size: jupiterSize,\n                ra: null,\n                dec: null,\n            },\n            {\n                id: Celestial.SATURN,\n                url: 'images/Saturn64.png',\n                size: jupiterSize,\n                ra: null,\n                dec: null,\n            },\n            {\n                id: Celestial.URANUS,\n                url: 'images/Uranus64.png',\n                size: jupiterSize / 2,\n                ra: null,\n                dec: null,\n            },\n            {\n                id: Celestial.NEPTUNE,\n                url: 'images/Neptune64.png',\n                size: jupiterSize / 2,\n                ra: null,\n                dec: null,\n            },\n        ];\n\n        this._planetsBufferView = null;\n\n        this._cacheKeys = {\n            sunPosition: '',\n            planetPositions: '',\n            starPositions: ''\n        };\n    }\n\n    /**\n     * Url for the stars data.\n     * @memberof StarFieldLayer.prototype\n     * @type {URL}\n     */\n    get starDataSource() {\n        return this._starDataSource;\n    }\n    \n    set starDataSource(value) {\n        this._starDataSource = value;\n        this.invalidateStarData();\n    }\n\n    /**\n     * Url for the sun texture image.\n     * @memberof StarFieldLayer.prototype\n     * @type {URL}\n     */\n    get sunImageSource() {\n        return this._sunImageSource;\n    }\n    \n    set sunImageSource(value) {\n        this._sunImageSource = value;\n    }\n\n    // Documented in superclass.\n    doRender(dc) {\n        if (dc.globe.is2D()) {\n            return;\n        }\n\n        if (!this.haveResources(dc)) {\n            this.loadResources(dc);\n            return;\n        }\n\n        this.beginRendering(dc);\n        try {\n            this.doDraw(dc);\n        }\n        finally {\n            this.endRendering(dc);\n        }\n    }\n\n    // Internal. Intentionally not documented.\n    haveResources(dc) {\n        let sunTexture = dc.gpuResourceCache.resourceForKey(this._sunImageSource);\n        let planetTextures = this.planets.every(planet => {\n            const texture = dc.gpuResourceCache.resourceForKey(planet.url);\n            return !!texture;\n        });\n        return (\n            this._starData != null &&\n            sunTexture != null &&\n            planetTextures\n        );\n    }\n\n    // Internal. Intentionally not documented.\n    loadResources(dc) {\n        let gl = dc.currentGlContext;\n        let gpuResourceCache = dc.gpuResourceCache;\n\n        if (!this._starData) {\n            this.fetchStarData();\n        }\n\n        let sunTexture = gpuResourceCache.resourceForKey(this._sunImageSource);\n        if (!sunTexture) {\n            gpuResourceCache.retrieveTexture(gl, this._sunImageSource);\n        }\n\n        this.planets.forEach(planet => {\n            const texture = gpuResourceCache.resourceForKey(planet.url);\n            if (!texture) {\n                gpuResourceCache.retrieveTexture(gl, planet.url);\n            }\n        });\n    }\n\n    // Internal. Intentionally not documented.\n    beginRendering(dc) {\n        let gl = dc.currentGlContext;\n        dc.findAndBindProgram(StarFieldProgram);\n        gl.enableVertexAttribArray(0);\n        gl.depthMask(false);\n    }\n\n    // Internal. Intentionally not documented.\n    doDraw(dc) {\n        this.loadCommonUniforms(dc);\n\n        this.renderStars(dc);\n\n        if (this.showSun) {\n            this.renderSun(dc);\n        }\n\n        if (this.showPlanets) {\n            this.renderPlanets(dc);\n        }\n    }\n\n    // Internal. Intentionally not documented.\n    loadCommonUniforms(dc) {\n        let gl = dc.currentGlContext;\n        let program = dc.currentProgram;\n\n        let mvp = dc.modelviewProjection || dc.navigatorState.modelviewProjection;\n        this._matrix.copy(mvp);\n        this._matrix.multiplyByScale(this._scale, this._scale, this._scale);\n\n        program.loadModelviewProjection(gl, this._matrix);\n\n        //this subtraction does not work properly on the GPU, it must be done on the CPU\n        //possibly due to precision loss\n        //number of days (positive or negative) since Greenwich noon, Terrestrial Time, on 1 January 2000 (J2000.0)\n        let julianDate = SunPosition.computeJulianDate(this.time || new Date());\n        program.loadNumDays(gl, julianDate - 2451545.0);\n    }\n\n    // Internal. Intentionally not documented.\n    renderStars(dc) {\n        let gl = dc.currentGlContext;\n        let gpuResourceCache = dc.gpuResourceCache;\n        let program = dc.currentProgram;\n\n        if (!this._starsPositionsVboCacheKey) {\n            this._starsPositionsVboCacheKey = gpuResourceCache.generateCacheKey();\n        }\n        let vboId = gpuResourceCache.resourceForKey(this._starsPositionsVboCacheKey);\n        if (!vboId) {\n            vboId = gl.createBuffer();\n            let positions = this.createStarsGeometry();\n            gpuResourceCache.putResource(this._starsPositionsVboCacheKey, vboId, positions.length * 4);\n            gl.bindBuffer(gl.ARRAY_BUFFER, vboId);\n            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(positions), gl.STATIC_DRAW);\n        }\n        else {\n            gl.bindBuffer(gl.ARRAY_BUFFER, vboId);\n        }\n        dc.frameStatistics.incrementVboLoadCount(1);\n\n        gl.vertexAttribPointer(0, 4, gl.FLOAT, false, 0, 0);\n\n        program.loadMagnitudeRange(gl, this._minMagnitude, this._maxMagnitude);\n        program.loadFragMode(gl, program.FRAG_MODE_MIX_COLOR);\n\n        gl.drawArrays(gl.POINTS, 0, this._numStars);\n    }\n\n    // Internal. Intentionally not documented.\n    renderPlanets(dc) {\n        let gl = dc.currentGlContext;\n        let program = dc.currentProgram;\n        let gpuResourceCache = dc.gpuResourceCache;\n\n        if (!this._MAX_GL_POINT_SIZE) {\n            this._MAX_GL_POINT_SIZE = gl.getParameter(gl.ALIASED_POINT_SIZE_RANGE)[1];\n        }\n        if (this.sunSize > this._MAX_GL_POINT_SIZE) {\n            Logger.log(Logger.LEVEL_WARNING, 'StarFieldLayer - sunSize is to big, max size allowed is: ' +\n                this._MAX_GL_POINT_SIZE);\n        }\n\n        this.planets.forEach(planet => {\n            const {ra, dec} = Celestial.getCelestialLocation(planet.id, this.time || new Date());\n            planet.ra = ra;\n            planet.dec = dec;\n        }, this);\n\n        if (!this._planetsBufferView) {\n            this._planetsBufferView = new Float32Array(this.planets.length * 4);\n        }\n\n        for (let i = 0; i < this.planets.length; i++) {\n            let planet = this.planets[i];\n            this._planetsBufferView[i * 4 + 0] = planet.dec;\n            this._planetsBufferView[i * 4 + 1] = planet.ra;\n            this._planetsBufferView[i * 4 + 2] = Math.min(planet.size, this._MAX_GL_POINT_SIZE);\n            this._planetsBufferView[i * 4 + 3] = 1;\n        }\n\n        if (!this._planetsPositionsVboCacheKey) {\n            this._planetsPositionsVboCacheKey = gpuResourceCache.generateCacheKey();\n        }\n        let vboId = gpuResourceCache.resourceForKey(this._planetsPositionsVboCacheKey);\n        if (!vboId) {\n            vboId = gl.createBuffer();\n            gpuResourceCache.putResource(this._planetsPositionsVboCacheKey, vboId, this._planetsBufferView.length * 4);\n            gl.bindBuffer(gl.ARRAY_BUFFER, vboId);\n            gl.bufferData(gl.ARRAY_BUFFER, this._planetsBufferView, gl.DYNAMIC_DRAW);\n        }\n        else {\n            gl.bindBuffer(gl.ARRAY_BUFFER, vboId);\n            gl.bufferSubData(gl.ARRAY_BUFFER, 0, this._planetsBufferView);\n        }\n        dc.frameStatistics.incrementVboLoadCount(1);\n        gl.vertexAttribPointer(0, 4, gl.FLOAT, false, 0, 0);\n\n        program.loadFragMode(gl, program.FRAG_MODE_TEXTURE);\n\n        for (let i = 0; i < this.planets.length; i++) {\n            let textureSrc = this.planets[i].url;\n            let texture = dc.gpuResourceCache.resourceForKey(textureSrc);\n            texture.bind(dc);\n            gl.drawArrays(gl.POINTS, i, 1);\n        }\n    }\n\n    // Internal. Intentionally not documented.\n    renderSun(dc) {\n        let gl = dc.currentGlContext;\n        let program = dc.currentProgram;\n        let gpuResourceCache = dc.gpuResourceCache;\n\n        if (!this._MAX_GL_POINT_SIZE) {\n            this._MAX_GL_POINT_SIZE = gl.getParameter(gl.ALIASED_POINT_SIZE_RANGE)[1];\n        }\n        if (this.sunSize > this._MAX_GL_POINT_SIZE) {\n            Logger.log(Logger.LEVEL_WARNING, 'StarFieldLayer - sunSize is to big, max size allowed is: ' +\n                this._MAX_GL_POINT_SIZE);\n        }\n\n        let sunCelestialLocation = SunPosition.getAsCelestialLocation(this.time || new Date());\n\n        this._sunBufferView[0] = sunCelestialLocation.declination;\n        this._sunBufferView[1] = sunCelestialLocation.rightAscension;\n        this._sunBufferView[2] = Math.min(this.sunSize, this._MAX_GL_POINT_SIZE);\n        this._sunBufferView[3] = 1;\n\n        if (!this._sunPositionsCacheKey) {\n            this._sunPositionsCacheKey = gpuResourceCache.generateCacheKey();\n        }\n        let vboId = gpuResourceCache.resourceForKey(this._sunPositionsCacheKey);\n        if (!vboId) {\n            vboId = gl.createBuffer();\n            gpuResourceCache.putResource(this._sunPositionsCacheKey, vboId, this._sunBufferView.length * 4);\n            gl.bindBuffer(gl.ARRAY_BUFFER, vboId);\n            gl.bufferData(gl.ARRAY_BUFFER, this._sunBufferView, gl.DYNAMIC_DRAW);\n        }\n        else {\n            gl.bindBuffer(gl.ARRAY_BUFFER, vboId);\n            gl.bufferSubData(gl.ARRAY_BUFFER, 0, this._sunBufferView);\n        }\n        dc.frameStatistics.incrementVboLoadCount(1);\n        gl.vertexAttribPointer(0, 4, gl.FLOAT, false, 0, 0);\n\n        program.loadFragMode(gl, program.FRAG_MODE_TEXTURE);\n\n        let sunTexture = dc.gpuResourceCache.resourceForKey(this._sunImageSource);\n        sunTexture.bind(dc);\n\n        gl.drawArrays(gl.POINTS, 0, 1);\n    }\n\n    // Internal. Intentionally not documented.\n    endRendering(dc) {\n        let gl = dc.currentGlContext;\n        gl.depthMask(true);\n        gl.disableVertexAttribArray(0);\n    }\n\n    // Internal. Intentionally not documented.\n    fetchStarData() {\n        if (this._loadStarted) {\n            return;\n        }\n\n        this._loadStarted = true;\n        let self = this;\n        let xhr = new XMLHttpRequest();\n\n        xhr.onload = function () {\n            if (this.status >= 200 && this.status < 300) {\n                try {\n                    self._starData = JSON.parse(this.response);\n                    self.sendRedrawRequest();\n                }\n                catch (e) {\n                    Logger.log(Logger.LEVEL_SEVERE, 'StarFieldLayer unable to parse JSON for star data ' +\n                        e.toString());\n                }\n            }\n            else {\n                Logger.log(Logger.LEVEL_SEVERE, 'StarFieldLayer unable to fetch star data. Status: ' +\n                    this.status + ' ' + this.statusText);\n            }\n            self._loadStarted = false;\n        };\n\n        xhr.onerror = function () {\n            Logger.log(Logger.LEVEL_SEVERE, 'StarFieldLayer unable to fetch star data');\n            self._loadStarted = false;\n        };\n\n        xhr.ontimeout = function () {\n            Logger.log(Logger.LEVEL_SEVERE, 'StarFieldLayer fetch star data has timeout');\n            self._loadStarted = false;\n        };\n\n        xhr.open('GET', this._starDataSource, true);\n        xhr.send();\n    }\n\n    // Internal. Intentionally not documented.\n    createStarsGeometry() {\n        let indexes = this.parseStarsMetadata(this._starData.metadata);\n\n        if (indexes.raIndex === -1) {\n            throw new Error(\n                Logger.logMessage(Logger.LEVEL_SEVERE, 'StarFieldLayer', 'createStarsGeometry',\n                    'Missing ra field in star data.'));\n        }\n        if (indexes.decIndex === -1) {\n            throw new Error(\n                Logger.logMessage(Logger.LEVEL_SEVERE, 'StarFieldLayer', 'createStarsGeometry',\n                    'Missing dec field in star data.'));\n        }\n        if (indexes.magIndex === -1) {\n            throw new Error(\n                Logger.logMessage(Logger.LEVEL_SEVERE, 'StarFieldLayer', 'createStarsGeometry',\n                    'Missing vmag field in star data.'));\n        }\n\n        let data = this._starData.data;\n        let positions = [];\n\n        this._minMagnitude = Number.MAX_VALUE;\n        this._maxMagnitude = Number.MIN_VALUE;\n\n        for (let i = 0, len = data.length; i < len; i++) {\n            let starInfo = data[i];\n            let declination = starInfo[indexes.decIndex]; //for latitude\n            let rightAscension = starInfo[indexes.raIndex]; //for longitude\n            let magnitude = starInfo[indexes.magIndex];\n            let pointSize = magnitude < 2 ? 2 : 1;\n            positions.push(declination, rightAscension, pointSize, magnitude);\n\n            this._minMagnitude = Math.min(this._minMagnitude, magnitude);\n            this._maxMagnitude = Math.max(this._maxMagnitude, magnitude);\n        }\n        this._numStars = Math.floor(positions.length / 4);\n\n        return positions;\n    }\n\n    // Internal. Intentionally not documented.\n    parseStarsMetadata(metadata) {\n        let raIndex = -1,\n            decIndex = -1,\n            magIndex = -1;\n        for (let i = 0, len = metadata.length; i < len; i++) {\n            let starMetaInfo = metadata[i];\n            if (starMetaInfo.name === 'ra') {\n                raIndex = i;\n            }\n            if (starMetaInfo.name === 'dec') {\n                decIndex = i;\n            }\n            if (starMetaInfo.name === 'vmag') {\n                magIndex = i;\n            }\n        }\n        return {\n            raIndex: raIndex,\n            decIndex: decIndex,\n            magIndex: magIndex\n        };\n    }\n\n    // Internal. Intentionally not documented.\n    invalidateStarData() {\n        this._starData = null;\n        this._starsPositionsVboCacheKey = null;\n    }\n\n    // Internal. Intentionally not documented.\n    sendRedrawRequest() {\n        let e = document.createEvent('Event');\n        e.initEvent(REDRAW_EVENT_TYPE, true, true);\n        window.dispatchEvent(e);\n    }\n}\n\nexport default StarFieldLayer;\n","/*\n * Copyright 2003-2006, 2009, 2017, United States Government, as represented by the Administrator of the\n * National Aeronautics and Space Administration. All rights reserved.\n *\n * The NASAWorldWind/WebWorldWind platform is licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @exports ColladaScene\n */\nimport WorldWind from 'webworldwind-esa';\n\nconst {\n    ArgumentError,\n    BasicTextureProgram,\n    Color,\n    Logger,\n    Matrix,\n    Position,\n    PickedObject,\n    Renderable,\n    Vec3\n} = WorldWind;\n\n\n/**\n * Constructs a collada scene\n * @alias ColladaScene\n * @constructor\n * @augments Renderable\n * @classdesc Represents a scene. A scene is a collection of nodes with meshes, materials and textures.\n * @param {Position} position The scene's geographic position.\n * @param {Object} sceneData The scene's data containing the nodes, meshes, materials, textures and other\n * info needed to render the scene.\n */\nvar ColladaScene = function (position, sceneData) {\n    if (!position) {\n        throw new ArgumentError(\n            Logger.logMessage(Logger.LEVEL_SEVERE, \"ColladaScene\", \"constructor\", \"missingPosition\"));\n    }\n\n    Renderable.call(this);\n\n    // Documented in defineProperties below.\n    this._position = position;\n\n    // Documented in defineProperties below.\n    this._nodes = [];\n    this._meshes = {};\n    this._materials = {};\n    this._images = {};\n    this._upAxis = '';\n    this._dirPath = '';\n\n    // Documented in defineProperties below.\n    this._xRotation = 0;\n    this._yRotation = 0;\n    this._zRotation = 0;\n\n    this.preX = 0;\n    this.preY = 0;\n    this.preZ = 0;\n\n    // Documented in defineProperties below.\n    this._xTranslation = 0;\n    this._yTranslation = 0;\n    this._zTranslation = 0;\n\n    // Documented in defineProperties below.\n    this._scale = 1;\n\n    // Documented in defineProperties below.\n    this._altitudeMode = WorldWind.ABSOLUTE;\n\n    // Documented in defineProperties below.\n    this._localTransforms = true;\n\n    // Documented in defineProperties below.\n    this._useTexturePaths = true;\n\n    // Documented in defineProperties below.\n    this._nodesToHide = [];\n    this._hideNodes = false;\n\n    // Documented in defineProperties below.\n    this._placePoint = new Vec3(0, 0, 0);\n\n    // Documented in defineProperties below.\n    this._transformationMatrix = Matrix.fromIdentity();\n    this._mvpMatrix = Matrix.fromIdentity();\n\n    // Documented in defineProperties below.\n    this._normalTransformMatrix = Matrix.fromIdentity();\n    this._normalMatrix = Matrix.fromIdentity();\n    this._texCoordMatrix = Matrix.fromIdentity().setToUnitYFlip();\n\n    //Internal. Intentionally not documented.\n    this._entities = [];\n\n    //Internal. Intentionally not documented.\n    this._activeTexture = null;\n\n    //Internal. Intentionally not documented.\n    this._tmpVector = new Vec3(0, 0, 0);\n    this._tmpColor = new Color(1, 1, 1, 1);\n\n    //Internal. Intentionally not documented.\n    this._vboCacheKey = '';\n    this._iboCacheKey = '';\n\n    this.setSceneData(sceneData);\n};\n\nColladaScene.prototype = Object.create(Renderable.prototype);\nColladaScene.prototype.constructor = ColladaScene;\n\nObject.defineProperties(ColladaScene.prototype, {\n\n    /**\n     * The scene's geographic position.\n     * @memberof ColladaScene.prototype\n     * @type {Position}\n     */\n    position: {\n        get: function () {\n            return this._position;\n        },\n        set: function (value) {\n            this._position = value;\n        }\n    },\n\n    /**\n     * An array of nodes extracted from the collada file.\n     * @memberof ColladaScene.prototype\n     * @type {ColladaNode[]}\n     */\n    nodes: {\n        get: function () {\n            return this._nodes;\n        },\n        set: function (value) {\n            this._nodes = value;\n        }\n    },\n\n    /**\n     * An object with meshes extracted from the collada file.\n     * @memberof ColladaScene.prototype\n     * @type {{ColladaMesh}}\n     */\n    meshes: {\n        get: function () {\n            return this._meshes;\n        },\n        set: function (value) {\n            this._meshes = value;\n        }\n    },\n\n    /**\n     * An object with materials and their effects extracted from the collada file.\n     * @memberof ColladaScene.prototype\n     * @type {ColladaMaterial}\n     */\n    materials: {\n        get: function () {\n            return this._materials;\n        },\n        set: function (value) {\n            this._materials = value;\n        }\n    },\n\n    /**\n     * An object with images extracted from the collada file.\n     * @memberof ColladaScene.prototype\n     * @type {ColladaImage}\n     */\n    images: {\n        get: function () {\n            return this._images;\n        },\n        set: function (value) {\n            this._images = value;\n        }\n    },\n\n    /**\n     * The up axis of the collada model extracted from the collada file.\n     * @memberof ColladaScene.prototype\n     * @type {String}\n     */\n    upAxis: {\n        get: function () {\n            return this._upAxis;\n        },\n        set: function (value) {\n            this._upAxis = value;\n        }\n    },\n\n    /**\n     * The path to the directory of the collada file.\n     * @memberof ColladaScene.prototype\n     * @type {String}\n     */\n    dirPath: {\n        get: function () {\n            return this._dirPath;\n        },\n        set: function (value) {\n            this._dirPath = value;\n        }\n    },\n\n    /**\n     * The scene's rotation angle in degrees for the x axis.\n     * @memberof ColladaScene.prototype\n     * @type {Number}\n     */\n    xRotation: {\n        get: function () {\n            return this._xRotation;\n        },\n        set: function (value) {\n            this._xRotation = value;\n        }\n    },\n\n    /**\n     * The scene's rotation angle in degrees for the x axis.\n     * @memberof ColladaScene.prototype\n     * @type {Number}\n     */\n    yRotation: {\n        get: function () {\n            return this._yRotation;\n        },\n        set: function (value) {\n            this._yRotation = value;\n        }\n    },\n\n    /**\n     * The scene's rotation angle in degrees for the x axis.\n     * @memberof ColladaScene.prototype\n     * @type {Number}\n     */\n    zRotation: {\n        get: function () {\n            return this._zRotation;\n        },\n        set: function (value) {\n            this._zRotation = value;\n        }\n    },\n\n    /**\n     * The scene's translation for the x axis.\n     * @memberof ColladaScene.prototype\n     * @type {Number}\n     */\n    xTranslation: {\n        get: function () {\n            return this._xTranslation;\n        },\n        set: function (value) {\n            this._xTranslation = value;\n        }\n    },\n\n    /**\n     * The scene's translation for the y axis.\n     * @memberof ColladaScene.prototype\n     * @type {Number}\n     */\n    yTranslation: {\n        get: function () {\n            return this._yTranslation;\n        },\n        set: function (value) {\n            this._yTranslation = value;\n        }\n    },\n\n    /**\n     * The scene's translation for the z axis.\n     * @memberof ColladaScene.prototype\n     * @type {Number}\n     */\n    zTranslation: {\n        get: function () {\n            return this._zTranslation;\n        },\n        set: function (value) {\n            this._zTranslation = value;\n        }\n    },\n\n    /**\n     * The scene's scale.\n     * @memberof ColladaScene.prototype\n     * @type {Number}\n     */\n    scale: {\n        get: function () {\n            return this._scale;\n        },\n        set: function (value) {\n            this._scale = value;\n        }\n    },\n\n    /**\n     * The scene's Cartesian point on the globe for the specified position.\n     * @memberof ColladaScene.prototype\n     * @type {Vec3}\n     */\n    placePoint: {\n        get: function () {\n            return this._placePoint;\n        },\n        set: function (value) {\n            this._placePoint = value;\n        }\n    },\n\n    /**\n     * The scene's altitude mode. May be one of\n     * <ul>\n     *  <li>[WorldWind.ABSOLUTE]{@link WorldWind#ABSOLUTE}</li>\n     *  <li>[WorldWind.RELATIVE_TO_GROUND]{@link WorldWind#RELATIVE_TO_GROUND}</li>\n     *  <li>[WorldWind.CLAMP_TO_GROUND]{@link WorldWind#CLAMP_TO_GROUND}</li>\n     * </ul>\n     * @default WorldWind.ABSOLUTE\n     * @memberof ColladaScene.prototype\n     * @type {String}\n     */\n    altitudeMode: {\n        get: function () {\n            return this._altitudeMode;\n        },\n        set: function (value) {\n            this._altitudeMode = value;\n        }\n    },\n\n    /**\n     * The scene's transformation matrix containing the scale, rotations and translations\n     * @memberof ColladaScene.prototype\n     * @type {Matrix}\n     */\n    transformationMatrix: {\n        get: function () {\n            return this._transformationMatrix;\n        },\n        set: function (value) {\n            this._transformationMatrix = value;\n        }\n    },\n\n    /**\n     * The scene's normal matrix\n     * @memberof ColladaScene.prototype\n     * @type {Matrix}\n     */\n    normalMatrix: {\n        get: function () {\n            return this._normalMatrix;\n        },\n        set: function (value) {\n            this._normalMatrix = value;\n        }\n    },\n\n    /**\n     * Force the use of the nodes transformation info. Some 3d software may break the transformations when\n     * importing/exporting models to collada format. Set to false to ignore the the nodes transformation.\n     * Only use this option if the model does not render properly.\n     * @memberof ColladaScene.prototype\n     * @default true\n     * @type {Boolean}\n     */\n    localTransforms: {\n        get: function () {\n            return this._localTransforms;\n        },\n        set: function (value) {\n            this._localTransforms = value;\n        }\n    },\n\n    /**\n     * Force the use of the texture path specified in the collada file. Set to false to ignore the paths of the\n     * textures in the collada file and instead get the textures from the same dir as the collada file.\n     * @memberof ColladaScene.prototype\n     * @default true\n     * @type {Boolean}\n     */\n    useTexturePaths: {\n        get: function () {\n            return this._useTexturePaths;\n        },\n        set: function (value) {\n            this._useTexturePaths = value;\n        }\n    },\n\n    /**\n     * An array of node id's to not render.\n     * @memberof ColladaScene.prototype\n     * @type {String[]}\n     */\n    nodesToHide: {\n        get: function () {\n            return this._nodesToHide;\n        },\n        set: function (value) {\n            this._nodesToHide = value;\n        }\n    },\n\n    /**\n     * Set to true to force the renderer to not draw the nodes passed to the nodesToHide list.\n     * @memberof ColladaScene.prototype\n     * @default false\n     * @type {Boolean}\n     */\n    hideNodes: {\n        get: function () {\n            return this._hideNodes;\n        },\n        set: function (value) {\n            this._hideNodes = value;\n        }\n    }\n\n});\n\n// Internal. Intentionally not documented.\nColladaScene.prototype.setSceneData = function (sceneData) {\n    if (sceneData) {\n        this._nodes = sceneData.root.children;\n        this._meshes = sceneData.meshes;\n        this._materials = sceneData.materials;\n        this._images = sceneData.images;\n        this._upAxis = sceneData.metadata.up_axis;\n        this._dirPath = sceneData.dirPath;\n\n        this.flattenModel();\n    }\n};\n\n// Internal. Intentionally not documented.\nColladaScene.prototype.flattenModel = function () {\n    for (var i = 0, nodesLen = this._nodes.length; i < nodesLen; i++) {\n        this.flattenNode(this._nodes[i]);\n    }\n\n    this._entities.sort(function (a, b) {\n        var va = (a.imageKey === null) ? \"\" : \"\" + a,\n            vb = (b.imageKey === null) ? \"\" : \"\" + b;\n        return va > vb ? 1 : (va === vb ? 0 : -1);\n    });\n};\n\n// Internal. Intentionally not documented.\nColladaScene.prototype.flattenNode = function (node) {\n    if (node.mesh) {\n        var meshKey = node.mesh;\n        var buffers = this._meshes[meshKey].buffers;\n\n        for (var i = 0, bufLen = buffers.length; i < bufLen; i++) {\n            var materialBuf = buffers[i].material;\n\n            for (var j = 0; j < node.materials.length; j++) {\n                if (materialBuf === node.materials[j].symbol) {\n                    var materialKey = node.materials[j].id;\n                    break;\n                }\n            }\n\n            var material = this._materials[materialKey];\n            var imageKey = null;\n            var hasTexture = material && material.textures && buffers[i].uvs && buffers[i].uvs.length > 0;\n            if (hasTexture) {\n                if (material.textures.diffuse) {\n                    imageKey = material.textures.diffuse.mapId;\n                } else if (material.textures.reflective) {\n                    imageKey = material.textures.reflective.mapId;\n                }\n            }\n\n            this._entities.push({\n                mesh: buffers[i],\n                material: material,\n                node: node,\n                imageKey: imageKey\n            });\n        }\n    }\n\n    for (var k = 0; k < node.children.length; k++) {\n        this.flattenNode(node.children[k]);\n    }\n};\n\n// Internal. Intentionally not documented.\nColladaScene.prototype.render = function (dc) {\n    var orderedScene;\n    var frustum = dc.frustumInModelCoordinates;\n\n    if (!this.enabled) {\n        return;\n    }\n\n    if (this.lastFrameTime !== dc.timestamp) {\n        orderedScene = this.makeOrderedRenderable(dc);\n    }\n\n    if (!orderedScene) {\n        return;\n    }\n\n    if (!frustum.containsPoint(this._placePoint)) {\n        return;\n    }\n\n    orderedScene.layer = dc.currentLayer;\n\n    this.lastFrameTime = dc.timestamp;\n\n    dc.addOrderedRenderable(orderedScene);\n};\n\n// Internal. Intentionally not documented.\nColladaScene.prototype.makeOrderedRenderable = function (dc) {\n    dc.surfacePointForMode(this._position.latitude, this._position.longitude, this._position.altitude,\n        this._altitudeMode, this._placePoint);\n\n    this.eyeDistance = dc.eyePoint.distanceTo(this._placePoint);\n\n    return this;\n};\n\n// Internal. Intentionally not documented.\nColladaScene.prototype.renderOrdered = function (dc) {\n    this.drawOrderedScene(dc);\n\n    if (dc.pickingMode) {\n        var po = new PickedObject(this.pickColor.clone(), this, this._position, this.layer, false);\n        dc.resolvePick(po);\n    }\n};\n\n// Internal. Intentionally not documented.\nColladaScene.prototype.drawOrderedScene = function (dc) {\n    try {\n        this.beginDrawing(dc);\n    } finally {\n        this.endDrawing(dc);\n    }\n};\n\n// Internal. Intentionally not documented.\nColladaScene.prototype.beginDrawing = function (dc) {\n    var gl = dc.currentGlContext;\n    var gpuResourceCache = dc.gpuResourceCache;\n\n    var vboId = gpuResourceCache.resourceForKey(this._vboCacheKey);\n    var iboId = gpuResourceCache.resourceForKey(this._iboCacheKey);\n\n    if (!vboId) {\n        this.setupBuffers(dc);\n        vboId = gpuResourceCache.resourceForKey(this._vboCacheKey);\n        iboId = gpuResourceCache.resourceForKey(this._iboCacheKey);\n    }\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, vboId);\n    if (iboId) {\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, iboId);\n    }\n\n    dc.findAndBindProgram(BasicTextureProgram);\n    gl.enableVertexAttribArray(0);\n\n    if (dc.pickingMode) {\n        this.pickColor = dc.uniquePickColor();\n    }\n\n    this.computeTransformationMatrix(dc.globe);\n\n    for (var i = 0, len = this._entities.length; i < len; i++) {\n        var mustRenderNode = this.mustRenderNode(this._entities[i].node.id);\n        if (mustRenderNode) {\n            this.draw(dc, this._entities[i]);\n        }\n    }\n};\n\n// Internal. Intentionally not documented.\nColladaScene.prototype.setupBuffers = function (dc) {\n    var gl = dc.currentGlContext;\n    var sizeOfFloat32 = Float32Array.BYTES_PER_ELEMENT || 4;\n    var sizeOfUint16 = Uint16Array.BYTES_PER_ELEMENT || 2;\n    var sizeOfUint32 = Uint32Array.BYTES_PER_ELEMENT || 4;\n    var is32BitIndices = false;\n    var numIndices = 0;\n    var numVertices = 0;\n\n    for (var i = 0, len = this._entities.length; i < len; i++) {\n        var mesh = this._entities[i].mesh;\n        if (mesh.indexedRendering) {\n            numIndices += mesh.indices.length;\n            if (mesh.indices instanceof Uint32Array) {\n                is32BitIndices = true;\n            }\n        }\n        numVertices += mesh.vertices.length;\n        if (this._entities[i].imageKey) {\n            numVertices += mesh.uvs.length;\n        }\n        if (mesh.normals && mesh.normals.length) {\n            numVertices += mesh.normals.length;\n        }\n    }\n\n    var vbo = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, vbo);\n    gl.bufferData(gl.ARRAY_BUFFER, numVertices * sizeOfFloat32, gl.STATIC_DRAW);\n\n    var offset = 0;\n    for (i = 0, len = this._entities.length; i < len; i++) {\n        var data = this._entities[i].mesh.vertices;\n        this._entities[i].vertexOffset = offset;\n        gl.bufferSubData(gl.ARRAY_BUFFER, offset * sizeOfFloat32, data);\n        offset += data.length;\n    }\n\n    for (i = 0, len = this._entities.length; i < len; i++) {\n        if (this._entities[i].imageKey) {\n            data = this._entities[i].mesh.uvs;\n            this._entities[i].uvOffset = offset;\n            gl.bufferSubData(gl.ARRAY_BUFFER, offset * sizeOfFloat32, data);\n            offset += data.length;\n        }\n    }\n\n    for (i = 0, len = this._entities.length; i < len; i++) {\n        data = data = this._entities[i].mesh.normals;\n        if (data && data.length) {\n            this._entities[i].normalOffset = offset;\n            gl.bufferSubData(gl.ARRAY_BUFFER, offset * sizeOfFloat32, data);\n            offset += data.length;\n        }\n    }\n\n    var indexSize = sizeOfUint16;\n    var indexBufferSize = numIndices * indexSize;\n    var uIntExt;\n    if (is32BitIndices) {\n        uIntExt = dc.getExtension('OES_element_index_uint');\n\n        if (!uIntExt) {\n            Logger.log(Logger.LEVEL_SEVERE,\n                'The 3D model is too big and might not render properly. \\n' +\n                'Your browser does not support the \"OES_element_index_uint\" extension, ' +\n                'required to render large models.'\n            );\n        } else {\n            indexSize = sizeOfUint32;\n            indexBufferSize = numIndices * indexSize;\n        }\n    }\n\n    if (numIndices) {\n        var ibo = gl.createBuffer();\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, ibo);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, indexBufferSize, gl.STATIC_DRAW);\n\n        offset = 0;\n        for (i = 0, len = this._entities.length; i < len; i++) {\n            mesh = this._entities[i].mesh;\n            if (mesh.indexedRendering) {\n                data = mesh.indices;\n                if (data instanceof Uint32Array && !uIntExt) {\n                    data = new Uint16Array(data);\n                }\n                this._entities[i].indexOffset = offset;\n                this._entities[i].indexSize = indexSize;\n                gl.bufferSubData(gl.ELEMENT_ARRAY_BUFFER, offset * indexSize, data);\n                offset += data.length;\n            }\n        }\n    }\n\n    this._vboCacheKey = dc.gpuResourceCache.generateCacheKey();\n    dc.gpuResourceCache.putResource(this._vboCacheKey, vbo, numVertices * sizeOfFloat32);\n\n    if (numIndices) {\n        this._iboCacheKey = dc.gpuResourceCache.generateCacheKey();\n        dc.gpuResourceCache.putResource(this._iboCacheKey, ibo, indexBufferSize);\n    }\n};\n\n// Internal. Intentionally not documented.\nColladaScene.prototype.draw = function (dc, entity) {\n    var gl = dc.currentGlContext;\n    var program = dc.currentProgram;\n    var gpuResourceCache = dc.gpuResourceCache;\n\n    var buffers = entity.mesh;\n    var material = entity.material;\n\n    var nodeWorldMatrix = entity.node.worldMatrix;\n    var nodeNormalMatrix = entity.node.normalMatrix;\n\n    var hasLighting = buffers.normals && buffers.normals.length;\n\n    var imageKey = entity.imageKey;\n\n    this.applyColor(dc, material);\n\n    if (imageKey) {\n        var imagePath = this._useTexturePaths ? this._images[imageKey].path : this._images[imageKey].filename;\n        var textureCacheKey = this._dirPath + imagePath;\n        this._activeTexture = gpuResourceCache.resourceForKey(textureCacheKey);\n        if (!this._activeTexture) {\n            var wrapMode = buffers.isClamp ? gl.CLAMP_TO_EDGE : gl.REPEAT;\n            this._activeTexture = gpuResourceCache.retrieveTexture(gl, textureCacheKey, wrapMode);\n        }\n        var textureBound = this._activeTexture && this._activeTexture.bind(dc);\n        if (textureBound) {\n            program.loadTextureEnabled(gl, true);\n            gl.vertexAttribPointer(2, 2, gl.FLOAT, false, 8, entity.uvOffset * 4);\n            gl.enableVertexAttribArray(2);\n            program.loadModulateColor(gl, dc.pickingMode);\n        } else {\n            program.loadTextureEnabled(gl, false);\n            gl.disableVertexAttribArray(2);\n        }\n    } else {\n        program.loadTextureEnabled(gl, false);\n        gl.disableVertexAttribArray(2);\n    }\n\n    if (hasLighting && !dc.pickingMode) {\n        program.loadApplyLighting(gl, 1);\n        gl.vertexAttribPointer(1, 3, gl.FLOAT, false, 12, entity.normalOffset * 4);\n        gl.enableVertexAttribArray(1);\n    } else {\n        program.loadApplyLighting(gl, 0);\n        gl.disableVertexAttribArray(1);\n    }\n\n    this.applyMatrix(dc, hasLighting, textureCacheKey, nodeWorldMatrix, nodeNormalMatrix);\n\n    gl.vertexAttribPointer(0, 3, gl.FLOAT, false, 12, entity.vertexOffset * 4);\n\n    if (buffers.indexedRendering) {\n        var indexOffsetBytes = entity.indexOffset * entity.indexSize;\n        if (buffers.indices instanceof Uint32Array && dc.getExtension('OES_element_index_uint')) {\n            gl.drawElements(gl.TRIANGLES, buffers.indices.length, gl.UNSIGNED_INT, indexOffsetBytes);\n        } else {\n            gl.drawElements(gl.TRIANGLES, buffers.indices.length, gl.UNSIGNED_SHORT, indexOffsetBytes);\n        }\n    } else {\n        gl.drawArrays(gl.TRIANGLES, 0, Math.floor(buffers.vertices.length / 3));\n    }\n};\n\n// Internal. Intentionally not documented.\nColladaScene.prototype.applyColor = function (dc, material) {\n    var gl = dc.currentGlContext,\n        program = dc.currentProgram;\n\n    if (material) {\n        if (material.techniqueType === 'constant') {\n            var diffuse = material.reflective;\n        } else {\n            diffuse = material.diffuse;\n        }\n    }\n\n    var opacity;\n    var r = 1, g = 1, b = 1, a = 1;\n\n    if (diffuse) {\n        r = diffuse[0];\n        g = diffuse[1];\n        b = diffuse[2];\n        a = diffuse[3] != null ? diffuse[3] : 1;\n    }\n\n    this._tmpColor.set(r, g, b, a);\n    opacity = a * this.layer.opacity;\n    gl.depthMask(opacity >= 1 || dc.pickingMode);\n    program.loadColor(gl, dc.pickingMode ? this.pickColor : this._tmpColor);\n    program.loadOpacity(gl, dc.pickingMode ? (opacity > 0 ? 1 : 0) : opacity);\n};\n\n// Internal. Intentionally not documented.\nColladaScene.prototype.applyMatrix = function (dc, hasLighting, hasTexture, nodeWorldMatrix, nodeNormalMatrix) {\n    this._mvpMatrix.copy(dc.modelviewProjection);\n    this._mvpMatrix.multiplyMatrix(this._transformationMatrix);\n\n    if (nodeWorldMatrix && this._localTransforms) {\n        this._mvpMatrix.multiplyMatrix(nodeWorldMatrix);\n    }\n\n    if (hasLighting && !dc.pickingMode) {\n        this._normalMatrix.copy(dc.modelviewNormalTransform);\n        this._normalMatrix.multiplyMatrix(this._normalTransformMatrix);\n        if (nodeNormalMatrix && this._localTransforms) {\n            this._normalMatrix.multiplyMatrix(nodeNormalMatrix);\n        }\n\n        dc.currentProgram.loadModelviewInverse(dc.currentGlContext, this._normalMatrix);\n    }\n\n    if (hasTexture && this._activeTexture) {\n        dc.currentProgram.loadTextureMatrix(dc.currentGlContext, this._texCoordMatrix);\n        this._activeTexture = null;\n    }\n\n    dc.currentProgram.loadModelviewProjection(dc.currentGlContext, this._mvpMatrix);\n};\n\n// Internal. Intentionally not documented.\nColladaScene.prototype.endDrawing = function (dc) {\n    var gl = dc.currentGlContext;\n    var program = dc.currentProgram;\n\n    gl.disableVertexAttribArray(1);\n    gl.disableVertexAttribArray(2);\n    program.loadApplyLighting(gl, 0);\n    program.loadTextureEnabled(gl, false);\n};\n\n// Internal. Intentionally not documented.\nColladaScene.prototype.computeTransformationMatrix = function (globe) {\n    this._transformationMatrix.setToIdentity();\n\n    this._transformationMatrix.multiplyByLocalCoordinateTransform(this._placePoint, globe);\n\n    this._transformationMatrix.multiplyByRotation(1, 0, 0, this._xRotation);\n    this._transformationMatrix.multiplyByRotation(0, 1, 0, this._yRotation);\n    this._transformationMatrix.multiplyByRotation(0, 0, 1, this._zRotation);\n\n    this._transformationMatrix.multiplyByScale(this._scale, this._scale, this._scale);\n\n    this._transformationMatrix.multiplyByTranslation(this._xTranslation, this._yTranslation, this._zTranslation);\n\n    this._transformationMatrix.multiplyByRotation(1, 0, 0, this.preX);\n    this._transformationMatrix.multiplyByRotation(0, 1, 0, this.preY);\n    this._transformationMatrix.multiplyByRotation(0, 0, 1, this.preZ);\n\n    this.computeNormalMatrix();\n};\n\n// Internal. Intentionally not documented.\nColladaScene.prototype.computeNormalMatrix = function () {\n    this._transformationMatrix.extractRotationAngles(this._tmpVector);\n    this._normalTransformMatrix.setToIdentity();\n    this._normalTransformMatrix.multiplyByRotation(-1, 0, 0, this._tmpVector[0]);\n    this._normalTransformMatrix.multiplyByRotation(0, -1, 0, this._tmpVector[1]);\n    this._normalTransformMatrix.multiplyByRotation(0, 0, -1, this._tmpVector[2]);\n};\n\n// Internal. Intentionally not documented.\nColladaScene.prototype.mustRenderNode = function (nodeId) {\n    var draw = true;\n    if (this._hideNodes) {\n        var pos = this._nodesToHide.indexOf(nodeId);\n        draw = (pos === -1);\n    }\n    return draw;\n};\n\nexport default ColladaScene;","import WorldWind from 'webworldwind-esa';\nimport wwx from 'webworldwind-x';\nimport Model from './wwwxx/shapes/satellites/Model'\nimport satConfig from './satConfig'\n// import SatelliteModel from './wwwx/shapes/satellites/Model';\nimport SatelliteModelLayer from './wwwxx/layer/SatelliteModelLayer'\n// const Location = WorldWind.Location,\n//     Sector = WorldWind.Sector,\n//     WmsLayer = WorldWind.WmsLayer;\n\n// class modelsLayer extends Layer {\n//     constructor(){\n//         super({\n//             service: \"https://tiles.maps.eox.at/wms\",\n//             layerNames: \"s2cloudless-2018\",\n//             title: \"Sentinel Cloudless Layer\",\n//             sector: new Sector(-90, 90, -180, 180),\n//             levelZeroDelta: new Location(45, 45),\n//             numLevels: 19,\n//             format: \"image/jpg\",\n//             opacity: 1,\n//             size: 256,\n//             version: \"1.3.0\"\n//         });\n//     }\n// }\n// const options = {\n//     rotations: layerConfig.satData.rotations,\n//     preRotations: layerConfig.satData.preRotations,\n//     scale: layerConfig.satData.scale,\n//     translations: layerConfig.satData.translations,\n//     ignoreLocalTransforms: layerConfig.satData.ignoreLocalTransforms,\n// }\n// const layer = new SatelliteModelLayer({key: layerKey, time: time, onLayerChanged}, options);\n// layer.setRerender(() => wwd.redraw());\n// getModel(`${layerConfig.satData.filePath}${layerConfig.satData.fileName}`, layerKey).then(\n//     (model) => {\n//         const satrec = EoUtils.computeSatrec(layerConfig.satData.tleLineOne, layerConfig.satData.tleLineTwo);\n//         const position = EoUtils.getOrbitPosition(satrec, new Date(time));\n//         layer.setModel(model, options, position)\n//         layer.setTle([layerConfig.satData.tleLineOne, layerConfig.satData.tleLineTwo]);\n//     }\n// );\n\n// export default SentinelCloudlessLayer;\nconst {\n    Position,\n} = WorldWind;\nconst {\n    EoUtils,\n} = wwx;\n\nvar satelliteLayers = []\n\n    for(let i=0 ; i<satConfig.length ; i++) {\n        console.log(satConfig[i].name)\n\n        const options = {\n            rotations: satConfig[i].rotations,\n            preRotations: satConfig[i].preRotations,\n            scale: satConfig[i].scale,\n            translations: satConfig[i].translations,\n            ignoreLocalTransforms: satConfig[i].ignoreLocalTransforms\n        }\n\n        let layer = new SatelliteModelLayer({key: satConfig[i].key, time: new Date(), }, options)\n\n        const satrec = EoUtils.computeSatrec(satConfig[i].tleLineOne, satConfig[i].tleLineTwo);\n        const position = EoUtils.getOrbitPosition(satrec, new Date());\n\n        fetch(satConfig[i].filePath).then(response => {\n            return response.json();\n        }).then(satelliteData => {\n            layer.setModel(satelliteData, {\n                rotations: satConfig[i].rotations,\n                preRotations: satConfig[i].preRotations,\n                scale: satConfig[i].scale,\n                translations: satConfig[i].translations,\n                ignoreLocalTransforms: satConfig[i].ignoreLocalTransforms\n            }, position );\n        });\n\n        // layer.setModel(model, options, position)\n        layer.setTle([satConfig[i].tleLineOne, satConfig[i].tleLineTwo]);\n\n\n        satelliteLayers.push(layer)\n    }\n\n\nexport default satelliteLayers","import WorldWind from 'webworldwind-esa';\r\nimport ColladaScene from \"../../collada/ColladaScene\";\r\n\r\nconst {\r\n    Matrix,\r\n    Renderable\r\n} = WorldWind;\r\n\r\n/**\r\n * @exports Model\r\n */\r\nclass Model extends Renderable {\r\n    /**\r\n     * Constructs model of the satellite on the given position.\r\n     * @param model {Object} Model information. Collada information.\r\n     * @param satellite {Object} The details about the satellite and the way it should be transformed and presented.\r\n     * @param position {Position} The exact position of the center of the satellite.\r\n     */\r\n    constructor(model, satellite, position) {\r\n        super();\r\n\r\n        this._satellite = satellite;\r\n        const satelliteModel = this.parse(model);\r\n        this.draw(position, satelliteModel);\r\n    }\r\n\r\n    /**\r\n     * Updates the position of the model.\r\n     * @param position {Position} Current position of the model.\r\n     */\r\n    position(position) {\r\n        this._model.position = position;\r\n    }\r\n\r\n    /**\r\n     * Draws the collada model into a Collada Scene.\r\n     * @param position {Position} Position of the satellite.\r\n     * @param modelData Collada Model Information.\r\n     */\r\n    draw(position, modelData) {\r\n        const nodesToHide = [\r\n            'PlatformCircleAndName', 'SolarWingsCircleAndName', 'C-SarCircleAndName',\r\n            'PlatformTextsAndArrows', 'SolarWingsTextsAndArrows', 'C-SarTextsAndArrows',\r\n\r\n            'SolarArrayGroup', 'WingsDetailsGroup', 'Group004', 'MsiGroup', 'SatelliteGroup',\r\n\r\n            'SatelliteDimensionsGroup', 'MWRGroup', 'SRALGroup', 'OLCIGroup', 'SLSTRGroup'\r\n        ];\r\n        const {\r\n            rotations,\r\n            translations,\r\n            preRotations,\r\n            scale,\r\n            shortName,\r\n            ignoreLocalTransforms\r\n        } = this._satellite;\r\n\r\n        const model = new ColladaScene(position, modelData);\r\n        model.type = this.type;\r\n        model.satShortName = shortName;\r\n\r\n        model.nodesToHide = nodesToHide;\r\n        model.hideNodes = true;\r\n        model.useTexturePaths = false;\r\n        model.localTransforms = ignoreLocalTransforms;\r\n        model.scale = scale;\r\n        model.xRotation = rotations.x;\r\n        model.yRotation = rotations.y;\r\n        model.zRotation = rotations.z;\r\n        model.xTranslation = translations.x;\r\n        model.yTranslation = translations.y;\r\n        model.zTranslation = translations.z;\r\n        model.preX = preRotations.x;\r\n        model.preY = preRotations.y;\r\n        model.preZ = preRotations.z;\r\n\r\n        this._model = model;\r\n        modelData = null;\r\n    }\r\n\r\n    /**\r\n     * Parses the collada model and update the information relevant to the satellites.\r\n     * @param {{ meshes:Object, root:Object, materials:{reflective:Array, diffuse:Array} }} jsonData\r\n     * @return {Object} Collada model.\r\n     */\r\n    parse(jsonData) {\r\n        const meshes = jsonData.meshes;\r\n        const nodes = jsonData.root.children;\r\n        const materials = jsonData.materials;\r\n\r\n        for (let key in meshes) {\r\n            if (meshes.hasOwnProperty(key)) {\r\n                const buffers = meshes[key].buffers;\r\n\r\n                for (let i = 0; i < buffers.length; i++) {\r\n                    const vertices = buffers[i].vertices || [];\r\n                    const normals = buffers[i].normals || [];\r\n                    const uvs = buffers[i].uvs || [];\r\n                    const indices = buffers[i].indices || [];\r\n\r\n                    const eVertices = new Float32Array(vertices);\r\n                    const eNormals = new Float32Array(normals);\r\n                    const eUvs = new Float32Array(uvs);\r\n                    const eIndices = new Uint16Array(indices);\r\n\r\n                    buffers[i].vertices = eVertices;\r\n                    buffers[i].normals = eNormals;\r\n                    buffers[i].uvs = eUvs;\r\n                    buffers[i].indices = eIndices;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < nodes.length; i++) {\r\n            const node = nodes[i];\r\n            if (node.mesh) {\r\n                const worldMatrix = node.worldMatrix.slice(0);\r\n                node.worldMatrix = Matrix.fromIdentity();\r\n                node.worldMatrix.copy(worldMatrix);\r\n\r\n                if (node.children.length) {\r\n                    console.info('node has children', node);\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let key in materials) {\r\n            if (materials.hasOwnProperty(key)) {\r\n                const material = materials[key];\r\n\r\n                if (material.id === '_3_-_Default-material') {\r\n                    if (material.reflective) {\r\n                        material.reflective[0] = 0.289219;\r\n                        material.reflective[1] = 0.713497;\r\n                        material.reflective[2] = 0.870753;\r\n                        material.reflective[3] = 1;\r\n                    }\r\n                } else if (material.id === '_1_-_Default_004-material') {\r\n                    material.diffuse[3] = 0;\r\n                } else if (material.id === '_1_-_Default-material') {\r\n                    material.diffuse[3] = 0;\r\n                } else if (material.id === 'Chrome-material') {\r\n                    material.textures = null;\r\n                    material.diffuse[0] = 0.3137;\r\n                    material.diffuse[1] = 0.3137;\r\n                    material.diffuse[2] = 0.3137;\r\n                } else if (material.id === 'Satellite_panel-material') {\r\n                    material.textures.reflective.mapId = 'image9';\r\n                } else if (material.id === '_3_-_Default') {\r\n                    material.textures.reflective.mapId = 'image4';\r\n                } else if (material.id === '_4_-_Default-material') {\r\n                    material.textures.reflective.mapId = 'image5';\r\n                } else if (material.id === '_5_-_Default_002-material') {\r\n                    material.textures.reflective.mapId = 'image6';\r\n                } else if (material.id === '_5_-_Default-material') {\r\n                    material.textures.reflective.mapId = 'image5';\r\n                }\r\n            }\r\n        }\r\n\r\n        return jsonData;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    render(dc) {\r\n        if(!this._model || !this.enabled) {\r\n            return;\r\n        }\r\n\r\n        this._model.render(dc);\r\n    }\r\n}\r\n\r\nexport default Model;","import WorldWind from 'webworldwind-esa';\nconst {\n    Color\n} = WorldWind;\n\nconst satConfig = [\n    {\n        key: 's1a',\n        name: 'SENTINEL-1A',\n        shortName: 'S-1A',\n        satIndex: 0,\n        swathTypes: ['black', 'red', 'green', 'white'],\n        swathColors: [\n            Color.colorFromKmlHex('ff000000'), //black\n            Color.colorFromKmlHex('ff0000ff'), //red\n            Color.colorFromKmlHex('ff00ff00'), //green\n            Color.colorFromKmlHex('ffffffff')  //white\n        ],\n        swatModes: ['IW', 'EW', 'SM'],\n        tleLineOne: '1 39634U 14016A   18124.03591006  .00000001  00000-0  10014-4 0  9998',\n        tleLineTwo: '2 39634  98.1819 132.0838 0001369  78.7198 281.4156 14.59198520217480',\n        hasModel: true,\n        filePath: './satellites/sentinel1/s1.json',\n        rotations: {\n            x: 0,\n            y: 0,\n            z: 0,\n            headingAxis: [0, 0, 1],\n            headingAdd: -90,\n            headingMultiply: 1\n        },\n        preRotations: {\n            x: 0,\n            y: 0,\n            z: 0\n        },\n        scale: 500000,\n        translations: {\n            x: -0.1,\n            y: -0.1,\n            z: 0\n        },\n        ignoreLocalTransforms: true,\n        launchDate: new Date('2014-04-03T21:02:00.000Z'),\n    },\n    {\n        key: 's2a',\n        name: 'SENTINEL-2A',\n        shortName: 'S-2A',\n        satIndex: 1,\n        swathTypes: ['red', 'purple', 'white', 'darkGrey', 'green', 'greener'],\n        swathColors: [\n            Color.colorFromKmlHex('ff0000ff'), //red\n            Color.colorFromKmlHex('ffff00ff'), //purple\n            Color.colorFromKmlHex('ffffffff'), //white\n            Color.colorFromKmlHex('ff7f7f7f'), //dark grey\n            Color.colorFromKmlHex('ff00ff00'),  //green\n            Color.colorFromKmlHex('ff00fff7')  //greener\n        ],\n        swatModes: ['NOBS'],\n        tleLineOne: '1 40697U 15028A   18124.08865983  .00000004  00000-0  17994-4 0  9993',\n        tleLineTwo: '2 40697  98.5686 199.4434 0001286  92.5669 267.5666 14.30817033149583',\n        hasModel: true,\n        filePath: './satellites/senti2version6/s2.json',\n        rotations: {\n            x: 0,\n            y: 0,\n            z: 0,\n            headingAxis: [0, 0, 1],\n            headingAdd: -90,\n            headingMultiply: 1\n        },\n        preRotations: {\n            x: 0,\n            y: 0,\n            z: 0\n        },\n        scale: 1000000,\n        translations: {\n            x: 0.1,\n            y: 0.385,\n            z: 0.02\n        },\n        ignoreLocalTransforms: true,\n        launchDate: new Date('2015-06-23T01:52:00.000Z'),\n    },\n    {\n        key: 's3a',\n        name: 'SENTINEL-3A',\n        shortName: 'S-3A',\n        satIndex: 2,\n        tleLineOne: '1 41335U 16011A   18124.14356592 -.00000000  00000-0  18017-4 0  9998',\n        tleLineTwo: '2 41335  98.6266 192.0005 0001035 100.1921 259.9376 14.26736754115121',\n        hasModel: true,\n        filePath: './satellites/Sentinel3/s3.json',\n        rotations: {\n            x: 0, //0\n            y: 0, //180\n            z: 0, //165\n            headingAxis: [0, 0, 1], //0,0,1\n            headingAdd: 180, //-20\n            headingMultiply: 1 //1\n        },\n        preRotations: {\n            x: 0,\n            y: 180,\n            z: 0\n        },\n        scale: 1000000,\n        translations: {\n            x: 0.01, //-0.01\n            y: 1.98, //1.9\n            z: 0.07 //-0.07\n        },\n        ignoreLocalTransforms: true,\n        launchDate: new Date('2016-02-16T17:57:00.000Z'),\n    },\n    {\n        key: 's1b',\n        name: 'SENTINEL-1B',\n        shortName: 'S-1B',\n        satIndex: 3,\n        swathTypes: ['black', 'red', 'green', 'white'],\n        swathColors: [\n            Color.colorFromKmlHex('ff000000'), //black\n            Color.colorFromKmlHex('ff0000ff'), //red\n            Color.colorFromKmlHex('ff00ff00'), //green\n            Color.colorFromKmlHex('ffffffff')  //white\n        ],\n        swatModes: ['IW', 'EW', 'SM'],\n        tleLineOne: '1 41456U 16025A   18124.13828432 -.00000022  00000-0  49756-5 0  9992',\n        tleLineTwo: '2 41456  98.1817 132.0102 0001487  82.9964 277.1419 14.59197806107664',\n        hasModel: true,\n        filePath: './satellites/sentinel1/s1.json',\n        rotations: {\n            x: 0,\n            y: 0,\n            z: 0,\n            headingAxis: [0, 0, 1],\n            headingAdd: -90,\n            headingMultiply: 1\n        },\n        preRotations: {\n            x: 0,\n            y: 0,\n            z: 0\n        },\n        scale: 500000,\n        translations: {\n            x: -0.1,\n            y: -0.1,\n            z: 0\n        },\n        ignoreLocalTransforms: true,\n        launchDate: new Date('2016-04-25T21:02:00.000Z'),\n    },\n    {\n        key: 's2b',\n        name: 'SENTINEL-2B',\n        shortName: 'S-2B',\n        satIndex: 4,\n        swathTypes: ['blue'],\n        swathColors: [\n            Color.colorFromKmlHex('ffffff00'),\n        ],\n        swatModes: ['NOBS'],\n        tleLineOne: '1 42063U 17013A   18124.12358125  .00000002  00000-0  17497-4 0  9994',\n        tleLineTwo: '2 42063  98.5687 199.4702 0001382  97.5073 262.6270 14.30817718 60503',\n        groundPosition: {latitude: 5.2079, longitude: -52.7724, altitude: 0},\n        hasModel: true,\n        filePath: './satellites/senti2version6/s2.json',\n        rotations: {\n            x: 0,\n            y: 0,\n            z: 0,\n            headingAxis: [0, 0, 1],\n            headingAdd: -90,\n            headingMultiply: 1\n        },\n        preRotations: {\n            x: 0,\n            y: 0,\n            z: 0\n        },\n        scale: 1000000,\n        translations: {\n            x: 0.1,\n            y: 0.385,\n            z: 0.02\n        },\n        ignoreLocalTransforms: true,\n        launchDate: new Date('2017-03-07T01:49:00.000Z'),\n    },\n    {\n        key: 's5p',\n        name: 'SENTINEL-5P',\n        shortName: 'S-5P',\n        satIndex: 5,\n        swathTypes: [],\n        swathColors: [],\n\n        tleLineOne: '1 42969U 17064A   18123.85141871 -.00000009  00000-0  16636-4 0  9994',\n        tleLineTwo: '2 42969  98.7352  64.1585 0001101  78.1817 281.9482 14.19565315 28712',\n\n        groundPosition: {latitude: 62.927860, longitude: 40.574830, altitude: 0},\n        hasModel: true,\n        filePath: './satellites/sentinel5p/s5p.json',\n        rotations: {\n            x: 0,\n            y: 0,\n            z: 0,\n            headingAxis: [0, 0, 1],\n            headingAdd: -90,\n            headingMultiply: 1\n        },\n        preRotations: {\n            x: 180 + 30,\n            y: 0,\n            z: 0\n        },\n        scale: 70000,\n        translations: {\n            x: 0.5,\n            y: 0.4,\n            z: -1.2\n        },\n        ignoreLocalTransforms: true,\n        launchDate: new Date('2017-10-13T09:27:00.000Z'),\n    },\n    {\n        key: 's3b',\n        name: 'SENTINEL-3B',\n        shortName: 'S-3B',\n        satIndex: 6,\n        tleLineOne: '1 43437U 18039A   18122.61596633  .00002473  00000-0  10753-2 0  9999',\n        tleLineTwo: '2 43437  98.6226 190.4610 0008811 292.4467  67.5830 14.24954518   977',\n        groundPosition: {\n            latitude: 62.925556,\n            longitude: 40.577778,\n            altitude: 0,\n        },\n        hasModel: true,\n        filePath: 'satellites/Sentinel3/s3.json',\n        rotations: {\n            x: 0, //0\n            y: 0, //180\n            z: 0, //165\n            headingAxis: [0, 0, 1], //0,0,1\n            headingAdd: 180, //-20\n            headingMultiply: 1 //1\n        },\n        preRotations: {\n            x: 0,\n            y: 180,\n            z: 0\n        },\n        scale: 1000000,\n        translations: {\n            x: 0.01, //-0.01\n            y: 1.98, //1.9\n            z: 0.07 //-0.07\n        },\n        ignoreLocalTransforms: true,\n        launchDate: new Date('2018-04-25T17:57:00.000Z'),\n    },\n];\n\nexport const getSatConfigByKey = (satKey) => {\n    return satConfig.find((s) => s.key === satKey);\n};\n\n\nexport default satConfig;","import WorldWind from 'webworldwind-esa';\nimport WorldWindX from 'webworldwind-x';\nimport Model from '../shapes/satellites/Model';\n\nconst {\n    RenderableLayer,\n    Position,\n} = WorldWind;\n\nconst {\n    EoUtils\n} = WorldWindX;\n\n\nconst DEFAULT_MODEL_OPTIONS = {\n    rotations: {\n        x: 0,\n        y: 0,\n        z: 0,\n        headingAxis: [0, 0, 1],\n        headingAdd: -90,\n        headingMultiply: 1\n    },\n    preRotations: {\n        x: 0,\n        y: 0,\n        z: 0\n    },\n    scale: 500000,\n    translations: {\n        x: -0.1,\n        y: -0.1,\n        z: 0\n    },\n    ignoreLocalTransforms: true\n}\n\n/**\n * Class extending WorldWind.RenderableLayer. Layer can render only one model of satellite. It`s possible to set position data of model.\n * @param options {Object}\n * @param options.key {String}\n * @param options.time {Date} Time of the satellite.\n * @param options.onLayerChanged {func}\n * @augments WorldWind.RenderableLayer\n * @constructor\n */\nclass SatelliteModelLayer extends RenderableLayer {\n\tconstructor(options, satelliteOptions) {\n        super(options);\n        this.type = 'SatelliteModelLayer';\n        this._satelliteOptions = satelliteOptions;\n        this._rerenderMap = null;\n        this.key = options.key;\n        this.model = null;\n        this.time = options.time;\n        this.Tle = null;\n        this.heading = null;\n        this.onLayerChanged = options.onLayerChanged || null;\n    };\n    \n    /**\n     * \n     * @param {Object} collada model \n     * @param {Object} options\n     * @param {Position} position\n     */\n    setModel(model, options = DEFAULT_MODEL_OPTIONS, position) {\n        if(model) {\n            this.model = new Model(model, options, position);\n\n            this.removeAllRenderables();\n            this.addRenderable(this.model);\n            this.doRerender();\n        }\n    }\n\n    /**\n     * @param position {Position} Position of the satellite.\n     */\n    setPosition(position) {\n        if(position && this.model) {\n            this.model.position(position);\n        }\n    }\n\n    \n    /**\n     * @param position {Array.<lte>} Lte.\n     */\n    setTle(Tle) {\n        if(Tle) {\n            this.Tle = Tle;\n            this.update();\n        }\n    }\n    \n    /**\n     * @param position {Array.<lte>} Lte.\n     */\n    update() {\n        if(this.Tle && this.time) {\n            const satrec = EoUtils.computeSatrec(...this.Tle);\n            const position = EoUtils.getOrbitPosition(satrec, new Date(this.time));\n            this.setPosition(new Position(position.latitude, position.longitude, position.altitude));\n            if(this.model) {\n                this.alignWithOrbit(this.time, position, EoUtils.computeSatrec(...this.Tle), this._satelliteOptions.rotations, this.model._model);\n            }\n            this.doRerender();\n        }\n    }\n\n    alignWithOrbit(date, currentPosition, satrec, rotations, model) {\n        const now = date.getTime();\n        const nextPosition = EoUtils.getOrbitPosition(satrec, new Date(now + 10000));\n        const headingRad = EoUtils.headingAngleRadians(currentPosition.latitude, currentPosition.longitude, nextPosition.latitude, nextPosition.longitude);\n        const heading = EoUtils.rad2deg(headingRad);\n        this.heading = heading;\n\n        if(typeof this.onLayerChanged === 'function') {\n            this.onLayerChanged({\n                satKey: this.satName,\n                layerKey: this.key,\n                type: this.type,\n            }, {update: {\n                heading: this.heading\n            }});\n        }\n\n        const angle = (heading + rotations.headingAdd) * rotations.headingMultiply;\n\n        if (heading !== 0) {\n            if (rotations.headingAxis[0] === 1) {\n                model.xRotation = angle;\n            }\n            else if (rotations.headingAxis[1] === 1) {\n                model.yRotation = angle;\n            }\n            else if (rotations.headingAxis[2] === 1) {\n                model.zRotation = angle;\n            }\n        }\n    }\n\n    /**\n     * @param time {Date} Time of the satellite.\n     */\n    setTime(time) {\n        if(time) {\n            this.time = time;\n            this.update();\n        }\n    }\n    \n\tsetRerender(rerenderer) {\n\t\tif(typeof rerenderer === 'function') {\n\t\t\tthis._rerenderMap = rerenderer;\n\t\t}\n\t}\n\n\tdoRerender() {\n\t\tif(typeof this._rerenderMap === 'function') {\n\t\t\tthis._rerenderMap();\n\t\t}\n\t}\n}\n\nexport default SatelliteModelLayer;\n\n","import WorldWind from \"webworldwind-esa\";\n\nexport const bgLayers = [\n    {\n        service: \"https://tiles.maps.eox.at/wms\",\n        layerNames: \"s2cloudless-2018\",\n        title: \"s2cloudless-2018\",\n        numLevels: 19,\n        format: \"image/png\",\n        size: 256,\n        sector: WorldWind.Sector.FULL_SPHERE,\n        levelZeroDelta: new WorldWind.Location(90, 90)\n    },\n    {\n        service: \"https://tiles.esa.maps.eox.at/wms\",\n        layerNames: \"s2cloudless-2018\",\n        title: \"s2cloudless-2018 esa\",\n        numLevels: 19,\n        format: \"image/png\",\n        size: 256,\n        sector: WorldWind.Sector.FULL_SPHERE,\n        levelZeroDelta: new WorldWind.Location(90, 90)\n    },\n    {\n        service: \"https://tiles.esa.maps.eox.at/wms\",\n        layerNames: \"osm\",\n        title: \"osm\",\n        numLevels: 19,\n        format: \"image/png\",\n        size: 256,\n        sector: WorldWind.Sector.FULL_SPHERE,\n        levelZeroDelta: new WorldWind.Location(90, 90)\n    },\n    {\n        service: \"https://tiles.esa.maps.eox.at/wms\",\n        layerNames: \"terrain-light\",\n        title: \"terrain-light\",\n        numLevels: 19,\n        format: \"image/png\",\n        size: 256,\n        sector: WorldWind.Sector.FULL_SPHERE,\n        levelZeroDelta: new WorldWind.Location(90, 90)\n    },\n    {\n        service: \"https://tiles.maps.eox.at/wms\",\n        layerNames: \"terrain\",\n        title: \"terrain\",\n        numLevels: 19,\n        format: \"image/png\",\n        size: 256,\n        sector: WorldWind.Sector.FULL_SPHERE,\n        levelZeroDelta: new WorldWind.Location(90, 90)\n    }\n]\nexport const ovLayers = [\n\n    {\n        service: \"https://tiles.maps.eox.at/wms\",\n        layerNames: \"hydrography\",\n        title: \"hydrography\",\n        numLevels: 19,\n        format: \"image/png\",\n        size: 256,\n        sector: WorldWind.Sector.FULL_SPHERE,\n        levelZeroDelta: new WorldWind.Location(90, 90)\n    },\n    {\n        service: \"https://tiles.maps.eox.at/wms\",\n        layerNames: \"overlay_bright\",\n        title: \"overlay_bright\",\n        numLevels: 19,\n        format: \"image/png\",\n        size: 256,\n        sector: WorldWind.Sector.FULL_SPHERE,\n        levelZeroDelta: new WorldWind.Location(90, 90)\n    }\n]\n\n\n","import  { useState, useEffect, useRef } from \"react\";\nimport WorldWind from \"webworldwind-esa\";\nimport StarFieldLayer from \"./wwwxx/layer/starfield/StarFieldLayer\" // import a custom one as the base url is not set when using wwwx\n// import TexturedSurfacePolygon from './wwwx/shapes/TexturedSurfacePolygon'\nimport wwwx from \"webworldwind-x\";\n// import modelsLayer from './satelliteLayer';\nimport satelliteLayers from './satelliteLayers';\n\nimport {bgLayers, ovLayers} from './layerConfig';\n\n\n// BasicWorldWindowController.prototype.applyLimits = function () {\n//     var navigator = this.wwd.navigator;\n\n//     // Clamp latitude to between -90 and +90, and normalize longitude to between -180 and +180.\n//     navigator.lookAtLocation.latitude = WWMath.clamp(navigator.lookAtLocation.latitude, -90, 90);\n//     navigator.lookAtLocation.longitude = Angle.normalizedDegreesLongitude(navigator.lookAtLocation.longitude);\n\n//     // Clamp range to values greater than 1 in order to prevent degenerating to a first-person navigator when\n//     // range is zero.\n//     navigator.range = WWMath.clamp(navigator.range, 1, Number.MAX_VALUE);\n\n//     // Normalize heading to between -180 and +180.\n//     navigator.heading = Angle.normalizedDegrees(navigator.heading);\n\n//     // Clamp tilt to between 0 and +90 to prevent the viewer from going upside down.\n//     navigator.tilt = WWMath.clamp(navigator.tilt, 0, 90);\n\n//     // Normalize heading to between -180 and +180.\n//     navigator.roll = Angle.normalizedDegrees(navigator.roll);\n\n//     // Apply 2D limits when the globe is 2D.\n//     if (this.wwd.globe.is2D() && navigator.enable2DLimits) {\n//         // Clamp range to prevent more than 360 degrees of visible longitude. Assumes a 45 degree horizontal\n//         // field of view.\n//         var maxRange = 2  Math.PI  this.wwd.globe.equatorialRadius;\n//         navigator.range = WWMath.clamp(navigator.range, 1, maxRange);\n\n//         // Force tilt to 0 when in 2D mode to keep the viewer looking straight down.\n//         navigator.tilt = 0;\n//     }\n// };\n\nexport function useEww({ id, clon, clat, alt, starfield, atmosphere, background, overlay, names, satellites, dem }) {\n    // console.log('useEww renders')\n    \n  \n    const eww = useRef(null)\n   \n    const [projection, setProjection] = useState(\"3D\")\n    // const [aoi, setAoi] = useState({type: null, value: null})\n    const [aoi, setAoi] = useState('')\n    const [geojsonlayers, setGeojsonlayers] = useState([])\n    const [quicklooklayers, setQuicklooklayers] = useState([])\n    const [ewwstate, setEwwState] = useState({latitude: clat, longitude: clon, altitude: alt, aoi:'', pickedItems: []})\n    const copDemOn = useRef(dem)\n    const bgIndex = useRef(0)\n    const ovIndex = useRef(0)\n    const copdemlayer = useRef(0)\n    const nasademlayer = useRef(0)\n\n\n    // Turn the globe up north\n    function northUp() {\n        const wwd = eww.current\n        let headingIncrement = wwd.navigator.heading / -20;\n        let runOperation = () => {\n            if (Math.abs(wwd.navigator.heading) > Math.abs(headingIncrement)) {\n                wwd.navigator.heading += headingIncrement;\n                setTimeout(runOperation, 10);\n            } else {\n                wwd.navigator.heading = 0;\n            }\n            wwd.redraw();\n        };\n        setTimeout(runOperation, 10);\n    }\n\n    //toggle atmosphere\n    function toggleAtmosphere(bool) {\n        console.log('toggleAtmosphere: '+bool)\n        getLayerByName('Atmosphere').enabled = (bool!= null)?bool:!getLayerByName('Atmosphere').enabled\n        // getLayerByName('Atmosphere').enabled = bool\n        // console.log(eww.current.layers)\n        eww.current.redraw();\n    }\n    //toggle model\n    function toggleModel(bool) {\n        console.log('toggleModel: '+bool)\n        for (let l = 0; l < satelliteLayers.length; l++) {\n            satelliteLayers[l].enabled = (bool!= null)?bool:!satelliteLayers[l].enabled\n        }\n        // getLayerByName('Model').enabled = (bool!= null)?bool:!getLayerByName('Model').enabled\n        eww.current.redraw();\n    }\n\n    //toggle starField\n    function toggleStarfield(bool) {\n        console.log('toggleStarfield: '+bool)\n        getLayerByName('StarField').enabled = (bool!= null)?bool:!getLayerByName('StarField').enabled\n        eww.current.redraw();\n    }\n\n    //toggle name overlay\n    function toggleNames(bool) {\n        console.log('toggleNames: '+bool)\n        getLayerByName('overlay_bright').enabled = (bool!= null)?bool:!getLayerByName('overlay_bright').enabled\n        eww.current.redraw();\n    }\n    //toggle background overlay\n    function setBg(background) {\n        getLayerByName(background).enabled = true\n        eww.current.layers[bgIndex.current].enabled=false\n        eww.current.redraw();\n    }\n    function toggleBg(background) {\n        // console.log(\"toggleBg: \"+background+\"/\"+bgLayers.length)\n        eww.current.layers[bgIndex.current].enabled=false\n        bgIndex.current = (background === null)?(bgIndex.current + 1):(background-1)%bgLayers.length\n        console.log(\"Background Layer [\"+(bgIndex.current+1)+\"/\"+bgLayers.length+\"]: \"+eww.current.layers[bgIndex.current].displayName)\n        eww.current.layers[bgIndex.current].enabled=true\n        eww.current.redraw();\n        // setEwwState((ewwstate) => { return {...ewwstate, background: bgIndex.current}})\n    }\n    function toggleOv(overlay) {\n        console.log(overlay)\n        eww.current.layers[ovIndex.current+bgLayers.length].enabled=false\n        // ovIndex.current = (ovIndex.current + 1)%ovLayers.length\n        ovIndex.current = (overlay === null)?(ovIndex.current + 1):(overlay-1)%ovLayers.length\n        console.log(ovIndex.current)\n        // console.log(\"Overlay Layer: \"+eww.current.layers[ovIndex.current+bgLayers.length].displayName)\n        // console.log(\"Overlay Layer [\"+(ovIndex.current+bgLayers.length+1)+\"/\"+ovLayers.length+\"]: \"+eww.current.layers[ovIndex.current+bgLayers.length].displayName)\n\n        eww.current.layers[ovIndex.current+bgLayers.length].enabled=true\n        eww.current.redraw()\n    }\n    \n    //toggle DEM \n    function toggleDem(dem) {\n        console.log(\"Copernicus Dem: \" + dem)\n        var elevationModel\n        if(!copDemOn.current) {\n            console.log('Switching to Copernicus Dem')\n            elevationModel = new WorldWind.ElevationModel();\n            elevationModel.addCoverage(new WorldWind.TiledElevationCoverage({\n                coverageSector: WorldWind.Sector.FULL_SPHERE,\n                resolution: 0.008333333333333,\n                retrievalImageFormat: \"image/tiff\",\n                minElevation: -11000,\n                maxElevation: 8850,\n                urlBuilder: new WorldWind.WcsTileUrlBuilder(\"https://dem.esa.maps.eox.at/elevation\", \"copdem\", \"2.0.1\")\n                }));    \n            \n        } else {\n            console.log('Switching to NASA Dem')\n            elevationModel = new WorldWind.EarthElevationModel()\n        }\n        eww.current.globe.elevationModel = elevationModel\n        eww.current.redraw();\n        copDemOn.current = !copDemOn.current\n        // setDemOn(copDemOn.current)\n    }\n\n \n    function  getViewPolygon () {\n        let view = eww.current.viewport\n        let area = {}\n        let polygon = ''\n        // console.log('view: ' + view.x + '/' + view.y + '/' + view.width + '/' + view.height);\n\n        let bl ;\n        try { \n            bl =  eww.current.pickTerrain(eww.current.canvasCoordinates(view.x, view.y + view.height)).terrainObject().position\n            bl.latitude = Math.round(bl.latitude * 10000)/10000\n            bl.longitude = Math.round(bl.longitude * 10000)/10000\n        }\n        catch(err) {bl = null;}\n\n\n        let tr ;\n        try { \n            tr = eww.current.pickTerrain(eww.current.canvasCoordinates(view.x + view.width, view.y)).terrainObject().position\n            tr.latitude = Math.round(tr.latitude * 10000)/10000\n            tr.longitude = Math.round(tr.longitude * 10000)/10000\n        }\n        catch(err) {tr = null;}\n\n        //console.log(bl.longitude+'/'+bl.latitude+'/'+tr.longitude+'/'+tr.latitude);\n        if(bl == null || tr == null )  {\n            //   area = {type:\"bbox\", value:\"-180,-90,180,90\"};\n              polygon = ''\n        } else {\n              area = {\n                    type: \"bbox\",\n                    value:\n                           bl.longitude +','\n                          + bl.latitude +','\n                          +tr.longitude +','\n                          +tr.latitude\n              };\n\n              polygon = 'POLYGON((' \n                + bl.longitude + ' ' + bl.latitude + ',' \n                + tr.longitude + ' ' + bl.latitude + ',' \n                + tr.longitude + ' ' + tr.latitude + ',' \n                + bl.longitude + ' ' + tr.latitude + ',' \n                + bl.longitude + ' ' + bl.latitude + '))' \n        }\n        return polygon\n\n    }\n    \n    const addGeojson = (url,epoch) => {\n\n        // console.log('replace: '+replace)\n\n        function shapeConfigurationCallback(geometry, properties) {\n            let configuration = {};\n            configuration.userProperties = properties\n    \n            let placemarkAttributes = new WorldWind.PlacemarkAttributes(null);\n            placemarkAttributes.imageScale = 10;\n            placemarkAttributes.imageColor = new WorldWind.Color(0, 1, 1, 0.2);\n            placemarkAttributes.labelAttributes.offset = new WorldWind.Offset(\n                WorldWind.OFFSET_FRACTION, 5,\n                WorldWind.OFFSET_FRACTION, 5);\n            //placemarkAttributes.imageSource = whiteDot;\n    \n    \n            if (geometry.isPointType() || geometry.isMultiPointType()) {\n                configuration.attributes = new WorldWind.PlacemarkAttributes(placemarkAttributes);\n                \n            } else if (geometry.isLineStringType() || geometry.isMultiLineStringType()) {\n                configuration.attributes.drawOutline = true;\n                configuration.attributes.outlineColor = new WorldWind.Color(\n                    0.1 * configuration.attributes.interiorColor.red,\n                    0.3 * configuration.attributes.interiorColor.green,\n                    0.7 * configuration.attributes.interiorColor.blue,\n                    1\n                );\n                configuration.attributes.outlineWidth = 1;\n            } else if (geometry.isPolygonType() || geometry.isMultiPolygonType()) {\n                configuration.attributes = new WorldWind.ShapeAttributes(null);\n                configuration.attributes.interiorColor = new WorldWind.Color(1, 0, 0, 0.2);\n                configuration.attributes.outlineColor = new WorldWind.Color(1, 0, 0, 0.3);\n\n                configuration.highlightAttributes = new WorldWind.ShapeAttributes(configuration.attributes);\n                configuration.highlightAttributes.outlineColor = new WorldWind.Color(1, 0, 0, 0.4);\n                configuration.highlightAttributes.interiorColor = new WorldWind.Color(1, 0, 0, 0);\n                // configuration.attributes.outlineWidth = 0.3;\n\n                // configuration.attributes.applyLighting = true;\n                // configuration.attributes.imageSource = properties.quicklookUrl\n\n            }\n    \n            //console.log(configuration.attributes);\n            return configuration;\n        }\n\n        \n        function loadCompleteCallback() {\n            console.log(renderableLayer)\n            setGeojsonlayers((geojsonlayers)=>[...geojsonlayers,renderableLayer])\n            enableRenderables(epoch) // uncomment to disable renderables\n            eww.current.redraw();\n        }\n    \n        // if (replace) removeGeojson()\n        let renderableLayer = new WorldWind.RenderableLayer('Products: '+url.properties.updated+Math.ceil(Math.random() * 10000))\n        \n        eww.current.addLayer(renderableLayer);\n        // setGeojsonlayers((geojsonlayers)=>[...geojsonlayers,renderableLayer])\n        // setGeojsonlayers((geojsonlayers)=>[...geojsonlayers,renderableLayer])\n        // setGeojsonlayers(eww.current.layers)\n        let geoJson = new WorldWind.GeoJSONParser(url);\n        geoJson.load(loadCompleteCallback, shapeConfigurationCallback, renderableLayer);\n        // setGeojsonlayers((geojsonlayers)=>[...geojsonlayers,renderableLayer])        \n    }\n\n    function removeGeojson() {\n        for(let i=0;i<geojsonlayers.length;i++) {\n          eww.current.removeLayer(geojsonlayers[i])\n        //   console.log('removing json layers: ')\n        //   console.log(geojsonlayers[i])\n        }\n        setGeojsonlayers((geojsonlayers)=>[])\n        // console.log(geojsonlayers)\n        eww.current.redraw();\n      }\n\n    function addWMS() {\n    }\n\n    function addQuicklookWMS(renderable) {\n\n        console.log(renderable.computeSectors(eww.current.drawContext))\n        console.log(WorldWind.Sector.FULL_SPHERE)\n\n        // for S2:  \n        // https://view.onda-dias.eu/instance00/ows?&service=WMS&request=GetMap&layers=S2L1C_TRUE_COLOR&styles=&format=image/png&transparent=true&version=1.1.1&width=1500&height=1000&srs=EPSG:4326&bbox=12.357903,41.800495,12.625694,41.984760\n\n        \n        // https://view.onda-dias.eu/instance00/ows?&service=WMS&request=GetMap&layers=S1B_IW_GRDH_1SDV_20190520T050758_20190520T050823_016323_01EB81_6EB6&styles=&format=image%2Fpng&transparent=true&version=1.1.1&width=256&height=256&srs=EPSG%3A3857&bbox=2035059.441064533,7044436.526761846,2191602.4749925737,7200979.560689885\n        let wmsConfigQL = {\n            service: \"https://view.onda-dias.eu/instance00/ows\",\n            // layerNames: renderable.userProperties.title,\n            // layerNames: 'S2L1C_TRUE_COLOR',\n            layerNames: 'S1_IW_GRDH_FullResolution',\n            \n            // title: renderable.userProperties.title,\n            title: 'quicklook',\n            numLevels: 19,\n            format: \"image/png\",\n            size: 256,\n            sector: renderable.computeSectors(eww.current.drawContext)[0],\n            // sector: renderable.sector,\n            // sector: WorldWind.Sector.FULL_SPHERE,\n            levelZeroDelta: new WorldWind.Location(90, 90)\n        }\n\n        // let wmsConfigQL = {\n        //     service: \"https://tiles.maps.eox.at/wms\",\n        //     layerNames: \"overlay_bright\",\n        //     title: \"overlay_bright\",\n        //     numLevels: 19,\n        //     format: \"image/png\",\n        //     size: 256,\n        //     sector: WorldWind.Sector.FULL_SPHERE,\n        //     levelZeroDelta: new WorldWind.Location(90, 90)\n        // }\n        // eww.current.removeLayer(getLayerByName('quicklook') )\n        let qllayer =  new WorldWind.WmsLayer(wmsConfigQL, renderable.userProperties.date)\n        eww.current.addLayer(qllayer)\n        eww.current.redraw()\n        console.log(eww.current.layers)\n    }\n\n    function getLayerByName(name) {\n        for (let i = 0; i < eww.current.layers.length; i++) {\n            // console.log('display name: '+eww.current.layers[i].displayName)\n            if (eww.current.layers[i].displayName === name) return eww.current.layers[i]\n        }\n        return null\n    }\n\n    async function enableRenderables(time) {\n        // let timeOffset = 1000 * 60 * 60 * 3 // 3 hours\n        // for (let i = 0; i < eww.current.layers.length; i++) {\n        //     if (eww.current.layers[i].displayName.includes('Products:')) {\n                \n        //         for (let j = 0; j < eww.current.layers[i].renderables.length; j++) {\n        //             let renderable = eww.current.layers[i].renderables[j]\n        //             if (time != 0) {\n        //                 let renderableStartDate = (new Date(renderable.userProperties.earthObservation.acquisitionInformation[0].acquisitionParameter.acquisitionStartTime)).getTime()\n        //                 let renderableStopDate = (new Date(renderable.userProperties.earthObservation.acquisitionInformation[0].acquisitionParameter.acquisitionStopTime)).getTime()\n        //                 renderable.enabled = (renderableStartDate <= time+timeOffset/2 && renderableStopDate >= time-timeOffset/2) ? true : false   \n        //             } else {\n        //                 renderable.enabled = false\n        //             }         \n        //         }\n        //     }\n        //     if (eww.current.layers[i].displayName === 'quicklook') {\n        //         // eww.current.layers[i].enabled = \n        //     }\n        // }\n\n    }\n\n    function addQuicklook(renderable) {\n\n        function imageLoader(url, useCredentials) {\n            return new Promise((resolve, reject) => {\n                const img = new Image();\n        \n                img.onload = function() {\n                    resolve(img);\n                };\n        \n                img.onerror = function(e){\n                    reject(e);\n                };\n        \n                img.crossOrigin = useCredentials ? 'Use-Credentials' : 'Anonymous';\n                img.src = url;\n                console.log(' adding QL')\n            });\n        }\n\n\n        // console.log(' adding QL')\n        //  console.log(renderable.attributes)\n        // let quicklook =  new TexturedSurfacePolygon(renderable.sector)\n        // let quicklookLayer = new WorldWind.RenderableLayer('Quicklooks')\n        // // quicklookLayer.addRenderable(quicklook)\n        // // setQuicklooklayers((quicklooklayers)=>[...quicklooklayers,quicklookLayer])\n        // // eww.current.addLayer(quicklookLayer)\n        // let ql = new Image()\n        // ql.src = renderable.userProperties.quicklookUrl\n        // quicklook.image = ql\n        \n        imageLoader(renderable.userProperties.quicklookUrl,true).then(image => {\n            let quicklookLayer = getLayerByName('Quicklooks')\n            removeQuicklooks()\n            let footprint = [\n                renderable.boundaries[0][0],\n                renderable.boundaries[0][3],\n                renderable.boundaries[0][2],\n                renderable.boundaries[0][1]\n            ]\n            // footprint[0].pop()\n            console.log(footprint)\n            let quicklook =  new wwwx.TexturedSurfacePolygon(footprint,renderable.attributes)\n            quicklook.maxImageWidth = 64\n            quicklook.maxImageHeight = 64\n            \n            quicklook.image = image\n            quicklookLayer.addRenderable(quicklook)\n            eww.current.addLayer(quicklookLayer)\n            eww.current.redraw()\n        })\n    }\n\n    function removeQuicklooks() {\n        getLayerByName('Quicklooks').removeAllRenderables()\n        eww.current.redraw()\n    }\n\n    function setTime(epoch) {\n        getLayerByName('StarField').time = getLayerByName('Atmosphere').time = new Date(epoch)\n        enableRenderables(epoch)\n\n        for(let l=0 ; l<satelliteLayers.length ; l++) {\n            satelliteLayers[l].setTime(new Date(epoch))\n        }\n        eww.current.redraw();\n     }\n\n     function moveTo(clat, clon, alt) {\n        // setTimeout(() => {\n            console.log('nav: '+eww.current.navigator.range+'  alt: '+alt)\n            eww.current.goToAnimator.travelTime = 1000;\n            eww.current.goTo(new WorldWind.Position(clat, clon));\n            eww.current.navigator.range = alt;\n            eww.current.navigator.camera.applyLimits()\n            eww.current.redraw();\n            // }, 1000)\n        }\n\n\n    function toggleProjection() {\n        setProjection( prevProj => {\n          console.log(\"prevProjection: \"+prevProj)\n          let supportedProjections = [ \"3D\", \"Equirectangular\", \"Mercator\"];\n          let newProj = (supportedProjections.indexOf(prevProj) + 1)%supportedProjections.length\n          console.log(\"newProjection: \"+supportedProjections[newProj])\n          switch (supportedProjections[newProj]) {\n            case \"3D\":\n                eww.current.globe.projection = new WorldWind.ProjectionWgs84();\n                break;\n            case \"Equirectangular\":\n                eww.current.globe.projection = new WorldWind.ProjectionEquirectangular();\n                break;\n            case \"Mercator\":\n                eww.current.globe.projection = new WorldWind.ProjectionMercator();\n                break;\n            case \"North Polar\":\n                eww.current.globe.projection = new WorldWind.ProjectionPolarEquidistant(\"North\");\n                break;\n            case \"South Polar\":\n                eww.current.globe.projection = new WorldWind.ProjectionPolarEquidistant(\"South\");\n                break;\n            default:\n            eww.current.globe.projection = new WorldWind.ProjectionWgs84();\n            }\n          eww.current.redraw();\n          return supportedProjections[newProj]\n          })      \n      }\n\n    // callback from eww   \n    const setGlobeStates = () => {\n        \n        let lo = eww.current.navigator.lookAtLocation.longitude\n        let la = eww.current.navigator.lookAtLocation.latitude\n        let al = eww.current.navigator.range\n        let vp = (al < 2000000?getViewPolygon():'')\n\n        setEwwState((ewwstate) => { return {...ewwstate, longitude:lo, latitude: la, altitude: al, viewpolygon: vp}}) \n\n    }\n\n    // handler for tap/click\n\n    const handleClick  = (recognizer) => {\n        // console.log('click')\n        let x = recognizer.clientX\n        let y = recognizer.clientY\n        // Perform the pick. Must first convert from window coordinates to canvas coordinates, which are\n        // relative to the upper left corner of the canvas rather than the upper left corner of the page.\n        let pickList = eww.current.pick(eww.current.canvasCoordinates(x, y));\n        // console.log(pickList)\n        if (pickList.terrainObject()) {\n            // position = pickList.terrainObject().position;\n            // store list of selected footprints in a string for later comparison\n            eww.current.removeLayer(getLayerByName('quicklook') )\n            // de-highlight all rendereables\n            for (let i = 0; i < eww.current.layers.length; i++) {\n                if (eww.current.layers[i].displayName.includes('Products:')) {                    \n                    for (let j = 0; j < eww.current.layers[i].renderables.length; j++) {\n                        let renderable = eww.current.layers[i].renderables[j]\n                        renderable.highlighted = false\n                    }\n                }\n            }\n    \n            // ... and now highlight all picked rendereables\n            let pickedItems = []\n            for (let i = 0; i < pickList.objects.length; i++) {\n                if (pickList.objects[i].userObject instanceof WorldWind.SurfaceShape) {\n                    pickedItems.push(pickList.objects[i].userObject) \n                    pickList.objects[i].userObject.highlighted = !pickList.objects[i].userObject.highlighted\n                    \n                    addQuicklookWMS(pickList.objects[i].userObject)\n                }\n            }\n            // console.log(pickedItems)\n            setEwwState((ewwstate) => { return {...ewwstate, pickedItems: pickedItems}})\n            eww.current.redraw()\n        } else {\n            console.log('No position !');\n            return;\n        }\n\n\n    }\n    const handleDoubleClick  = (recognizer) => {\n        console.log('double click')\n        northUp()\n    }\n\n    const handleDoubleClick2  = (recognizer) => {\n        console.log('double click')\n        let x = recognizer.clientX\n        let y = recognizer.clientY\n        let pickList = eww.current.pick(eww.current.canvasCoordinates(x, y));\n\n        let position;\n  \n  \n        // Get coordinates of clicked point and list of selected footprints. Do nothing if click done outside the globe.\n        if (pickList.terrainObject()) {\n            position = pickList.terrainObject().position;\n            // eww.current.goTo(new WorldWind.Location(position.latitude, position.longitude));\n\n            let point = \"POINT(\"+position.longitude+' '+position.latitude+\")\"\n            \n            setEwwState((ewwstate) => { return {...ewwstate, aoi: point}}) \n    \n        } else {\n              console.log('No position !');\n              setEwwState((ewwstate) => { return {...ewwstate, aoi: ''}})\n        }\n    }\n\n\n    // didMount effect\n    useEffect(() => {\n        console.log(\"Creating the world...\")\n\n        // to use DEM from Eox ESA Map server\n        var elevationModel = new WorldWind.ElevationModel();\n        elevationModel.removeAllCoverages()\n        elevationModel.addCoverage(new WorldWind.TiledElevationCoverage({\n            coverageSector: WorldWind.Sector.FULL_SPHERE,\n            resolution: 0.008333333333333,\n            retrievalImageFormat: \"image/tiff\",\n            minElevation: -11000,\n            maxElevation: 8850,\n            urlBuilder: new WorldWind.WcsTileUrlBuilder(\"https://dem.esa.maps.eox.at/elevation\", \"copdem\", \"2.0.1\")\n            }));\n        // eww.current = new WorldWind.WorldWindow(id, elevationModel);\n\n\n        eww.current = new WorldWind.WorldWindow(id);\n        eww.current.redrawCallbacks.push(setGlobeStates)\n\n        // Define a min/max altitude limit\n        eww.current.navigator.range = alt\n        WorldWind.BasicWorldWindowController.prototype.applyLimits = function () {\n            eww.current.navigator.range = WorldWind.WWMath.clamp(eww.current.navigator.range, 1, 300000000);\n            console.log('limit')\n        }\n\n        // define click/tap recognisers\n\n        let appDoubleClickRecognizer = new WorldWind.ClickRecognizer(eww.current, handleDoubleClick);\n        appDoubleClickRecognizer.numberOfClicks = 2;\n        appDoubleClickRecognizer.maxClickInterval = 200;\n        eww.current.worldWindowController.clickDownRecognizer.recognizeSimultaneouslyWith(appDoubleClickRecognizer);\n        \n        // turning this block on will cause double drag to not be recognized anymore....\n        // let appClickRecognizer = new WorldWind.ClickRecognizer(eww.current, handleClick);\n        // appClickRecognizer.numberOfClicks = 1;\n        // eww.current.worldWindowController.clickDownRecognizer.recognizeSimultaneouslyWith(appClickRecognizer);\n        // appDoubleClickRecognizer.recognizeSimultaneouslyWith(appClickRecognizer);\n        // appClickRecognizer.requireRecognizerToFail(appDoubleClickRecognizer)\n\n\n        let appDoubleTapRecognizer = new WorldWind.TapRecognizer(eww.current, handleDoubleClick);\n        appDoubleTapRecognizer.numberOfTaps = 2;\n        appDoubleTapRecognizer.name = 'double tap';\n        eww.current.worldWindowController.tapDownRecognizer.recognizeSimultaneouslyWith(appDoubleTapRecognizer);\n\n        // // next 2 lines: marche pas...\n        // eww.current.worldWindowController.panRecognizer.recognizeSimultaneouslyWith(appDoubleTapRecognizer);\n        // eww.current.worldWindowController.doublePanRecognizer.recognizeSimultaneouslyWith(appDoubleTapRecognizer);\n \n        // tapRecognizer.recognizeSimultaneouslyWith(doubleTapRecognizer);\n        // doubleTapRecognizer.requireRecognizerToFail(tapRecognizer)\n\n        \n        WorldWind.configuration.baseUrl = window.location.href\n\n        //let starFieldLayer = new WorldWindX.StarFieldLayer();\n        // let starFieldLayer = new WorldWind.StarFieldLayer();\n        let starFieldLayer = new StarFieldLayer();\n        let atmosphereLayer = new WorldWind.AtmosphereLayer('images/BlackMarble_2016_01deg.jpg');\n        // let atmosphereLayer = new WorldWind.AtmosphereLayer('images/BlackMarble_2016_3km.jpg');\n        \n        //atmosphereLayer.minActiveAltitude = 5000000\n\n        let quicklookLayer = new WorldWind.RenderableLayer('Quicklooks')\n        // console.log(satelliteLayers)\n    \n        let layers = [\n            // { layer: new WorldWind.WmsLayer(wmsConfigBg_s2, \"\"), enabled: true },\n            // { layer: new WorldWind.WmsLayer(wmsConfigBg_terrain, \"\"), enabled: false },\n            // { layer: new WorldWind.WmsLayer(wmsConfigNames, \"\"), enabled: names },\n            { layer: starFieldLayer, enabled: starfield },\n            { layer: atmosphereLayer, enabled: atmosphere },\n            { layer: quicklookLayer, enabled: true }\n            // { layer: modelsLayer, enabled: satellites }\n        ];\n    \n        for (let l = 0; l < bgLayers.length; l++) {\n            let layer = new WorldWind.WmsLayer(bgLayers[l], \"\")\n            layer.enabled = false\n            eww.current.addLayer(layer, \"\")\n        }\n        for (let l = 0; l < ovLayers.length; l++) {\n            let layer = new WorldWind.WmsLayer(ovLayers[l], \"\")\n            layer.enabled = false\n            eww.current.addLayer(layer, \"\")\n        }\n\n        for (let l = 0; l < layers.length; l++) {\n            layers[l].layer.enabled = layers[l].enabled;\n            eww.current.addLayer(layers[l].layer);\n        }\n        for (let l = 0; l < satelliteLayers.length; l++) {\n            satelliteLayers.enabled = satellites\n            eww.current.addLayer(satelliteLayers[l]);\n        }\n\n\n        console.log(eww.current.layers)\n        //let date = new Date();\n        starFieldLayer.time = new Date();\n        atmosphereLayer.time = new Date();\n        // moveTo(clat, clon, alt) \n        // setTimeout(() => {\n        //     eww.current.goToAnimator.travelTime = 1000;\n        //     eww.current.goTo(new WorldWind.Position(clat, clon, alt));\n        //     eww.current.redraw();\n        //     }, 2000)\n    \n        eww.current.redraw();\n        eww.current.deepPicking = true;\n        // eww.current.orderedRenderingFilters.push(declutterByTime)\n    }, []); // effect runs only once\n        \n      // useEffect(() => {\n    //     console.log(\"useEffect aoi: \" + aoi)\n    //     let newewwstate = {...ewwstate, aoi: aoi}\n    //     setEwwState(newewwstate)\n    // }, [aoi]); \n    useEffect(() => {\n        // console.log('background changed effect: '+background)\n\n        toggleBg(background)\n    }, [background]);\n\n    useEffect(() => {\n        // console.log('overlay changed effect: '+overlay)\n\n        toggleOv(overlay)\n    }, [overlay]);\n\n    useEffect(() => {\n        // console.log('names changed effect: '+names)\n        toggleNames(names)\n    }, [names]);\n\n    useEffect(() => {\n        // console.log('atmosphere changed effect: '+satellites)\n\n        toggleAtmosphere(atmosphere)\n    }, [atmosphere]);\n\n    useEffect(() => {\n        // console.log('starfield changed effect: '+starfield)\n        toggleStarfield(starfield)\n    }, [starfield]);\n\n    useEffect(() => {\n        // console.log('sat changed effect: '+satellites)\n\n        toggleModel(satellites)\n    }, [satellites]);\n\n    useEffect(() => {\n        toggleDem(dem)\n    }, [dem]); \n\n  return { eww, ewwstate, moveTo, removeGeojson, addGeojson, addWMS, toggleStarfield, toggleAtmosphere, setTime, toggleProjection, toggleNames, toggleModel, toggleBg, toggleOv, toggleDem, northUp };\n}\n","import React, {useState, useEffect, useRef} from 'react'\nimport WorldWind from 'webworldwind-esa';\nimport { useGesture, useDrag } from 'react-use-gesture'\nimport {useSpring, config, animated} from 'react-spring'\nimport { add, sub, scale } from 'vec-la'\nimport './Earth.css'\nimport LogPanel from '../logpanel';\n\n\n// todo:\n//      set limits to the navigator.camera\n\n\nexport default function FluidWorldWindowController({world}) {\n\n    const MAX_ALT = 100000000\n    const EYE_ALT = 2\n    // to detect double taps\n    const lastTap = useRef()\n    const doubleTap = useRef()\n    const button = useRef()\n    const clicktimeout = useRef()\n\n    //\n    const gesturestartposition = useRef()\n    const lastxy = useRef()\n    const rotationmode = useRef(false)\n    const [logitems,setlogitems] = useState({})\n\n    // debug snippet\n    // add {debughtml} in returned dom\n    // use with: logdebug({key:value,...})\n    const debug = useRef()\n    const [debugtext,setdebugtext] = useState([])\n    const [{ x, y }, api] = useSpring(() => ({ x: 0, y: 0 }))\n    const bind2 = useDrag(({ offset: [x, y] }) => api.start({ x, y }))\n    const debughtml =     (      <animated.div {...bind2()} style={{ x, y }}  className='Debug'>{debugtext}</animated.div>)\n    const logdebug = (items) => {\n        let dd = []\n        debug.current = {...debug.current,...items}\n        // debugtext.current = []\n        for (let [key, value] of Object.entries(debug.current)) {\n            // console.log(`${key}: ${value}`);\n            dd.push([key,value])\n          }\n          setdebugtext( dd.map( (item) => <div key={item[0]}>{item[0]}: {item[1]}</div> ))\n    }    \n    // end debug snippet  \n    \n    const detectDoubleTap = (e) => {\n        button.current = e.button\n        if (lastTap.current && (e.timeStamp - lastTap.current) < 300) {\n            doubleTap.current = true\n        } else {\n            lastTap.current = e.timeStamp\n            doubleTap.current = false\n        }\n    }\n\n\n    const [{ posxy_drag}, setyOnDrag] = useSpring(() => ({ posxy_drag: [0,0]  }))\n    // const [{ y }, api] = useSpring(() => ({ y: 0 }))\n\n    \n\n    const bind = useGesture({\n        onDrag: ({  event, xy, vxvy, previous, first, down, initial, delta, movement, offset, velocity, direction, tap, scrolling, touches, pinching}) => {\n\n            if(first) {\n\n                gesturestartposition.current = positionAtPickPoint(xy[0],xy[1])\n                // logdebug({startlat: gesturestartposition.current.latitude})\n                // logdebug({startlon: gesturestartposition.current.longitude})\n                if(!gesturestartposition.current) {\n                    gesturestartposition.current = positionAtPickPoint(world.current.canvas.clientWidth/2,world.current.canvas.clientHeight/2)\n                }\n    \n                if(gesturestartposition.current.latitude>70 || gesturestartposition.current.latitude<-70 || world.current.navigator.heading != 0) {\n                    rotationmode.current = true\n                    console.log('rotation true')\n                }\n                //    gesturestartposition.current = positionAtPickPoint(initial[0],initial[1])\n                // if(gesturestartposition.current) {\n                //     // logdebug({startlat: gesturestartposition.current.latitude})\n                //     // logdebug({startlon: gesturestartposition.current.longitude})\n    \n                // }\n\n                detectDoubleTap(event)\n                if(doubleTap.current) clearTimeout(clicktimeout.current)\n                // console.log('double:'+doubleTap.current+' tap: '+tap)\n            }\n\n            switch (true) {\n                case (!doubleTap.current && tap):  \n                    // simple click or tap\n                    clicktimeout.current = setTimeout(() => {\n                        console.log(\"simple click\")\n                    }, 300);\n                    break\n                case (doubleTap.current && tap): {\n                    clearTimeout(clicktimeout.current)\n\n                    // double click or tap\n                    console.log(\"double click\")\n                    northUp()\n                    break\n                }\n                case ((!doubleTap.current && !tap) && button.current != 2 && touches !=2):\n                    // Pan\n                    // console.log('pan')\n                    zoomspring.stop()\n                    if (world.current.globe.is2D()) {\n                        // handlepan2d(event,initial,down,delta,offset,movement,velocity, direction, xy, previous,first,scrolling)\n                    } else {\n                        handlepan3d(event,initial,down,delta,offset,vxvy,velocity, direction, xy, previous,first,scrolling,touches,pinching)\n                    }\n                    break\n                case (doubleTap.current && !tap):\n                    // zoom\n                    zoomspring.stop()\n                    handlezoom(event,initial,down,delta,offset,movement,velocity, direction, xy, previous,first,scrolling)\n                    break\n\n                case (!doubleTap.current && !tap && button.current == 2):\n                    // right click button: tilt and rotate\n                    handletilt(down, delta, true)\n                    break\n    \n                case (touches == 2):\n                    // 2 finger tap: tilt\n                    handletilt(down, delta, false)\n                    break\n        \n                default:\n                console.log(\"default \")\n\n            }\n\n        },\n        onWheel: ({event, xy, previous, first, down, initial, delta, movement, offset, velocity, direction, tap, scrolling}) => {\n            if(first) {\n                gesturestartposition.current = positionAtPickPoint(event.clientX,event.clientY)\n            }\n            delta[1] *= 0.1         \n            delta[0] *= 0.1         \n            handlezoom(event,initial,down,delta,offset,movement,velocity, direction, xy, previous,first,scrolling)\n        }\n        // onPinch: ({event, xy, previous, first, down, initial, delta, movement, offset, velocity, direction, tap, scrolling}) => {\n        //     handlezoom(event,initial,down,delta,offset,movement,velocity, direction, xy, previous,first,scrolling)\n        // }\n    },\n    // {reset: false, drag: {useTouch: true}, filterTaps: true }\n    {drag: {useTouch: true} }\n    )\n\n    const normalize = (val,min,max)=> {\n        var delta = max - min;\n        return (val - min) / delta\n    }\n\n    // north up\n    function northUp() {\n        let headingIncrement = world.current.navigator.heading / -20;\n        let runOperation = () => {\n            if (Math.abs(world.current.navigator.heading) > Math.abs(headingIncrement)) {\n                world.current.navigator.heading += headingIncrement;\n                setTimeout(runOperation, 10);\n            } else {\n                world.current.navigator.heading = 0;\n                rotationmode.current = false\n            }\n            world.current.redraw();\n        };\n        setTimeout(runOperation, 10);\n    }\n    \n     // tilting\n     const [{ tiltvalue }, tiltspring] = useSpring(() => ({ tiltvalue: [0,0] }))\n\n     const handletilt = (down, delta, dorotation) => {\n        tiltspring.start({\n            to: {tiltvalue: delta},\n            immediate: down,\n            // config: config.stiff,\n            config: { mass: 1, tension: 100, friction: 40 },\n            onChange: ()=>{\n                let tiltoffset = -90 * tiltvalue.get()[1]*2 / world.current.canvas.clientHeight\n                let headingoffset = -90 * tiltvalue.get()[0]*2 / world.current.canvas.clientWidth\n                // world.current.navigator.tilt += tiltvalue.get()[1]/8\n                world.current.navigator.tilt -= tiltoffset\n                if(dorotation) world.current.navigator.heading -= headingoffset\n                applyLimits()\n                    world.current.redraw()\n\n            },\n            onRest: () => {\n                // logdebug({status: 'finsished: '+world.current.navigator.tilt})\n            }\n        })\n    }\n\n    // panning\n    const [{ panvalue }, panspring] = useSpring(() => ({ panvalue: [0,0] }))\n\n    const handlepan2d = (event,initial,down,delta,offset,movement,velocity, direction, xy, previous,first,wheeling) => {\n        console.log(\"pan2d\")\n    }\n\n    const handlepan3d = (event,initial,down,delta,offset,vxvy,velocity, direction, xy, previous,first,wheeling, touches,pinching) => {\n        let enabler = 1\n        if (!down) enabler = (velocity < 0.2)?0:1\n        let correction = (event.type === 'touchmove')?1:2.5\n        // logdebug({pinching: pinching})\n\n        panspring.start({\n            panvalue: delta,\n            // to: {panvalue: (down)?movement:add(movement,scale(movement,velocity))},\n            // to: {panvalue: (down)?movement:movement[1]+movement[1]*velocity*5},\n            immediate: down,\n            // config: config.stiff,\n            config: { mass: 1, tension: 250, friction: 80 },\n            onChange: ()=>{\n                try{\n                let lookatxy = [world.current.canvas.clientWidth/2, world.current.canvas.clientHeight/2]\n                let nextlookatxy = sub(lookatxy,scale(panvalue.get(),correction*enabler))\n                let currentposition = positionAtPickPoint(lookatxy[0],lookatxy[1])\n                if(!currentposition) console.log('no currentpos !')\n                let nextposition = positionAtPickPoint(nextlookatxy[0],nextlookatxy[1])\n                if(!nextposition) console.log('no nextposition !')\n\n                let currentpoint = new WorldWind.Vec3(0,0,0)\n                let nextpoint = new WorldWind.Vec3(0,0,0)\n                if(!world.current.globe.computePointFromPosition(currentposition.latitude, currentposition.longitude, currentposition.altitude, currentpoint)) return\n                if(!world.current.globe.computePointFromPosition(nextposition.latitude, nextposition.longitude, nextposition.altitude, nextpoint)) return\n\n                let rotationVector = new WorldWind.Vec3(0, 0, 0)\n                let rotationAngle = computeRotationVectorAndAngle( nextpoint,currentpoint, rotationVector);\n                // logdebug({delta: panvalue.get()[1]})\n\n                if(nextposition && (nextposition.latitude > 80 || nextposition.latitude < -80) && rotationmode.current == false) {\n                    console.log('out')\n                    panspring.stop()\n                    return\n                }\n                rotateShpere(rotationVector, rotationAngle, nextpoint, nextposition)\n                if(rotationmode.current == false) world.current.navigator.heading = 0\n                    // } else {\n                //     logdebug({nextlat: nextposition.latitude})\n                //     if(nextposition && (nextposition.latitude > 80 || nextposition.latitude < -80)) return\n                //     world.current.navigator.lookAtLocation.latitude = nextposition.latitude\n                //     world.current.navigator.lookAtLocation.longitude = nextposition.longitude\n\n                // }\n            }\n            catch {\n                console.log('probl !')\n            }\n\n\n\n\n\n\n\n                // if (down) {\n                //     let newx = previous[0] - panvalue.get()[0]\n                //     let newy = previous[1] - panvalue.get()[1]\n                //     // logdebug({newx: newx, newy: newy})\n    \n                //     let position = positionAtPickPoint(newx,newy)\n                //     if(!position) return\n            \n                //     var deltaLat = position.latitude - gesturestartposition.current.latitude;\n                //     var deltaLon = position.longitude - gesturestartposition.current.longitude;\n                //     // logdebug({deltaLat: deltaLat, deltaLon: deltaLon})\n    \n                //     world.current.navigator.lookAtLocation.latitude -= deltaLat;\n                //     world.current.navigator.lookAtLocation.longitude -= deltaLon;\n                //     // lastxy.current[0] = (down)?xy[0]:  lastxy.current[0] + panvalue.get()[0]\n                //     // lastxy.current[1] = (down)?xy[1]:  lastxy.current[1] + panvalue.get()[1]\n                // }\n    \n                // } else {\n                    // world.current.navigator.lookAtLocation.latitude += panvalue.get()[1]/10;\n                    // world.current.navigator.lookAtLocation.longitude -= panvalue.get()[0]/10;\n                // }\n                // applyLimits()\n                world.current.redraw()\n                // logdebug({animX: panvalue.get()[0]})\n                // logdebug({animY: panvalue.get()[1]})\n                // logdebug({vxvyX: vxvy[0]})\n                // logdebug({vxvyY: vxvy[1]})\n                // logdebug({lastx: lastxy.current[0]})\n\n\n            },\n            onRest: () => {\n                // logdebug({status: 'finsished: '})\n            }\n        })\n\n    }\n\n    // zooming\n    const [{ range }, zoomspring] = useSpring(() => ({ range: 1 }))\n    const handlezoom = (event,initial,down,delta,offset,movement,velocity, direction, xy, previous,first,scrolling) => {\n\n\n        \n        zoomspring.start({\n            to: {range: 1-delta[1]/250},\n            immediate: (down||scrolling),\n            // config: config.stiff,\n            config: { mass: 1, tension: 100, friction: 40 },\n            onChange: (spring)=>{\n                    // logdebug({rangefactor: spring.value.range})\n                    moveZoom(gesturestartposition.current,spring.value.range)\n                    world.current.navigator.range *= spring.value.range\n                    applyLimits()\n\n                    world.current.redraw()\n\n            },\n            onRest: () => {\n                // logdebug({status: 'finsished: '+world.current.navigator.range})\n            }\n        })\n\n    }\n\n    const moveZoom = function (refposition, amount) {\n        if (!refposition || amount >= 1) return\n        let lookAtLocation = world.current.navigator.lookAtLocation;\n        let lookatAltitude = world.current.globe.elevationAtLocation(lookAtLocation.latitude, lookAtLocation.longitude)\n        let lookAtPosition = new WorldWind.Position(lookAtLocation.latitude, lookAtLocation.longitude, lookatAltitude)\n        let position\n        if(amount <1) {\n            position = WorldWind.Position.interpolateGreatCircle(\n                amount, \n                refposition,\n                lookAtPosition, \n                new WorldWind.Position(0, 0, 0)\n                )\n    \n        } \n        else { // may be better to do nothing...\n            return\n            let intermediatePosition = WorldWind.Position.interpolateGreatCircle(\n                1/amount, \n                refposition,\n                lookAtPosition, \n                new WorldWind.Location(0, 0)\n            )\n            let distanceRadians = WorldWind.Location.greatCircleDistance(lookAtPosition, intermediatePosition)\n            let greatCircleAzimuthDegrees = WorldWind.Location.greatCircleAzimuth(lookAtPosition, intermediatePosition)\n            let location =  WorldWind.Location.greatCircleLocation(lookAtPosition, greatCircleAzimuthDegrees ,\n                    distanceRadians, new WorldWind.Location(0, 0));\n            position = new WorldWind.Position(location.latitude, location.longitude, intermediatePosition.altitude)\n        }\n\n        lookAtLocation.latitude = position.latitude;\n        lookAtLocation.longitude = position.longitude;\n        lookAtLocation.altitude = position.altitude;\n    }\n\n\n    const locationAtPickPoint = (x, y) => {\n        var coordinates = world.current.canvasCoordinates(x, y)\n        var pickList = world.current.pickTerrain(coordinates);\n\n        for (var i = 0; i < pickList.objects.length; i++) {\n            var pickedObject = pickList.objects[i];\n            if (pickedObject.isTerrain) {\n                var pickedPosition = pickedObject.position;\n                if (pickedPosition) {\n                    return new WorldWind.Location(pickedPosition.latitude, pickedPosition.longitude);\n                }\n            }\n        }\n    };\n\n    \n    const positionAtPickPoint2 = (x, y) => {\n\n        // another way to do it (but no altitude):\n        let ray = world.current.rayThroughScreenPoint(world.current.canvasCoordinates(x, y))\n        let position = new WorldWind.Position(0,0,0)\n        let intersectpoint = [0,0,0]\n        if (world.current.globe.intersectsLine(ray, intersectpoint)) {\n            world.current.globe.computePositionFromPoint(intersectpoint[0], intersectpoint[1], intersectpoint[2], position)\n            return(position)\n        }\n        return null\n    }\n\n    const positionAtPickPoint = (x, y) => {\n\n        let coordinates = world.current.canvasCoordinates(x, y)\n        let pickList = world.current.pickTerrain(coordinates);\n\n        for (let i = 0; i < pickList.objects.length; i++) {\n            let pickedObject = pickList.objects[i];\n            if (pickedObject.isTerrain) {\n                let pickedPosition = pickedObject.position;\n                if (pickedPosition) {\n                    return new WorldWind.Position(pickedPosition.latitude, pickedPosition.longitude, pickedPosition.altitude);\n                }\n            }\n        }\n\n    };\n\n    const computeRotationVectorAndAngle = function (vec1, vec2, rotationVector) {\n        var angleRad = WorldWind.MeasurerUtils.angleBetweenVectors(vec1, vec2);\n        var angle = angleRad * WorldWind.Angle.RADIANS_TO_DEGREES;\n        rotationVector.copy(vec1);\n        rotationVector.cross(vec2);\n        rotationVector.normalize();\n        return angle;\n    };\n\n    const rotateShpere = function (rotationVector, angle, nextpoint, nextposition) {\n        if (!isFinite(angle) || !isFinite(rotationVector[0]) || !isFinite(rotationVector[1]) || !isFinite(rotationVector[2])) {\n            return false;\n        }\n\n        var wwd = world.current;\n        var navigator = wwd.navigator;\n        var viewMatrix = WorldWind.Matrix.fromIdentity();\n        var altitude = navigator.lookAtLocation.altitude;\n        var tilt = navigator.tilt;\n        var scratchRay = new WorldWind.Line(new WorldWind.Vec3(0, 0, 0), new WorldWind.Vec3(0, 0, 0));\n        \n        navigator.tilt = 0;\n        wwd.computeViewingTransform(null, viewMatrix);\n        viewMatrix.multiplyByRotation(rotationVector[0], rotationVector[1], rotationVector[2], angle);\n\n        viewMatrix.extractEyePoint(scratchRay.origin);\n        viewMatrix.extractForwardVector(scratchRay.direction);\n        if (!wwd.globe.intersectsLine(scratchRay, nextpoint)) {\n            navigator.tilt = tilt;\n            return false;\n        }\n\n        var params = viewMatrix.extractViewingParameters(nextpoint, navigator.roll, wwd.globe, {});\n        if (Math.abs(navigator.heading) < 5 && Math.abs(navigator.lookAtLocation.latitude < 70) && Math.abs(nextposition.latitude) < 70) {\n            navigator.heading = Math.round(params.heading);\n        }\n        else {\n            navigator.heading = params.heading;\n        }\n        navigator.lookAtLocation.copy(params.origin);\n        navigator.lookAtLocation.altitude = altitude;\n        navigator.tilt = tilt;\n\n        return true;\n    }\n\n\n    const applyLimits = () => {\n        let nav = world.current.navigator\n        nav.camera.applyLimits() // not sure if not done by default by www\n        nav.range = WorldWind.WWMath.clamp(\n            nav.range, \n            world.current.globe.elevationAtLocation(nav.lookAtLocation.latitude, nav.lookAtLocation.longitude) + EYE_ALT, \n            MAX_ALT \n        )\n        // logdebug({\n        //     range: nav.range, \n        //     lookAtlat: nav.lookAtLocation.latitude, \n        //     lookAtlon: nav.lookAtLocation.longitude, \n        //     lookAtalt: nav.lookAtLocation.altitude, \n        //     clookAtalt: world.current.globe.elevationAtLocation(nav.lookAtLocation.latitude, nav.lookAtLocation.longitude),\n        //     // initlat: gesturestartposition.current.latitude,\n        //     // initlon: gesturestartposition.current.longitude,\n        // })\n    \n    }\n\n    useEffect(() => {\n        window.addEventListener(\"contextmenu\", e => e.preventDefault());\n    },[])\n\n\n    return (\n        <div>\n            <div {...bind()} className={'EarthController'}></div>\n            {/* <div  className='Debug'>\n                {debugtext.current}\n            </div> */}\n            {/* <animated.div {...bind2()} style={{ x, y }}  className='Debug'>\n                {debugtext}\n            </animated.div> */}\n            {debughtml}\n            {/* <LogPanel items={logitems}/> */}\n        </div>\n    )\n\n    \n}","import React, {useEffect, useState, useGlobal } from 'reactn';\nimport './Earth.css'\nimport { useEww } from \"./useEww\"\nimport { useHotkeys } from 'react-hotkeys-hook'\nimport FluidWorldWindowController from './FluidWorldWindowController'\n\n\n\n\n\nfunction Earth({ id, alt }) {\n\n    const [mapSettings, setMapSettings] = useGlobal('mapSettings')\n    const [ position, setPosition] = useGlobal('position')\n    const [ altitude, setAltitude] = useGlobal('altitude')\n    const [ viewDate, setViewDate] = useGlobal('viewDate')\n    const [ satellites, setSatellites ] = useGlobal('satellites')\n\n    const [mapSet, setMapSet] = useState(mapSettings)\n    const [sat, setSat] = useState(satellites)\n\n\n    const {\n        eww,\n        ewwstate,\n        moveTo,\n        addGeojson,\n        removeGeojson,\n        addWMS,\n        toggleProjection,\n        toggleOv,\n        toggleModel,\n        setTime,\n        toggleDem,\n        northUp\n    } = useEww({\n        id: id,\n        clat: position.clat,\n        clon: position.clon,\n        alt: altitude,\n        starfield: mapSettings.starfield,\n        atmosphere: mapSettings.atmosphere,\n        background: mapSettings.background,\n        overlay: mapSettings.overlay,\n        satellites: satellites,\n        names: mapSettings.names,\n        dem: mapSettings.dem\n    })\n\n    useHotkeys(\"p\",toggleProjection)  \n    useHotkeys(\"c\",removeGeojson)\n    useHotkeys(\"u\",northUp)\n    useHotkeys(\"b\",() => setMapSet((mapSet)=>({...mapSet, background:mapSet.background+1})))  \n    useHotkeys(\"m\",() => setSat((sat)=>(!sat)))  \n    // useHotkeys(\"m\",() => setSatellites((satellites)=>(!satellites)))  \n    useHotkeys(\"d\",() => setMapSet((mapSet)=>({...mapSet, dem:!mapSet.dem})))  \n    useHotkeys(\"o\",() => setMapSet((mapSet)=>({...mapSet, overlay:mapSet.overlay+1})))  \n    useHotkeys(\"a\",() => setMapSet((mapSet)=>({...mapSet, atmosphere:!mapSet.atmosphere})))  \n    useHotkeys(\"s\",() => setMapSet((mapSet)=>({...mapSet, starfield:!mapSet.starfield})))  \n    useHotkeys(\"n\",() => setMapSet((mapSet)=>({...mapSet, names:!mapSet.names})))  \n\n    // useHotkeys(\"a\",(mapSettings) => setMapSettings({...mapSettings, atmosphere:!mapSettings.atmosphere}))\n\n    // const toggleAtmosphere = () => setMapSettings((mapSettings)=>({...mapSettings, atmosphere:!mapSettings.atmosphere}))\n    // const toggleStarfield = () => setMapSettings((mapSettings)=>({...mapSettings, starfield:!mapSettings.starfield}))\n    // const toggleNames = () => setMapSettings((mapSettings)=>({...mapSettings, names:!mapSettings.names}))\n    // const toggleBg = () => setMapSettings((mapSettings)=>({...mapSettings, background:Math.random()}))\n\n    useEffect(() => {\n        setAltitude(ewwstate.altitude)\n    },[ewwstate.altitude])\n\n\n    useEffect(() => {\n        setTime(viewDate.getTime())\n    },[viewDate])\n\n    useEffect(() => {\n        setMapSettings(mapSet)\n    }, [mapSet]);\n\n    useEffect(() => {\n        // console.log(mapSettings)\n        setMapSet(mapSettings)\n    }, [mapSettings]);\n\n    useEffect(() => {\n        setSatellites(sat)\n    }, [sat]);\n\n    useEffect(() => {\n        setSat(satellites)\n    }, [satellites]);\n    \n    useEffect(() => {\n        console.log(\"eww changed\")\n    }, [eww]);\n    \n    useEffect(() => {\n        console.log(\"world created\"+' / '+position.clat+' / '+position.clon+' / '+altitude)\n        setTimeout(() => {\n            moveTo(position.clat, position.clon, altitude) \n        }, 1000)\n\n    }, []);\n    \n\n\n    let globeStyle = {\n        background: 'black',\n        position: \"fixed\",\n        left: 0,\n        top: 10,\n        width: '100%',\n        height: '100%'\n    };\n\n    let globeControllerStyle = {\n        background: 'red',\n        position: \"fixed\",\n        left: '100px',\n        bottom:'100px',\n        width: '100%',\n        height: '200px',\n    };\n\n        \n    return (\n        <div>\n            <canvas className={'Earth'} id={id} />\n            {/* <canvas id={id} style={globeStyle} /> */}\n            <FluidWorldWindowController world={eww}/>\n        </div>\n    );\n}\n\nexport default Earth\n","import React, {useState} from \"react\";\nimport {useSpring, animated} from 'react-spring'\nimport { useGesture } from 'react-use-gesture'\nimport \"./controlpanel.css\"\n// npm install --save-dev @iconify/react @iconify-icons/ic\nimport { Icon, InlineIcon } from '@iconify/react';\n// import baselineExplore from '@iconify-icons/ic/baseline-explore';\nimport baselinePalette from '@iconify-icons/ic/baseline-palette';\n\n\n\n// import MissionSelector from \"./missionselector\";\n\n\n\n\n\nfunction ControlPanel(props) {\n\n    const [open, setOpen] = useState(false)\n\n    const [{ mr },set] = useSpring(() =>({ mr:  -300 }))\n    const bind = useGesture( {\n        onDrag: ({ down, delta, vxvy }) => {\n            if(vxvy[0]>1 || (!down && delta[0] > 100)) {\n                set({\n                    mr: -300\n                })\n                setOpen( true)\n            } else {\n                set({\n                    mr: down?-Math.max(delta[0],0):0\n                })\n                setOpen( false)\n            }\n        },\n    })\n\n\n    return   (\n\n        <animated.div {...bind()} style={{ right: mr, top:0 }} className='ControlPanel'>\n            <div className='PanelControl shadow' onClick={()=>!open?set({mr:-300}):set({mr:0})} >\n                {/* <img id='logo'className='Logo' src='./images/EOi_logo.png' alt='' onClick={()=>!open?set({mr:-300}):set({mr:0})} /> */}\n                {/* <div className='PanelControl' alt='' onClick={()=>!open?set({mr:-300}):set({mr:0})}></div> */}\n                <Icon icon={baselinePalette} width='100%'/>\n            </div>\n            \n            {props.children}\n        \n        </animated.div>\n\n\n    )\n    \n}\n\nexport default ControlPanel\n","import React, { useState, useEffect } from \"react\";\n\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport './MissionSelector.css'\n\n\n// should use a prop\n\nfunction MissionSelector({initialmission, onMissionChange}) {\n\n\n    const [mission, setMission] = useState(initialmission)\n    \n    useHotkeys(\"1\",()=>{setMission('S1')}) \n    useHotkeys(\"2\",()=>{setMission('S2')}) \n    useHotkeys(\"3\",()=>{setMission('S3')}) \n    useHotkeys(\"5\",()=>{setMission('S5P')}) \n    useHotkeys(\"6\",()=>{setMission('ENVISAT')})\n\n    useEffect(() => {\n        console.log('Mission changed to: '+ mission)\n        onMissionChange(mission)\n    }, [mission]);\n    \n    \n    //console.log('mission rendering')\n    return (\n        <div className='MissionSelector'>\n            <div className={(mission == 'S1')?'CircleButtonSelected':'CircleButton'}><img className='MissionIcon' src='./images/s1_black.png' alt='' onClick={() => setMission('S1')} /></div>\n            <div className={(mission == 'S2')?'CircleButtonSelected':'CircleButton'}><img className='MissionIcon' src='./images/s2_black.png' alt='' onClick={() => setMission('S2')} /></div>\n            <div className={(mission == 'S3')?'CircleButtonSelected':'CircleButton'}><img className='MissionIcon' src='./images/s3_black.png' alt='' onClick={() => setMission('S3')} /></div>\n            <div className={(mission == 'S5P')?'CircleButtonSelected':'CircleButton'}><img className='MissionIcon' src='./images/s5p_black.png' alt='' onClick={() => setMission('S5P')} /></div>\n           \n            \n        </div>\n    )\n}\n\nexport default MissionSelector;\n","import React, {  useGlobal } from 'reactn';\n\nimport MissionSelector from \"../components/missionselector\"\n\nfunction C_MissionSelector() {\n\n    const [mission, setMission] = useGlobal('mission')\n\n    return (\n        <MissionSelector initialmission={mission} onMissionChange={setMission}></MissionSelector> \n     )\n}\n\nexport default C_MissionSelector;\n","import React, { useState, useEffect } from \"react\";\n\nimport './MapSelector.css'\n\n\n// should use a prop\n\nfunction MapSelector({mapSettings, onMapSettingsChange}) {\n\n\n    const [mapSet, setMapSet] = useState(mapSettings)\n\n    const toggleAtmosphere = () => setMapSet((mapSet)=>({...mapSet, atmosphere:!mapSet.atmosphere}))\n    const toggleStarfield = () => setMapSet((mapSet)=>({...mapSet, starfield:!mapSet.starfield}))\n    const toggleNames = () => setMapSet((mapSet)=>({...mapSet, names:!mapSet.names}))\n    const toggleBg = () => setMapSet((mapSet)=>({...mapSet, background:mapSet.background+1}))\n\n\n    useEffect(() => {\n        onMapSettingsChange(mapSet)\n    }, [mapSet]);\n\n    useEffect(() => {\n        setMapSet(mapSettings)\n    }, [mapSettings]);\n\n\n    \n    //console.log('mission rendering')\n    return (\n        <div className='MapSelector'>\n            <div className={(mapSettings.atmosphere)?'CircleButtonSelected':'CircleButton'}><img className='MapIcon' draggable=\"false\" src='./images/atmosphere.png' alt='' onClick={toggleAtmosphere} /></div>\n            <div className={(mapSettings.starfield)?'CircleButtonSelected':'CircleButton'}><img className='MapIcon' draggable=\"false\" src='./images/starfield.png' alt='' onClick={toggleStarfield} /></div>\n            <div className={(mapSettings.names)?'CircleButtonSelected':'CircleButton'}><img className='MapIcon' draggable=\"false\" src='./images/names.png' alt='' onClick={toggleNames} /></div>\n            <div className='CircleButton'><img className='MapIcon' draggable=\"false\" src='./images/names.png' alt='' onClick={toggleBg} /></div>\n           \n        </div>\n    )\n}\n\nexport default MapSelector;\n","import React, {  useGlobal } from 'reactn';\n\nimport MapSelector from \"../components/mapselector\"\n\nfunction C_MapSelector() {\n\n    // const [starfield, setStarfield] = useGlobal('starfield')\n    // const [atmosphere, setAtmosphere] = useGlobal('atmosphere')\n    // const [names, setNames] = useGlobal('names')\n\n    const [mapSettings, setMapSettings] = useGlobal('mapSettings')\n\n    return (\n        <MapSelector mapSettings={mapSettings} onMapSettingsChange={setMapSettings}></MapSelector> \n     )\n}\n\nexport default C_MapSelector;\n","\nimport React, { useEffect } from \"react\";\nimport { useGlobal } from 'reactn';\n\n// import { HuePicker } from 'react-color';\nimport './ColorSelector.css'\nimport { HexColorPicker } from \"react-colorful\";\n// import \"react-colorful/dist/index.css\";\n\n\nfunction ColorSelectorContainer() {\n\n\n    const [ appcolor, setAppcolor ] = useGlobal('appColor');\n\n    useEffect(() => {\n        console.log('color: '+appcolor)\n        document.documentElement.style.setProperty('--color', appcolor);\n        document.documentElement.style.setProperty('--colort', appcolor+'66');\n    }, [appcolor]);\n    \n    const handleChangeComplete = (color) => {\n        if(!color) return\n        console.log('set color: '+color)\n        document.documentElement.style.setProperty('--color', color);\n         \n        document.documentElement.style.setProperty('--colort', color+'66');\n        setAppcolor(color.hex );\n      };\n    \n    //console.log('mission rendering')\n    return (\n        <div className='ColorSelector'>\n            <HexColorPicker color={appcolor} onChange={handleChangeComplete}/>\n        </div>\n    )\n    // <AlphaPicker />  \n}\n\nexport default ColorSelectorContainer;\n\n\n\n","import React, {  useGlobal } from 'reactn';\nimport './Altitude.css' \n\nfunction AltitudeLabelContainer() {\n\n    const [altitude, ] = useGlobal('altitude')\n\n    const formatLat = (lat) => {\n        return (altitude >= 10000)?Math.floor(altitude / 1000)+ ' Km' : Math.floor(altitude)+ ' m'\n    }\n\n    return (\n        <div className='AltitudeLabel'>{formatLat({altitude})}</div>\n     )\n}\n\nexport default AltitudeLabelContainer;\n","import React from 'react';\nimport dateFormat from \"dateformat\"\nimport './DateLabelCard.css';\n\nfunction DateLabel({date, highlight, animated}) {\n\n    return (\n        <div className='LabelContainer' >\n            <hi className={highlight ==='year'?'Highlighted':''}>{date.getUTCFullYear()}</hi>-\n            <hi className={highlight ==='month'?'Highlighted':''}>{dateFormat(date,'UTC:mmm').toUpperCase()}</hi>-\n            <hi className={highlight ==='day'?'Highlighted':''}>{dateFormat(date,'UTC:dd')}</hi>&nbsp;/&nbsp;\n            <hi className={highlight ==='hour'?'Highlighted':''}>{dateFormat(date,'UTC:HH')}</hi>:\n            <hi className={highlight ==='minute'?'Highlighted':''}>{dateFormat(date,'UTC:MM')}</hi>:\n            <hi className={highlight ==='second'?'Highlighted':''}>{dateFormat(date,'UTC:ss')}</hi>  \n        </div>\n    )\n}\nexport default DateLabel\n","import { useState, useEffect, useRef } from \"react\";\n\n\nexport function useClock({ autoStart, initdate }) {\n    // console.log('useClock renders')\n    //const { autoStart, duration } = settings || {};\n  \n    // let initDate = startdate\n    const [date, setDate] = useState(initdate)\n    // const [playing, setPlaying] = useState(false)\n    // const [stepstate, setStepstate] = useState(1000*60*60)\n    // const [refreshrate, setrefreshrate] = useState(200)\n    const playing = useRef()\n    const step = useRef() \n    const refreshrate = useRef() \n    refreshrate.current = 200\n    // step.current = refreshrate.current\n    \n    const ldate = useRef()\n\n      // Control functions\n    const intervalRef = useRef()\n    const timeoutRef = useRef()\n    \n\n    // function increaseSpeed() {\n    //     setStep ( () => {\n    //         let newstate = (step > 0)? step * 2:step / 2\n    //         if(Math.abs(newstate) < refreshrate) newstate = refreshrate\n    //         return newstate\n    //     })\n    // }\n    // function decreaseSpeed() {\n    //     setStep (() => {\n    //         let newstate = (step > 0)? step / 2:step * 2\n    //         if(Math.abs(newstate) < refreshrate) newstate = refreshrate\n    //         return newstate\n    //     })\n    // }\n    function increaseSpeed() {\n        // stop()\n        step.current = (step.current > 0)? step.current *= 2:step.current /= 2\n        if(Math.abs(step.current) < refreshrate.current) step.current = refreshrate.current\n        console.log('step: '+step.current)\n        // setStepstate((st)=>st*2)\n        // start()\n    }\n    function decreaseSpeed() {\n        step.current = (step.current > 0)? step.current /= 2:step.current *= 2\n        if(Math.abs(step.current) < refreshrate.current) step.current = -1 * refreshrate.current\n        console.log('step: '+step.current)\n        // setStepstate((st)=>st/2)\n    }\n\n    function togglePause() {\n        if (playing.current) {\n            stop()\n        } else {\n            start()\n        }\n    }\n    \n    function start() {\n        console.log('start clock')\n        if(!step.current) step.current = refreshrate.current\n        if (!playing.current) {\n            intervalRef.current = setInterval( ()=>{\n                ldate.current += step.current\n                setDate(new Date(ldate.current))\n            },refreshrate.current)\n        }\n        playing.current = true\n    }\n    \n    function stop() {\n        console.log('stop clock')\n        if(timeoutRef.current) clearTimeout(timeoutRef.current)\n        if (intervalRef.current) clearInterval(intervalRef.current)\n        playing.current = false\n    }\n    \n\n    function reset() {\n        ldate.current = new Date().getTime()\n        setDate(new Date(ldate.current))\n\n    }\n\n     \n    function forceDate(newdate) {\n        console.log('forcedate useclock: '+newdate.toJSON())\n        ldate.current = newdate.getTime()\n    }\n\n    useEffect(() => {\n        console.log('init start useclock '+initdate.toJSON())\n        ldate.current = initdate.getTime()\n    }, [initdate])\n\n\n\n    // didMount effect\n    useEffect(() => {\n        console.log('render useclock')\n        // setDate((new Date()).getTime())\n        ldate.current = new Date().getTime()\n        if (autoStart) {\n            start();\n        }\n        //return reset;\n    }, [autoStart]);\n\n  \n  return { date, playing, togglePause, reset, increaseSpeed, decreaseSpeed, forceDate };\n}\n","import React, {useEffect, useState} from 'react';\nimport { useClock } from \"./useClock\"\nimport { useHotkeys } from 'react-hotkeys-hook'\n\n\nimport './DateController.css';\n\nfunction DateController({startdate, onDateChange}) {\n\n    // useClock must be redone to support real time increments\n    const {\n        date,\n        // playing,\n        togglePause,\n        reset,\n        increaseSpeed,\n        decreaseSpeed,\n        // forceDate\n    } = useClock({\n        autoStart: false,\n        initdate: startdate\n    })\n\n\n\n    useHotkeys(\"t\",togglePause)\n    useHotkeys(\"r\",()=>{reset() })\n    useHotkeys(\".\",increaseSpeed)\n    useHotkeys(\",\",decreaseSpeed)\n\n    \n\n\n    useEffect(() => {\n        // console.log(\"date from useClock: \"+new Date(date).toJSON())\n        onDateChange(date)\n        //forceDate(date)\n        //setAppdate({appdate: new Date(date)})\n    },[date]);\n\n    // useEffect(() => {\n    //     // console.log(\"date from datemanager: \"+new Date(date).toJSON())\n    //     // forceDate(startdate)\n    //     //forceDate(date)\n    //     //setAppdate({appdate: new Date(date)})\n    // },[startdate]);\n\n    const [lastTap, setLasttap] = useState()\n    const handleDoubleTap = () => {\n        const now = Date.now();\n        if (lastTap && (now - lastTap) < 400) {\n          reset();\n        } else {\n            setLasttap(now)\n            togglePause()\n        }\n      }\n\n\n    return (\n        <div className='DateController' onClick={handleDoubleTap}/>\n    )\n}\nexport default DateController\n","import React, {useState, useEffect,useLayoutEffect, useRef} from 'react';\nimport {useSpring, animated} from 'react-spring'\nimport './DateSelector.css';\n\nfunction DateSelectorScale({date, zoomfactor}) {\n\n    const scale = useRef()\n    const [opacity, setOpacity] = useState(1)    \n    const [active, setActive] = useState(false)    \n    const [timescale, setTimescale] = useState('')    \n    // const [zoom, setZoom] = useState(zoomfactor)    \n\n\n    useEffect(() => {  \n        return () => {}          \n    })\n        \n    const scaleText = (_start, _zoom) => {\n        // console.log('_start: '+_start.toJSON()+'  zoom: '+_zoom)\n        if(!scale.current) return\n            \n        const monthcode = ['JAN','FEB','MAR','APR','MAY','JUN','JUL','AUG','SEP','OCT','NOV','DEC']\n        const YEAR_LEVEL = 1000*60*60*24*30*3\n        const MONTH4_LEVEL = 1000*60*60*24*4\n        const MONTH_LEVEL = 1000*60*60*24*2\n        const DAY5_LEVEL = 1000*60*60*8\n        const DAY_LEVEL = 1000*60*70\n        const HOUR3_LEVEL = 1000*60*7\n        const HOUR_LEVEL = 1000*60*3\n        const MIN10_LEVEL = 1000*40\n        const MIN_LEVEL = 1000*2\n\n        function pad(number, length) {  \n            var str = '' + number;\n            while (str.length < length) {\n                str = '0' + str;\n            }           \n            return str;        \n        }\n\n\n        let day, month, hour, year, minute = 0\n        let lastday =0\n        let lastmonth = 0\n        let lastyear = 0\n        let lasthour = 0\n        let lastminute = 0\n        let tics = []    \n\n        for ( let i=0 ; i < scale.current.offsetHeight ; i+=1 ) {\n            let refdate = new Date( (i- scale.current.offsetHeight/2) * _zoom + _start.getTime()  )\n            day = refdate.getUTCDate()\n            month = refdate.getUTCMonth()\n            hour = refdate.getUTCHours()\n            year = refdate.getUTCFullYear()\n            minute = refdate.getUTCMinutes()\n\n            switch (true) {\n                case _zoom < MIN_LEVEL:\n                    if(minute !== lastminute) {\n                        if (minute !== 0 || hour !== 0) {\n                            tics.push({class:'HourTic', pos: i, label: pad(hour,2)+':'+pad(minute,2)})\n                        } else {\n                            if (minute === 0 && hour === 0) {\n                                tics.push({class:'DayTic_h', pos: i, label: pad(day,2)})\n                                tics.push({class:'MonthTic_h2', pos: i, label: monthcode[month]})\n                                //tics.push({class:'YearTic_h', pos: i, label: year})\n                            }     \n                        }\n                    }\n                break\n\n                case _zoom < MIN10_LEVEL:\n                    if(minute !== lastminute) {\n                        if( (minute !== 0 || hour !=0) && minute % 10 === 0) {\n                            tics.push({class:'HourTic', pos: i, label: pad(hour,2)+':'+pad(minute,2)})\n                        } else {\n                            if (minute === 0 && hour === 0) {\n                                tics.push({class:'DayTic_h', pos: i, label: pad(day,2)})\n                                tics.push({class:'MonthTic_h2', pos: i, label: monthcode[month]})\n                                //tics.push({class:'YearTic_h', pos: i, label: year})\n                            }     \n                        }\n                    }\n                break\n\n                case _zoom < HOUR_LEVEL:\n                    if(hour !== lasthour) {\n                        if (hour !== 0) {\n                            tics.push({class:'HourTic', pos: i, label: pad(hour,2)+':00'})\n                        \n                        } else  {\n                            tics.push({class:'DayTic_h', pos: i, label: pad(day,2)})\n                            tics.push({class:'MonthTic_h2', pos: i, label: monthcode[month]})\n                            // tics.push({class:'YearTic_h', pos: i, label: year})            \n                        }\n                    }\n                break\n\n                case _zoom < HOUR3_LEVEL:\n                    if(hour !== lasthour) {\n                        if (hour !== 0 &&  (hour % 3 === 0 )) {\n                            tics.push({class:'HourTic', pos: i, label: pad(hour,2)+':00'})\n                        } else  {\n                            if (hour === 0) {\n                                tics.push({class:'DayTic_h', pos: i, label: pad(day,2)})\n                                tics.push({class:'MonthTic_h2', pos: i, label: monthcode[month]})\n                                // tics.push({class:'YearTic_h', pos: i, label: year})            \n                            }\n                        }\n                    }    \n                break\n\n                case _zoom < DAY_LEVEL:\n                    if(day !== lastday) {\n                        if ( day !== 1 ) {\n                            tics.push({class:'DayTic', pos: i, label: day})\n                        } else {\n                            tics.push({class:'MonthTic_h', pos: i, label: monthcode[month]})\n                            if (month === 0) tics.push({class:'YearTic_h2', pos: i, label: year})\n                            // tics.push({class:'YearTic_h2', pos: i, label: year})\n                         }\n                        \n                    }    \n                break\n\n                case _zoom < DAY5_LEVEL:\n                    if(day !== lastday) {\n                        if ( day !== 1 && day !== 30 && day % 5 === 0 ) {\n                            tics.push({class:'DayTic', pos: i, label: day})\n                        } else {\n                            if (day == 1) {\n                                // tics.push({class:'DayTic', pos: i, label: day})\n                                tics.push({class:'MonthTic_h', pos: i, label: monthcode[month]})\n                                if (month === 0) tics.push({class:'YearTic_h2', pos: i, label: year})\n                                // tics.push({class:'YearTic_h2', pos: i, label: year})\n                            }\n                         }\n                        \n                    }    \n\n                break\n\n                case _zoom < MONTH_LEVEL:\n                    if( month !== lastmonth ) {\n                        if (month !== 0) {\n                            tics.push({class:'MonthTic', pos: i, label: monthcode[month]})\n                        } else {\n                            tics.push({class:'MonthTic_h', pos: i, label: monthcode[month]})\n                            tics.push({class:'YearTic_h2', pos: i, label: year})\n                        }\n                    }\n    \n                break\n\n                case _zoom < MONTH4_LEVEL:\n                    if( month !== lastmonth ) {\n                        if (month !== 0 && month !== 11 && (month) % 3 === 0 ) {\n                            tics.push({class:'MonthTic', pos: i, label: monthcode[month]})\n                        } else {\n                            if (month == 0) {\n                                tics.push({class:'MonthTic_h', pos: i, label: monthcode[month]})\n                                tics.push({class:'YearTic_h2', pos: i, label: year})\n                            }\n                        }\n                    }\n    \n                break\n\n                case _zoom < YEAR_LEVEL:\n                    if(year !== lastyear ) {\n                        if (month !== 0) {\n                            tics.push({class:'MonthTic', pos: i, label: monthcode[month]})\n                        } else {\n                            // tics.push({class:'MonthTic', pos: i, label: month})\n                            tics.push({class:'YearTic', pos: i, label: year})\n                        }\n                    }\n    \n                break\n\n                default:\n                break\n            }\n            lastday = day\n            lastyear = year\n            lastmonth = month\n            lasthour = hour\n            lastminute = minute\n        }\n      \n        return tics.map(item => ( <animated.div className={item.class} key={item.class+item.pos} style={{top:item.pos,opacity:opacity}}>{item.label}</animated.div>))\n    }\n\n\n    // useLayoutEffect(() => {\n    //     setTimescale(scaleText(date,zoomfactor))\n    // },[date,zoomfactor])\n\n\n    useLayoutEffect(() => {\n        // console.log('zoomfactor / date: '+zoomfactor + '/ ' + date)\n        setTimescale(scaleText(date,zoomfactor))\n    },[ zoomfactor,date])\n\n\n    return (\n        <animated.div ref={scale} className='DateSelectorScale' >\n            {timescale}\n        </animated.div>\n    )\n}\nexport default DateSelectorScale\n","import React, {useState, useEffect, useRef} from 'react'\nimport {useSpring, animated} from 'react-spring'\nimport { useGesture, useDrag } from 'react-use-gesture'\nimport { add, scale } from 'vec-la'\nimport DateSelectorScale from './DateSelectorScale'\nimport useLog from '../../../../hooks/useLog.js';\n\n\n\nimport './DateSelector.css';\n// import { start } from 'repl';\n\nfunction DateSelector({startdate, onDateChange, onFinalDateChange, onStepChange}) {\n\n\n    // const [ setlog, renderlog] = useLog()\n    // const [ setlog2, renderlog2] = useLog()\n\n    // zoomfactor of the date scale: ms/pixel\n    const MAXZOOM = 1000*60*60*24*15\n    const MINZOOM = 1000\n    const DEFZOOM = 1000*60*60\n    const ZOOMDIR = -1\n    const lastZoom = useRef(DEFZOOM)\n    const [zoomfactor, setZoomfactor ] = useState(DEFZOOM)\n\n    const selector = useRef()\n\n    const [scaledate, setScaledate ] = useState(startdate)\n    // const debouncedScaledate = useDebounce(scaledate, 10);\n\n    // const [lastStartdate, setlLastStartdate ] = useState(startdate)\n    \n    const [status, setstatus ] = useState(false)\n    const [step, setStep ] = useState([60000])\n    const [stepLabel, setStepLabel ] = useState('hour')\n\n    // to detect double taps\n    const lastTap = useRef()\n    const doubleTap = useRef()\n    const button = useRef()\n\n    const startingdate = useRef(startdate)\n    const runningdate = useRef(startdate)\n    const discreetdate = useRef(startdate)\n    const lastPos = useRef(0)\n\n    const detectDoubleTap = (e) => {\n        const now = Date.now();\n        button.current = e.button\n        if (lastTap.current && (now - lastTap.current) < 300) {\n            doubleTap.current = true\n        } else {\n            lastTap.current = now\n            doubleTap.current = false\n        }\n    }\n\n\n    const [{ posxy_drag}, setyOnDrag] = useSpring(() => ({ posxy_drag: [0,0]  }))\n    const [{ xy2 }, sety2] = useSpring(() => ({ xy2: [0,0] }))\n    const [{ posy_wheel }, setyOnWheel] = useSpring(() => ({posy_wheel: 0 }))\n    const [{ zoom }, springzoom] = useSpring(() => ({ zoom: 0 }))\n\n    const [{ test }, springtest] = useSpring(() => ({ test: 0 }))\n    const [{ y }, springtest2] = useSpring(() => ({ y: 0 }))\n    \n    const bind = useGesture({\n\n        onDragEnd: () => { // sert a rien!\n            // setstatus(false)\n            console.log('drag end')\n            onFinalDateChange(discreetdate.current)\n\n                // lastZoom.current = zoomfactor\n        },\n\n        onWheel: ( {active, delta, first, down, direction, velocity, xy, movement, scrolling } ) => {\n            // console.log(down)\n            // console.log(first)\n            \n            if (first) {\n                springtest.stop()\n            //   setstatus(true)\n              discreetdate.current = scaledate\n            }\n\n            setyOnWheel.start({                 \n                posy_wheel: delta[1], \n                immediate: scrolling, \n                config: { mass: 1, tension: 100, friction: 25},\n                onChange: ()=>{\n                    setstatus(true)\n                    let newdate\n                    if(stepLabel==='month') {\n                        let nbstep = Math.ceil(posy_wheel.get() * zoomfactor  / step[0])\n                        // setlog({olddate:discreetdate.current.toJSON()})\n                        newdate = new Date(discreetdate.current.getTime())\n                        newdate.setUTCMonth( newdate.getUTCMonth()-nbstep )\n                        // setlog({newdate:discreetdate.current.toJSON()})\n                    } else {\n                        newdate = new Date(discreetdate.current.getTime() - Math.ceil(posy_wheel.get() * zoomfactor  / step[0]) * step[0]) \n                    }\n                    discreetdate.current = newdate\n                    setScaledate(newdate)\n                    onDateChange(newdate)\n                },\n                onRest: ()=>{\n                    if (!scrolling) {\n                        console.log('wheel finished  ')\n                        onFinalDateChange(discreetdate.current)\n                        setstatus(false)\n\n                    }\n                    // if (!down) {\n                    //     // setstatus(false)\n                    //     let newdate = new Date(discreetdate.current.getTime() + Math.ceil(posy_wheel.get() * zoomfactor  / step[0]) * step[0]) \n                    //     onFinalDateChange(newdate)\n                    //     discreetdate.current = newdate\n                    //     setScaledate(newdate)\n                    //     onDateChange(newdate)\n                    //     lastPos.current=0\n                    // }\n                }\n            })\n        },\n\n\n        onDrag: ({  event, active, first, down, touches, delta, initial, distance, velocity, direction, shiftKey, xy, movement,vxvy}) => {\n            setstatus(active)\n\n            if (first) {\n                setyOnWheel.stop()\n                detectDoubleTap(event)\n                startingdate.current = discreetdate.current\n                // setlog2({ startingdate: startingdate.current.toJSON()  })\n\n   \n            }\n\n            // setlog2({velocity1: velocity})\n            velocity = (velocity < 0.2)?0:velocity\n\n            if (doubleTap.current || shiftKey || button.current == 2) {\n                // let zoom = lastZoom.current + lastZoom.current / 50 *  delta[1] * ZOOMDIR\n                // if (zoom < MINZOOM) zoom = MINZOOM\n                // if (zoom > MAXZOOM) zoom = MAXZOOM\n                // setZoomfactor(zoom)\n                // lastZoom.current = zoom\n\n                springzoom.start({\n                    zoom: delta[1],\n                    immediate: down,\n                    config: { mass: 1, tension: 100, friction: 25, precision: 0.1 },\n                    onChange: () => {\n                        let newzoom = lastZoom.current + lastZoom.current / 50 *  zoom.get() * ZOOMDIR\n                        if (newzoom < MINZOOM) zoom = MINZOOM\n                        if (newzoom > MAXZOOM) zoom = MAXZOOM\n                        setZoomfactor(newzoom)\n                        lastZoom.current = newzoom\n        \n                    }\n                })\n\n                // setlog({zoomfactor:zoomfactor})\n                // temp.lastdelta = delta\n                return\n                // if(!down) setActive(false)\n            }\n\n \n\n            // Working !!\n            springtest.start({  \n                // test: scale(delta,[0,zoomfactor]),\n                // test: delta[1]*zoomfactor,\n                test: (down)?movement[1]:movement[1]+movement[1]*velocity*5,\n                immediate: down,\n                config: { mass: 1, tension: 100, friction: 25, precision: 0.1 },\n                onChange: () => {\n                    setstatus(true)\n                    // if(Math.floor(Math.abs(test.get()*zoomfactor   / step[0]))==0) test.stop()\n\n                    let even = (test.get()<0 ? Math.ceil:Math.floor)\n                        // setlog({anim:test.get(), velocity: velocity*5})\n\n                        if(stepLabel==='month') {\n                            let nbstep = Math.ceil(test.get() * zoomfactor  / step[0])\n                            // setlog({olddate:discreetdate.current.toJSON()})\n                            let adate = new Date(startingdate.current.getTime())\n                            adate.setUTCMonth( adate.getUTCMonth()-nbstep )\n                            discreetdate.current = adate\n                            // setlog({newdate:discreetdate.current.toJSON()})\n                        } else {\n                            discreetdate.current = new Date(startingdate.current.getTime() - Math.ceil(test.get()*zoomfactor   / step[0]) * step[0])\n                        }\n                        \n\n                    // } else {\n                    //     discreetdate.current = new Date(discreetdate.current.getTime() - even(test.get()*zoomfactor   / step[0]) * step[0])\n                    //     // runningdate.current = new Date(runningdate.current.getTime() - even(spring.value.test*zoomfactor ))\n                    //     setlog({nbsteps:even(test.get()*zoomfactor   / step[0])})\n                    // }\n                    \n                    \n                    setScaledate(discreetdate.current)\n                    onDateChange(discreetdate.current)\n                },\n                onRest: () => {\n                    if (!down) {\n                        onFinalDateChange(discreetdate.current)\n                        setstatus(false)\n                    }\n                },\n                // stop: (spring)=>{\n                //     let even = (test.get()<0 ? Math.ceil:Math.floor)\n                //     return (even(test.get()*zoomfactor   / step[0])<=0)\n                // }\n            })   \n\n\n        }\n    },\n    // {initial: ()=> [0,test.get()],drag: {useTouch: true} }\n    {drag: {useTouch: true} }\n    )\n\n\n    const moveToDate = (newdate) => {\n        // console.log('go from: '+discreetdate.current.toJSON()+' to: '+newdate.toJSON())\n        let fromtime = discreetdate.current.getTime()\n        // sety2.stop()\n        // if (!status) {\n            let deltaoffset = [0,(fromtime - newdate.getTime())  / zoomfactor]\n            \n            sety2.start({ \n                from: {xy2: [0,0]},\n                to: {xy2: deltaoffset},\n                immediate: false, \n                config: {reset: true, duration: 300 },\n                // config: { mass: 1, tension: 100, friction: 25, precision: 0.1 },\n                onChange: ()=>{\n                    // setlog(({animgoto: xy2.get()[1]}))\n                    // setstatus(true)\n\n                    let adate = new Date(fromtime - xy2.get()[1] * zoomfactor)\n                    // console.log('adate: '+adate.toJSON() )\n                    discreetdate.current = adate\n                    setScaledate(adate)\n                    onDateChange(adate)\n                },\n                // onRest: ()=>{\n                //     // setstatus(false)\n                // console.log(\"rest move\")\n                //     onFinalDateChange(discreetdate.current)\n                // }\n            })\n        // }\n\n    }\n\n    useEffect(() => {\n        // console.log('startdate changed')\n        if(!status) {\n            // console.log(startdate.toJSON())\n            moveToDate(startdate)\n        }\n    },[startdate])\n\n    // useEffect(() => {\n    //     console.log('laststartdate changed: '+lastStartdate.toJSON())\n    // },[lastStartdate])\n\n    // useEffect(() => {\n    //     console.log('Selector active: '+status)\n    // },[status])\n\n\n    useEffect(() => {\n        onStepChange(stepLabel)\n    },[stepLabel])\n\n    \n    useEffect(() => {\n        switch (true) {\n            case zoomfactor > 120426316:\n                setStep([\n                    1000*60*60*24*31,\n                    1000*60*60*24*28,\n                    1000*60*60*24*31,\n                    1000*60*60*24*30,\n                    1000*60*60*24*31,\n                    1000*60*60*24*30,\n                    1000*60*60*24*31,\n                    1000*60*60*24*31,\n                    1000*60*60*24*30,\n                    1000*60*60*24*31,\n                    1000*60*60*24*30,\n                    1000*60*60*24*31,\n                    ])\n                setStepLabel('month')\n                break\n            case zoomfactor > 94544702:\n                setStep([1000*60*60*24*12])\n                setStepLabel('cycle')\n                break\n            case zoomfactor > 14544702:\n                setStep([1000*60*60*24])\n                setStepLabel('day')\n                break\n            case zoomfactor > 735259:\n                setStep([1000*60*60])\n                setStepLabel('hour')\n                break\n            case zoomfactor > 32274:\n                setStep([1000*60])\n                setStepLabel('minute')\n                break\n            default:\n                setStep([1000])\n                setStepLabel('second')\n        }\n    },[zoomfactor])\n\n    \n\n\n    return (\n        <div>\n            <animated.div className='DateSelector' ref={selector} >\n                <div className=\"Mask\"  >\n                    <div {...bind()} className=\"touchMask\"> </div>\n\n                    <DateSelectorScale className='scale' date={scaledate} zoomfactor={zoomfactor} ></DateSelectorScale>\n                    \n                    <div className=\"TriangleContainer\" >\n                        <svg height=\"40\" width=\"20\" className=\"Triangle\">\n                            <polygon points=\"20,5 20,35 12,20\" />   \n                        </svg> \n                    </div>        \n                </div>\n            </animated.div>\n            {/* {renderlog()}\n            {renderlog2()} */}\n        </div>\n                                   )\n}\nexport default DateSelector\n","import React, {useState, useEffect} from 'react';\nimport DateLabel from './components/datelabel'\nimport DateController from './components/datecontroller'\nimport DateSelector from './components/dateselector'\n\n\nfunction DateManager({ onDateChange, onFinalDateChange, animated}) {\n\n    let startdate = new Date()\n    const [selectorStartdate, setselectorStartdate] = useState(startdate)\n    const [controllerStartdate, setcontrollerStartdate] = useState(startdate)\n    const [labeldate, setLabelDate] = useState(startdate)\n    const [dateLabelHighlight,setDateLabelHighlight] = useState(1)\n\n    const handleSelectorDateChange = (date) => {\n        // console.log('handleSelectorDateChange:' + date.toJSON())\n        setLabelDate(date)\n        onDateChange(date)\n        // setscontrollerStartdate(date)\n    }\n\n    const handleSelectorFinalDateChange = (date) => {\n        // console.log('handleSelectorFinalDateChange:' + date.toJSON())\n        setcontrollerStartdate(date)\n        onFinalDateChange(date)\n    }\n    \n    const handleControllerDateChange = (date) => {\n        // console.log('handleControllerDateChange' + date.toJSON())\n        setselectorStartdate(date)\n        // onFinalDateChange(date)\n    }\n\n    const handleSelectorStepChange = (step) => {\n        console.log('handleSelectorStepChange' + step)\n        setDateLabelHighlight(step)\n    }\n\n    // useEffect(() => {\n    //     // console.log('startdate in date manager: '+startdate.toJSON())\n    //     setselectorStartdate(startdate)\n    // },[startdate])\n\n\n\n    return (\n        <div >\n          <DateController startdate={controllerStartdate} onDateChange={handleControllerDateChange}/>\n          <DateLabel date={labeldate} animated={animated} highlight={dateLabelHighlight}/>\n          <DateSelector startdate={selectorStartdate} \n                onDateChange={handleSelectorDateChange} \n                onFinalDateChange={handleSelectorFinalDateChange} \n                onStepChange={handleSelectorStepChange}/>\n        </div>\n    ) \n}\nexport default DateManager","import React, {  useGlobal } from 'reactn';\n\nimport DateManager from \"../components/datemanager\"\n\nfunction C_DateManager() {\n\n    const [viewDate, setViewDate] = useGlobal('viewDate')\n\n    return (\n        <DateManager onDateChange={setViewDate} onFinalDateChange={setViewDate} /> \n     )\n}\n\nexport default C_DateManager;\n","import React, {useRef} from 'react'\nimport { useGlobal } from 'reactn'\n\nimport './App.css'\nimport Earth from '../earth'\nimport { useHotkeys } from 'react-hotkeys-hook'\nimport ControlPanel from \"../controlpanel\"\nimport C_MissionSelector from \"../../containers/MissionSelectorContainer\"\nimport C_MapSelector from \"../../containers/MapSelectorContainer\"\nimport ColorSelectorContainer from \"../../containers/ColorSelectorContainer\"\nimport AltitudeLabelContainer from \"../../containers/AltitudeLabelContainer\"\n\nimport C_DateManager from '../../containers/DateManagerContainer'\nimport useFullscreen from \"@rooks/use-fullscreen\"\n\n\nfunction App() {\n    \n    \n\n    const [ mission,  ] = useGlobal('mission');\n    const [ mapSettings, ] = useGlobal('mapSettings')\n\n    const container = useRef();\n    const {\n        // isEnabled,\n        toggle\n        // onChange,\n        // onError,\n        // request,\n        // exit,\n        // isFullscreen,\n        // element\n    } = useFullscreen();\n\n    useHotkeys(\"f\", ()=>{toggle(container.current)} )  \n\n\n\n    return (\n        <div className=\"App\" ref={container} id=\"container\">\n             {/* <FullScreen handle={fshandle}> */}\n                <Earth id=\"globe\" />\n                {/* <DateManager startdate={startdate} onDateChange={changeDate} onFinalDateChange={finalChangeDate} animated={searching}/> */}\n                <C_DateManager></C_DateManager>\n                <AltitudeLabelContainer/>\n                <ControlPanel active=\"true\" >\n                    {/* <div class='logo'><img  src='./images/ESA_logo_2020_White.png' height=\"40\" ></img></div> */}\n                    <div class='logo'><img  src='./images/EOi_logo.png' height=\"150\" ></img></div>\n                \n                    <C_MissionSelector></C_MissionSelector>\n                    <C_MapSelector ></C_MapSelector>\n                    <ColorSelectorContainer></ColorSelectorContainer>\n                </ControlPanel>\n                <div className='MissionLabel'>{mission}</div>\n            {/* </FullScreen> */}\n        </div>\n    )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { setGlobal } from 'reactn';\n\n\nexport  function initGlobalStates() {\n    console.log(\"init global: \"+(new Date()))\n\n    // Set current time as global state\n    // setGlobal({appdate: ((new Date()).getTime())})\n    // setGlobal({searchepoch: ((new Date()).getTime())})\n    // setGlobal({mission: 'S1'})\n    // setGlobal({searching: false})\n    // setGlobal({apppolygon: ''})\n    // setGlobal({replace: true})\n    // setGlobal({startend: {start:0, end:0}})\n    // setGlobal({setApppickeditems: []})\n\n\n    setGlobal({\n        mission: 'S1',\n        altitude: '5000000',\n        satellites: true,\n        appColor: '#ebd1d1',\n        position: {\n            clon:'0.5',\n            clat:'45' \n        },\n        viewDate: new Date(),\n        mapSettings: {\n            atmosphere: true,\n            starfield: true,\n            names: false,\n            background: 1,\n            overlay:2,\n            dem: true\n        }\n    })\n    \n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app';\nimport reportWebVitals from './reportWebVitals';\nimport {initGlobalStates} from \"./initGlobalStates\"\n\ninitGlobalStates()\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}