{"version":3,"sources":["components/earth/wwwxx/layer/starfield/SunPosition.js","components/earth/wwwxx/layer/starfield/Celestial.js","components/earth/wwwxx/layer/starfield/StarFieldProgram.js","components/earth/wwwxx/layer/starfield/StarFieldLayer.js","components/earth/satConfig.js","components/earth/wwwxx/collada/ColladaScene.js","components/earth/satelliteLayers.js","components/earth/wwwxx/shapes/satellites/Model.js","components/earth/wwwxx/layer/SatelliteModelLayer.js","components/earth/layerConfig.js","components/earth/useEww.js","components/logpanel/LogPanel.js","components/earth/FluidWorldWindowController.js","components/earth/Earth.js","components/controlpanel/ControlPanel.js","components/missionselector/MissionSelector.js","containers/MissionSelectorContainer.js","components/mapselector/MapSelector.js","containers/MapSelectorContainer.js","containers/ColorSelectorContainer.js","containers/DemSelectorContainer.js","containers/AltitudeLabelContainer.js","components/datemanager/components/datelabel/DateLabel.js","components/datemanager/components/datecontroller/useClock.js","components/datemanager/components/datecontroller/DateController.js","components/datemanager/components/dateselector/DateSelectorScale.js","components/datemanager/components/dateselector/DateSelector.js","components/datemanager/DateManager.js","containers/DateManagerContainer.js","components/searchmanager/dhusToGeojson.js","components/searchmanager/eocatToGeojson.js","components/searchmanager/useDatahub.js","components/searchmanager/SearchManager.js","containers/SearchManagerContainer.js","components/app/App.js","reportWebVitals.js","initGlobalStates.js","index.js"],"names":["Angle","WorldWind","ArgumentError","Logger","SunPosition","getAsGeographicLocation","date","Date","logMessage","LEVEL_SEVERE","celestialLocation","this","getAsCelestialLocation","celestialToGeographic","numDays","computeJulianDate","meanLongitude","normalizeAngle360","meanAnomaly","DEGREES_TO_RADIANS","eclipticLongitude","Math","sin","eclipticLongitudeRad","obliquityOfTheEcliptic","declination","asin","RADIANS_TO_DEGREES","rightAscension","atan","cos","tan","GMST","GHA","longitude","normalizedDegreesLongitude","latitude","year","getUTCFullYear","month","getUTCMonth","day","getUTCDate","dayFraction","getUTCHours","getUTCMinutes","getUTCSeconds","A","trunc","B","degrees","angle","Celestial","SUN","MERCURY","VENUS","MARS","JUPITER","SATURN","URANUS","NEPTUNE","getCelestialLocation","id","orbitalElements","d","computeSun","computeMercury","computeVenus","computeMars","computeJupiter","computeSaturn","computeUranus","computeNeptune","computePosition","N","i","w","a","e","M","E","aa","E1","abs","xv","yv","sqrt","v","atan2","r","xh","yh","zh","lon_corr","lonecl","latecl","getLonSun","lonsun","rsun","xg","yg","zg","ecl","xe","ye","ze","ra","dec","GpuProgram","Matrix","Color","StarFieldProgram","gl","FRAG_MODE_MIX_COLOR","FRAG_MODE_TEXTURE","FRAG_MODE_COLOR","vertexPointLocation","attributeLocation","mvpMatrixLocation","uniformLocation","numDaysLocation","magnitudeRangeLocation","textureUnitLocation","fragModeLocation","colorLocation","localState","mvpMatrix","magnitudeRange","textureUnit","fragMode","color","matrix","forceLoad","fromIdentity","equals","loadUniformMatrix","copy","uniform1f","minMag","maxMag","uniform2f","unit","uniform1i","TEXTURE0","mode","loadUniformColor","key","Layer","REDRAW_EVENT_TYPE","StarFieldLayer","starDataSource","pickEnabled","sunSize","showSun","_starDataSource","configuration","baseUrl","_sunImageSource","_matrix","_starsPositionsVboCacheKey","_numStars","_starData","_minMagnitude","Number","MAX_VALUE","_maxMagnitude","MIN_VALUE","_loadStarted","_minScale","_scale","MAX_SAFE_INTEGER","pow","_sunPositionsCacheKey","_sunBufferView","Float32Array","_MAX_GL_POINT_SIZE","showPlanets","jupiterSize","planets","url","size","_planetsBufferView","_cacheKeys","sunPosition","planetPositions","starPositions","value","invalidateStarData","dc","globe","is2D","haveResources","beginRendering","doDraw","endRendering","loadResources","sunTexture","gpuResourceCache","resourceForKey","planetTextures","every","planet","currentGlContext","fetchStarData","retrieveTexture","forEach","findAndBindProgram","enableVertexAttribArray","depthMask","loadCommonUniforms","renderStars","renderSun","renderPlanets","program","currentProgram","mvp","modelviewProjection","navigatorState","multiplyByScale","loadModelviewProjection","julianDate","time","loadNumDays","generateCacheKey","vboId","bindBuffer","ARRAY_BUFFER","createBuffer","positions","createStarsGeometry","putResource","length","bufferData","STATIC_DRAW","frameStatistics","incrementVboLoadCount","vertexAttribPointer","FLOAT","loadMagnitudeRange","loadFragMode","drawArrays","POINTS","getParameter","ALIASED_POINT_SIZE_RANGE","log","LEVEL_WARNING","min","_planetsPositionsVboCacheKey","bufferSubData","DYNAMIC_DRAW","textureSrc","bind","sunCelestialLocation","disableVertexAttribArray","self","xhr","XMLHttpRequest","onload","status","JSON","parse","response","sendRedrawRequest","toString","statusText","onerror","ontimeout","open","send","indexes","parseStarsMetadata","metadata","raIndex","Error","decIndex","magIndex","data","len","starInfo","magnitude","pointSize","push","max","floor","starMetaInfo","name","document","createEvent","initEvent","window","dispatchEvent","satConfig","shortName","satIndex","swathTypes","swathColors","colorFromKmlHex","swatModes","tleLineOne","tleLineTwo","hasModel","filePath","rotations","x","y","z","headingAxis","headingAdd","headingMultiply","preRotations","scale","translations","ignoreLocalTransforms","launchDate","groundPosition","altitude","BasicTextureProgram","PickedObject","Position","Renderable","Vec3","ColladaScene","position","sceneData","call","_position","_nodes","_meshes","_materials","_images","_upAxis","_dirPath","_xRotation","_yRotation","_zRotation","preX","preY","preZ","_xTranslation","_yTranslation","_zTranslation","_altitudeMode","ABSOLUTE","_localTransforms","_useTexturePaths","_nodesToHide","_hideNodes","_placePoint","_transformationMatrix","_mvpMatrix","_normalTransformMatrix","_normalMatrix","_texCoordMatrix","setToUnitYFlip","_entities","_activeTexture","_tmpVector","_tmpColor","_vboCacheKey","_iboCacheKey","setSceneData","prototype","Object","create","constructor","defineProperties","get","set","nodes","meshes","materials","images","upAxis","dirPath","xRotation","yRotation","zRotation","xTranslation","yTranslation","zTranslation","placePoint","altitudeMode","transformationMatrix","normalMatrix","localTransforms","useTexturePaths","nodesToHide","hideNodes","root","children","up_axis","flattenModel","nodesLen","flattenNode","sort","b","va","imageKey","vb","node","mesh","meshKey","buffers","bufLen","materialBuf","material","j","symbol","materialKey","textures","uvs","diffuse","mapId","reflective","k","render","orderedScene","frustum","frustumInModelCoordinates","enabled","lastFrameTime","timestamp","makeOrderedRenderable","containsPoint","layer","currentLayer","addOrderedRenderable","surfacePointForMode","eyeDistance","eyePoint","distanceTo","renderOrdered","drawOrderedScene","pickingMode","po","pickColor","clone","resolvePick","beginDrawing","endDrawing","iboId","setupBuffers","ELEMENT_ARRAY_BUFFER","uniquePickColor","computeTransformationMatrix","mustRenderNode","draw","sizeOfFloat32","BYTES_PER_ELEMENT","sizeOfUint16","Uint16Array","sizeOfUint32","Uint32Array","is32BitIndices","numIndices","numVertices","indexedRendering","indices","vertices","normals","vbo","offset","vertexOffset","uvOffset","normalOffset","uIntExt","indexSize","indexBufferSize","getExtension","ibo","indexOffset","entity","nodeWorldMatrix","worldMatrix","nodeNormalMatrix","hasLighting","applyColor","imagePath","path","filename","textureCacheKey","wrapMode","isClamp","CLAMP_TO_EDGE","REPEAT","loadTextureEnabled","loadModulateColor","loadApplyLighting","applyMatrix","indexOffsetBytes","drawElements","TRIANGLES","UNSIGNED_INT","UNSIGNED_SHORT","opacity","techniqueType","g","loadColor","loadOpacity","hasTexture","multiplyMatrix","modelviewNormalTransform","loadModelviewInverse","loadTextureMatrix","setToIdentity","multiplyByLocalCoordinateTransform","multiplyByRotation","multiplyByTranslation","computeNormalMatrix","extractRotationAngles","nodeId","indexOf","Model","model","satellite","_satellite","satelliteModel","_model","modelData","type","satShortName","jsonData","hasOwnProperty","eVertices","eNormals","eUvs","eIndices","slice","console","info","RenderableLayer","EoUtils","WorldWindX","DEFAULT_MODEL_OPTIONS","SatelliteModelLayer","options","satelliteOptions","_satelliteOptions","_rerenderMap","Tle","heading","onLayerChanged","removeAllRenderables","addRenderable","doRerender","update","satrec","computeSatrec","getOrbitPosition","setPosition","alignWithOrbit","currentPosition","now","getTime","nextPosition","headingRad","headingAngleRadians","rad2deg","satKey","satName","layerKey","rerenderer","wwx","satelliteLayers","fetch","then","json","satelliteData","setModel","setTle","bgLayers","service","layerNames","title","numLevels","format","sector","Sector","FULL_SPHERE","levelZeroDelta","Location","ovLayers","useEww","clon","clat","alt","starfield","atmosphere","background","overlay","names","satellites","dem","eww","useRef","useState","setProjection","geojsonlayers","setGeojsonlayers","aoi","pickedItems","ewwstate","setEwwState","copDemOn","bgIndex","ovIndex","northUp","wwd","current","headingIncrement","navigator","setTimeout","runOperation","redraw","toggleAtmosphere","bool","getLayerByName","toggleModel","l","toggleStarfield","toggleNames","toggleBg","layers","displayName","toggleOv","toggleDem","elevationModel","ElevationModel","addCoverage","TiledElevationCoverage","coverageSector","resolution","retrievalImageFormat","minElevation","maxElevation","urlBuilder","WcsTileUrlBuilder","EarthElevationModel","enableRenderables","setGlobeStates","lo","lookAtLocation","la","al","range","vp","bl","tr","view","viewport","polygon","pickTerrain","canvasCoordinates","height","terrainObject","round","err","width","getViewPolygon","vpp","toFixed","viewpolygon","viewpoint","useEffect","removeAllCoverages","WorldWindow","redrawCallbacks","BasicWorldWindowController","applyLimits","WWMath","clamp","location","href","starFieldLayer","atmosphereLayer","AtmosphereLayer","quicklookLayer","WmsLayer","addLayer","deepPicking","moveTo","goToAnimator","travelTime","goTo","camera","removeGeojson","removeLayer","addGeojson","epoch","renderableLayer","properties","updated","ceil","random","GeoJSONParser","load","geometry","userProperties","placemarkAttributes","PlacemarkAttributes","imageScale","imageColor","labelAttributes","Offset","OFFSET_FRACTION","isPointType","isMultiPointType","attributes","isLineStringType","isMultiLineStringType","drawOutline","outlineColor","interiorColor","red","green","blue","outlineWidth","isPolygonType","isMultiPolygonType","ShapeAttributes","highlightAttributes","addWMS","setTime","toggleProjection","prevProj","supportedProjections","newProj","projection","ProjectionWgs84","ProjectionEquirectangular","ProjectionMercator","ProjectionPolarEquidistant","LogPanel","FluidWorldWindowController","memo","world","controllerRef","lastTap","doubleTap","button","clicktimeout","tilttimeout","dragtimeout","gesturestartposition","dragenabled","rotationmode","pinchmode","debugtext","useSpring","api","bind2","useDrag","start","debughtml","div","style","className","useGesture","onDrag","event","xy","vxvy","previous","first","down","initial","delta","movement","velocity","direction","tap","scrolling","touches","pinching","origin","positionAtPickPoint","canvas","clientWidth","clientHeight","timeStamp","clearTimeout","zoomspring","stop","pinchzoomspring","pinchrotatespring","pinchtiltspring","handlepan2d","handlepan3d","handlezoom","handletilt","onDragend","onWheel","clientX","clientY","onPinchStart","panspring","onPinch","da","vdva","lastY","handlepinch","onPinchEnd","domTarget","drag","useTouch","pinch","eventOptions","passive","handlepinchtilt","handlepinchzoom","handlepinchrotate","pinchtiltvalue","sub","immediate","config","mass","tension","friction","onChange","tiltfactor","tilt","pinchzoomrotatevalue","pinchzoomvalue","enabler","rangefactor","moveZoom","pinchrotatevalue","tiltvalue","tiltspring","dorotation","to","tiltoffset","headingoffset","panvalue","wheeling","correction","lookatxy","nextlookatxy","currentposition","nextposition","currentpoint","nextpoint","computePointFromPosition","viewMatrix","computeViewingTransform","ray","rayThroughScreenPoint","extractEyePoint","extractForwardVector","intersectsLine","params","extractViewingParameters","roll","onRest","rotationVector","rotationAngle","computeRotationVectorAndAngle","rotateShpere","refposition","amount","lookatAltitude","elevationAtLocation","lookAtPosition","interpolateGreatCircle","coordinates","pickList","objects","pickedObject","isTerrain","pickedPosition","vec1","vec2","MeasurerUtils","angleBetweenVectors","cross","normalize","isFinite","scratchRay","Line","nav","addEventListener","preventDefault","ref","Earth","useGlobal","mapSettings","setMapSettings","setAltitude","viewDate","geojson","setSearchPoint","setSatellites","mapSet","setMapSet","sat","setSat","useHotkeys","ControlPanel","props","setOpen","mr","bottom","left","onClick","icon","baselinePalette","MissionSelector","initialmission","onMissionChange","mission","setMission","src","MissionSelectorContainer","MapSelector","onMapSettingsChange","draggable","MapSelectorContainer","ColorSelectorContainer","appcolor","setAppcolor","documentElement","setProperty","DemSelectorContainer","mapset","setmapset","checked","AltitudeLabelContainer","DateLabel","highlight","animated","dateFormat","toUpperCase","useClock","autoStart","initdate","setDate","playing","step","refreshrate","ldate","intervalRef","timeoutRef","setInterval","togglePause","clearInterval","reset","increaseSpeed","decreaseSpeed","forceDate","newdate","DateController","startdate","onDateChange","setLasttap","roundFastRewind","roundPlayArrow","roundFastForward","DateSelectorScale","zoomfactor","timescale","setTimescale","izoom","idate","scaleText","_start","_zoom","monthcode","pad","number","str","hour","minute","lastday","lastmonth","lastyear","lasthour","lastminute","tics","lastticslength","labeloffset","parseInt","fontSize","offsetHeight","refdate","class","pos","label","map","item","top","handleResize","useLayoutEffect","removeEventListener","DateSelector","onFinalDateChange","onStepChange","MAXZOOM","MINZOOM","DEFZOOM","lastZoom","setZoomfactor","selector","scaledate","setScaledate","Selector_is_active","setSelector_is_active","setStep","stepLabel","setStepLabel","startingdate","discreetdate","posy_wheel","setyOnWheel","zoom","springzoom","test","springtest","active","ctrlKey","shiftKey","precision","newzoom","nbstep","setUTCMonth","distance","detectDoubleTap","adate","onDragEnd","xy2","sety2","fromtime","deltaoffset","from","duration","moveToDate","points","DateManager","selectorStartdate","setselectorStartdate","controllerStartdate","setcontrollerStartdate","labeldate","setLabelDate","dateLabelHighlight","setDateLabelHighlight","handleSelectorDateChange","useCallback","handleControllerDateChange","DateManagerContainer","setViewDate","setSearchDate","dhusToGeojson","mapFromHubOpenSearch","reshuffle","array","content","hubItem","assign","int","double","sizeInBytes","sizeArray","split","parseFloat","wellknown","footprint","ingestiondate","uuid","beginposition","endposition","downloadUrl","link","quicklookUrl","earthObservation","parentIdentifier","acquisitionInformation","platform","platformShortName","platformname","platformSerialIdentifier","platformserialidentifier","sensor","instrument","instrumentshortname","operationalMode","sensoroperationalmode","acquisitionParameter","acquisitionStartTime","acquisitionStopTime","relativePassNumber","relativeorbitnumber","orbitNumber","orbitnumber","startTimeFromAscendingNode","stopTimeFromAscendingNode","orbitDirection","orbitdirection","productInformation","productType","producttype","message","features","feed","entry","Array","isArray","filter","totalResults","startIndex","itemsPerPage","eocatToGeojson","downloadurl","quicklookurl","identifier","EarthObservation","metaDataProperty","EarthObservationMetaData","procedure","EarthObservationEquipment","Platform","Instrument","Sensor","phenomenonTime","TimePeriod","beginPosition","endPosition","acquisitionParameters","Acquisition","useDatahub","searchparam","geojsonResults","setGeojsonResults","loading","setLoading","firstpage","setFirstpage","searchUrl","setSearchurl","collections","code","templateUrl","startIndexOrigin","dateOff","areaOff","getcollection","fetchURL","index","newurl","replace","paging","totalresults","startindex","itemsperpage","credentials","geoJson","search","searchdate","searchpoint","end","target","buildUrl","windowSize","toJSON","SearchManager","onSearchComplete","searching","setsearching","searchtrigger","setsearchtrigger","param","setparam","outlineSync","SearchManagerContainer","searchDate","searchPoint","setgeojson","results","App","container","toggle","useFullscreen","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","setGlobal","appColor","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0b0025bb.chunk.js","sourcesContent":["/*\n * Copyright 2015-2017 WorldWind Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport WorldWind from 'webworldwind-esa';\nconst {\n    Angle,\n    ArgumentError,\n    Logger\n} = WorldWind;\n\n/**\n * Provides utilities for determining the Sun geographic and celestial location.\n * @exports SunPosition\n */\nconst SunPosition = {\n\n    /**\n     * Computes the geographic location of the sun for a given date\n     * @param {Date} date\n     * @throws {ArgumentError} if the date is missing\n     * @return {{latitude: Number, longitude: Number}} the geographic location\n     */\n    getAsGeographicLocation: function (date) {\n        if (date instanceof Date === false) {\n            throw new ArgumentError(\n                Logger.logMessage(Logger.LEVEL_SEVERE, \"SunPosition\", \"getAsGeographicLocation\",\n                    \"missingDate\"));\n        }\n\n        let celestialLocation = this.getAsCelestialLocation(date);\n        return this.celestialToGeographic(celestialLocation, date);\n    },\n\n    /**\n     * Computes the celestial location of the sun for a given julianDate\n     * @param {Date} date\n     * @throws {ArgumentError} if the date is missing\n     * @return {{declination: Number, rightAscension: Number}} the celestial location\n     */\n    getAsCelestialLocation: function (date) {\n        if (date instanceof Date === false) {\n            throw new ArgumentError(\n                Logger.logMessage(Logger.LEVEL_SEVERE, \"SunPosition\", \"getAsCelestialLocation\",\n                    \"missingDate\"));\n        }\n\n        let julianDate = this.computeJulianDate(date);\n\n        //number of days (positive or negative) since Greenwich noon, Terrestrial Time, on 1 January 2000 (J2000.0)\n        let numDays = julianDate - 2451545;\n\n        let meanLongitude = this.normalizeAngle360(280.460 + 0.9856474 * numDays);\n\n        let meanAnomaly = this.normalizeAngle360(357.528 + 0.9856003 * numDays) * Angle.DEGREES_TO_RADIANS;\n\n        let eclipticLongitude = meanLongitude + 1.915 * Math.sin(meanAnomaly) + 0.02 * Math.sin(2 * meanAnomaly);\n        let eclipticLongitudeRad = eclipticLongitude * Angle.DEGREES_TO_RADIANS;\n\n        let obliquityOfTheEcliptic = (23.439 - 0.0000004 * numDays) * Angle.DEGREES_TO_RADIANS;\n\n        let declination = Math.asin(Math.sin(obliquityOfTheEcliptic) * Math.sin(eclipticLongitudeRad)) *\n            Angle.RADIANS_TO_DEGREES;\n\n        let rightAscension = Math.atan(Math.cos(obliquityOfTheEcliptic) * Math.tan(eclipticLongitudeRad)) *\n            Angle.RADIANS_TO_DEGREES;\n\n        //compensate for atan result\n        if (eclipticLongitude >= 90 && eclipticLongitude < 270) {\n            rightAscension += 180;\n        }\n        rightAscension = this.normalizeAngle360(rightAscension);\n\n        return {\n            declination: declination,\n            rightAscension: rightAscension\n        };\n    },\n\n    /**\n     * Converts from celestial coordinates (declination and right ascension) to geographic coordinates\n     * (latitude, longitude) for a given julian date\n     * @param {{declination: Number, rightAscension: Number}} celestialLocation\n     * @param {Date} date\n     * @throws {ArgumentError} if celestialLocation or julianDate are missing\n     * @return {{latitude: Number, longitude: Number}} the geographic location\n     */\n    celestialToGeographic: function (celestialLocation, date) {\n        if (!celestialLocation) {\n            throw new ArgumentError(\n                Logger.logMessage(Logger.LEVEL_SEVERE, \"SunPosition\", \"celestialToGeographic\",\n                    \"missingCelestialLocation\"));\n        }\n        if (date instanceof Date === false) {\n            throw new ArgumentError(\n                Logger.logMessage(Logger.LEVEL_SEVERE, \"SunPosition\", \"celestialToGeographic\", \"missingDate\"));\n        }\n\n        let julianDate = this.computeJulianDate(date);\n\n        //number of days (positive or negative) since Greenwich noon, Terrestrial Time, on 1 January 2000 (J2000.0)\n        let numDays = julianDate - 2451545;\n\n        //Greenwich Mean Sidereal Time\n        let GMST = this.normalizeAngle360(280.46061837 + 360.98564736629 * numDays);\n\n        //Greenwich Hour Angle\n        let GHA = this.normalizeAngle360(GMST - celestialLocation.rightAscension);\n\n        let longitude = Angle.normalizedDegreesLongitude(-GHA);\n\n        return {\n            latitude: celestialLocation.declination,\n            longitude: longitude\n        };\n    },\n\n    /**\n     * Computes the julian date from a javascript date object\n     * @param {Date} date\n     * @throws {ArgumentError} if the date is missing\n     * @return {Number} the julian date\n     */\n    computeJulianDate: function (date) {\n        if (date instanceof Date === false) {\n            throw new ArgumentError(\n                Logger.logMessage(Logger.LEVEL_SEVERE, \"SunPosition\", \"computeJulianDate\", \"missingDate\"));\n        }\n\n        let year = date.getUTCFullYear();\n        let month = date.getUTCMonth() + 1;\n        let day = date.getUTCDate();\n        let hour = date.getUTCHours();\n        let minute = date.getUTCMinutes();\n        let second = date.getUTCSeconds();\n\n        let dayFraction = (hour + minute / 60 + second / 3600) / 24;\n\n        if (month <= 2) {\n            year -= 1;\n            month += 12;\n        }\n\n        let A = Math.trunc(year / 100);\n        let B = 2 - A + Math.trunc(A / 4);\n        let JD0h = Math.trunc(365.25 * (year + 4716)) + Math.trunc(30.6001 * (month + 1)) + day + B - 1524.5;\n\n        return JD0h + dayFraction;\n    },\n\n    /**\n     * Restricts an angle to the range [0, 360] degrees, wrapping angles outside the range.\n     * Wrapping takes place as though traversing the edge of a unit circle;\n     * angles less than 0 wrap back to 360, while angles greater than 360 wrap back to 0.\n     *\n     * @param {Number} degrees the angle to wrap in degrees\n     *\n     * @return {Number} the specified angle wrapped to [0, 360] degrees\n     */\n    normalizeAngle360: function(degrees) {\n        let angle = degrees % 360;\n        return angle >= 0 ? angle : (angle < 0 ? 360 + angle : 360 - angle);\n    }\n\n};\n\nexport default SunPosition;","import WorldWind from 'webworldwind-esa';\nimport SunPosition from './SunPosition';\nconst {\n    Angle\n} = WorldWind;\n\nconst Celestial = {\n\n    SUN: 0,\n    MERCURY: 1,\n    VENUS: 2,\n    MARS: 4,\n    JUPITER: 5,\n    SATURN: 6,\n    URANUS: 7,\n    NEPTUNE: 8,\n\n    getCelestialLocation(id, date) {\n        let orbitalElements;\n        const julianDate = SunPosition.computeJulianDate(date);\n        let d = julianDate - 2451543.5;\n        //d = -3543.0;\n\n        switch (id) {\n            case this.SUN:\n                orbitalElements = this.computeSun(d);\n                break;\n\n            case this.MERCURY:\n                orbitalElements = this.computeMercury(d);\n                break;\n\n            case this.VENUS:\n                orbitalElements = this.computeVenus(d);\n                break;\n\n            case this.MARS:\n                orbitalElements = this.computeMars(d);\n                break;\n\n            case this.JUPITER:\n                orbitalElements = this.computeJupiter(d);\n                break;\n\n            case this.SATURN:\n                orbitalElements = this.computeSaturn(d);\n                break;\n\n            case this.URANUS:\n                orbitalElements = this.computeUranus(d);\n                break;\n\n            case this.NEPTUNE:\n                orbitalElements = this.computeNeptune(d);\n                break;\n        }\n\n        return this.computePosition(d, orbitalElements);\n    },\n\n    computeMercury(d) {\n        const N = 48.3313 + 3.24587E-5 * d;\n        const i = 7.0047 + 5.00E-8 * d;\n        const w = 29.1241 + 1.01444E-5 * d;\n        const a = 0.387098;  //(AU)\n        const e = 0.205635 + 5.59E-10 * d;\n        const M = 168.6562 + 4.0923344368 * d;\n\n        return {N, i, w, a, e, M};\n    },\n\n    computeVenus(d) {\n        const N = 76.6799 + 2.46590E-5 * d;\n        const i = 3.3946 + 2.75E-8 * d;\n        const w = 54.8910 + 1.38374E-5 * d;\n        const a = 0.723330;//  (AU)\n        const e = 0.006773 - 1.302E-9 * d;\n        const M = 48.0052 + 1.6021302244 * d;\n\n        return {N, i, w, a, e, M};\n    },\n\n    computeMars(d) {\n        const N = 49.5574 + 2.11081E-5 * d;\n        const i = 1.8497 - 1.78E-8 * d;\n        const w = 286.5016 + 2.92961E-5 * d;\n        const a = 1.523688;  //(AU)\n        const e = 0.093405 + 2.516E-9 * d;\n        const M = 18.6021 + 0.5240207766 * d;\n\n        return {N, i, w, a, e, M};\n    },\n\n    computeJupiter(d) {\n        const N = 100.4542 + 2.76854E-5 * d;\n        const i = 1.3030 - 1.557E-7 * d;\n        const w = 273.8777 + 1.64505E-5 * d;\n        const a = 5.20256;  //(AU)\n        const e = 0.048498 + 4.469E-9 * d;\n        const M = 19.8950 + 0.0830853001 * d;\n\n        return {N, i, w, a, e, M};\n    },\n\n    computeSaturn(d) {\n        const N = 113.6634 + 2.38980E-5 * d;\n        const i = 2.4886 - 1.081E-7 * d;\n        const w = 339.3939 + 2.97661E-5 * d;\n        const a = 9.55475;  //(AU)\n        const e = 0.055546 - 9.499E-9 * d;\n        const M = 316.9670 + 0.0334442282 * d;\n\n        return {N, i, w, a, e, M};\n    },\n\n    computeUranus(d) {\n        const N = 74.0005 + 1.3978E-5 * d;\n        const i = 0.7733 + 1.9E-8 * d;\n        const w = 96.6612 + 3.0565E-5 * d;\n        const a = 19.18171 - 1.55E-8 * d;//  (AU)\n        const e = 0.047318 + 7.45E-9 * d;\n        const M = 142.5905 + 0.011725806 * d;\n\n        return {N, i, w, a, e, M};\n    },\n\n    computeNeptune(d) {\n        const N = 131.7806 + 3.0173E-5 * d;\n        const i = 1.7700 - 2.55E-7 * d;\n        const w = 272.8461 - 6.027E-6 * d;\n        const a = 30.05826 + 3.313E-8 * d;//  (AU)\n        const e = 0.008606 + 2.15E-9 * d;\n        const M = 260.2471 + 0.005995147 * d;\n\n        return {N, i, w, a, e, M};\n    },\n\n    computeSun(d) {\n        const N = 0.0;\n        const i = 0.0;\n        const w = 282.9404 + 4.70935E-5 * d;\n        const a = 1.000000;  //(AU)\n        const e = 0.016709 - 1.151E-9 * d;\n        const M = 356.0470 + 0.9856002585 * d;\n\n        return {N, i, w, a, e, M};\n    },\n\n    computePosition(d, {N, i, w, a, e, M}) {\n        N = SunPosition.normalizeAngle360(N) * Angle.DEGREES_TO_RADIANS;\n        i = SunPosition.normalizeAngle360(i) * Angle.DEGREES_TO_RADIANS;\n        w = SunPosition.normalizeAngle360(w) * Angle.DEGREES_TO_RADIANS;\n        //e = SunPosition.normalizeAngle360(e) * Angle.DEGREES_TO_RADIANS;\n        M = SunPosition.normalizeAngle360(M) * Angle.DEGREES_TO_RADIANS;\n\n        let E = M + e * Math.sin(M) * (1.0 + e * Math.cos(M));\n\n        if (e >= 0.06) {\n            for (var aa = 0; aa < 10; aa++) {\n                var E1 = E - (E - e * Math.sin(E) - M) / (1 - e * Math.cos(E));\n                if (Math.abs(E1 - E) < 0.001) {\n                    E = E1;\n                    break;\n                }\n                E = E1;\n            }\n        }\n\n        const xv = a * (Math.cos(E) - e);\n        const yv = a * (Math.sqrt(1.0 - e * e) * Math.sin(E));\n\n        const v = Math.atan2(yv, xv);\n        const r = Math.sqrt(xv * xv + yv * yv);\n\n        let xh = r * (Math.cos(N) * Math.cos(v + w) - Math.sin(N) * Math.sin(v + w) * Math.cos(i));\n        let yh = r * (Math.sin(N) * Math.cos(v + w) + Math.cos(N) * Math.sin(v + w) * Math.cos(i));\n        let zh = r * (Math.sin(v + w) * Math.sin(i));\n\n        const Epoch = 2000.0;\n        const lon_corr = 3.82394E-5 * (365.2422 * (Epoch - 2000.0) - d) * Angle.DEGREES_TO_RADIANS;\n\n        const lonecl = Math.atan2(yh, xh) + lon_corr;\n        const latecl = Math.atan2(zh, Math.sqrt(xh * xh + yh * yh));\n\n\n        /*** perturbations ***/\n        /*** not implemented ***/\n\n\n        xh = r * Math.cos(lonecl) * Math.cos(latecl);\n        yh = r * Math.sin(lonecl) * Math.cos(latecl);\n        zh = r * Math.sin(latecl);\n\n        let {lonsun, rsun} = this.getLonSun(d, this.computeSun(d));\n        lonsun *= Angle.RADIANS_TO_DEGREES;\n        lonsun = SunPosition.normalizeAngle360(lonsun) * Angle.DEGREES_TO_RADIANS;\n\n        const xs = rsun * Math.cos(lonsun);\n        const ys = rsun * Math.sin(lonsun);\n\n        const xg = xh + xs;\n        const yg = yh + ys;\n        const zg = zh;\n\n        const ecl = SunPosition.normalizeAngle360(23.4393 - 3.563E-7 * d) * Angle.DEGREES_TO_RADIANS;\n\n        const xe = xg;\n        const ye = yg * Math.cos(ecl) - zg * Math.sin(ecl);\n        const ze = yg * Math.sin(ecl) + zg * Math.cos(ecl);\n\n        const ra = SunPosition.normalizeAngle360(Math.atan2(ye, xe) * Angle.RADIANS_TO_DEGREES);\n        const dec = Math.atan2(ze, Math.sqrt(xe * xe + ye * ye)) * Angle.RADIANS_TO_DEGREES;\n\n        return {ra, dec};\n    },\n\n    getLonSun(d, {w, e, M}) {\n        w = SunPosition.normalizeAngle360(w) * Angle.DEGREES_TO_RADIANS;\n        //e = SunPosition.normalizeAngle360(e) * Angle.DEGREES_TO_RADIANS;\n        M = SunPosition.normalizeAngle360(M) * Angle.DEGREES_TO_RADIANS;\n\n        const E = M + e * Math.sin(M) * (1.0 + e * Math.cos(M));\n\n        const xv = Math.cos(E) - e;\n        const yv = Math.sqrt(1.0 - e * e) * Math.sin(E);\n\n        const v = Math.atan2(yv, xv);\n        const rsun = Math.sqrt(xv * xv + yv * yv);\n\n        const lonsun = v + w;\n\n        return {lonsun, rsun};\n    },\n\n};\n\nexport default Celestial;","/**\n * @exports StarFieldProgram\n */\nimport WorldWind from 'webworldwind-esa';\n\nconst {\n    ArgumentError,\n    GpuProgram,\n    Logger,\n    Matrix,\n    Color\n} = WorldWind;\n\n/**\n * Constructs a new program.\n * Initializes, compiles and links this GLSL program with the source code for its vertex and fragment shaders.\n * <p>\n * This method creates WebGL shaders for the program's shader sources and attaches them to a new GLSL program.\n * This method then compiles the shaders and then links the program if compilation is successful.\n * Use the bind method to make the program current during rendering.\n *\n * @alias StarFieldProgram\n * @constructor\n * @augments GpuProgram\n * @classdesc StarFieldProgram is a GLSL program that draws points representing stars.\n * @param {WebGLRenderingContext} gl The current WebGL context.\n * @throws {ArgumentError} If the shaders cannot be compiled, or linking of the compiled shaders into a program\n * fails.\n */\nclass StarFieldProgram extends GpuProgram {\n    constructor(gl) {\n        super(gl, 'attribute vec4 vertexPoint;\\n' +\n\n            'uniform mat4 mvpMatrix;\\n' +\n            //number of days (positive or negative) since Greenwich noon, Terrestrial Time,\n            // on 1 January 2000 (J2000.0)\n            'uniform float numDays;\\n' +\n            'uniform vec2 magnitudeRange;\\n' +\n\n            'varying float magnitudeWeight;\\n' +\n\n            //normalizes an angle between 0.0 and 359.0\n            'float normalizeAngle(float angle) {\\n' +\n            '   float angleDivisions = angle / 360.0;\\n' +\n            '   return 360.0 * (angleDivisions - floor(angleDivisions));\\n' +\n            '}\\n' +\n\n            //transforms declination and right ascension in cartesian coordinates\n            'vec3 computePosition(float dec, float ra) {\\n' +\n            '   float GMST = normalizeAngle(280.46061837 + 360.98564736629 * numDays);\\n' +\n            '   float GHA = normalizeAngle(GMST - ra);\\n' +\n            '   float lon = -GHA + 360.0 * step(180.0, GHA);\\n' +\n            '   float latRad = radians(dec);\\n' +\n            '   float lonRad = radians(lon);\\n' +\n            '   float radCosLat = cos(latRad);\\n' +\n            '   return vec3(radCosLat * sin(lonRad), sin(latRad), radCosLat * cos(lonRad));\\n' +\n            '}\\n' +\n\n            //normalizes a value between 0.0 and 1.0\n            'float normalizeScalar(float value, float minValue, float maxValue){\\n' +\n            '   return (value - minValue) / (maxValue - minValue);\\n' +\n            '}\\n' +\n\n            'void main() {\\n' +\n            '   vec3 vertexPosition = computePosition(vertexPoint.x, vertexPoint.y);\\n' +\n            '   gl_Position = mvpMatrix * vec4(vertexPosition.xyz, 1.0);\\n' +\n            '   gl_Position.z = gl_Position.w - 0.00001;\\n' +\n            '   gl_PointSize = vertexPoint.z;\\n' +\n            '   magnitudeWeight = normalizeScalar(vertexPoint.w, magnitudeRange.x, magnitudeRange.y);\\n' +\n            '}', 'precision mediump float;\\n' +\n\n            'uniform sampler2D textureSampler;\\n' +\n            'uniform int fragMode;\\n' +\n            'uniform vec4 color;\\n' +\n\n            'varying float magnitudeWeight;\\n' +\n\n            'const vec4 white = vec4(1.0, 1.0, 1.0, 1.0);\\n' +\n            'const vec4 grey = vec4(0.5, 0.5, 0.5, 1.0);\\n' +\n\n            'void main() {\\n' +\n            '   if (fragMode == 1) {\\n' +\n            '       gl_FragColor = texture2D(textureSampler, gl_PointCoord);\\n' +\n            '   }\\n' +\n            '   else if (fragMode == 0) {\\n' +\n            //paint the starts in shades of grey, where the brightest star is white and the dimmest star is grey\n            '       gl_FragColor = mix(white, grey, magnitudeWeight);\\n' +\n            '   }\\n' +\n            '   else if (fragMode == 2) {\\n' +\n            '       gl_FragColor = color;\\n' +\n            '   }\\n' +\n            '}', [\"vertexPoint\"]);\n\n        this.FRAG_MODE_MIX_COLOR = 0;\n        this.FRAG_MODE_TEXTURE = 1;\n        this.FRAG_MODE_COLOR = 2;\n\n        /**\n         * The WebGL location for this program's 'vertexPoint' attribute.\n         * @type {Number}\n         * @readonly\n         */\n        this.vertexPointLocation = this.attributeLocation(gl, \"vertexPoint\");\n\n        /**\n         * The WebGL location for this program's 'mvpMatrix' uniform.\n         * @type {WebGLUniformLocation}\n         * @readonly\n         */\n        this.mvpMatrixLocation = this.uniformLocation(gl, \"mvpMatrix\");\n\n        /**\n         * The WebGL location for this program's 'numDays' uniform.\n         * @type {WebGLUniformLocation}\n         * @readonly\n         */\n        this.numDaysLocation = this.uniformLocation(gl, \"numDays\");\n\n        /**\n         * The WebGL location for this program's 'magnitudeRangeLocation' uniform.\n         * @type {WebGLUniformLocation}\n         * @readonly\n         */\n        this.magnitudeRangeLocation = this.uniformLocation(gl, \"magnitudeRange\");\n\n        /**\n         * The WebGL location for this program's 'textureSampler' uniform.\n         * @type {WebGLUniformLocation}\n         * @readonly\n         */\n        this.textureUnitLocation = this.uniformLocation(gl, \"textureSampler\");\n\n        /**\n         * The WebGL location for this program's 'textureEnabled' uniform.\n         * @type {WebGLUniformLocation}\n         * @readonly\n         */\n        this.fragModeLocation = this.uniformLocation(gl, \"fragMode\");\n\n        this.colorLocation = this.uniformLocation(gl, \"color\");\n\n        this.localState = {\n            mvpMatrix: null,\n            numDays: null,\n            magnitudeRange: null,\n            textureUnit: null,\n            fragMode: null,\n            color: null,\n        };\n    }\n\n    /**\n     * Loads the specified matrix as the value of this program's 'mvpMatrix' uniform variable.\n     *\n     * @param {WebGLRenderingContext} gl The current WebGL context.\n     * @param {Matrix} matrix The matrix to load.\n     * @throws {ArgumentError} If the specified matrix is null or undefined.\n     */\n    loadModelviewProjection(gl, matrix) {\n        if (!matrix) {\n            throw new ArgumentError(\n                Logger.logMessage(Logger.LEVEL_SEVERE, \"StarFieldProgram\", \"loadModelviewProjection\", \"missingMatrix\"));\n        }\n\n        let forceLoad = false;\n        if (this.localState.mvpMatrix === null) {\n            forceLoad = true;\n            this.localState.mvpMatrix = Matrix.fromIdentity();\n        }\n\n        if (forceLoad || !this.localState.mvpMatrix.equals(matrix)) {\n            this.loadUniformMatrix(gl, matrix, this.mvpMatrixLocation);\n            this.localState.mvpMatrix.copy(matrix);\n        }\n    }\n\n    /**\n     * Loads the specified number as the value of this program's 'numDays' uniform variable.\n     *\n     * @param {WebGLRenderingContext} gl The current WebGL context.\n     * @param {Number} numDays The number of days (positive or negative) since Greenwich noon, Terrestrial Time,\n     * on 1 January 2000 (J2000.0)\n     * @throws {ArgumentError} If the specified number is null or undefined.\n     */\n    loadNumDays(gl, numDays) {\n        if (numDays == null) {\n            throw new ArgumentError(\n                Logger.logMessage(Logger.LEVEL_SEVERE, \"StarFieldProgram\", \"loadNumDays\", \"missingNumDays\"));\n        }\n        if (this.localState.numDays !== numDays) {\n            gl.uniform1f(this.numDaysLocation, numDays);\n            this.localState.numDays = numDays;\n        }\n    }\n\n    /**\n     * Loads the specified numbers as the value of this program's 'magnitudeRange' uniform variable.\n     *\n     * @param {WebGLRenderingContext} gl The current WebGL context.\n     * @param {Number} minMag\n     * @param {Number} maxMag\n     * @throws {ArgumentError} If the specified numbers are null or undefined.\n     */\n    loadMagnitudeRange(gl, minMag, maxMag) {\n        if (minMag == null) {\n            throw new ArgumentError(\n                Logger.logMessage(Logger.LEVEL_SEVERE, \"StarFieldProgram\", \"loadMagRange\", \"missingMinMag\"));\n        }\n        if (maxMag == null) {\n            throw new ArgumentError(\n                Logger.logMessage(Logger.LEVEL_SEVERE, \"StarFieldProgram\", \"loadMagRange\", \"missingMaxMag\"));\n        }\n        let forceLoad = false;\n        if (this.localState.magnitudeRange === null) {\n            forceLoad = true;\n            this.localState.magnitudeRange = [minMag, maxMag];\n        }\n\n        if (forceLoad || this.localState.magnitudeRange[0] !== minMag || this.localState.magnitudeRange[1] !== maxMag) {\n            gl.uniform2f(this.magnitudeRangeLocation, minMag, maxMag);\n            this.localState.magnitudeRange[0] = minMag;\n            this.localState.magnitudeRange[1] = maxMag;\n        }\n    }\n\n    /**\n     * Loads the specified number as the value of this program's 'textureSampler' uniform variable.\n     * @param {WebGLRenderingContext} gl The current WebGL context.\n     * @param {Number} unit The texture unit.\n     */\n    loadTextureUnit(gl, unit) {\n        if (this.localState.textureUnit !== unit) {\n            gl.uniform1i(this.textureUnitLocation, unit - gl.TEXTURE0);\n            this.localState.textureUnit = unit;\n        }\n    }\n\n    loadFragMode(gl, mode) {\n        if (this.localState.fragMode !== mode) {\n            gl.uniform1i(this.fragModeLocation, mode);\n            this.localState.fragMode = mode;\n        }\n    }\n\n    loadColor(gl, color) {\n        let forceLoad = false;\n        if (this.localState.color === null) {\n            forceLoad = true;\n            this.localState.color = new Color(0, 0, 0, 0);\n        }\n\n        if (forceLoad || !this.localState.color.equals(color)) {\n            this.loadUniformColor(gl, color, this.colorLocation);\n            this.localState.color.copy(color);\n        }\n    }\n}\n\n/**\n * A string that uniquely identifies this program.\n * @type {string}\n * @readonly\n */\nStarFieldProgram.key = \"WorldWindGpuStarFieldFullProgram\";\n\nexport default StarFieldProgram;","/**\n * @exports StarFieldLayer\n */\nimport Celestial from './Celestial';\nimport StarFieldProgram from './StarFieldProgram';\nimport SunPosition from './SunPosition';\n\nimport WorldWind from 'webworldwind-esa';\nconst {\n    Color,\n    Layer,\n    Logger,\n    Matrix,\n    REDRAW_EVENT_TYPE\n} = WorldWind;\n\n\n/**\n * Constructs a layer showing stars and the Sun around the Earth.\n * If used together with the AtmosphereLayer, the StarFieldLayer must be inserted before the AtmosphereLayer.\n *\n * If you want to use your own star data, the file provided must be .json\n * and the fields 'ra', 'dec' and 'vmag' must be present in the metadata.\n * ra and dec must be expressed in degrees.\n *\n * This layer uses J2000.0 as the ref epoch.\n *\n * If the star data .json file is too big, consider enabling gzip compression on your web server.\n * For more info about enabling gzip compression consult the configuration for your web server.\n *\n *\n -- output format : json\n SELECT \"I/239/hip_main\".HIP,  \"I/239/hip_main\".Vmag as vmag, \"I/239/hip_main\".\"_RA.icrs\" as ra,  \"I/239/hip_main\".\"_DE.icrs\" as dec\n FROM \"I/239/hip_main\"\n WHERE \"I/239/hip_main\".Vmag <=6.5\n *\n * @alias StarFieldLayer\n * @constructor\n * @classdesc Provides a layer showing stars, and the Sun around the Earth\n * @param {URL} starDataSource optional url for the stars data\n * @augments Layer\n */\nclass StarFieldLayer extends Layer {\n    constructor(starDataSource) {\n        super('StarField');\n\n        // The StarField Layer is not pickable.\n        this.pickEnabled = false;\n\n        /**\n         * The size of the Sun in pixels.\n         * This can not exceed the maximum allowed pointSize of the GPU.\n         * A warning will be given if the size is too big and the allowed max size will be used.\n         * @type {Number}\n         * @default 128\n         */\n        this.sunSize = 128;\n\n        /**\n         * Indicates weather to show or hide the Sun\n         * @type {Boolean}\n         * @default true\n         */\n        this.showSun = true;\n\n        //Documented in defineProperties below.\n        this._starDataSource = starDataSource || WorldWind.configuration.baseUrl + 'data/stars.json';\n        this._sunImageSource = WorldWind.configuration.baseUrl + 'images/sunTexture.png';\n\n        //Internal use only.\n        //The MVP matrix of this layer.\n        this._matrix = Matrix.fromIdentity();\n\n        //Internal use only.\n        //gpu cache key for the stars vbo.\n        this._starsPositionsVboCacheKey = null;\n\n        //Internal use only.\n        this._numStars = 0;\n\n        //Internal use only.\n        this._starData = null;\n\n        //Internal use only.\n        this._minMagnitude = Number.MAX_VALUE;\n        this._maxMagnitude = Number.MIN_VALUE;\n\n        //Internal use only.\n        //A flag to indicate the star data is currently being retrieved.\n        this._loadStarted = false;\n\n        //Internal use only.\n        this._minScale = 30e6;\n        this._scale = Number.MAX_SAFE_INTEGER || Math.pow(2, 53) - 1;\n        //this._scale = 50e6;\n\n        //Internal use only.\n        this._sunPositionsCacheKey = '';\n        this._sunBufferView = new Float32Array(4);\n\n        //Internal use only.\n        this._MAX_GL_POINT_SIZE = 0;\n\n        this.showPlanets = true;\n\n        const jupiterSize = 32;\n\n        this.planets = [\n            {\n                id: Celestial.MERCURY,\n                url: 'images/Mercury64.png',\n                size: jupiterSize / 4,\n                ra: null,\n                dec: null,\n            },\n            {\n                id: Celestial.VENUS,\n                url: 'images/Venus64.png',\n                size: jupiterSize / 4,\n                ra: null,\n                dec: null,\n            },\n            {\n                id: Celestial.MARS,\n                url: 'images/Mars64.png',\n                size: jupiterSize / 4,\n                ra: null,\n                dec: null,\n            },\n            {\n                id: Celestial.JUPITER,\n                url: 'images/Jupiter64.png',\n                size: jupiterSize,\n                ra: null,\n                dec: null,\n            },\n            {\n                id: Celestial.SATURN,\n                url: 'images/Saturn64.png',\n                size: jupiterSize,\n                ra: null,\n                dec: null,\n            },\n            {\n                id: Celestial.URANUS,\n                url: 'images/Uranus64.png',\n                size: jupiterSize / 2,\n                ra: null,\n                dec: null,\n            },\n            {\n                id: Celestial.NEPTUNE,\n                url: 'images/Neptune64.png',\n                size: jupiterSize / 2,\n                ra: null,\n                dec: null,\n            },\n        ];\n\n        this._planetsBufferView = null;\n\n        this._cacheKeys = {\n            sunPosition: '',\n            planetPositions: '',\n            starPositions: ''\n        };\n    }\n\n    /**\n     * Url for the stars data.\n     * @memberof StarFieldLayer.prototype\n     * @type {URL}\n     */\n    get starDataSource() {\n        return this._starDataSource;\n    }\n    \n    set starDataSource(value) {\n        this._starDataSource = value;\n        this.invalidateStarData();\n    }\n\n    /**\n     * Url for the sun texture image.\n     * @memberof StarFieldLayer.prototype\n     * @type {URL}\n     */\n    get sunImageSource() {\n        return this._sunImageSource;\n    }\n    \n    set sunImageSource(value) {\n        this._sunImageSource = value;\n    }\n\n    // Documented in superclass.\n    doRender(dc) {\n        if (dc.globe.is2D()) {\n            return;\n        }\n\n        if (!this.haveResources(dc)) {\n            this.loadResources(dc);\n            return;\n        }\n\n        this.beginRendering(dc);\n        try {\n            this.doDraw(dc);\n        }\n        finally {\n            this.endRendering(dc);\n        }\n    }\n\n    // Internal. Intentionally not documented.\n    haveResources(dc) {\n        let sunTexture = dc.gpuResourceCache.resourceForKey(this._sunImageSource);\n        let planetTextures = this.planets.every(planet => {\n            const texture = dc.gpuResourceCache.resourceForKey(planet.url);\n            return !!texture;\n        });\n        return (\n            this._starData != null &&\n            sunTexture != null &&\n            planetTextures\n        );\n    }\n\n    // Internal. Intentionally not documented.\n    loadResources(dc) {\n        let gl = dc.currentGlContext;\n        let gpuResourceCache = dc.gpuResourceCache;\n\n        if (!this._starData) {\n            this.fetchStarData();\n        }\n\n        let sunTexture = gpuResourceCache.resourceForKey(this._sunImageSource);\n        if (!sunTexture) {\n            gpuResourceCache.retrieveTexture(gl, this._sunImageSource);\n        }\n\n        this.planets.forEach(planet => {\n            const texture = gpuResourceCache.resourceForKey(planet.url);\n            if (!texture) {\n                gpuResourceCache.retrieveTexture(gl, planet.url);\n            }\n        });\n    }\n\n    // Internal. Intentionally not documented.\n    beginRendering(dc) {\n        let gl = dc.currentGlContext;\n        dc.findAndBindProgram(StarFieldProgram);\n        gl.enableVertexAttribArray(0);\n        gl.depthMask(false);\n    }\n\n    // Internal. Intentionally not documented.\n    doDraw(dc) {\n        this.loadCommonUniforms(dc);\n\n        this.renderStars(dc);\n\n        if (this.showSun) {\n            this.renderSun(dc);\n        }\n\n        if (this.showPlanets) {\n            this.renderPlanets(dc);\n        }\n    }\n\n    // Internal. Intentionally not documented.\n    loadCommonUniforms(dc) {\n        let gl = dc.currentGlContext;\n        let program = dc.currentProgram;\n\n        let mvp = dc.modelviewProjection || dc.navigatorState.modelviewProjection;\n        this._matrix.copy(mvp);\n        this._matrix.multiplyByScale(this._scale, this._scale, this._scale);\n\n        program.loadModelviewProjection(gl, this._matrix);\n\n        //this subtraction does not work properly on the GPU, it must be done on the CPU\n        //possibly due to precision loss\n        //number of days (positive or negative) since Greenwich noon, Terrestrial Time, on 1 January 2000 (J2000.0)\n        let julianDate = SunPosition.computeJulianDate(this.time || new Date());\n        program.loadNumDays(gl, julianDate - 2451545.0);\n    }\n\n    // Internal. Intentionally not documented.\n    renderStars(dc) {\n        let gl = dc.currentGlContext;\n        let gpuResourceCache = dc.gpuResourceCache;\n        let program = dc.currentProgram;\n\n        if (!this._starsPositionsVboCacheKey) {\n            this._starsPositionsVboCacheKey = gpuResourceCache.generateCacheKey();\n        }\n        let vboId = gpuResourceCache.resourceForKey(this._starsPositionsVboCacheKey);\n        if (!vboId) {\n            vboId = gl.createBuffer();\n            let positions = this.createStarsGeometry();\n            gpuResourceCache.putResource(this._starsPositionsVboCacheKey, vboId, positions.length * 4);\n            gl.bindBuffer(gl.ARRAY_BUFFER, vboId);\n            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(positions), gl.STATIC_DRAW);\n        }\n        else {\n            gl.bindBuffer(gl.ARRAY_BUFFER, vboId);\n        }\n        dc.frameStatistics.incrementVboLoadCount(1);\n\n        gl.vertexAttribPointer(0, 4, gl.FLOAT, false, 0, 0);\n\n        program.loadMagnitudeRange(gl, this._minMagnitude, this._maxMagnitude);\n        program.loadFragMode(gl, program.FRAG_MODE_MIX_COLOR);\n\n        gl.drawArrays(gl.POINTS, 0, this._numStars);\n    }\n\n    // Internal. Intentionally not documented.\n    renderPlanets(dc) {\n        let gl = dc.currentGlContext;\n        let program = dc.currentProgram;\n        let gpuResourceCache = dc.gpuResourceCache;\n\n        if (!this._MAX_GL_POINT_SIZE) {\n            this._MAX_GL_POINT_SIZE = gl.getParameter(gl.ALIASED_POINT_SIZE_RANGE)[1];\n        }\n        if (this.sunSize > this._MAX_GL_POINT_SIZE) {\n            Logger.log(Logger.LEVEL_WARNING, 'StarFieldLayer - sunSize is to big, max size allowed is: ' +\n                this._MAX_GL_POINT_SIZE);\n        }\n\n        this.planets.forEach(planet => {\n            const {ra, dec} = Celestial.getCelestialLocation(planet.id, this.time || new Date());\n            planet.ra = ra;\n            planet.dec = dec;\n        }, this);\n\n        if (!this._planetsBufferView) {\n            this._planetsBufferView = new Float32Array(this.planets.length * 4);\n        }\n\n        for (let i = 0; i < this.planets.length; i++) {\n            let planet = this.planets[i];\n            this._planetsBufferView[i * 4 + 0] = planet.dec;\n            this._planetsBufferView[i * 4 + 1] = planet.ra;\n            this._planetsBufferView[i * 4 + 2] = Math.min(planet.size, this._MAX_GL_POINT_SIZE);\n            this._planetsBufferView[i * 4 + 3] = 1;\n        }\n\n        if (!this._planetsPositionsVboCacheKey) {\n            this._planetsPositionsVboCacheKey = gpuResourceCache.generateCacheKey();\n        }\n        let vboId = gpuResourceCache.resourceForKey(this._planetsPositionsVboCacheKey);\n        if (!vboId) {\n            vboId = gl.createBuffer();\n            gpuResourceCache.putResource(this._planetsPositionsVboCacheKey, vboId, this._planetsBufferView.length * 4);\n            gl.bindBuffer(gl.ARRAY_BUFFER, vboId);\n            gl.bufferData(gl.ARRAY_BUFFER, this._planetsBufferView, gl.DYNAMIC_DRAW);\n        }\n        else {\n            gl.bindBuffer(gl.ARRAY_BUFFER, vboId);\n            gl.bufferSubData(gl.ARRAY_BUFFER, 0, this._planetsBufferView);\n        }\n        dc.frameStatistics.incrementVboLoadCount(1);\n        gl.vertexAttribPointer(0, 4, gl.FLOAT, false, 0, 0);\n\n        program.loadFragMode(gl, program.FRAG_MODE_TEXTURE);\n\n        for (let i = 0; i < this.planets.length; i++) {\n            let textureSrc = this.planets[i].url;\n            let texture = dc.gpuResourceCache.resourceForKey(textureSrc);\n            texture.bind(dc);\n            gl.drawArrays(gl.POINTS, i, 1);\n        }\n    }\n\n    // Internal. Intentionally not documented.\n    renderSun(dc) {\n        let gl = dc.currentGlContext;\n        let program = dc.currentProgram;\n        let gpuResourceCache = dc.gpuResourceCache;\n\n        if (!this._MAX_GL_POINT_SIZE) {\n            this._MAX_GL_POINT_SIZE = gl.getParameter(gl.ALIASED_POINT_SIZE_RANGE)[1];\n        }\n        if (this.sunSize > this._MAX_GL_POINT_SIZE) {\n            Logger.log(Logger.LEVEL_WARNING, 'StarFieldLayer - sunSize is to big, max size allowed is: ' +\n                this._MAX_GL_POINT_SIZE);\n        }\n\n        let sunCelestialLocation = SunPosition.getAsCelestialLocation(this.time || new Date());\n\n        this._sunBufferView[0] = sunCelestialLocation.declination;\n        this._sunBufferView[1] = sunCelestialLocation.rightAscension;\n        this._sunBufferView[2] = Math.min(this.sunSize, this._MAX_GL_POINT_SIZE);\n        this._sunBufferView[3] = 1;\n\n        if (!this._sunPositionsCacheKey) {\n            this._sunPositionsCacheKey = gpuResourceCache.generateCacheKey();\n        }\n        let vboId = gpuResourceCache.resourceForKey(this._sunPositionsCacheKey);\n        if (!vboId) {\n            vboId = gl.createBuffer();\n            gpuResourceCache.putResource(this._sunPositionsCacheKey, vboId, this._sunBufferView.length * 4);\n            gl.bindBuffer(gl.ARRAY_BUFFER, vboId);\n            gl.bufferData(gl.ARRAY_BUFFER, this._sunBufferView, gl.DYNAMIC_DRAW);\n        }\n        else {\n            gl.bindBuffer(gl.ARRAY_BUFFER, vboId);\n            gl.bufferSubData(gl.ARRAY_BUFFER, 0, this._sunBufferView);\n        }\n        dc.frameStatistics.incrementVboLoadCount(1);\n        gl.vertexAttribPointer(0, 4, gl.FLOAT, false, 0, 0);\n\n        program.loadFragMode(gl, program.FRAG_MODE_TEXTURE);\n\n        let sunTexture = dc.gpuResourceCache.resourceForKey(this._sunImageSource);\n        sunTexture.bind(dc);\n\n        gl.drawArrays(gl.POINTS, 0, 1);\n    }\n\n    // Internal. Intentionally not documented.\n    endRendering(dc) {\n        let gl = dc.currentGlContext;\n        gl.depthMask(true);\n        gl.disableVertexAttribArray(0);\n    }\n\n    // Internal. Intentionally not documented.\n    fetchStarData() {\n        if (this._loadStarted) {\n            return;\n        }\n\n        this._loadStarted = true;\n        let self = this;\n        let xhr = new XMLHttpRequest();\n\n        xhr.onload = function () {\n            if (this.status >= 200 && this.status < 300) {\n                try {\n                    self._starData = JSON.parse(this.response);\n                    self.sendRedrawRequest();\n                }\n                catch (e) {\n                    Logger.log(Logger.LEVEL_SEVERE, 'StarFieldLayer unable to parse JSON for star data ' +\n                        e.toString());\n                }\n            }\n            else {\n                Logger.log(Logger.LEVEL_SEVERE, 'StarFieldLayer unable to fetch star data. Status: ' +\n                    this.status + ' ' + this.statusText);\n            }\n            self._loadStarted = false;\n        };\n\n        xhr.onerror = function () {\n            Logger.log(Logger.LEVEL_SEVERE, 'StarFieldLayer unable to fetch star data');\n            self._loadStarted = false;\n        };\n\n        xhr.ontimeout = function () {\n            Logger.log(Logger.LEVEL_SEVERE, 'StarFieldLayer fetch star data has timeout');\n            self._loadStarted = false;\n        };\n\n        xhr.open('GET', this._starDataSource, true);\n        xhr.send();\n    }\n\n    // Internal. Intentionally not documented.\n    createStarsGeometry() {\n        let indexes = this.parseStarsMetadata(this._starData.metadata);\n\n        if (indexes.raIndex === -1) {\n            throw new Error(\n                Logger.logMessage(Logger.LEVEL_SEVERE, 'StarFieldLayer', 'createStarsGeometry',\n                    'Missing ra field in star data.'));\n        }\n        if (indexes.decIndex === -1) {\n            throw new Error(\n                Logger.logMessage(Logger.LEVEL_SEVERE, 'StarFieldLayer', 'createStarsGeometry',\n                    'Missing dec field in star data.'));\n        }\n        if (indexes.magIndex === -1) {\n            throw new Error(\n                Logger.logMessage(Logger.LEVEL_SEVERE, 'StarFieldLayer', 'createStarsGeometry',\n                    'Missing vmag field in star data.'));\n        }\n\n        let data = this._starData.data;\n        let positions = [];\n\n        this._minMagnitude = Number.MAX_VALUE;\n        this._maxMagnitude = Number.MIN_VALUE;\n\n        for (let i = 0, len = data.length; i < len; i++) {\n            let starInfo = data[i];\n            let declination = starInfo[indexes.decIndex]; //for latitude\n            let rightAscension = starInfo[indexes.raIndex]; //for longitude\n            let magnitude = starInfo[indexes.magIndex];\n            let pointSize = magnitude < 2 ? 2 : 1;\n            positions.push(declination, rightAscension, pointSize, magnitude);\n\n            this._minMagnitude = Math.min(this._minMagnitude, magnitude);\n            this._maxMagnitude = Math.max(this._maxMagnitude, magnitude);\n        }\n        this._numStars = Math.floor(positions.length / 4);\n\n        return positions;\n    }\n\n    // Internal. Intentionally not documented.\n    parseStarsMetadata(metadata) {\n        let raIndex = -1,\n            decIndex = -1,\n            magIndex = -1;\n        for (let i = 0, len = metadata.length; i < len; i++) {\n            let starMetaInfo = metadata[i];\n            if (starMetaInfo.name === 'ra') {\n                raIndex = i;\n            }\n            if (starMetaInfo.name === 'dec') {\n                decIndex = i;\n            }\n            if (starMetaInfo.name === 'vmag') {\n                magIndex = i;\n            }\n        }\n        return {\n            raIndex: raIndex,\n            decIndex: decIndex,\n            magIndex: magIndex\n        };\n    }\n\n    // Internal. Intentionally not documented.\n    invalidateStarData() {\n        this._starData = null;\n        this._starsPositionsVboCacheKey = null;\n    }\n\n    // Internal. Intentionally not documented.\n    sendRedrawRequest() {\n        let e = document.createEvent('Event');\n        e.initEvent(REDRAW_EVENT_TYPE, true, true);\n        window.dispatchEvent(e);\n    }\n}\n\nexport default StarFieldLayer;\n","import WorldWind from 'webworldwind-esa';\nconst {\n    Color\n} = WorldWind;\n\nconst satConfig = [\n    {\n        key: 's1a',\n        name: 'SENTINEL-1A',\n        shortName: 'S-1A',\n        satIndex: 0,\n        swathTypes: ['black', 'red', 'green', 'white'],\n        swathColors: [\n            Color.colorFromKmlHex('ff000000'), //black\n            Color.colorFromKmlHex('ff0000ff'), //red\n            Color.colorFromKmlHex('ff00ff00'), //green\n            Color.colorFromKmlHex('ffffffff')  //white\n        ],\n        swatModes: ['IW', 'EW', 'SM'],\n        tleLineOne: '1 39634U 14016A   18124.03591006  .00000001  00000-0  10014-4 0  9998',\n        tleLineTwo: '2 39634  98.1819 132.0838 0001369  78.7198 281.4156 14.59198520217480',\n        hasModel: true,\n        filePath: './satellites/sentinel1/s1.json',\n        rotations: {\n            x: 0,\n            y: 0,\n            z: 0,\n            headingAxis: [0, 0, 1],\n            headingAdd: -90,\n            headingMultiply: 1\n        },\n        preRotations: {\n            x: 0,\n            y: 0,\n            z: 0\n        },\n        scale: 500000,\n        translations: {\n            x: -0.1,\n            y: -0.1,\n            z: 0\n        },\n        ignoreLocalTransforms: true,\n        launchDate: new Date('2014-04-03T21:02:00.000Z'),\n    },\n    {\n        key: 's2a',\n        name: 'SENTINEL-2A',\n        shortName: 'S-2A',\n        satIndex: 1,\n        swathTypes: ['red', 'purple', 'white', 'darkGrey', 'green', 'greener'],\n        swathColors: [\n            Color.colorFromKmlHex('ff0000ff'), //red\n            Color.colorFromKmlHex('ffff00ff'), //purple\n            Color.colorFromKmlHex('ffffffff'), //white\n            Color.colorFromKmlHex('ff7f7f7f'), //dark grey\n            Color.colorFromKmlHex('ff00ff00'),  //green\n            Color.colorFromKmlHex('ff00fff7')  //greener\n        ],\n        swatModes: ['NOBS'],\n        tleLineOne: '1 40697U 15028A   18124.08865983  .00000004  00000-0  17994-4 0  9993',\n        tleLineTwo: '2 40697  98.5686 199.4434 0001286  92.5669 267.5666 14.30817033149583',\n        hasModel: true,\n        filePath: './satellites/senti2version6/s2.json',\n        rotations: {\n            x: 0,\n            y: 0,\n            z: 0,\n            headingAxis: [0, 0, 1],\n            headingAdd: -90,\n            headingMultiply: 1\n        },\n        preRotations: {\n            x: 0,\n            y: 0,\n            z: 0\n        },\n        scale: 1000000,\n        translations: {\n            x: 0.1,\n            y: 0.385,\n            z: 0.02\n        },\n        ignoreLocalTransforms: true,\n        launchDate: new Date('2015-06-23T01:52:00.000Z'),\n    },\n    {\n        key: 's3a',\n        name: 'SENTINEL-3A',\n        shortName: 'S-3A',\n        satIndex: 2,\n        tleLineOne: '1 41335U 16011A   18124.14356592 -.00000000  00000-0  18017-4 0  9998',\n        tleLineTwo: '2 41335  98.6266 192.0005 0001035 100.1921 259.9376 14.26736754115121',\n        hasModel: true,\n        filePath: './satellites/Sentinel3/s3.json',\n        rotations: {\n            x: 0, //0\n            y: 0, //180\n            z: 0, //165\n            headingAxis: [0, 0, 1], //0,0,1\n            headingAdd: 180, //-20\n            headingMultiply: 1 //1\n        },\n        preRotations: {\n            x: 0,\n            y: 180,\n            z: 0\n        },\n        scale: 1000000,\n        translations: {\n            x: 0.01, //-0.01\n            y: 1.98, //1.9\n            z: 0.07 //-0.07\n        },\n        ignoreLocalTransforms: true,\n        launchDate: new Date('2016-02-16T17:57:00.000Z'),\n    },\n    {\n        key: 's1b',\n        name: 'SENTINEL-1B',\n        shortName: 'S-1B',\n        satIndex: 3,\n        swathTypes: ['black', 'red', 'green', 'white'],\n        swathColors: [\n            Color.colorFromKmlHex('ff000000'), //black\n            Color.colorFromKmlHex('ff0000ff'), //red\n            Color.colorFromKmlHex('ff00ff00'), //green\n            Color.colorFromKmlHex('ffffffff')  //white\n        ],\n        swatModes: ['IW', 'EW', 'SM'],\n        tleLineOne: '1 41456U 16025A   18124.13828432 -.00000022  00000-0  49756-5 0  9992',\n        tleLineTwo: '2 41456  98.1817 132.0102 0001487  82.9964 277.1419 14.59197806107664',\n        hasModel: true,\n        filePath: './satellites/sentinel1/s1.json',\n        rotations: {\n            x: 0,\n            y: 0,\n            z: 0,\n            headingAxis: [0, 0, 1],\n            headingAdd: -90,\n            headingMultiply: 1\n        },\n        preRotations: {\n            x: 0,\n            y: 0,\n            z: 0\n        },\n        scale: 500000,\n        translations: {\n            x: -0.1,\n            y: -0.1,\n            z: 0\n        },\n        ignoreLocalTransforms: true,\n        launchDate: new Date('2016-04-25T21:02:00.000Z'),\n    },\n    {\n        key: 's2b',\n        name: 'SENTINEL-2B',\n        shortName: 'S-2B',\n        satIndex: 4,\n        swathTypes: ['blue'],\n        swathColors: [\n            Color.colorFromKmlHex('ffffff00'),\n        ],\n        swatModes: ['NOBS'],\n        tleLineOne: '1 42063U 17013A   18124.12358125  .00000002  00000-0  17497-4 0  9994',\n        tleLineTwo: '2 42063  98.5687 199.4702 0001382  97.5073 262.6270 14.30817718 60503',\n        groundPosition: {latitude: 5.2079, longitude: -52.7724, altitude: 0},\n        hasModel: true,\n        filePath: './satellites/senti2version6/s2.json',\n        rotations: {\n            x: 0,\n            y: 0,\n            z: 0,\n            headingAxis: [0, 0, 1],\n            headingAdd: -90,\n            headingMultiply: 1\n        },\n        preRotations: {\n            x: 0,\n            y: 0,\n            z: 0\n        },\n        scale: 1000000,\n        translations: {\n            x: 0.1,\n            y: 0.385,\n            z: 0.02\n        },\n        ignoreLocalTransforms: true,\n        launchDate: new Date('2017-03-07T01:49:00.000Z'),\n    },\n    {\n        key: 's5p',\n        name: 'SENTINEL-5P',\n        shortName: 'S-5P',\n        satIndex: 5,\n        swathTypes: [],\n        swathColors: [],\n\n        tleLineOne: '1 42969U 17064A   18123.85141871 -.00000009  00000-0  16636-4 0  9994',\n        tleLineTwo: '2 42969  98.7352  64.1585 0001101  78.1817 281.9482 14.19565315 28712',\n\n        groundPosition: {latitude: 62.927860, longitude: 40.574830, altitude: 0},\n        hasModel: true,\n        filePath: './satellites/sentinel5p/s5p.json',\n        rotations: {\n            x: 0,\n            y: 0,\n            z: 0,\n            headingAxis: [0, 0, 1],\n            headingAdd: -90,\n            headingMultiply: 1\n        },\n        preRotations: {\n            x: 180 + 30,\n            y: 0,\n            z: 0\n        },\n        scale: 70000,\n        translations: {\n            x: 0.5,\n            y: 0.4,\n            z: -1.2\n        },\n        ignoreLocalTransforms: true,\n        launchDate: new Date('2017-10-13T09:27:00.000Z'),\n    },\n    {\n        key: 's3b',\n        name: 'SENTINEL-3B',\n        shortName: 'S-3B',\n        satIndex: 6,\n        tleLineOne: '1 43437U 18039A   18122.61596633  .00002473  00000-0  10753-2 0  9999',\n        tleLineTwo: '2 43437  98.6226 190.4610 0008811 292.4467  67.5830 14.24954518   977',\n        groundPosition: {\n            latitude: 62.925556,\n            longitude: 40.577778,\n            altitude: 0,\n        },\n        hasModel: true,\n        filePath: 'satellites/Sentinel3/s3.json',\n        rotations: {\n            x: 0, //0\n            y: 0, //180\n            z: 0, //165\n            headingAxis: [0, 0, 1], //0,0,1\n            headingAdd: 180, //-20\n            headingMultiply: 1 //1\n        },\n        preRotations: {\n            x: 0,\n            y: 180,\n            z: 0\n        },\n        scale: 1000000,\n        translations: {\n            x: 0.01, //-0.01\n            y: 1.98, //1.9\n            z: 0.07 //-0.07\n        },\n        ignoreLocalTransforms: true,\n        launchDate: new Date('2018-04-25T17:57:00.000Z'),\n    },\n];\n\nexport const getSatConfigByKey = (satKey) => {\n    return satConfig.find((s) => s.key === satKey);\n};\n\n\nexport default satConfig;","/*\n * Copyright 2003-2006, 2009, 2017, United States Government, as represented by the Administrator of the\n * National Aeronautics and Space Administration. All rights reserved.\n *\n * The NASAWorldWind/WebWorldWind platform is licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @exports ColladaScene\n */\nimport WorldWind from 'webworldwind-esa';\n\nconst {\n    ArgumentError,\n    BasicTextureProgram,\n    Color,\n    Logger,\n    Matrix,\n    Position,\n    PickedObject,\n    Renderable,\n    Vec3\n} = WorldWind;\n\n\n/**\n * Constructs a collada scene\n * @alias ColladaScene\n * @constructor\n * @augments Renderable\n * @classdesc Represents a scene. A scene is a collection of nodes with meshes, materials and textures.\n * @param {Position} position The scene's geographic position.\n * @param {Object} sceneData The scene's data containing the nodes, meshes, materials, textures and other\n * info needed to render the scene.\n */\nvar ColladaScene = function (position, sceneData) {\n    if (!position) {\n        throw new ArgumentError(\n            Logger.logMessage(Logger.LEVEL_SEVERE, \"ColladaScene\", \"constructor\", \"missingPosition\"));\n    }\n\n    Renderable.call(this);\n\n    // Documented in defineProperties below.\n    this._position = position;\n\n    // Documented in defineProperties below.\n    this._nodes = [];\n    this._meshes = {};\n    this._materials = {};\n    this._images = {};\n    this._upAxis = '';\n    this._dirPath = '';\n\n    // Documented in defineProperties below.\n    this._xRotation = 0;\n    this._yRotation = 0;\n    this._zRotation = 0;\n\n    this.preX = 0;\n    this.preY = 0;\n    this.preZ = 0;\n\n    // Documented in defineProperties below.\n    this._xTranslation = 0;\n    this._yTranslation = 0;\n    this._zTranslation = 0;\n\n    // Documented in defineProperties below.\n    this._scale = 1;\n\n    // Documented in defineProperties below.\n    this._altitudeMode = WorldWind.ABSOLUTE;\n\n    // Documented in defineProperties below.\n    this._localTransforms = true;\n\n    // Documented in defineProperties below.\n    this._useTexturePaths = true;\n\n    // Documented in defineProperties below.\n    this._nodesToHide = [];\n    this._hideNodes = false;\n\n    // Documented in defineProperties below.\n    this._placePoint = new Vec3(0, 0, 0);\n\n    // Documented in defineProperties below.\n    this._transformationMatrix = Matrix.fromIdentity();\n    this._mvpMatrix = Matrix.fromIdentity();\n\n    // Documented in defineProperties below.\n    this._normalTransformMatrix = Matrix.fromIdentity();\n    this._normalMatrix = Matrix.fromIdentity();\n    this._texCoordMatrix = Matrix.fromIdentity().setToUnitYFlip();\n\n    //Internal. Intentionally not documented.\n    this._entities = [];\n\n    //Internal. Intentionally not documented.\n    this._activeTexture = null;\n\n    //Internal. Intentionally not documented.\n    this._tmpVector = new Vec3(0, 0, 0);\n    this._tmpColor = new Color(1, 1, 1, 1);\n\n    //Internal. Intentionally not documented.\n    this._vboCacheKey = '';\n    this._iboCacheKey = '';\n\n    this.setSceneData(sceneData);\n};\n\nColladaScene.prototype = Object.create(Renderable.prototype);\nColladaScene.prototype.constructor = ColladaScene;\n\nObject.defineProperties(ColladaScene.prototype, {\n\n    /**\n     * The scene's geographic position.\n     * @memberof ColladaScene.prototype\n     * @type {Position}\n     */\n    position: {\n        get: function () {\n            return this._position;\n        },\n        set: function (value) {\n            this._position = value;\n        }\n    },\n\n    /**\n     * An array of nodes extracted from the collada file.\n     * @memberof ColladaScene.prototype\n     * @type {ColladaNode[]}\n     */\n    nodes: {\n        get: function () {\n            return this._nodes;\n        },\n        set: function (value) {\n            this._nodes = value;\n        }\n    },\n\n    /**\n     * An object with meshes extracted from the collada file.\n     * @memberof ColladaScene.prototype\n     * @type {{ColladaMesh}}\n     */\n    meshes: {\n        get: function () {\n            return this._meshes;\n        },\n        set: function (value) {\n            this._meshes = value;\n        }\n    },\n\n    /**\n     * An object with materials and their effects extracted from the collada file.\n     * @memberof ColladaScene.prototype\n     * @type {ColladaMaterial}\n     */\n    materials: {\n        get: function () {\n            return this._materials;\n        },\n        set: function (value) {\n            this._materials = value;\n        }\n    },\n\n    /**\n     * An object with images extracted from the collada file.\n     * @memberof ColladaScene.prototype\n     * @type {ColladaImage}\n     */\n    images: {\n        get: function () {\n            return this._images;\n        },\n        set: function (value) {\n            this._images = value;\n        }\n    },\n\n    /**\n     * The up axis of the collada model extracted from the collada file.\n     * @memberof ColladaScene.prototype\n     * @type {String}\n     */\n    upAxis: {\n        get: function () {\n            return this._upAxis;\n        },\n        set: function (value) {\n            this._upAxis = value;\n        }\n    },\n\n    /**\n     * The path to the directory of the collada file.\n     * @memberof ColladaScene.prototype\n     * @type {String}\n     */\n    dirPath: {\n        get: function () {\n            return this._dirPath;\n        },\n        set: function (value) {\n            this._dirPath = value;\n        }\n    },\n\n    /**\n     * The scene's rotation angle in degrees for the x axis.\n     * @memberof ColladaScene.prototype\n     * @type {Number}\n     */\n    xRotation: {\n        get: function () {\n            return this._xRotation;\n        },\n        set: function (value) {\n            this._xRotation = value;\n        }\n    },\n\n    /**\n     * The scene's rotation angle in degrees for the x axis.\n     * @memberof ColladaScene.prototype\n     * @type {Number}\n     */\n    yRotation: {\n        get: function () {\n            return this._yRotation;\n        },\n        set: function (value) {\n            this._yRotation = value;\n        }\n    },\n\n    /**\n     * The scene's rotation angle in degrees for the x axis.\n     * @memberof ColladaScene.prototype\n     * @type {Number}\n     */\n    zRotation: {\n        get: function () {\n            return this._zRotation;\n        },\n        set: function (value) {\n            this._zRotation = value;\n        }\n    },\n\n    /**\n     * The scene's translation for the x axis.\n     * @memberof ColladaScene.prototype\n     * @type {Number}\n     */\n    xTranslation: {\n        get: function () {\n            return this._xTranslation;\n        },\n        set: function (value) {\n            this._xTranslation = value;\n        }\n    },\n\n    /**\n     * The scene's translation for the y axis.\n     * @memberof ColladaScene.prototype\n     * @type {Number}\n     */\n    yTranslation: {\n        get: function () {\n            return this._yTranslation;\n        },\n        set: function (value) {\n            this._yTranslation = value;\n        }\n    },\n\n    /**\n     * The scene's translation for the z axis.\n     * @memberof ColladaScene.prototype\n     * @type {Number}\n     */\n    zTranslation: {\n        get: function () {\n            return this._zTranslation;\n        },\n        set: function (value) {\n            this._zTranslation = value;\n        }\n    },\n\n    /**\n     * The scene's scale.\n     * @memberof ColladaScene.prototype\n     * @type {Number}\n     */\n    scale: {\n        get: function () {\n            return this._scale;\n        },\n        set: function (value) {\n            this._scale = value;\n        }\n    },\n\n    /**\n     * The scene's Cartesian point on the globe for the specified position.\n     * @memberof ColladaScene.prototype\n     * @type {Vec3}\n     */\n    placePoint: {\n        get: function () {\n            return this._placePoint;\n        },\n        set: function (value) {\n            this._placePoint = value;\n        }\n    },\n\n    /**\n     * The scene's altitude mode. May be one of\n     * <ul>\n     *  <li>[WorldWind.ABSOLUTE]{@link WorldWind#ABSOLUTE}</li>\n     *  <li>[WorldWind.RELATIVE_TO_GROUND]{@link WorldWind#RELATIVE_TO_GROUND}</li>\n     *  <li>[WorldWind.CLAMP_TO_GROUND]{@link WorldWind#CLAMP_TO_GROUND}</li>\n     * </ul>\n     * @default WorldWind.ABSOLUTE\n     * @memberof ColladaScene.prototype\n     * @type {String}\n     */\n    altitudeMode: {\n        get: function () {\n            return this._altitudeMode;\n        },\n        set: function (value) {\n            this._altitudeMode = value;\n        }\n    },\n\n    /**\n     * The scene's transformation matrix containing the scale, rotations and translations\n     * @memberof ColladaScene.prototype\n     * @type {Matrix}\n     */\n    transformationMatrix: {\n        get: function () {\n            return this._transformationMatrix;\n        },\n        set: function (value) {\n            this._transformationMatrix = value;\n        }\n    },\n\n    /**\n     * The scene's normal matrix\n     * @memberof ColladaScene.prototype\n     * @type {Matrix}\n     */\n    normalMatrix: {\n        get: function () {\n            return this._normalMatrix;\n        },\n        set: function (value) {\n            this._normalMatrix = value;\n        }\n    },\n\n    /**\n     * Force the use of the nodes transformation info. Some 3d software may break the transformations when\n     * importing/exporting models to collada format. Set to false to ignore the the nodes transformation.\n     * Only use this option if the model does not render properly.\n     * @memberof ColladaScene.prototype\n     * @default true\n     * @type {Boolean}\n     */\n    localTransforms: {\n        get: function () {\n            return this._localTransforms;\n        },\n        set: function (value) {\n            this._localTransforms = value;\n        }\n    },\n\n    /**\n     * Force the use of the texture path specified in the collada file. Set to false to ignore the paths of the\n     * textures in the collada file and instead get the textures from the same dir as the collada file.\n     * @memberof ColladaScene.prototype\n     * @default true\n     * @type {Boolean}\n     */\n    useTexturePaths: {\n        get: function () {\n            return this._useTexturePaths;\n        },\n        set: function (value) {\n            this._useTexturePaths = value;\n        }\n    },\n\n    /**\n     * An array of node id's to not render.\n     * @memberof ColladaScene.prototype\n     * @type {String[]}\n     */\n    nodesToHide: {\n        get: function () {\n            return this._nodesToHide;\n        },\n        set: function (value) {\n            this._nodesToHide = value;\n        }\n    },\n\n    /**\n     * Set to true to force the renderer to not draw the nodes passed to the nodesToHide list.\n     * @memberof ColladaScene.prototype\n     * @default false\n     * @type {Boolean}\n     */\n    hideNodes: {\n        get: function () {\n            return this._hideNodes;\n        },\n        set: function (value) {\n            this._hideNodes = value;\n        }\n    }\n\n});\n\n// Internal. Intentionally not documented.\nColladaScene.prototype.setSceneData = function (sceneData) {\n    if (sceneData) {\n        this._nodes = sceneData.root.children;\n        this._meshes = sceneData.meshes;\n        this._materials = sceneData.materials;\n        this._images = sceneData.images;\n        this._upAxis = sceneData.metadata.up_axis;\n        this._dirPath = sceneData.dirPath;\n\n        this.flattenModel();\n    }\n};\n\n// Internal. Intentionally not documented.\nColladaScene.prototype.flattenModel = function () {\n    for (var i = 0, nodesLen = this._nodes.length; i < nodesLen; i++) {\n        this.flattenNode(this._nodes[i]);\n    }\n\n    this._entities.sort(function (a, b) {\n        var va = (a.imageKey === null) ? \"\" : \"\" + a,\n            vb = (b.imageKey === null) ? \"\" : \"\" + b;\n        return va > vb ? 1 : (va === vb ? 0 : -1);\n    });\n};\n\n// Internal. Intentionally not documented.\nColladaScene.prototype.flattenNode = function (node) {\n    if (node.mesh) {\n        var meshKey = node.mesh;\n        var buffers = this._meshes[meshKey].buffers;\n\n        for (var i = 0, bufLen = buffers.length; i < bufLen; i++) {\n            var materialBuf = buffers[i].material;\n\n            for (var j = 0; j < node.materials.length; j++) {\n                if (materialBuf === node.materials[j].symbol) {\n                    var materialKey = node.materials[j].id;\n                    break;\n                }\n            }\n\n            var material = this._materials[materialKey];\n            var imageKey = null;\n            var hasTexture = material && material.textures && buffers[i].uvs && buffers[i].uvs.length > 0;\n            if (hasTexture) {\n                if (material.textures.diffuse) {\n                    imageKey = material.textures.diffuse.mapId;\n                } else if (material.textures.reflective) {\n                    imageKey = material.textures.reflective.mapId;\n                }\n            }\n\n            this._entities.push({\n                mesh: buffers[i],\n                material: material,\n                node: node,\n                imageKey: imageKey\n            });\n        }\n    }\n\n    for (var k = 0; k < node.children.length; k++) {\n        this.flattenNode(node.children[k]);\n    }\n};\n\n// Internal. Intentionally not documented.\nColladaScene.prototype.render = function (dc) {\n    var orderedScene;\n    var frustum = dc.frustumInModelCoordinates;\n\n    if (!this.enabled) {\n        return;\n    }\n\n    if (this.lastFrameTime !== dc.timestamp) {\n        orderedScene = this.makeOrderedRenderable(dc);\n    }\n\n    if (!orderedScene) {\n        return;\n    }\n\n    if (!frustum.containsPoint(this._placePoint)) {\n        return;\n    }\n\n    orderedScene.layer = dc.currentLayer;\n\n    this.lastFrameTime = dc.timestamp;\n\n    dc.addOrderedRenderable(orderedScene);\n};\n\n// Internal. Intentionally not documented.\nColladaScene.prototype.makeOrderedRenderable = function (dc) {\n    dc.surfacePointForMode(this._position.latitude, this._position.longitude, this._position.altitude,\n        this._altitudeMode, this._placePoint);\n\n    this.eyeDistance = dc.eyePoint.distanceTo(this._placePoint);\n\n    return this;\n};\n\n// Internal. Intentionally not documented.\nColladaScene.prototype.renderOrdered = function (dc) {\n    this.drawOrderedScene(dc);\n\n    if (dc.pickingMode) {\n        var po = new PickedObject(this.pickColor.clone(), this, this._position, this.layer, false);\n        dc.resolvePick(po);\n    }\n};\n\n// Internal. Intentionally not documented.\nColladaScene.prototype.drawOrderedScene = function (dc) {\n    try {\n        this.beginDrawing(dc);\n    } finally {\n        this.endDrawing(dc);\n    }\n};\n\n// Internal. Intentionally not documented.\nColladaScene.prototype.beginDrawing = function (dc) {\n    var gl = dc.currentGlContext;\n    var gpuResourceCache = dc.gpuResourceCache;\n\n    var vboId = gpuResourceCache.resourceForKey(this._vboCacheKey);\n    var iboId = gpuResourceCache.resourceForKey(this._iboCacheKey);\n\n    if (!vboId) {\n        this.setupBuffers(dc);\n        vboId = gpuResourceCache.resourceForKey(this._vboCacheKey);\n        iboId = gpuResourceCache.resourceForKey(this._iboCacheKey);\n    }\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, vboId);\n    if (iboId) {\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, iboId);\n    }\n\n    dc.findAndBindProgram(BasicTextureProgram);\n    gl.enableVertexAttribArray(0);\n\n    if (dc.pickingMode) {\n        this.pickColor = dc.uniquePickColor();\n    }\n\n    this.computeTransformationMatrix(dc.globe);\n\n    for (var i = 0, len = this._entities.length; i < len; i++) {\n        var mustRenderNode = this.mustRenderNode(this._entities[i].node.id);\n        if (mustRenderNode) {\n            this.draw(dc, this._entities[i]);\n        }\n    }\n};\n\n// Internal. Intentionally not documented.\nColladaScene.prototype.setupBuffers = function (dc) {\n    var gl = dc.currentGlContext;\n    var sizeOfFloat32 = Float32Array.BYTES_PER_ELEMENT || 4;\n    var sizeOfUint16 = Uint16Array.BYTES_PER_ELEMENT || 2;\n    var sizeOfUint32 = Uint32Array.BYTES_PER_ELEMENT || 4;\n    var is32BitIndices = false;\n    var numIndices = 0;\n    var numVertices = 0;\n\n    for (var i = 0, len = this._entities.length; i < len; i++) {\n        var mesh = this._entities[i].mesh;\n        if (mesh.indexedRendering) {\n            numIndices += mesh.indices.length;\n            if (mesh.indices instanceof Uint32Array) {\n                is32BitIndices = true;\n            }\n        }\n        numVertices += mesh.vertices.length;\n        if (this._entities[i].imageKey) {\n            numVertices += mesh.uvs.length;\n        }\n        if (mesh.normals && mesh.normals.length) {\n            numVertices += mesh.normals.length;\n        }\n    }\n\n    var vbo = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, vbo);\n    gl.bufferData(gl.ARRAY_BUFFER, numVertices * sizeOfFloat32, gl.STATIC_DRAW);\n\n    var offset = 0;\n    for (i = 0, len = this._entities.length; i < len; i++) {\n        var data = this._entities[i].mesh.vertices;\n        this._entities[i].vertexOffset = offset;\n        gl.bufferSubData(gl.ARRAY_BUFFER, offset * sizeOfFloat32, data);\n        offset += data.length;\n    }\n\n    for (i = 0, len = this._entities.length; i < len; i++) {\n        if (this._entities[i].imageKey) {\n            data = this._entities[i].mesh.uvs;\n            this._entities[i].uvOffset = offset;\n            gl.bufferSubData(gl.ARRAY_BUFFER, offset * sizeOfFloat32, data);\n            offset += data.length;\n        }\n    }\n\n    for (i = 0, len = this._entities.length; i < len; i++) {\n        data = data = this._entities[i].mesh.normals;\n        if (data && data.length) {\n            this._entities[i].normalOffset = offset;\n            gl.bufferSubData(gl.ARRAY_BUFFER, offset * sizeOfFloat32, data);\n            offset += data.length;\n        }\n    }\n\n    var indexSize = sizeOfUint16;\n    var indexBufferSize = numIndices * indexSize;\n    var uIntExt;\n    if (is32BitIndices) {\n        uIntExt = dc.getExtension('OES_element_index_uint');\n\n        if (!uIntExt) {\n            Logger.log(Logger.LEVEL_SEVERE,\n                'The 3D model is too big and might not render properly. \\n' +\n                'Your browser does not support the \"OES_element_index_uint\" extension, ' +\n                'required to render large models.'\n            );\n        } else {\n            indexSize = sizeOfUint32;\n            indexBufferSize = numIndices * indexSize;\n        }\n    }\n\n    if (numIndices) {\n        var ibo = gl.createBuffer();\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, ibo);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, indexBufferSize, gl.STATIC_DRAW);\n\n        offset = 0;\n        for (i = 0, len = this._entities.length; i < len; i++) {\n            mesh = this._entities[i].mesh;\n            if (mesh.indexedRendering) {\n                data = mesh.indices;\n                if (data instanceof Uint32Array && !uIntExt) {\n                    data = new Uint16Array(data);\n                }\n                this._entities[i].indexOffset = offset;\n                this._entities[i].indexSize = indexSize;\n                gl.bufferSubData(gl.ELEMENT_ARRAY_BUFFER, offset * indexSize, data);\n                offset += data.length;\n            }\n        }\n    }\n\n    this._vboCacheKey = dc.gpuResourceCache.generateCacheKey();\n    dc.gpuResourceCache.putResource(this._vboCacheKey, vbo, numVertices * sizeOfFloat32);\n\n    if (numIndices) {\n        this._iboCacheKey = dc.gpuResourceCache.generateCacheKey();\n        dc.gpuResourceCache.putResource(this._iboCacheKey, ibo, indexBufferSize);\n    }\n};\n\n// Internal. Intentionally not documented.\nColladaScene.prototype.draw = function (dc, entity) {\n    var gl = dc.currentGlContext;\n    var program = dc.currentProgram;\n    var gpuResourceCache = dc.gpuResourceCache;\n\n    var buffers = entity.mesh;\n    var material = entity.material;\n\n    var nodeWorldMatrix = entity.node.worldMatrix;\n    var nodeNormalMatrix = entity.node.normalMatrix;\n\n    var hasLighting = buffers.normals && buffers.normals.length;\n\n    var imageKey = entity.imageKey;\n\n    this.applyColor(dc, material);\n\n    if (imageKey) {\n        var imagePath = this._useTexturePaths ? this._images[imageKey].path : this._images[imageKey].filename;\n        var textureCacheKey = this._dirPath + imagePath;\n        this._activeTexture = gpuResourceCache.resourceForKey(textureCacheKey);\n        if (!this._activeTexture) {\n            var wrapMode = buffers.isClamp ? gl.CLAMP_TO_EDGE : gl.REPEAT;\n            this._activeTexture = gpuResourceCache.retrieveTexture(gl, textureCacheKey, wrapMode);\n        }\n        var textureBound = this._activeTexture && this._activeTexture.bind(dc);\n        if (textureBound) {\n            program.loadTextureEnabled(gl, true);\n            gl.vertexAttribPointer(2, 2, gl.FLOAT, false, 8, entity.uvOffset * 4);\n            gl.enableVertexAttribArray(2);\n            program.loadModulateColor(gl, dc.pickingMode);\n        } else {\n            program.loadTextureEnabled(gl, false);\n            gl.disableVertexAttribArray(2);\n        }\n    } else {\n        program.loadTextureEnabled(gl, false);\n        gl.disableVertexAttribArray(2);\n    }\n\n    if (hasLighting && !dc.pickingMode) {\n        program.loadApplyLighting(gl, 1);\n        gl.vertexAttribPointer(1, 3, gl.FLOAT, false, 12, entity.normalOffset * 4);\n        gl.enableVertexAttribArray(1);\n    } else {\n        program.loadApplyLighting(gl, 0);\n        gl.disableVertexAttribArray(1);\n    }\n\n    this.applyMatrix(dc, hasLighting, textureCacheKey, nodeWorldMatrix, nodeNormalMatrix);\n\n    gl.vertexAttribPointer(0, 3, gl.FLOAT, false, 12, entity.vertexOffset * 4);\n\n    if (buffers.indexedRendering) {\n        var indexOffsetBytes = entity.indexOffset * entity.indexSize;\n        if (buffers.indices instanceof Uint32Array && dc.getExtension('OES_element_index_uint')) {\n            gl.drawElements(gl.TRIANGLES, buffers.indices.length, gl.UNSIGNED_INT, indexOffsetBytes);\n        } else {\n            gl.drawElements(gl.TRIANGLES, buffers.indices.length, gl.UNSIGNED_SHORT, indexOffsetBytes);\n        }\n    } else {\n        gl.drawArrays(gl.TRIANGLES, 0, Math.floor(buffers.vertices.length / 3));\n    }\n};\n\n// Internal. Intentionally not documented.\nColladaScene.prototype.applyColor = function (dc, material) {\n    var gl = dc.currentGlContext,\n        program = dc.currentProgram;\n\n    if (material) {\n        if (material.techniqueType === 'constant') {\n            var diffuse = material.reflective;\n        } else {\n            diffuse = material.diffuse;\n        }\n    }\n\n    var opacity;\n    var r = 1, g = 1, b = 1, a = 1;\n\n    if (diffuse) {\n        r = diffuse[0];\n        g = diffuse[1];\n        b = diffuse[2];\n        a = diffuse[3] != null ? diffuse[3] : 1;\n    }\n\n    this._tmpColor.set(r, g, b, a);\n    opacity = a * this.layer.opacity;\n    gl.depthMask(opacity >= 1 || dc.pickingMode);\n    program.loadColor(gl, dc.pickingMode ? this.pickColor : this._tmpColor);\n    program.loadOpacity(gl, dc.pickingMode ? (opacity > 0 ? 1 : 0) : opacity);\n};\n\n// Internal. Intentionally not documented.\nColladaScene.prototype.applyMatrix = function (dc, hasLighting, hasTexture, nodeWorldMatrix, nodeNormalMatrix) {\n    this._mvpMatrix.copy(dc.modelviewProjection);\n    this._mvpMatrix.multiplyMatrix(this._transformationMatrix);\n\n    if (nodeWorldMatrix && this._localTransforms) {\n        this._mvpMatrix.multiplyMatrix(nodeWorldMatrix);\n    }\n\n    if (hasLighting && !dc.pickingMode) {\n        this._normalMatrix.copy(dc.modelviewNormalTransform);\n        this._normalMatrix.multiplyMatrix(this._normalTransformMatrix);\n        if (nodeNormalMatrix && this._localTransforms) {\n            this._normalMatrix.multiplyMatrix(nodeNormalMatrix);\n        }\n\n        dc.currentProgram.loadModelviewInverse(dc.currentGlContext, this._normalMatrix);\n    }\n\n    if (hasTexture && this._activeTexture) {\n        dc.currentProgram.loadTextureMatrix(dc.currentGlContext, this._texCoordMatrix);\n        this._activeTexture = null;\n    }\n\n    dc.currentProgram.loadModelviewProjection(dc.currentGlContext, this._mvpMatrix);\n};\n\n// Internal. Intentionally not documented.\nColladaScene.prototype.endDrawing = function (dc) {\n    var gl = dc.currentGlContext;\n    var program = dc.currentProgram;\n\n    gl.disableVertexAttribArray(1);\n    gl.disableVertexAttribArray(2);\n    program.loadApplyLighting(gl, 0);\n    program.loadTextureEnabled(gl, false);\n};\n\n// Internal. Intentionally not documented.\nColladaScene.prototype.computeTransformationMatrix = function (globe) {\n    this._transformationMatrix.setToIdentity();\n\n    this._transformationMatrix.multiplyByLocalCoordinateTransform(this._placePoint, globe);\n\n    this._transformationMatrix.multiplyByRotation(1, 0, 0, this._xRotation);\n    this._transformationMatrix.multiplyByRotation(0, 1, 0, this._yRotation);\n    this._transformationMatrix.multiplyByRotation(0, 0, 1, this._zRotation);\n\n    this._transformationMatrix.multiplyByScale(this._scale, this._scale, this._scale);\n\n    this._transformationMatrix.multiplyByTranslation(this._xTranslation, this._yTranslation, this._zTranslation);\n\n    this._transformationMatrix.multiplyByRotation(1, 0, 0, this.preX);\n    this._transformationMatrix.multiplyByRotation(0, 1, 0, this.preY);\n    this._transformationMatrix.multiplyByRotation(0, 0, 1, this.preZ);\n\n    this.computeNormalMatrix();\n};\n\n// Internal. Intentionally not documented.\nColladaScene.prototype.computeNormalMatrix = function () {\n    this._transformationMatrix.extractRotationAngles(this._tmpVector);\n    this._normalTransformMatrix.setToIdentity();\n    this._normalTransformMatrix.multiplyByRotation(-1, 0, 0, this._tmpVector[0]);\n    this._normalTransformMatrix.multiplyByRotation(0, -1, 0, this._tmpVector[1]);\n    this._normalTransformMatrix.multiplyByRotation(0, 0, -1, this._tmpVector[2]);\n};\n\n// Internal. Intentionally not documented.\nColladaScene.prototype.mustRenderNode = function (nodeId) {\n    var draw = true;\n    if (this._hideNodes) {\n        var pos = this._nodesToHide.indexOf(nodeId);\n        draw = (pos === -1);\n    }\n    return draw;\n};\n\nexport default ColladaScene;","// import WorldWind from 'webworldwind-esa';\nimport wwx from 'webworldwind-x';\nimport satConfig from './satConfig'\n// import SatelliteModel from './wwwx/shapes/satellites/Model';\nimport SatelliteModelLayer from './wwwxx/layer/SatelliteModelLayer'\n// const Location = WorldWind.Location,\n//     Sector = WorldWind.Sector,\n//     WmsLayer = WorldWind.WmsLayer;\n\n// class modelsLayer extends Layer {\n//     constructor(){\n//         super({\n//             service: \"https://tiles.maps.eox.at/wms\",\n//             layerNames: \"s2cloudless-2018\",\n//             title: \"Sentinel Cloudless Layer\",\n//             sector: new Sector(-90, 90, -180, 180),\n//             levelZeroDelta: new Location(45, 45),\n//             numLevels: 19,\n//             format: \"image/jpg\",\n//             opacity: 1,\n//             size: 256,\n//             version: \"1.3.0\"\n//         });\n//     }\n// }\n// const options = {\n//     rotations: layerConfig.satData.rotations,\n//     preRotations: layerConfig.satData.preRotations,\n//     scale: layerConfig.satData.scale,\n//     translations: layerConfig.satData.translations,\n//     ignoreLocalTransforms: layerConfig.satData.ignoreLocalTransforms,\n// }\n// const layer = new SatelliteModelLayer({key: layerKey, time: time, onLayerChanged}, options);\n// layer.setRerender(() => wwd.redraw());\n// getModel(`${layerConfig.satData.filePath}${layerConfig.satData.fileName}`, layerKey).then(\n//     (model) => {\n//         const satrec = EoUtils.computeSatrec(layerConfig.satData.tleLineOne, layerConfig.satData.tleLineTwo);\n//         const position = EoUtils.getOrbitPosition(satrec, new Date(time));\n//         layer.setModel(model, options, position)\n//         layer.setTle([layerConfig.satData.tleLineOne, layerConfig.satData.tleLineTwo]);\n//     }\n// );\n\n// export default SentinelCloudlessLayer;\n// const {\n//     Position,\n// } = WorldWind;\nconst {\n    EoUtils,\n} = wwx;\n\nvar satelliteLayers = []\n\n    for(let i=0 ; i<satConfig.length ; i++) {\n        console.log(satConfig[i].name)\n\n        const options = {\n            rotations: satConfig[i].rotations,\n            preRotations: satConfig[i].preRotations,\n            scale: satConfig[i].scale,\n            translations: satConfig[i].translations,\n            ignoreLocalTransforms: satConfig[i].ignoreLocalTransforms\n        }\n\n        let layer = new SatelliteModelLayer({key: satConfig[i].key, time: new Date(), }, options)\n\n        const satrec = EoUtils.computeSatrec(satConfig[i].tleLineOne, satConfig[i].tleLineTwo);\n        const position = EoUtils.getOrbitPosition(satrec, new Date());\n\n        fetch(satConfig[i].filePath).then(response => {\n            return response.json();\n        }).then(satelliteData => {\n            layer.setModel(satelliteData, {\n                rotations: satConfig[i].rotations,\n                preRotations: satConfig[i].preRotations,\n                scale: satConfig[i].scale,\n                translations: satConfig[i].translations,\n                ignoreLocalTransforms: satConfig[i].ignoreLocalTransforms\n            }, position );\n        });\n\n        // layer.setModel(model, options, position)\n        layer.setTle([satConfig[i].tleLineOne, satConfig[i].tleLineTwo]);\n\n\n        satelliteLayers.push(layer)\n    }\n\n\nexport default satelliteLayers","import WorldWind from 'webworldwind-esa';\r\nimport ColladaScene from \"../../collada/ColladaScene\";\r\n\r\nconst {\r\n    Matrix,\r\n    Renderable\r\n} = WorldWind;\r\n\r\n/**\r\n * @exports Model\r\n */\r\nclass Model extends Renderable {\r\n    /**\r\n     * Constructs model of the satellite on the given position.\r\n     * @param model {Object} Model information. Collada information.\r\n     * @param satellite {Object} The details about the satellite and the way it should be transformed and presented.\r\n     * @param position {Position} The exact position of the center of the satellite.\r\n     */\r\n    constructor(model, satellite, position) {\r\n        super();\r\n\r\n        this._satellite = satellite;\r\n        const satelliteModel = this.parse(model);\r\n        this.draw(position, satelliteModel);\r\n    }\r\n\r\n    /**\r\n     * Updates the position of the model.\r\n     * @param position {Position} Current position of the model.\r\n     */\r\n    position(position) {\r\n        this._model.position = position;\r\n    }\r\n\r\n    /**\r\n     * Draws the collada model into a Collada Scene.\r\n     * @param position {Position} Position of the satellite.\r\n     * @param modelData Collada Model Information.\r\n     */\r\n    draw(position, modelData) {\r\n        const nodesToHide = [\r\n            'PlatformCircleAndName', 'SolarWingsCircleAndName', 'C-SarCircleAndName',\r\n            'PlatformTextsAndArrows', 'SolarWingsTextsAndArrows', 'C-SarTextsAndArrows',\r\n\r\n            'SolarArrayGroup', 'WingsDetailsGroup', 'Group004', 'MsiGroup', 'SatelliteGroup',\r\n\r\n            'SatelliteDimensionsGroup', 'MWRGroup', 'SRALGroup', 'OLCIGroup', 'SLSTRGroup'\r\n        ];\r\n        const {\r\n            rotations,\r\n            translations,\r\n            preRotations,\r\n            scale,\r\n            shortName,\r\n            ignoreLocalTransforms\r\n        } = this._satellite;\r\n\r\n        const model = new ColladaScene(position, modelData);\r\n        model.type = this.type;\r\n        model.satShortName = shortName;\r\n\r\n        model.nodesToHide = nodesToHide;\r\n        model.hideNodes = true;\r\n        model.useTexturePaths = false;\r\n        model.localTransforms = ignoreLocalTransforms;\r\n        model.scale = scale;\r\n        model.xRotation = rotations.x;\r\n        model.yRotation = rotations.y;\r\n        model.zRotation = rotations.z;\r\n        model.xTranslation = translations.x;\r\n        model.yTranslation = translations.y;\r\n        model.zTranslation = translations.z;\r\n        model.preX = preRotations.x;\r\n        model.preY = preRotations.y;\r\n        model.preZ = preRotations.z;\r\n\r\n        this._model = model;\r\n        modelData = null;\r\n    }\r\n\r\n    /**\r\n     * Parses the collada model and update the information relevant to the satellites.\r\n     * @param {{ meshes:Object, root:Object, materials:{reflective:Array, diffuse:Array} }} jsonData\r\n     * @return {Object} Collada model.\r\n     */\r\n    parse(jsonData) {\r\n        const meshes = jsonData.meshes;\r\n        const nodes = jsonData.root.children;\r\n        const materials = jsonData.materials;\r\n\r\n        for (let key in meshes) {\r\n            if (meshes.hasOwnProperty(key)) {\r\n                const buffers = meshes[key].buffers;\r\n\r\n                for (let i = 0; i < buffers.length; i++) {\r\n                    const vertices = buffers[i].vertices || [];\r\n                    const normals = buffers[i].normals || [];\r\n                    const uvs = buffers[i].uvs || [];\r\n                    const indices = buffers[i].indices || [];\r\n\r\n                    const eVertices = new Float32Array(vertices);\r\n                    const eNormals = new Float32Array(normals);\r\n                    const eUvs = new Float32Array(uvs);\r\n                    const eIndices = new Uint16Array(indices);\r\n\r\n                    buffers[i].vertices = eVertices;\r\n                    buffers[i].normals = eNormals;\r\n                    buffers[i].uvs = eUvs;\r\n                    buffers[i].indices = eIndices;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < nodes.length; i++) {\r\n            const node = nodes[i];\r\n            if (node.mesh) {\r\n                const worldMatrix = node.worldMatrix.slice(0);\r\n                node.worldMatrix = Matrix.fromIdentity();\r\n                node.worldMatrix.copy(worldMatrix);\r\n\r\n                if (node.children.length) {\r\n                    console.info('node has children', node);\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let key in materials) {\r\n            if (materials.hasOwnProperty(key)) {\r\n                const material = materials[key];\r\n\r\n                if (material.id === '_3_-_Default-material') {\r\n                    if (material.reflective) {\r\n                        material.reflective[0] = 0.289219;\r\n                        material.reflective[1] = 0.713497;\r\n                        material.reflective[2] = 0.870753;\r\n                        material.reflective[3] = 1;\r\n                    }\r\n                } else if (material.id === '_1_-_Default_004-material') {\r\n                    material.diffuse[3] = 0;\r\n                } else if (material.id === '_1_-_Default-material') {\r\n                    material.diffuse[3] = 0;\r\n                } else if (material.id === 'Chrome-material') {\r\n                    material.textures = null;\r\n                    material.diffuse[0] = 0.3137;\r\n                    material.diffuse[1] = 0.3137;\r\n                    material.diffuse[2] = 0.3137;\r\n                } else if (material.id === 'Satellite_panel-material') {\r\n                    material.textures.reflective.mapId = 'image9';\r\n                } else if (material.id === '_3_-_Default') {\r\n                    material.textures.reflective.mapId = 'image4';\r\n                } else if (material.id === '_4_-_Default-material') {\r\n                    material.textures.reflective.mapId = 'image5';\r\n                } else if (material.id === '_5_-_Default_002-material') {\r\n                    material.textures.reflective.mapId = 'image6';\r\n                } else if (material.id === '_5_-_Default-material') {\r\n                    material.textures.reflective.mapId = 'image5';\r\n                }\r\n            }\r\n        }\r\n\r\n        return jsonData;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    render(dc) {\r\n        if(!this._model || !this.enabled) {\r\n            return;\r\n        }\r\n\r\n        this._model.render(dc);\r\n    }\r\n}\r\n\r\nexport default Model;","import WorldWind from 'webworldwind-esa';\nimport WorldWindX from 'webworldwind-x';\nimport Model from '../shapes/satellites/Model';\n\nconst {\n    RenderableLayer,\n    Position,\n} = WorldWind;\n\nconst {\n    EoUtils\n} = WorldWindX;\n\n\nconst DEFAULT_MODEL_OPTIONS = {\n    rotations: {\n        x: 0,\n        y: 0,\n        z: 0,\n        headingAxis: [0, 0, 1],\n        headingAdd: -90,\n        headingMultiply: 1\n    },\n    preRotations: {\n        x: 0,\n        y: 0,\n        z: 0\n    },\n    scale: 500000,\n    translations: {\n        x: -0.1,\n        y: -0.1,\n        z: 0\n    },\n    ignoreLocalTransforms: true\n}\n\n/**\n * Class extending WorldWind.RenderableLayer. Layer can render only one model of satellite. It`s possible to set position data of model.\n * @param options {Object}\n * @param options.key {String}\n * @param options.time {Date} Time of the satellite.\n * @param options.onLayerChanged {func}\n * @augments WorldWind.RenderableLayer\n * @constructor\n */\nclass SatelliteModelLayer extends RenderableLayer {\n\tconstructor(options, satelliteOptions) {\n        super(options);\n        this.type = 'SatelliteModelLayer';\n        this._satelliteOptions = satelliteOptions;\n        this._rerenderMap = null;\n        this.key = options.key;\n        this.model = null;\n        this.time = options.time;\n        this.Tle = null;\n        this.heading = null;\n        this.onLayerChanged = options.onLayerChanged || null;\n    };\n    \n    /**\n     * \n     * @param {Object} collada model \n     * @param {Object} options\n     * @param {Position} position\n     */\n    setModel(model, options = DEFAULT_MODEL_OPTIONS, position) {\n        if(model) {\n            this.model = new Model(model, options, position);\n\n            this.removeAllRenderables();\n            this.addRenderable(this.model);\n            this.doRerender();\n        }\n    }\n\n    /**\n     * @param position {Position} Position of the satellite.\n     */\n    setPosition(position) {\n        if(position && this.model) {\n            this.model.position(position);\n        }\n    }\n\n    \n    /**\n     * @param position {Array.<lte>} Lte.\n     */\n    setTle(Tle) {\n        if(Tle) {\n            this.Tle = Tle;\n            this.update();\n        }\n    }\n    \n    /**\n     * @param position {Array.<lte>} Lte.\n     */\n    update() {\n        if(this.Tle && this.time) {\n            const satrec = EoUtils.computeSatrec(...this.Tle);\n            const position = EoUtils.getOrbitPosition(satrec, new Date(this.time));\n            this.setPosition(new Position(position.latitude, position.longitude, position.altitude));\n            if(this.model) {\n                this.alignWithOrbit(this.time, position, EoUtils.computeSatrec(...this.Tle), this._satelliteOptions.rotations, this.model._model);\n            }\n            this.doRerender();\n        }\n    }\n\n    alignWithOrbit(date, currentPosition, satrec, rotations, model) {\n        const now = date.getTime();\n        const nextPosition = EoUtils.getOrbitPosition(satrec, new Date(now + 10000));\n        const headingRad = EoUtils.headingAngleRadians(currentPosition.latitude, currentPosition.longitude, nextPosition.latitude, nextPosition.longitude);\n        const heading = EoUtils.rad2deg(headingRad);\n        this.heading = heading;\n\n        if(typeof this.onLayerChanged === 'function') {\n            this.onLayerChanged({\n                satKey: this.satName,\n                layerKey: this.key,\n                type: this.type,\n            }, {update: {\n                heading: this.heading\n            }});\n        }\n\n        const angle = (heading + rotations.headingAdd) * rotations.headingMultiply;\n\n        if (heading !== 0) {\n            if (rotations.headingAxis[0] === 1) {\n                model.xRotation = angle;\n            }\n            else if (rotations.headingAxis[1] === 1) {\n                model.yRotation = angle;\n            }\n            else if (rotations.headingAxis[2] === 1) {\n                model.zRotation = angle;\n            }\n        }\n    }\n\n    /**\n     * @param time {Date} Time of the satellite.\n     */\n    setTime(time) {\n        if(time) {\n            this.time = time;\n            this.update();\n        }\n    }\n    \n\tsetRerender(rerenderer) {\n\t\tif(typeof rerenderer === 'function') {\n\t\t\tthis._rerenderMap = rerenderer;\n\t\t}\n\t}\n\n\tdoRerender() {\n\t\tif(typeof this._rerenderMap === 'function') {\n\t\t\tthis._rerenderMap();\n\t\t}\n\t}\n}\n\nexport default SatelliteModelLayer;\n\n","import WorldWind from \"webworldwind-esa\";\n\nexport const bgLayers = [\n    {\n        service: \"https://tiles.maps.eox.at/wms\",\n        layerNames: \"s2cloudless-2018\",\n        title: \"s2cloudless-2018\",\n        numLevels: 19,\n        format: \"image/png\",\n        size: 256,\n        sector: WorldWind.Sector.FULL_SPHERE,\n        levelZeroDelta: new WorldWind.Location(90, 90)\n    },\n    {\n        service: \"https://tiles.esa.maps.eox.at/wms\",\n        layerNames: \"s2cloudless-2018\",\n        title: \"s2cloudless-2018 esa\",\n        numLevels: 19,\n        format: \"image/png\",\n        size: 256,\n        sector: WorldWind.Sector.FULL_SPHERE,\n        levelZeroDelta: new WorldWind.Location(90, 90)\n    },\n    {\n        service: \"https://tiles.esa.maps.eox.at/wms\",\n        layerNames: \"osm\",\n        title: \"osm\",\n        numLevels: 19,\n        format: \"image/png\",\n        size: 256,\n        sector: WorldWind.Sector.FULL_SPHERE,\n        levelZeroDelta: new WorldWind.Location(90, 90)\n    },\n    {\n        service: \"https://tiles.esa.maps.eox.at/wms\",\n        layerNames: \"terrain-light\",\n        title: \"terrain-light\",\n        numLevels: 19,\n        format: \"image/png\",\n        size: 256,\n        sector: WorldWind.Sector.FULL_SPHERE,\n        levelZeroDelta: new WorldWind.Location(90, 90)\n    },\n    {\n        service: \"https://tiles.maps.eox.at/wms\",\n        layerNames: \"terrain\",\n        title: \"terrain\",\n        numLevels: 19,\n        format: \"image/png\",\n        size: 256,\n        sector: WorldWind.Sector.FULL_SPHERE,\n        levelZeroDelta: new WorldWind.Location(90, 90)\n    }\n]\nexport const ovLayers = [\n\n    {\n        service: \"https://tiles.maps.eox.at/wms\",\n        layerNames: \"hydrography\",\n        title: \"hydrography\",\n        numLevels: 19,\n        format: \"image/png\",\n        size: 256,\n        sector: WorldWind.Sector.FULL_SPHERE,\n        levelZeroDelta: new WorldWind.Location(90, 90)\n    },\n    {\n        service: \"https://tiles.maps.eox.at/wms\",\n        layerNames: \"overlay_bright\",\n        title: \"overlay_bright\",\n        numLevels: 19,\n        format: \"image/png\",\n        size: 256,\n        sector: WorldWind.Sector.FULL_SPHERE,\n        levelZeroDelta: new WorldWind.Location(90, 90)\n    }\n]\n\n\n","import  { useState, useEffect, useRef } from \"react\";\nimport WorldWind from \"webworldwind-esa\";\nimport StarFieldLayer from \"./wwwxx/layer/starfield/StarFieldLayer\" // import a custom one as the base url is not set when using wwwx\n// import TexturedSurfacePolygon from './wwwx/shapes/TexturedSurfacePolygon'\nimport wwwx from \"webworldwind-x\";\n// import modelsLayer from './satelliteLayer';\nimport satelliteLayers from './satelliteLayers';\n\nimport {bgLayers, ovLayers} from './layerConfig';\n\n\n// BasicWorldWindowController.prototype.applyLimits = function () {\n//     var navigator = this.wwd.navigator;\n\n//     // Clamp latitude to between -90 and +90, and normalize longitude to between -180 and +180.\n//     navigator.lookAtLocation.latitude = WWMath.clamp(navigator.lookAtLocation.latitude, -90, 90);\n//     navigator.lookAtLocation.longitude = Angle.normalizedDegreesLongitude(navigator.lookAtLocation.longitude);\n\n//     // Clamp range to values greater than 1 in order to prevent degenerating to a first-person navigator when\n//     // range is zero.\n//     navigator.range = WWMath.clamp(navigator.range, 1, Number.MAX_VALUE);\n\n//     // Normalize heading to between -180 and +180.\n//     navigator.heading = Angle.normalizedDegrees(navigator.heading);\n\n//     // Clamp tilt to between 0 and +90 to prevent the viewer from going upside down.\n//     navigator.tilt = WWMath.clamp(navigator.tilt, 0, 90);\n\n//     // Normalize heading to between -180 and +180.\n//     navigator.roll = Angle.normalizedDegrees(navigator.roll);\n\n//     // Apply 2D limits when the globe is 2D.\n//     if (this.wwd.globe.is2D() && navigator.enable2DLimits) {\n//         // Clamp range to prevent more than 360 degrees of visible longitude. Assumes a 45 degree horizontal\n//         // field of view.\n//         var maxRange = 2  Math.PI  this.wwd.globe.equatorialRadius;\n//         navigator.range = WWMath.clamp(navigator.range, 1, maxRange);\n\n//         // Force tilt to 0 when in 2D mode to keep the viewer looking straight down.\n//         navigator.tilt = 0;\n//     }\n// };\n\nexport function useEww({ id, clon, clat, alt, starfield, atmosphere, background, overlay, names, satellites, dem }) {\n    // console.log('useEww renders')\n    \n  \n    const eww = useRef(null)\n   \n    const [projection, setProjection] = useState(\"3D\")\n    // const [aoi, setAoi] = useState({type: null, value: null})\n    const [aoi, setAoi] = useState('')\n    const [geojsonlayers, setGeojsonlayers] = useState([])\n    const [quicklooklayers, setQuicklooklayers] = useState([])\n    const [ewwstate, setEwwState] = useState({latitude: clat, longitude: clon, altitude: alt, aoi:'', pickedItems: []})\n    const copDemOn = useRef(dem)\n    const bgIndex = useRef(0)\n    const ovIndex = useRef(0)\n    const copdemlayer = useRef(0)\n    const nasademlayer = useRef(0)\n\n\n    // Turn the globe up north\n    function northUp() {\n        const wwd = eww.current\n        let headingIncrement = wwd.navigator.heading / -20;\n        let runOperation = () => {\n            if (Math.abs(wwd.navigator.heading) > Math.abs(headingIncrement)) {\n                wwd.navigator.heading += headingIncrement;\n                setTimeout(runOperation, 10);\n            } else {\n                wwd.navigator.heading = 0;\n            }\n            wwd.redraw();\n        };\n        setTimeout(runOperation, 10);\n    }\n\n    //toggle atmosphere\n    function toggleAtmosphere(bool) {\n        console.log('toggleAtmosphere: '+bool)\n        getLayerByName('Atmosphere').enabled = (bool!= null)?bool:!getLayerByName('Atmosphere').enabled\n        // getLayerByName('Atmosphere').enabled = bool\n        // console.log(eww.current.layers)\n        eww.current.redraw();\n    }\n    //toggle model\n    function toggleModel(bool) {\n        console.log('toggleModel: '+bool)\n        for (let l = 0; l < satelliteLayers.length; l++) {\n            satelliteLayers[l].enabled = (bool!= null)?bool:!satelliteLayers[l].enabled\n        }\n        // getLayerByName('Model').enabled = (bool!= null)?bool:!getLayerByName('Model').enabled\n        eww.current.redraw();\n    }\n\n    //toggle starField\n    function toggleStarfield(bool) {\n        console.log('toggleStarfield: '+bool)\n        getLayerByName('StarField').enabled = (bool !== null)?bool:!getLayerByName('StarField').enabled\n        eww.current.redraw();\n    }\n\n    //toggle name overlay\n    function toggleNames(bool) {\n        console.log('toggleNames: '+bool)\n        getLayerByName('overlay_bright').enabled = (bool !== null)?bool:!getLayerByName('overlay_bright').enabled\n        eww.current.redraw();\n    }\n    //toggle background overlay\n    function setBg(background) {\n        getLayerByName(background).enabled = true\n        eww.current.layers[bgIndex.current].enabled=false\n        eww.current.redraw();\n    }\n    function toggleBg(background) {\n        // console.log(\"toggleBg: \"+background+\"/\"+bgLayers.length)\n        eww.current.layers[bgIndex.current].enabled=false\n        bgIndex.current = (background === null)?(bgIndex.current + 1):(background-1)%bgLayers.length\n        console.log(\"Background Layer [\"+(bgIndex.current+1)+\"/\"+bgLayers.length+\"]: \"+eww.current.layers[bgIndex.current].displayName)\n        eww.current.layers[bgIndex.current].enabled=true\n        eww.current.redraw();\n        // setEwwState((ewwstate) => { return {...ewwstate, background: bgIndex.current}})\n    }\n    function toggleOv(overlay) {\n        // console.log(overlay)\n        eww.current.layers[ovIndex.current+bgLayers.length].enabled=false\n        // ovIndex.current = (ovIndex.current + 1)%ovLayers.length\n        ovIndex.current = (overlay === null)?(ovIndex.current + 1):(overlay-1)%ovLayers.length\n        // console.log(ovIndex.current)\n        // console.log(\"Overlay Layer: \"+eww.current.layers[ovIndex.current+bgLayers.length].displayName)\n        // console.log(\"Overlay Layer [\"+(ovIndex.current+bgLayers.length+1)+\"/\"+ovLayers.length+\"]: \"+eww.current.layers[ovIndex.current+bgLayers.length].displayName)\n\n        eww.current.layers[ovIndex.current+bgLayers.length].enabled=true\n        eww.current.redraw()\n    }\n    \n    //toggle DEM \n    function toggleDem(dem) {\n        copDemOn.current = (dem !== null)?dem:!copDemOn.current\n        var elevationModel\n        if(copDemOn.current) {\n            console.log('Switching to Copernicus Dem')\n            elevationModel = new WorldWind.ElevationModel();\n            elevationModel.addCoverage(new WorldWind.TiledElevationCoverage({\n                coverageSector: WorldWind.Sector.FULL_SPHERE,\n                resolution: 0.008333333333333,\n                retrievalImageFormat: \"image/tiff\",\n                minElevation: -11000,\n                maxElevation: 8850,\n                urlBuilder: new WorldWind.WcsTileUrlBuilder(\"https://dem.esa.maps.eox.at/elevation\", \"copdem\", \"2.0.1\")\n                }));    \n            \n        } else {\n            console.log('Switching to NASA Dem')\n            elevationModel = new WorldWind.EarthElevationModel()\n        }\n        eww.current.globe.elevationModel = elevationModel\n        eww.current.redraw();\n        // copDemOn.current = !copDemOn.current\n        // setDemOn(copDemOn.current)\n    }\n\n \n    function  getViewPolygon () {\n        let view = eww.current.viewport\n        let area = {}\n        let polygon = ''\n        // console.log('view: ' + view.x + '/' + view.y + '/' + view.width + '/' + view.height);\n\n        let bl ;\n        try { \n            bl =  eww.current.pickTerrain(eww.current.canvasCoordinates(view.x, view.y + view.height)).terrainObject().position\n            bl.latitude = Math.round(bl.latitude * 10000)/10000\n            bl.longitude = Math.round(bl.longitude * 10000)/10000\n        }\n        catch(err) {bl = null;}\n\n\n        let tr ;\n        try { \n            tr = eww.current.pickTerrain(eww.current.canvasCoordinates(view.x + view.width, view.y)).terrainObject().position\n            tr.latitude = Math.round(tr.latitude * 10000)/10000\n            tr.longitude = Math.round(tr.longitude * 10000)/10000\n        }\n        catch(err) {tr = null;}\n\n        //console.log(bl.longitude+'/'+bl.latitude+'/'+tr.longitude+'/'+tr.latitude);\n        if(bl == null || tr == null )  {\n            //   area = {type:\"bbox\", value:\"-180,-90,180,90\"};\n              polygon = ''\n        } else {\n              area = {\n                    type: \"bbox\",\n                    value:\n                           bl.longitude +','\n                          + bl.latitude +','\n                          +tr.longitude +','\n                          +tr.latitude\n              };\n\n              polygon = 'POLYGON((' \n                + bl.longitude + ' ' + bl.latitude + ',' \n                + tr.longitude + ' ' + bl.latitude + ',' \n                + tr.longitude + ' ' + tr.latitude + ',' \n                + bl.longitude + ' ' + tr.latitude + ',' \n                + bl.longitude + ' ' + bl.latitude + '))' \n        }\n        return polygon\n\n    }\n    \n    const addGeojson = (url,epoch) => {\n\n        // console.log('replace: '+replace)\n\n        function shapeConfigurationCallback(geometry, properties) {\n            let configuration = {};\n            configuration.userProperties = properties\n    \n            let placemarkAttributes = new WorldWind.PlacemarkAttributes(null);\n            placemarkAttributes.imageScale = 10;\n            placemarkAttributes.imageColor = new WorldWind.Color(0, 1, 1, 0.2);\n            placemarkAttributes.labelAttributes.offset = new WorldWind.Offset(\n                WorldWind.OFFSET_FRACTION, 5,\n                WorldWind.OFFSET_FRACTION, 5);\n            //placemarkAttributes.imageSource = whiteDot;\n    \n    \n            if (geometry.isPointType() || geometry.isMultiPointType()) {\n                configuration.attributes = new WorldWind.PlacemarkAttributes(placemarkAttributes);\n                \n            } else if (geometry.isLineStringType() || geometry.isMultiLineStringType()) {\n                configuration.attributes.drawOutline = true;\n                configuration.attributes.outlineColor = new WorldWind.Color(\n                    0.1 * configuration.attributes.interiorColor.red,\n                    0.3 * configuration.attributes.interiorColor.green,\n                    0.7 * configuration.attributes.interiorColor.blue,\n                    1\n                );\n                configuration.attributes.outlineWidth = 1;\n            } else if (geometry.isPolygonType() || geometry.isMultiPolygonType()) {\n                configuration.attributes = new WorldWind.ShapeAttributes(null);\n                configuration.attributes.interiorColor = new WorldWind.Color(1, 0, 0, 0.2);\n                configuration.attributes.outlineColor = new WorldWind.Color(1, 0, 0, 0.3);\n\n                configuration.highlightAttributes = new WorldWind.ShapeAttributes(configuration.attributes);\n                configuration.highlightAttributes.outlineColor = new WorldWind.Color(1, 0, 0, 0.4);\n                configuration.highlightAttributes.interiorColor = new WorldWind.Color(1, 0, 0, 0);\n                // configuration.attributes.outlineWidth = 0.3;\n\n                // configuration.attributes.applyLighting = true;\n                // configuration.attributes.imageSource = properties.quicklookUrl\n\n            }\n    \n            //console.log(configuration.attributes);\n            return configuration;\n        }\n\n        \n        function loadCompleteCallback() {\n            // console.log(renderableLayer)\n            setGeojsonlayers((geojsonlayers)=>[...geojsonlayers,renderableLayer])\n            enableRenderables(epoch) // uncomment to disable renderables\n            eww.current.redraw();\n        }\n    \n        // if (replace) removeGeojson()\n        let renderableLayer = new WorldWind.RenderableLayer('Products: '+url.properties.updated+Math.ceil(Math.random() * 10000))\n        \n        eww.current.addLayer(renderableLayer);\n        // setGeojsonlayers((geojsonlayers)=>[...geojsonlayers,renderableLayer])\n        // setGeojsonlayers((geojsonlayers)=>[...geojsonlayers,renderableLayer])\n        // setGeojsonlayers(eww.current.layers)\n        let geoJson = new WorldWind.GeoJSONParser(url);\n        geoJson.load(loadCompleteCallback, shapeConfigurationCallback, renderableLayer);\n        // setGeojsonlayers((geojsonlayers)=>[...geojsonlayers,renderableLayer])        \n    }\n\n    function removeGeojson() {\n        for(let i=0;i<geojsonlayers.length;i++) {\n          eww.current.removeLayer(geojsonlayers[i])\n        //   console.log('removing json layers: ')\n        //   console.log(geojsonlayers[i])\n        }\n        setGeojsonlayers((geojsonlayers)=>[])\n        // console.log(geojsonlayers)\n        eww.current.redraw();\n      }\n\n    function addWMS() {\n    }\n\n    function addQuicklookWMS(renderable) {\n\n        console.log(renderable.computeSectors(eww.current.drawContext))\n        console.log(WorldWind.Sector.FULL_SPHERE)\n\n        // for S2:  \n        // https://view.onda-dias.eu/instance00/ows?&service=WMS&request=GetMap&layers=S2L1C_TRUE_COLOR&styles=&format=image/png&transparent=true&version=1.1.1&width=1500&height=1000&srs=EPSG:4326&bbox=12.357903,41.800495,12.625694,41.984760\n\n        \n        // https://view.onda-dias.eu/instance00/ows?&service=WMS&request=GetMap&layers=S1B_IW_GRDH_1SDV_20190520T050758_20190520T050823_016323_01EB81_6EB6&styles=&format=image%2Fpng&transparent=true&version=1.1.1&width=256&height=256&srs=EPSG%3A3857&bbox=2035059.441064533,7044436.526761846,2191602.4749925737,7200979.560689885\n        let wmsConfigQL = {\n            service: \"https://view.onda-dias.eu/instance00/ows\",\n            // layerNames: renderable.userProperties.title,\n            // layerNames: 'S2L1C_TRUE_COLOR',\n            layerNames: 'S1_IW_GRDH_FullResolution',\n            \n            // title: renderable.userProperties.title,\n            title: 'quicklook',\n            numLevels: 19,\n            format: \"image/png\",\n            size: 256,\n            sector: renderable.computeSectors(eww.current.drawContext)[0],\n            // sector: renderable.sector,\n            // sector: WorldWind.Sector.FULL_SPHERE,\n            levelZeroDelta: new WorldWind.Location(90, 90)\n        }\n\n        // let wmsConfigQL = {\n        //     service: \"https://tiles.maps.eox.at/wms\",\n        //     layerNames: \"overlay_bright\",\n        //     title: \"overlay_bright\",\n        //     numLevels: 19,\n        //     format: \"image/png\",\n        //     size: 256,\n        //     sector: WorldWind.Sector.FULL_SPHERE,\n        //     levelZeroDelta: new WorldWind.Location(90, 90)\n        // }\n        // eww.current.removeLayer(getLayerByName('quicklook') )\n        let qllayer =  new WorldWind.WmsLayer(wmsConfigQL, renderable.userProperties.date)\n        eww.current.addLayer(qllayer)\n        eww.current.redraw()\n        console.log(eww.current.layers)\n    }\n\n    function getLayerByName(name) {\n        for (let i = 0; i < eww.current.layers.length; i++) {\n            // console.log('display name: '+eww.current.layers[i].displayName)\n            if (eww.current.layers[i].displayName === name) return eww.current.layers[i]\n        }\n        return null\n    }\n\n    async function enableRenderables(time) {\n        // let timeOffset = 1000 * 60 * 60 * 3 // 3 hours\n        // for (let i = 0; i < eww.current.layers.length; i++) {\n        //     if (eww.current.layers[i].displayName.includes('Products:')) {\n                \n        //         for (let j = 0; j < eww.current.layers[i].renderables.length; j++) {\n        //             let renderable = eww.current.layers[i].renderables[j]\n        //             if (time != 0) {\n        //                 let renderableStartDate = (new Date(renderable.userProperties.earthObservation.acquisitionInformation[0].acquisitionParameter.acquisitionStartTime)).getTime()\n        //                 let renderableStopDate = (new Date(renderable.userProperties.earthObservation.acquisitionInformation[0].acquisitionParameter.acquisitionStopTime)).getTime()\n        //                 renderable.enabled = (renderableStartDate <= time+timeOffset/2 && renderableStopDate >= time-timeOffset/2) ? true : false   \n        //             } else {\n        //                 renderable.enabled = false\n        //             }         \n        //         }\n        //     }\n        //     if (eww.current.layers[i].displayName === 'quicklook') {\n        //         // eww.current.layers[i].enabled = \n        //     }\n        // }\n\n    }\n\n    function addQuicklook(renderable) {\n\n        function imageLoader(url, useCredentials) {\n            return new Promise((resolve, reject) => {\n                const img = new Image();\n        \n                img.onload = function() {\n                    resolve(img);\n                };\n        \n                img.onerror = function(e){\n                    reject(e);\n                };\n        \n                img.crossOrigin = useCredentials ? 'Use-Credentials' : 'Anonymous';\n                img.src = url;\n                console.log(' adding QL')\n            });\n        }\n\n\n        // console.log(' adding QL')\n        //  console.log(renderable.attributes)\n        // let quicklook =  new TexturedSurfacePolygon(renderable.sector)\n        // let quicklookLayer = new WorldWind.RenderableLayer('Quicklooks')\n        // // quicklookLayer.addRenderable(quicklook)\n        // // setQuicklooklayers((quicklooklayers)=>[...quicklooklayers,quicklookLayer])\n        // // eww.current.addLayer(quicklookLayer)\n        // let ql = new Image()\n        // ql.src = renderable.userProperties.quicklookUrl\n        // quicklook.image = ql\n        \n        imageLoader(renderable.userProperties.quicklookUrl,true).then(image => {\n            let quicklookLayer = getLayerByName('Quicklooks')\n            removeQuicklooks()\n            let footprint = [\n                renderable.boundaries[0][0],\n                renderable.boundaries[0][3],\n                renderable.boundaries[0][2],\n                renderable.boundaries[0][1]\n            ]\n            // footprint[0].pop()\n            console.log(footprint)\n            let quicklook =  new wwwx.TexturedSurfacePolygon(footprint,renderable.attributes)\n            quicklook.maxImageWidth = 64\n            quicklook.maxImageHeight = 64\n            \n            quicklook.image = image\n            quicklookLayer.addRenderable(quicklook)\n            eww.current.addLayer(quicklookLayer)\n            eww.current.redraw()\n        })\n    }\n\n    function removeQuicklooks() {\n        getLayerByName('Quicklooks').removeAllRenderables()\n        eww.current.redraw()\n    }\n\n    function setTime(epoch) {\n        getLayerByName('StarField').time = getLayerByName('Atmosphere').time = new Date(epoch)\n        enableRenderables(epoch)\n\n        for(let l=0 ; l<satelliteLayers.length ; l++) {\n            satelliteLayers[l].setTime(new Date(epoch))\n        }\n        eww.current.redraw();\n     }\n\n     function moveTo(clat, clon, alt) {\n        // setTimeout(() => {\n            eww.current.goToAnimator.travelTime = 1000;\n            eww.current.goTo(new WorldWind.Position(clat, clon));\n            eww.current.navigator.range = alt;\n            eww.current.navigator.camera.applyLimits()\n            eww.current.redraw();\n            // }, 1000)\n        }\n\n\n    function toggleProjection() {\n        setProjection( prevProj => {\n          console.log(\"prevProjection: \"+prevProj)\n          let supportedProjections = [ \"3D\", \"Equirectangular\", \"Mercator\",\"North Polar\",\"South Polar\"];\n          let newProj = (supportedProjections.indexOf(prevProj) + 1)%supportedProjections.length\n          console.log(\"newProjection: \"+supportedProjections[newProj])\n          switch (supportedProjections[newProj]) {\n            case \"3D\":\n                eww.current.globe.projection = new WorldWind.ProjectionWgs84();\n                break;\n            case \"Equirectangular\":\n                eww.current.globe.projection = new WorldWind.ProjectionEquirectangular();\n                break;\n            case \"Mercator\":\n                eww.current.globe.projection = new WorldWind.ProjectionMercator();\n                break;\n            case \"North Polar\":\n                eww.current.globe.projection = new WorldWind.ProjectionPolarEquidistant(\"North\");\n                break;\n            case \"South Polar\":\n                eww.current.globe.projection = new WorldWind.ProjectionPolarEquidistant(\"South\");\n                break;\n            default:\n            eww.current.globe.projection = new WorldWind.ProjectionWgs84();\n            }\n          eww.current.redraw();\n          return supportedProjections[newProj]\n          })      \n      }\n\n    // callback from eww   \n    const setGlobeStates = () => {\n        \n        let lo = eww.current.navigator.lookAtLocation.longitude\n        let la = eww.current.navigator.lookAtLocation.latitude\n        let al = eww.current.navigator.range\n        let vp = (al < 2000000?getViewPolygon():'')\n        let vpp = 'POINT('+lo.toFixed(4)+' '+la.toFixed(4)+')' \n        \n\n        setEwwState((ewwstate) => { return {...ewwstate, longitude:lo, latitude: la, altitude: al, viewpolygon: vp, viewpoint:vpp}}) \n\n    }\n\n    // handler for tap/click\n\n    const handleClick  = (recognizer) => {\n        // console.log('click')\n        let x = recognizer.clientX\n        let y = recognizer.clientY\n        // Perform the pick. Must first convert from window coordinates to canvas coordinates, which are\n        // relative to the upper left corner of the canvas rather than the upper left corner of the page.\n        let pickList = eww.current.pick(eww.current.canvasCoordinates(x, y));\n        // console.log(pickList)\n        if (pickList.terrainObject()) {\n            // position = pickList.terrainObject().position;\n            // store list of selected footprints in a string for later comparison\n            eww.current.removeLayer(getLayerByName('quicklook') )\n            // de-highlight all rendereables\n            for (let i = 0; i < eww.current.layers.length; i++) {\n                if (eww.current.layers[i].displayName.includes('Products:')) {                    \n                    for (let j = 0; j < eww.current.layers[i].renderables.length; j++) {\n                        let renderable = eww.current.layers[i].renderables[j]\n                        renderable.highlighted = false\n                    }\n                }\n            }\n    \n            // ... and now highlight all picked rendereables\n            let pickedItems = []\n            for (let i = 0; i < pickList.objects.length; i++) {\n                if (pickList.objects[i].userObject instanceof WorldWind.SurfaceShape) {\n                    pickedItems.push(pickList.objects[i].userObject) \n                    pickList.objects[i].userObject.highlighted = !pickList.objects[i].userObject.highlighted\n                    \n                    addQuicklookWMS(pickList.objects[i].userObject)\n                }\n            }\n            // console.log(pickedItems)\n            setEwwState((ewwstate) => { return {...ewwstate, pickedItems: pickedItems}})\n            eww.current.redraw()\n        } else {\n            console.log('No position !');\n            return;\n        }\n\n\n    }\n    const handleDoubleClick  = (recognizer) => {\n        console.log('double click')\n        northUp()\n    }\n\n    const handleDoubleClick2  = (recognizer) => {\n        console.log('double click')\n        let x = recognizer.clientX\n        let y = recognizer.clientY\n        let pickList = eww.current.pick(eww.current.canvasCoordinates(x, y));\n\n        let position;\n  \n  \n        // Get coordinates of clicked point and list of selected footprints. Do nothing if click done outside the globe.\n        if (pickList.terrainObject()) {\n            position = pickList.terrainObject().position;\n            // eww.current.goTo(new WorldWind.Location(position.latitude, position.longitude));\n\n            let point = \"POINT(\"+position.longitude+' '+position.latitude+\")\"\n            \n            setEwwState((ewwstate) => { return {...ewwstate, aoi: point}}) \n    \n        } else {\n              console.log('No position !');\n              setEwwState((ewwstate) => { return {...ewwstate, aoi: ''}})\n        }\n    }\n\n\n    // didMount effect\n    useEffect(() => {\n        console.log(\"Creating the world...\")\n\n        // to use DEM from Eox ESA Map server\n        var elevationModel = new WorldWind.ElevationModel();\n        elevationModel.removeAllCoverages()\n        elevationModel.addCoverage(new WorldWind.TiledElevationCoverage({\n            coverageSector: WorldWind.Sector.FULL_SPHERE,\n            resolution: 0.008333333333333,\n            retrievalImageFormat: \"image/tiff\",\n            minElevation: -11000,\n            maxElevation: 8850,\n            urlBuilder: new WorldWind.WcsTileUrlBuilder(\"https://dem.esa.maps.eox.at/elevation\", \"copdem\", \"2.0.1\")\n            }));\n        // eww.current = new WorldWind.WorldWindow(id, elevationModel);\n\n\n        eww.current = new WorldWind.WorldWindow(id);\n        // eww.current.worldWindowController = null;\n        eww.current.redrawCallbacks.push(setGlobeStates)\n\n        // Define a min/max altitude limit\n        eww.current.navigator.range = alt\n        WorldWind.BasicWorldWindowController.prototype.applyLimits = function () {\n            eww.current.navigator.range = WorldWind.WWMath.clamp(eww.current.navigator.range, 1, 300000000);\n            console.log('limit')\n        }\n\n        // // define click/tap recognisers\n\n        // let appDoubleClickRecognizer = new WorldWind.ClickRecognizer(eww.current, handleDoubleClick);\n        // appDoubleClickRecognizer.numberOfClicks = 2;\n        // appDoubleClickRecognizer.maxClickInterval = 200;\n        // eww.current.worldWindowController.clickDownRecognizer.recognizeSimultaneouslyWith(appDoubleClickRecognizer);\n        \n        // // turning this block on will cause double drag to not be recognized anymore....\n        // // let appClickRecognizer = new WorldWind.ClickRecognizer(eww.current, handleClick);\n        // // appClickRecognizer.numberOfClicks = 1;\n        // // eww.current.worldWindowController.clickDownRecognizer.recognizeSimultaneouslyWith(appClickRecognizer);\n        // // appDoubleClickRecognizer.recognizeSimultaneouslyWith(appClickRecognizer);\n        // // appClickRecognizer.requireRecognizerToFail(appDoubleClickRecognizer)\n\n\n        // let appDoubleTapRecognizer = new WorldWind.TapRecognizer(eww.current, handleDoubleClick);\n        // appDoubleTapRecognizer.numberOfTaps = 2;\n        // appDoubleTapRecognizer.name = 'double tap';\n        // eww.current.worldWindowController.tapDownRecognizer.recognizeSimultaneouslyWith(appDoubleTapRecognizer);\n\n        // // // next 2 lines: marche pas...\n        // // eww.current.worldWindowController.panRecognizer.recognizeSimultaneouslyWith(appDoubleTapRecognizer);\n        // // eww.current.worldWindowController.doublePanRecognizer.recognizeSimultaneouslyWith(appDoubleTapRecognizer);\n \n        // // tapRecognizer.recognizeSimultaneouslyWith(doubleTapRecognizer);\n        // // doubleTapRecognizer.requireRecognizerToFail(tapRecognizer)\n\n        \n        WorldWind.configuration.baseUrl = window.location.href\n\n        //let starFieldLayer = new WorldWindX.StarFieldLayer();\n        // let starFieldLayer = new WorldWind.StarFieldLayer();\n        let starFieldLayer = new StarFieldLayer();\n        let atmosphereLayer = new WorldWind.AtmosphereLayer('images/BlackMarble_2016_01deg.jpg');\n        // let atmosphereLayer = new WorldWind.AtmosphereLayer('images/BlackMarble_2016_3km.jpg');\n        \n        //atmosphereLayer.minActiveAltitude = 5000000\n\n        let quicklookLayer = new WorldWind.RenderableLayer('Quicklooks')\n        // console.log(satelliteLayers)\n    \n        let layers = [\n            // { layer: new WorldWind.WmsLayer(wmsConfigBg_s2, \"\"), enabled: true },\n            // { layer: new WorldWind.WmsLayer(wmsConfigBg_terrain, \"\"), enabled: false },\n            // { layer: new WorldWind.WmsLayer(wmsConfigNames, \"\"), enabled: names },\n            { layer: starFieldLayer, enabled: starfield },\n            { layer: atmosphereLayer, enabled: atmosphere },\n            { layer: quicklookLayer, enabled: true }\n            // { layer: modelsLayer, enabled: satellites }\n        ];\n    \n        for (let l = 0; l < bgLayers.length; l++) {\n            let layer = new WorldWind.WmsLayer(bgLayers[l], \"\")\n            layer.enabled = false\n            eww.current.addLayer(layer, \"\")\n        }\n        for (let l = 0; l < ovLayers.length; l++) {\n            let layer = new WorldWind.WmsLayer(ovLayers[l], \"\")\n            layer.enabled = false\n            eww.current.addLayer(layer, \"\")\n        }\n\n        for (let l = 0; l < layers.length; l++) {\n            layers[l].layer.enabled = layers[l].enabled;\n            eww.current.addLayer(layers[l].layer);\n        }\n        for (let l = 0; l < satelliteLayers.length; l++) {\n            satelliteLayers.enabled = satellites\n            eww.current.addLayer(satelliteLayers[l]);\n        }\n\n\n        console.log(eww.current.layers)\n        //let date = new Date();\n        starFieldLayer.time = new Date();\n        atmosphereLayer.time = new Date();\n        // moveTo(clat, clon, alt) \n        // setTimeout(() => {\n        //     eww.current.goToAnimator.travelTime = 1000;\n        //     eww.current.goTo(new WorldWind.Position(clat, clon, alt));\n        //     eww.current.redraw();\n        //     }, 2000)\n    \n        eww.current.redraw();\n        eww.current.deepPicking = true;\n        // eww.current.orderedRenderingFilters.push(declutterByTime)\n    }, []); // effect runs only once\n        \n      // useEffect(() => {\n    //     console.log(\"useEffect aoi: \" + aoi)\n    //     let newewwstate = {...ewwstate, aoi: aoi}\n    //     setEwwState(newewwstate)\n    // }, [aoi]); \n    useEffect(() => {\n        // console.log('background changed effect: '+background)\n\n        toggleBg(background)\n    }, [background]);\n\n    useEffect(() => {\n        // console.log('overlay changed effect: '+overlay)\n\n        toggleOv(overlay)\n    }, [overlay]);\n\n    useEffect(() => {\n        // console.log('names changed effect: '+names)\n        toggleNames(names)\n    }, [names]);\n\n    useEffect(() => {\n        // console.log('atmosphere changed effect: '+satellites)\n\n        toggleAtmosphere(atmosphere)\n    }, [atmosphere]);\n\n    useEffect(() => {\n        // console.log('starfield changed effect: '+starfield)\n        toggleStarfield(starfield)\n    }, [starfield]);\n\n    useEffect(() => {\n        // console.log('sat changed effect: '+satellites)\n\n        toggleModel(satellites)\n    }, [satellites]);\n\n    useEffect(() => {\n        toggleDem(dem)\n    }, [dem]); \n\n  return { eww, ewwstate, moveTo, removeGeojson, addGeojson, addWMS, toggleStarfield, toggleAtmosphere, setTime, toggleProjection, toggleNames, toggleModel, toggleBg, toggleOv, toggleDem, northUp };\n}\n","import React, {useState, useRef, useEffect} from \"react\";\nimport {useSpring, animated} from 'react-spring'\nimport { useDrag } from 'react-use-gesture'\nimport \"./LogPanel.css\"\n\n\n\n// import MissionSelector from \"./missionselector\";\n\n\n\n\n\nfunction LogPanel({items}) {\n\n    const debug = useRef()\n    const [debugtext,setdebugtext] = useState([])\n\n    const [{ x, y }, api] = useSpring(() => ({ x: 0, y: 0 }))\n    const bind2 = useDrag(({ offset: [x, y] }) => api.start({ x, y }))\n\n\n    const logdebug = (items) => {\n        let dd = []\n        debug.current = {...debug.current,...items}\n        // debugtext.current = []\n        for (let [key, value] of Object.entries(debug.current)) {\n            // console.log(`${key}: ${value}`);\n            dd.push([key,value])\n          }\n          setdebugtext( dd.map( (item) => <div key={item[0]}>{item[0]}: {item[1]}</div> ))\n    }   \n    \n    useEffect(() => {\n        logdebug(items)\n        console.log(items)\n    },[items])\n\n\n\n    return   (\n\n        <animated.div {...bind2()} style={{ x, y }}  className='Debug'>\n        {debugtext}\n    </animated.div>\n\n\n    )\n    \n}\n\nexport default LogPanel\n","import React, {useState, useEffect, useRef, memo} from 'react'\nimport WorldWind from 'webworldwind-esa';\nimport { useGesture, useDrag } from 'react-use-gesture'\nimport {useSpring, config, animated} from 'react-spring'\nimport { add, sub, scale } from 'vec-la'\nimport './Earth.css'\nimport LogPanel from '../logpanel';\n\n\n// todo:\n//      set limits to the navigator.camera\n\n\nexport const FluidWorldWindowController = memo( ({world}) => {\n\n    const controllerRef = useRef()\n    const MAX_ALT = 100000000\n    const EYE_ALT = 2\n    // to detect double taps\n    const lastTap = useRef()\n    const doubleTap = useRef()\n    const button = useRef()\n    const clicktimeout = useRef()\n    const tilttimeout = useRef()\n    const dragtimeout = useRef()\n\n    //\n    const gesturestartposition = useRef()\n    // const [dragenabled, setdragenabled] = useState(true)\n    const dragenabled = useRef(true)\n    const rotationmode = useRef(false)\n    const pinchmode = useRef('undefined')\n    const [logitems,setlogitems] = useState({})\n\n    // debug snippet\n    // add {debughtml} in returned dom\n    // use with: logdebug({key:value,...})\n    const debug = useRef()\n    const [debugtext,setdebugtext] = useState([])\n    const [{ x, y }, api] = useSpring(() => ({ x: 0, y: 0 }))\n    const bind2 = useDrag(({ offset: [x, y] }) => api.start({ x, y }))\n    const debughtml =     (      <animated.div {...bind2()} style={{ x, y }}  className='Debug'>{debugtext}</animated.div>)\n    const logdebug = (items) => {\n        let dd = []\n        debug.current = {...debug.current,...items}\n        // debugtext.current = []\n        for (let [key, value] of Object.entries(debug.current)) {\n            // console.log(`${key}: ${value}`);\n            dd.push([key,value])\n          }\n          setdebugtext( dd.map( (item) => <div key={item[0]}>{item[0]}: {item[1]}</div> ))\n    }    \n    // end debug snippet  \n    \n    const detectDoubleTap = (e) => {\n        button.current = e.button\n        if (lastTap.current && (e.timeStamp - lastTap.current) < 300) {\n            doubleTap.current = true\n        } else {\n            lastTap.current = e.timeStamp\n            doubleTap.current = false\n        }\n    }\n\n\n    const bind = useGesture({\n        onDrag: ({  event, xy, vxvy, previous, first, down, initial, delta, movement, offset, velocity, direction, tap, scrolling, touches, pinching, origin}) => {\n\n            if(first) {\n                gesturestartposition.current = positionAtPickPoint(xy[0],xy[1])\n                if(!gesturestartposition.current) {\n                    gesturestartposition.current = positionAtPickPoint(world.current.canvas.clientWidth/2,world.current.canvas.clientHeight/2)\n                }\n\n                detectDoubleTap(event)\n                if(doubleTap.current) clearTimeout(clicktimeout.current)\n                // console.log('double:'+doubleTap.current+' tap: '+tap)\n            }\n\n            switch (true) {\n\n                // case (touches === 2):\n                //     // 2 finger tap: tilt\n                //     handletilt(down, delta, false, first, vxvy)\n                //     // tilttimeout.current = setTimeout(() => {\n                //     //     handletilt(down, delta, false, first)\n                //     // }, 300);                \n                //     break\n\n\n                case (!doubleTap.current && tap):  \n                    // simple click or tap\n                    clicktimeout.current = setTimeout(() => {\n                        console.log(\"simple click\")\n                    }, 300);\n                    break\n                case (doubleTap.current && tap): {\n                    clearTimeout(clicktimeout.current)\n\n                    // double click or tap\n                    console.log(\"double click\")\n                    northUp()\n                    break\n                }\n                case ((!doubleTap.current && !tap) && button.current != 2 && touches !=2  ):\n                    // Pan\n                    // console.log('pan')\n                    if(!dragenabled.current) return\n                    zoomspring.stop()\n                    pinchzoomspring.stop()\n                    pinchrotatespring.stop()\n                    pinchtiltspring.stop()\n                    if (world.current.globe.is2D()) {\n                        handlepan2d(event,initial,down,delta,offset,movement,velocity, direction, xy, previous,first,scrolling)\n                    } else {\n                        handlepan3d(event,initial,down,delta,offset,vxvy,velocity, direction, xy, previous,first,scrolling,touches,pinching)\n                    }\n                    break\n                case (doubleTap.current && !tap):\n                    // zoom\n                    zoomspring.stop()\n                    handlezoom(event,initial,down,delta,offset,movement,velocity, direction, xy, previous,first,scrolling)\n                    break\n\n                case (!doubleTap.current && !tap && button.current == 2):\n                    // right click button: tilt and rotate\n                    handletilt(down, delta, true)\n                    break\n    \n        \n                default:\n                // console.log(\"default \")\n\n            }\n\n        },\n        onDragend: () => {\n            console.log('drag end')\n        },\n        onWheel: ({event, xy, previous, first, down, initial, delta, movement, offset, velocity, direction, tap, scrolling}) => {\n            if(first) {\n                gesturestartposition.current = positionAtPickPoint(event.clientX,event.clientY)\n            }\n            // delta[1] *= 0.1         \n            // delta[0] *= 0.1         \n            handlezoom(event,initial,down,delta,offset,movement,velocity, direction, xy, previous,first,scrolling)\n        },\n        onPinchStart: (origin)=>{\n            dragenabled.current = false\n            panspring.stop()\n            zoomspring.stop()\n            pinchzoomspring.stop()\n            pinchrotatespring.stop()\n            pinchtiltspring.stop()\n            // memo.lastY = origin[1]\n            // gesturestartposition.current = positionAtPickPoint(origin[0],origin[1])\n            pinchmode.current = 'undefined'\n\n            tilttimeout.current = setTimeout(() => {\n                pinchmode.current = 'tilt'\n                }, 300);        \n                \n        },\n        onPinch: ({event, da, vdva, origin, pinching, delta, first, initial, direction, previous, memo = {lastY:0} }, velocity) => {\n            handlepinch(event, da, vdva, origin, pinching, delta, first, initial, direction, previous, memo, velocity)\n            memo.lastY = origin[1]\n            return memo\n        },\n        onPinchEnd: () => { \n            dragtimeout.current = setTimeout(() => {\n                dragenabled.current = true\n                // logdebug({drag: (dragenabled.current)?'true':'false'})\n                }, 300);\n            pinchmode.current = 'undefined'\n            \n            //    console.log('pinch end')\n        }\n    },\n    // {reset: false, drag: {useTouch: true}, filterTaps: true }\n    {\n        domTarget: controllerRef,\n        drag: {useTouch: true},\n        pinch: {useTouch: true},\n        eventOptions: {passive: false}\n    }\n    )\n\n    const normalize = (val,min,max)=> {\n        var delta = max - min;\n        return (val - min) / delta\n    }\n\n    // north up\n    // todo: spring ?\n    function northUp() {\n        let headingIncrement = world.current.navigator.heading / -20;\n        let runOperation = () => {\n            if (Math.abs(world.current.navigator.heading) > Math.abs(headingIncrement)) {\n                world.current.navigator.heading += headingIncrement;\n                setTimeout(runOperation, 10);\n            } else {\n                world.current.navigator.heading = 0;\n                rotationmode.current = false\n            }\n            world.current.redraw();\n        };\n        setTimeout(runOperation, 10);\n    }\n\n    // pinching\n    const handlepinch = (event, da, vdva, origin, pinching, delta, first, initial, direction, previous, memo, velocity) => {\n\n        if(pinchmode.current === 'undefined' && !first) {\n            pinchmode.current = (Math.abs(direction[0]) > Math.abs(direction[1]*1.2))?'zoom':'rotation'\n            clearTimeout(tilttimeout.current)    \n        }\n\n        switch (pinchmode.current) {\n\n            case 'tilt':\n                handlepinchtilt(pinching, delta, origin, initial, memo)\n                break\n\n            case 'zoom':\n                // handlezoomrotate(pinching,delta)\n                handlepinchzoom(pinching,delta,vdva)\n                break\n\n            case 'rotation':\n                handlepinchrotate(pinching,delta,vdva)\n                break\n\n            default:\n                break\n        }\n\n    }\n\n    const [{ pinchtiltvalue }, pinchtiltspring] = useSpring(() => ({ pinchtiltvalue: [0,0] }))\n    const handlepinchtilt = (pinching, delta, origin, initial, memo ) => {\n        pinchtiltspring.start({\n            // pinchtiltvalue: delta,\n            pinchtiltvalue: sub(origin,[0,memo.lastY]),\n            immediate: pinching,\n            // config: config.stiff,\n            config: { mass: 1, tension: 100, friction: 40 },\n            onChange: ()=>{\n                let enabler = 1\n                // if (!pinching) enabler = (pinchtiltvalue.get()[1] < 0.2)?0:1\n                let tiltfactor = (pinching)?0.5:0.2 \n                world.current.navigator.tilt -= pinchtiltvalue.get()[1] * tiltfactor * enabler\n                applyLimits()\n                world.current.redraw()\n\n            }\n        })\n    }\n\n\n\n    const [{ pinchzoomrotatevalue }, pinchzoomrotatespring] = useSpring(() => ({ pinchzoomrotatevalue: [0,0] }))\n    const handlezoomrotate = (pinching,delta) => {\n        pinchzoomrotatespring.start({\n            pinchzoomrotatevalue: delta,\n            immediate: pinching,\n            // config: config.stiff,\n            config: {...config.molasses},\n            // config: { mass: 1, tension: 100, friction: 40, duration: 200 },\n            onChange: ()=>{\n                    moveZoom(gesturestartposition.current,1-pinchzoomrotatevalue.get()[0]/300 )\n                    world.current.navigator.range *= 1-pinchzoomrotatevalue.get()[0]/300 \n                    // logdebug({angle: pinchzoomrotatevalue.get()[1]})\n                    // logdebug({dist: pinchzoomrotatevalue.get()[0]})\n                    \n                    world.current.navigator.heading -= pinchzoomrotatevalue.get()[1]\n                    // world.current.navigator.heading -= hpinchval.get()  \n                    applyLimits()\n\n                    world.current.redraw()\n\n            }\n        })        \n    }\n\n    const [{ pinchzoomvalue }, pinchzoomspring] = useSpring(() => ({ pinchzoomvalue: 0 }))\n    const handlepinchzoom = (pinching,delta,vdva) => {\n        let enabler = 1\n        if (!pinching) enabler = (Math.abs(vdva[0]) < 0.2)?0:1\n        pinchzoomspring.start({\n            pinchzoomvalue: delta[0],\n            immediate: pinching,\n            // config: config.stiff,\n            // config: {...config.molasses},\n            config: { mass: 1, tension: 100, friction: 40 },\n            onChange: ()=>{\n                if(!pinching) pinchmode.current = 'undefined'\n                let rangefactor = 1-pinchzoomvalue.get()/300 * enabler\n                moveZoom(gesturestartposition.current,rangefactor)\n                world.current.navigator.range *= rangefactor\n                // world.current.navigator.heading -= hpinchval.get()  \n                applyLimits()\n\n                world.current.redraw()\n\n            }\n        })        \n    }\n\n\n    const [{ pinchrotatevalue }, pinchrotatespring] = useSpring(() => ({ pinchrotatevalue: 0 }))\n    const handlepinchrotate = (pinching,delta,vdva) => {\n        let enabler = 1\n        if (!pinching) enabler = (Math.abs(vdva[1]) < 0.2)?0:1\n        pinchrotatespring.start({\n            pinchrotatevalue: delta[1],\n            immediate: pinching,\n            // config: config.stiff,\n            config: { mass: 1, tension: 100, friction: 40 },\n            // config: { mass: 1, tension: 100, friction: 40, duration: 200 },\n            onChange: ()=>{\n                    world.current.navigator.heading -= pinchrotatevalue.get() * enabler \n                    if(world.current.navigator.heading !== 0) rotationmode.current = true\n                    applyLimits()\n\n                    world.current.redraw()\n\n            }\n        })\n    \n    }\n\n\n     // tilting\n    const [{ tiltvalue }, tiltspring] = useSpring(() => ({ tiltvalue: [0,0] }))\n\n    const handletilt = (down, delta, dorotation ) => {\n        // let enabler = 1\n        // if (!pinching) enabler = (Math.abs(vdva[1]) < 0.2)?0:1\n        tiltspring.start({\n            to: {tiltvalue: delta},\n            immediate: down,\n            // config: config.stiff,\n            config: { mass: 1, tension: 100, friction: 40 },\n            onChange: ()=>{\n                let tiltoffset = -90 * tiltvalue.get()[1]*2 / world.current.canvas.clientHeight\n                let headingoffset = -90 * tiltvalue.get()[0]*2 / world.current.canvas.clientWidth\n                // world.current.navigator.tilt += tiltvalue.get()[1]/8\n                world.current.navigator.tilt -= tiltoffset \n                if(dorotation) {\n                    world.current.navigator.heading -= headingoffset\n                    if(world.current.navigator.heading !== 0) rotationmode.current = true\n                }\n                applyLimits()\n                world.current.redraw()\n\n            }\n        })\n    }\n\n    // panning\n    const [{ panvalue }, panspring] = useSpring(() => ({ panvalue: [0,0] }))\n\n    const handlepan2d = (event,initial,down,delta,offset,movement,velocity, direction, xy, previous,first,wheeling) => {\n        let enabler = 1\n        if (!down) enabler = (velocity < 0.2)?0:1\n        let correction = (event.type === 'touchmove')?1:2.5\n        // logdebug({pinching: pinching})\n\n        panspring.start({\n            panvalue: delta,\n            // to: {panvalue: (down)?movement:add(movement,scale(movement,velocity))},\n            // to: {panvalue: (down)?movement:movement[1]+movement[1]*velocity*5},\n            immediate: down,\n            // config: config.stiff,\n            config: { mass: 1, tension: 150, friction: 80 },\n            onChange: ()=>{\n                let lookatxy = [world.current.canvas.clientWidth/2, world.current.canvas.clientHeight/2]\n                let nextlookatxy = sub(lookatxy,scale(panvalue.get(),correction*enabler))\n                let currentposition = positionAtPickPoint(lookatxy[0],lookatxy[1])\n                if(!currentposition) console.log('no currentpos !')\n                let nextposition = positionAtPickPoint(nextlookatxy[0],nextlookatxy[1])\n                if(!nextposition) console.log('no nextposition !')\n\n                let currentpoint = new WorldWind.Vec3(0,0,0)\n                let nextpoint = new WorldWind.Vec3(0,0,0)\n                if(!world.current.globe.computePointFromPosition(currentposition.latitude, currentposition.longitude, currentposition.altitude, currentpoint)) return\n                if(!world.current.globe.computePointFromPosition(nextposition.latitude, nextposition.longitude, nextposition.altitude, nextpoint)) return\n\n                let viewMatrix = WorldWind.Matrix.fromIdentity();\n                world.current.computeViewingTransform(null, viewMatrix)\n                viewMatrix.multiplyByTranslation(currentpoint[0] - nextpoint[0], currentpoint[1] - nextpoint[1], currentpoint[2] - nextpoint[2])\n\n                // Compute the globe point at the screen center from the perspective of the transformed navigator state.\n                var ray = world.current.rayThroughScreenPoint(world.current.canvasCoordinates(xy[0], xy[1]))\n\n                viewMatrix.extractEyePoint(ray.origin);\n                viewMatrix.extractForwardVector(ray.direction);\n\n                let origin = new WorldWind.Vec3(0, 0, 0);\n\n                if (!world.current.globe.intersectsLine(ray, origin)) {\n                    return;\n                }\n\n                // Convert the transformed modelview matrix to a set of navigator properties, then apply those\n                // properties to this navigator.\n                let params = viewMatrix.extractViewingParameters(origin, world.current.navigator.roll, world.current.globe, {});\n                world.current.navigator.lookAtLocation.copy(params.origin);\n                world.current.navigator.range = params.range;\n                world.current.navigator.heading = params.heading;\n                world.current.navigator.tilt = params.tilt;\n                world.current.navigator.roll = params.roll;\n                applyLimits();\n                world.current.redraw();\n\n\n            },\n            onRest: () => {\n                // logdebug({status: 'finsished: '})\n            }\n        })\n    }\n       \n\n    const handlepan3d = (event,initial,down,delta,offset,vxvy,velocity, direction, xy, previous,first,wheeling, touches,pinching) => {\n        try {\n            if(first){\n                // can crash the drag:\n                // if(Math.abs(gesturestartposition.current.latitude) > 85 || world.current.navigator.heading > 2 ) {\n                if(Math.abs(gesturestartposition.current.latitude) > 80 || world.current.navigator.heading > 2 ) {\n                    rotationmode.current = true\n                }\n            }\n        } catch {\n            console.log('Position at start not detected')\n        }\n\n\n        let enabler = 1\n        if (!down) enabler = (velocity < 0.2)?0:1\n        let correction = (event.type === 'touchmove')?1:2.5\n        if(!down) correction *= 0.5\n\n        panspring.start({\n            panvalue: delta,\n            // to: {panvalue: (down)?movement:add(movement,scale(movement,velocity))},\n            // to: {panvalue: (down)?movement:movement[1]+movement[1]*velocity*5},\n            immediate: down,\n            // config: config.stiff,\n            // config: { mass: 1, tension: 150, friction: 80 },\n            config: { mass: 1, tension: 100, friction: 40 },\n            onChange: ()=>{\n                try{\n                    let lookatxy = [world.current.canvas.clientWidth/2, world.current.canvas.clientHeight/2]\n                    let nextlookatxy = sub(lookatxy,scale(panvalue.get(),correction*enabler))\n                    let currentposition = positionAtPickPoint(lookatxy[0],lookatxy[1])\n                    if(!currentposition) console.log('no currentpos !')\n                    let nextposition = positionAtPickPoint(nextlookatxy[0],nextlookatxy[1])\n                    if(!nextposition) console.log('no nextposition !')\n\n                    let currentpoint = new WorldWind.Vec3(0,0,0)\n                    let nextpoint = new WorldWind.Vec3(0,0,0)\n                    if(!world.current.globe.computePointFromPosition(currentposition.latitude, currentposition.longitude, currentposition.altitude, currentpoint)) return\n                    if(!world.current.globe.computePointFromPosition(nextposition.latitude, nextposition.longitude, nextposition.altitude, nextpoint)) return\n\n                    let rotationVector = new WorldWind.Vec3(0, 0, 0)\n                    let rotationAngle = computeRotationVectorAndAngle( nextpoint,currentpoint, rotationVector);\n                    // logdebug({delta: panvalue.get()[1]})\n\n                    if(nextposition && (nextposition.latitude > 80 || nextposition.latitude < -80) && rotationmode.current === false) {\n                        console.log('out')\n                        panspring.stop()\n                        return\n                    }\n                    // nextposition.latitude = WorldWind.WWMath.clamp(nextposition.latitude,-80,80)\n\n\n                    rotateShpere(rotationVector, rotationAngle, nextpoint, nextposition)\n                    if(rotationmode.current === false) world.current.navigator.heading = 0\n                    world.current.redraw()\n                }\n                catch {\n                    console.log('probl !')\n                }\n            },\n            onRest: () => {\n                // logdebug({status: 'finsished: '})\n            }\n        })\n    }\n\n\n    // zooming\n    const [{ range }, zoomspring] = useSpring(() => ({ range: [1,0] }))\n    const handlezoom = (event,initial,down,delta,offset,movement,velocity, direction, xy, previous,first,scrolling) => {\n\n        let enabler = 1\n        if (!down) enabler = (velocity < 0.2)?0:0.5\n\n        zoomspring.start({\n            to: {range: [1-delta[1]/200,0]},\n            immediate: (down||scrolling),\n            // config: config.stiff,\n            config: { mass: 1, tension: 100, friction: 40 },\n            onChange: ()=>{\n                    // logdebug({rangefactor: spring.value.range})\n                    let rangefactor = (enabler === 0)?1:range.get()[0]\n                    moveZoom(gesturestartposition.current,rangefactor)\n                    world.current.navigator.range *= rangefactor\n                    applyLimits()\n\n                    world.current.redraw()\n\n            },\n            onRest: () => {\n                // logdebug({status: 'finsished: '+world.current.navigator.range})\n            }\n        })\n\n    }\n\n    const moveZoom = function (refposition, amount) {\n        if (!refposition || amount >= 1) return\n        let lookAtLocation = world.current.navigator.lookAtLocation;\n        let lookatAltitude = world.current.globe.elevationAtLocation(lookAtLocation.latitude, lookAtLocation.longitude)\n        let lookAtPosition = new WorldWind.Position(lookAtLocation.latitude, lookAtLocation.longitude, lookatAltitude)\n        let position\n        if(amount <1) {\n            position = WorldWind.Position.interpolateGreatCircle(\n                amount, \n                refposition,\n                lookAtPosition, \n                new WorldWind.Position(0, 0, 0)\n                )\n    \n        } \n        else { // may be better to do nothing...\n            return\n            let intermediatePosition = WorldWind.Position.interpolateGreatCircle(\n                1/amount, \n                refposition,\n                lookAtPosition, \n                new WorldWind.Location(0, 0)\n            )\n            let distanceRadians = WorldWind.Location.greatCircleDistance(lookAtPosition, intermediatePosition)\n            let greatCircleAzimuthDegrees = WorldWind.Location.greatCircleAzimuth(lookAtPosition, intermediatePosition)\n            let location =  WorldWind.Location.greatCircleLocation(lookAtPosition, greatCircleAzimuthDegrees ,\n                    distanceRadians, new WorldWind.Location(0, 0));\n            position = new WorldWind.Position(location.latitude, location.longitude, intermediatePosition.altitude)\n        }\n\n        lookAtLocation.latitude = position.latitude;\n        lookAtLocation.longitude = position.longitude;\n        lookAtLocation.altitude = position.altitude;\n    }\n\n\n    const locationAtPickPoint = (x, y) => {\n        var coordinates = world.current.canvasCoordinates(x, y)\n        var pickList = world.current.pickTerrain(coordinates);\n\n        for (var i = 0; i < pickList.objects.length; i++) {\n            var pickedObject = pickList.objects[i];\n            if (pickedObject.isTerrain) {\n                var pickedPosition = pickedObject.position;\n                if (pickedPosition) {\n                    return new WorldWind.Location(pickedPosition.latitude, pickedPosition.longitude);\n                }\n            }\n        }\n    };\n\n    \n    const positionAtPickPoint2 = (x, y) => {\n\n        // another way to do it (but no altitude):\n        let ray = world.current.rayThroughScreenPoint(world.current.canvasCoordinates(x, y))\n        let position = new WorldWind.Position(0,0,0)\n        let intersectpoint = [0,0,0]\n        if (world.current.globe.intersectsLine(ray, intersectpoint)) {\n            world.current.globe.computePositionFromPoint(intersectpoint[0], intersectpoint[1], intersectpoint[2], position)\n            return(position)\n        }\n        return null\n    }\n\n    const positionAtPickPoint = (x, y) => {\n\n        let coordinates = world.current.canvasCoordinates(x, y)\n        let pickList = world.current.pickTerrain(coordinates);\n\n        for (let i = 0; i < pickList.objects.length; i++) {\n            let pickedObject = pickList.objects[i];\n            if (pickedObject.isTerrain) {\n                let pickedPosition = pickedObject.position;\n                if (pickedPosition) {\n                    return new WorldWind.Position(pickedPosition.latitude, pickedPosition.longitude, pickedPosition.altitude);\n                }\n            }\n        }\n\n    };\n\n    const computeRotationVectorAndAngle = function (vec1, vec2, rotationVector) {\n        var angleRad = WorldWind.MeasurerUtils.angleBetweenVectors(vec1, vec2);\n        var angle = angleRad * WorldWind.Angle.RADIANS_TO_DEGREES;\n        rotationVector.copy(vec1);\n        rotationVector.cross(vec2);\n        rotationVector.normalize();\n        return angle;\n    };\n\n    const rotateShpere = function (rotationVector, angle, nextpoint, nextposition) {\n        if (!isFinite(angle) || !isFinite(rotationVector[0]) || !isFinite(rotationVector[1]) || !isFinite(rotationVector[2])) {\n            return false;\n        }\n\n        var wwd = world.current;\n        var navigator = wwd.navigator;\n        var viewMatrix = WorldWind.Matrix.fromIdentity();\n        var altitude = navigator.lookAtLocation.altitude;\n        var tilt = navigator.tilt;\n        var scratchRay = new WorldWind.Line(new WorldWind.Vec3(0, 0, 0), new WorldWind.Vec3(0, 0, 0));\n        \n        navigator.tilt = 0;\n        wwd.computeViewingTransform(null, viewMatrix);\n        viewMatrix.multiplyByRotation(rotationVector[0], rotationVector[1], rotationVector[2], angle);\n\n        viewMatrix.extractEyePoint(scratchRay.origin);\n        viewMatrix.extractForwardVector(scratchRay.direction);\n        if (!wwd.globe.intersectsLine(scratchRay, nextpoint)) {\n            navigator.tilt = tilt;\n            return false;\n        }\n\n        var params = viewMatrix.extractViewingParameters(nextpoint, navigator.roll, wwd.globe, {});\n        // if (Math.abs(navigator.heading) < 5 && Math.abs(navigator.lookAtLocation.latitude < 70) && Math.abs(nextposition.latitude) < 70) {\n        //     navigator.heading = Math.round(params.heading);\n        //     console.log('rounding')\n        // }\n        // else {\n        //     navigator.heading = params.heading;\n        // }\n\n        navigator.heading = params.heading;\n\n        navigator.lookAtLocation.copy(params.origin);\n        navigator.lookAtLocation.altitude = altitude;\n        navigator.tilt = tilt;\n\n        return true;\n    }\n\n\n    const applyLimits = () => {\n        let nav = world.current.navigator\n        nav.camera.applyLimits() // not sure if not done by default by www\n        nav.range = WorldWind.WWMath.clamp(\n            nav.range, \n            world.current.globe.elevationAtLocation(nav.lookAtLocation.latitude, nav.lookAtLocation.longitude) + EYE_ALT, \n            MAX_ALT \n        )\n        nav.tilt = WorldWind.WWMath.clamp(nav.tilt,0,60)\n        // logdebug({\n        //     range: nav.range, \n        //     lookAtlat: nav.lookAtLocation.latitude, \n        //     lookAtlon: nav.lookAtLocation.longitude, \n        //     lookAtalt: nav.lookAtLocation.altitude, \n        //     clookAtalt: world.current.globe.elevationAtLocation(nav.lookAtLocation.latitude, nav.lookAtLocation.longitude),\n        //     // initlat: gesturestartposition.current.latitude,\n        //     // initlon: gesturestartposition.current.longitude,\n        // })\n    \n    }\n\n    useEffect(() => {\n        // this prevents the browser from intercepting the right click\n        window.addEventListener(\"contextmenu\", e => e.preventDefault());\n    },[])\n\n\n    return (\n        <div>\n            <div className={'EarthController'} ref={controllerRef}></div>\n            {/* <div  className='Debug'>\n                {debugtext.current}\n            </div> */}\n            {/* <animated.div {...bind2()} style={{ x, y }}  className='Debug'>\n                {debugtext}\n            </animated.div> */}\n            {debughtml}\n            {/* <LogPanel items={logitems}/> */}\n        </div>\n    )\n\n    \n})","import React, {useEffect, useState, useGlobal } from 'reactn';\nimport './Earth.css'\nimport { useEww } from \"./useEww\"\nimport { useHotkeys } from 'react-hotkeys-hook'\nimport {FluidWorldWindowController} from './FluidWorldWindowController'\n\n\n\n\n\nfunction Earth({ id, alt }) {\n\n    const [mapSettings, setMapSettings] = useGlobal('mapSettings')\n    const [ position, setPosition] = useGlobal('position')\n    const [ altitude, setAltitude] = useGlobal('altitude')\n    const [ viewDate, setViewDate] = useGlobal('viewDate')\n    const [ geojson, setgeojson] = useGlobal('geojson')\n    const [ searchPoint, setSearchPoint] = useGlobal('searchPoint')\n    const [ satellites, setSatellites ] = useGlobal('satellites')\n\n    const [mapSet, setMapSet] = useState(mapSettings)\n    const [sat, setSat] = useState(satellites)\n\n\n    const {\n        eww,\n        ewwstate,\n        moveTo,\n        addGeojson,\n        removeGeojson,\n        addWMS,\n        toggleProjection,\n        toggleOv,\n        toggleModel,\n        setTime,\n        toggleDem,\n        northUp\n    } = useEww({\n        id: id,\n        clat: position.clat,\n        clon: position.clon,\n        alt: altitude,\n        starfield: mapSettings.starfield,\n        atmosphere: mapSettings.atmosphere,\n        background: mapSettings.background,\n        overlay: mapSettings.overlay,\n        satellites: satellites,\n        names: mapSettings.names,\n        dem: mapSettings.dem\n    })\n\n    useHotkeys(\"p\",toggleProjection)  \n    useHotkeys(\"c\",removeGeojson)\n    useHotkeys(\"u\",northUp)\n    useHotkeys(\"b\",() => setMapSet((mapSet)=>({...mapSet, background:mapSet.background+1})))  \n    useHotkeys(\"m\",() => setSat((sat)=>(!sat)))  \n    // useHotkeys(\"m\",() => setSatellites((satellites)=>(!satellites)))  \n    useHotkeys(\"d\",() => setMapSet((mapSet)=>({...mapSet, dem:!mapSet.dem})))  \n    useHotkeys(\"o\",() => setMapSet((mapSet)=>({...mapSet, overlay:mapSet.overlay+1})))  \n    useHotkeys(\"a\",() => setMapSet((mapSet)=>({...mapSet, atmosphere:!mapSet.atmosphere})))  \n    useHotkeys(\"s\",() => setMapSet((mapSet)=>({...mapSet, starfield:!mapSet.starfield})))  \n    useHotkeys(\"n\",() => setMapSet((mapSet)=>({...mapSet, names:!mapSet.names})))  \n\n    // useHotkeys(\"a\",(mapSettings) => setMapSettings({...mapSettings, atmosphere:!mapSettings.atmosphere}))\n\n    // const toggleAtmosphere = () => setMapSettings((mapSettings)=>({...mapSettings, atmosphere:!mapSettings.atmosphere}))\n    // const toggleStarfield = () => setMapSettings((mapSettings)=>({...mapSettings, starfield:!mapSettings.starfield}))\n    // const toggleNames = () => setMapSettings((mapSettings)=>({...mapSettings, names:!mapSettings.names}))\n    // const toggleBg = () => setMapSettings((mapSettings)=>({...mapSettings, background:Math.random()}))\n\n    useEffect(() => {\n        setAltitude(ewwstate.altitude)\n    },[ewwstate.altitude])\n\n    useEffect(() => {\n        setSearchPoint(ewwstate.viewpoint)\n    },[ewwstate.viewpoint])\n\n\n    useEffect(() => {\n        setTime(viewDate.getTime())\n    },[viewDate])\n\n    useEffect(() => {\n        if(geojson) {\n            removeGeojson()\n            addGeojson(geojson)\n         }\n    },[geojson])\n\n    useEffect(() => {\n        setMapSettings(mapSet)\n    }, [mapSet]);\n\n    useEffect(() => {\n        // console.log(mapSettings)\n        setMapSet(mapSettings)\n    }, [mapSettings]);\n\n    useEffect(() => {\n        setSatellites(sat)\n    }, [sat]);\n\n    useEffect(() => {\n        setSat(satellites)\n    }, [satellites]);\n    \n    \n    \n    useEffect(() => {\n        console.log(\"world created\"+' / '+position.clat+' / '+position.clon+' / '+altitude)\n        setTimeout(() => {\n            moveTo(position.clat, position.clon, altitude) \n        }, 1000)\n\n    }, []);\n    \n\n\n    let globeStyle = {\n        background: 'black',\n        position: \"fixed\",\n        left: 0,\n        top: 10,\n        width: '100%',\n        height: '100%'\n    };\n\n    let globeControllerStyle = {\n        background: 'red',\n        position: \"fixed\",\n        left: '100px',\n        bottom:'100px',\n        width: '100%',\n        height: '200px',\n    };\n\n        \n    return (\n        <div>\n            <canvas className={'Earth'} id={id} />\n            {/* <canvas id={id} style={globeStyle} /> */}\n            <FluidWorldWindowController world={eww}/>\n        </div>\n    );\n}\n\nexport default Earth\n","import React, {useState} from \"react\";\nimport {useSpring, animated} from 'react-spring'\nimport { useGesture } from 'react-use-gesture'\nimport \"./controlpanel.css\"\n// npm install --save-dev @iconify/react @iconify-icons/ic\nimport { Icon } from '@iconify/react';\n// import baselineExplore from '@iconify-icons/ic/baseline-explore';\nimport baselinePalette from '@iconify-icons/ic/baseline-palette';\n\n\n\n// import MissionSelector from \"./missionselector\";\n\n\n\n\n\nfunction ControlPanel(props) {\n\n    const [open, setOpen] = useState(false)\n\n    const [{ mr },set] = useSpring(() =>({ mr:  -300 }))\n    const bind = useGesture( {\n        onDrag: ({ down, delta, vxvy, movement }) => {\n            // if(vxvy[0]>1 || (!down && delta[0] > 100)) {\n            //     set({\n            //         mr: -300\n            //     })\n            //     setOpen( true)\n            // } else {\n            //     set({\n            //         mr: down?-Math.max(delta[0],0):0\n            //     })\n            //     setOpen( false)\n            // }\n            // console.log(delta[1])\n\n            // set.start({\n            //     mr: delta[1],\n            //     immediate: down,\n            // })\n            if(vxvy[1]>1 ) {\n                set.start({\n                    mr: -300,\n                    immediate: false\n                })\n                setOpen( true)\n            } else {\n                set.start({\n                    mr: down?-movement[1]:(movement[1]>50)?-300:0,\n                    immediate: false\n                })\n                setOpen( false)\n            }\n        },\n    })\n\n\n    return   (\n\n        <animated.div {...bind()} style={{ bottom: mr, left:0 }} className='ControlPanel'>\n            <div className='PanelControl shadow' onClick={()=>!open?set.start({mr:-300}):set.start({mr:0})} >\n                {/* <img id='logo'className='Logo' src='./images/EOi_logo.png' alt='' onClick={()=>!open?set({mr:-300}):set({mr:0})} /> */}\n                {/* <div className='PanelControl' alt='' onClick={()=>!open?set({mr:-300}):set({mr:0})}></div> */}\n                <Icon icon={baselinePalette} width='100%'/>\n            </div>\n            \n            {props.children}\n        \n        </animated.div>\n\n\n    )\n    \n}\n\nexport default ControlPanel\n","import React, { useState, useEffect } from \"react\";\n\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport './MissionSelector.css'\n\n\n// should use a prop\n\nfunction MissionSelector({initialmission, onMissionChange}) {\n\n\n    const [mission, setMission] = useState(initialmission)\n    \n    useHotkeys(\"1\",()=>{setMission('S1')}) \n    useHotkeys(\"2\",()=>{setMission('S2')}) \n    useHotkeys(\"3\",()=>{setMission('S3')}) \n    useHotkeys(\"5\",()=>{setMission('S5P')}) \n    useHotkeys(\"6\",()=>{setMission('ENVISAT')})\n\n    useEffect(() => {\n        onMissionChange(mission)\n    }, [mission]);\n    \n    return (\n        <div className='MissionSelector'>\n            <div className={(mission == 'S1')?'CircleButtonSelected':'CircleButton'}><img className='MissionIcon' src='./images/s1_black.png' alt='' onClick={() => setMission('S1')} /></div>\n            <div className={(mission == 'S2')?'CircleButtonSelected':'CircleButton'}><img className='MissionIcon' src='./images/s2_black.png' alt='' onClick={() => setMission('S2')} /></div>\n            <div className={(mission == 'S3')?'CircleButtonSelected':'CircleButton'}><img className='MissionIcon' src='./images/s3_black.png' alt='' onClick={() => setMission('S3')} /></div>\n            <div className={(mission == 'S5P')?'CircleButtonSelected':'CircleButton'}><img className='MissionIcon' src='./images/s5p_black.png' alt='' onClick={() => setMission('S5P')} /></div>\n           \n            \n        </div>\n    )\n}\n\nexport default MissionSelector;\n","import React, {  useGlobal } from 'reactn';\n\nimport MissionSelector from \"../components/missionselector\"\n\nfunction MissionSelectorContainer() {\n\n    const [mission, setMission] = useGlobal('mission')\n\n    return (\n        <MissionSelector initialmission={mission} onMissionChange={setMission}></MissionSelector> \n     )\n}\n\nexport default MissionSelectorContainer;\n","import React, { useState, useEffect } from \"react\";\n\nimport './MapSelector.css'\n\n\n// should use a prop\n\nfunction MapSelector({mapSettings, onMapSettingsChange}) {\n\n\n    const [mapSet, setMapSet] = useState(mapSettings)\n\n    const toggleAtmosphere = () => setMapSet((mapSet)=>({...mapSet, atmosphere:!mapSet.atmosphere}))\n    const toggleStarfield = () => setMapSet((mapSet)=>({...mapSet, starfield:!mapSet.starfield}))\n    const toggleNames = () => setMapSet((mapSet)=>({...mapSet, names:!mapSet.names}))\n    const toggleBg = () => setMapSet((mapSet)=>({...mapSet, background:mapSet.background+1}))\n\n\n    useEffect(() => {\n        onMapSettingsChange(mapSet)\n    }, [mapSet]);\n\n    useEffect(() => {\n        setMapSet(mapSettings)\n    }, [mapSettings]);\n\n\n    \n    //console.log('mission rendering')\n    return (\n        <div className='MapSelector'>\n            <div className={(mapSettings.atmosphere)?'CircleButtonSelected':'CircleButton'}><img className='MapIcon' draggable=\"false\" src='./images/atmosphere.png' alt='' onClick={toggleAtmosphere} /></div>\n            <div className={(mapSettings.starfield)?'CircleButtonSelected':'CircleButton'}><img className='MapIcon' draggable=\"false\" src='./images/starfield.png' alt='' onClick={toggleStarfield} /></div>\n            <div className={(mapSettings.names)?'CircleButtonSelected':'CircleButton'}><img className='MapIcon' draggable=\"false\" src='./images/names.png' alt='' onClick={toggleNames} /></div>\n            <div className='CircleButton'><img className='MapIcon' draggable=\"false\" src='./images/names.png' alt='' onClick={toggleBg} /></div>\n           \n        </div>\n    )\n}\n\nexport default MapSelector;\n","import React, {  useGlobal } from 'reactn';\n\nimport MapSelector from \"../components/mapselector\"\n\nfunction MapSelectorContainer() {\n\n    // const [starfield, setStarfield] = useGlobal('starfield')\n    // const [atmosphere, setAtmosphere] = useGlobal('atmosphere')\n    // const [names, setNames] = useGlobal('names')\n\n    const [mapSettings, setMapSettings] = useGlobal('mapSettings')\n\n    return (\n        <MapSelector mapSettings={mapSettings} onMapSettingsChange={setMapSettings}></MapSelector> \n     )\n}\n\nexport default MapSelectorContainer;\n","\nimport React, { useEffect } from \"react\";\nimport { useGlobal } from 'reactn';\n\n// import { HuePicker } from 'react-color';\nimport './ColorSelector.css'\nimport { HexColorPicker } from \"react-colorful\";\n// import \"react-colorful/dist/index.css\";\n\n\nfunction ColorSelectorContainer() {\n\n\n    const [ appcolor, setAppcolor ] = useGlobal('appColor');\n\n    useEffect(() => {\n        console.log('color: '+appcolor)\n        document.documentElement.style.setProperty('--color', appcolor);\n        document.documentElement.style.setProperty('--colort', appcolor+'66');\n    }, [appcolor]);\n    \n    const handleChangeComplete = (color) => {\n        if(color === null) return\n        console.log('set color: '+color)\n        document.documentElement.style.setProperty('--color', color);\n         \n        document.documentElement.style.setProperty('--colort', color+'66');\n        setAppcolor(color );\n      };\n    \n    //console.log('mission rendering')\n    return (\n        <div className='ColorSelector'>\n            <HexColorPicker color={appcolor} onChange={handleChangeComplete}/>\n        </div>\n    )\n    // <AlphaPicker />  \n}\n\nexport default ColorSelectorContainer;\n\n\n\n","\nimport React, { useEffect } from \"react\";\nimport { useGlobal } from 'reactn';\n\n// import { HuePicker } from 'react-color';\nimport './DemSelector.css'\nimport Switch from \"react-switch\";\n// import \"react-colorful/dist/index.css\";\n\n\nfunction DemSelectorContainer() {\n\n\n    const [ mapset, setmapset ] = useGlobal('mapSettings');\n\n    \n    const handleChange = (checked) => {\n        setmapset({...mapset, dem:checked})\n      };\n    \n    //console.log('mission rendering')\n    return (\n        <div className='DemSelector horizontalContainer'>\n            <Switch onChange={handleChange} checked={mapset.dem} />\n            <span>Copernicus DEM</span>\n        </div>\n    )\n    // <AlphaPicker />  \n}\n\nexport default DemSelectorContainer;\n\n\n\n","import React, {  useGlobal } from 'reactn';\nimport './AltitudeLabel.css' \n\nfunction AltitudeLabelContainer() {\n\n    const [altitude, ] = useGlobal('altitude')\n\n    const formatLat = (lat) => {\n        return (altitude >= 10000)?Math.floor(altitude / 1000)+ ' Km' : Math.floor(altitude)+ ' m'\n    }\n\n    return (\n        <div className='AltitudeLabel'>{formatLat({altitude})}</div>\n     )\n}\n\nexport default AltitudeLabelContainer;\n","import React from 'react';\nimport dateFormat from \"dateformat\"\nimport './DateLabelCard.css';\n\nfunction DateLabel({date, highlight, animated}) {\n\n    return (\n        <div className='LabelContainer' >\n            <span className={highlight ==='year'?'Highlighted':''}>{date.getUTCFullYear()}</span>-\n            <span className={highlight ==='month'?'Highlighted':''}>{dateFormat(date,'UTC:mmm').toUpperCase()}</span>-\n            <span className={highlight ==='day'?'Highlighted':''}>{dateFormat(date,'UTC:dd')}</span>&nbsp;/&nbsp;\n            <span className={highlight ==='hour'?'Highlighted':''}>{dateFormat(date,'UTC:HH')}</span>:\n            <span className={highlight ==='minute'?'Highlighted':''}>{dateFormat(date,'UTC:MM')}</span>:\n            <span className={highlight ==='second'?'Highlighted':''}>{dateFormat(date,'UTC:ss')}</span>  \n        </div>\n    )\n}\nexport default DateLabel\n","import { useState, useEffect, useRef } from \"react\";\n\n\nexport function useClock({ autoStart, initdate }) {\n    // console.log('useClock renders')\n    //const { autoStart, duration } = settings || {};\n  \n    // let initDate = startdate\n    const [date, setDate] = useState(initdate)\n    // const [playing, setPlaying] = useState(false)\n    // const [stepstate, setStepstate] = useState(1000*60*60)\n    // const [refreshrate, setrefreshrate] = useState(200)\n    const playing = useRef()\n    const step = useRef() \n    const refreshrate = useRef() \n    refreshrate.current = 200\n    // step.current = refreshrate.current\n    \n    const ldate = useRef()\n\n      // Control functions\n    const intervalRef = useRef()\n    const timeoutRef = useRef()\n    \n\n    // function increaseSpeed() {\n    //     setStep ( () => {\n    //         let newstate = (step > 0)? step * 2:step / 2\n    //         if(Math.abs(newstate) < refreshrate) newstate = refreshrate\n    //         return newstate\n    //     })\n    // }\n    // function decreaseSpeed() {\n    //     setStep (() => {\n    //         let newstate = (step > 0)? step / 2:step * 2\n    //         if(Math.abs(newstate) < refreshrate) newstate = refreshrate\n    //         return newstate\n    //     })\n    // }\n    function increaseSpeed() {\n        // stop()\n        step.current = (step.current > 0)? step.current *= 2:step.current /= 2\n        if(Math.abs(step.current) < refreshrate.current) step.current = refreshrate.current\n        console.log('step: '+step.current)\n        // setStepstate((st)=>st*2)\n        // start()\n    }\n    function decreaseSpeed() {\n        step.current = (step.current > 0)? step.current /= 2:step.current *= 2\n        if(Math.abs(step.current) < refreshrate.current) step.current = -1 * refreshrate.current\n        console.log('step: '+step.current)\n        // setStepstate((st)=>st/2)\n    }\n\n    function togglePause() {\n        if (playing.current) {\n            stop()\n        } else {\n            start()\n        }\n    }\n    \n    function start() {\n        console.log('start clock')\n        if(!step.current) step.current = refreshrate.current\n        if (!playing.current) {\n            intervalRef.current = setInterval( ()=>{\n                ldate.current += step.current\n                setDate(new Date(ldate.current))\n            },refreshrate.current)\n        }\n        playing.current = true\n    }\n    \n    function stop() {\n        console.log('stop clock')\n        if(timeoutRef.current) clearTimeout(timeoutRef.current)\n        if (intervalRef.current) clearInterval(intervalRef.current)\n        playing.current = false\n    }\n    \n\n    function reset() {\n        ldate.current = new Date().getTime()\n        setDate(new Date(ldate.current))\n\n    }\n\n     \n    function forceDate(newdate) {\n        // console.log('forcedate useclock: '+newdate.toJSON())\n        ldate.current = newdate.getTime()\n    }\n\n    useEffect(() => {\n        // console.log('init start useclock '+initdate.toJSON())\n        ldate.current = initdate.getTime()\n    }, [initdate])\n\n\n\n    // didMount effect\n    useEffect(() => {\n        // console.log('render useclock')\n        // setDate((new Date()).getTime())\n        ldate.current = new Date().getTime()\n        if (autoStart) {\n            start();\n        }\n        //return reset;\n    }, [autoStart]);\n\n  \n  return { date, playing, togglePause, reset, increaseSpeed, decreaseSpeed, forceDate };\n}\n","import React, {useEffect, useState} from 'react';\nimport { useClock } from \"./useClock\"\nimport { useHotkeys } from 'react-hotkeys-hook'\nimport { Icon } from '@iconify/react'\n\n// npm install --save-dev @iconify/react @iconify-icons/ic\nimport roundFastForward from '@iconify-icons/ic/round-fast-forward';\nimport roundFastRewind from '@iconify-icons/ic/round-fast-rewind';\n\nimport roundPlayArrow from '@iconify-icons/ic/round-play-arrow';\n\n\n\n\nimport './DateController.css';\n\nfunction DateController({startdate, onDateChange}) {\n\n    // useClock must be redone to support real time increments\n    const {\n        date,\n        // playing,\n        togglePause,\n        reset,\n        increaseSpeed,\n        decreaseSpeed,\n        // forceDate\n    } = useClock({\n        autoStart: false,\n        initdate: startdate\n    })\n\n\n\n    useHotkeys(\"t\",togglePause)\n    useHotkeys(\"r\",()=>{reset() })\n    useHotkeys(\".\",increaseSpeed)\n    useHotkeys(\",\",decreaseSpeed)\n\n    \n\n\n    useEffect(() => {\n        // console.log(\"date from useclock :\"+date)\n        onDateChange(date)\n        //forceDate(date)\n        //setAppdate({appdate: new Date(date)})\n    },[date, onDateChange]);\n\n    // useEffect(() => {\n    //     // console.log(\"date from datemanager: \"+new Date(date).toJSON())\n    //     // forceDate(startdate)\n    //     //forceDate(date)\n    //     //setAppdate({appdate: new Date(date)})\n    // },[startdate]);\n\n    const [lastTap, setLasttap] = useState()\n    const handleDoubleTap = () => {\n        const now = Date.now();\n        if (lastTap && (now - lastTap) < 400) {\n          reset();\n        } else {\n            setLasttap(now)\n            togglePause()\n        }\n      }\n\n\n    //   <div className='DateController' onClick={handleDoubleTap}>\n\n\n    return (\n        <div className='DateController' >\n            <div className='buttoncontainer'>\n                <Icon icon={roundFastRewind} onClick={decreaseSpeed} className='controlbuttons'/>\n                <Icon icon={roundPlayArrow} onClick={handleDoubleTap} className='controlbuttons'/>\n                <Icon icon={roundFastForward} onClick={increaseSpeed} className='controlbuttons'/>\n            </div>\n        </div>\n    )\n}\nexport default DateController\n","import React, {useState, useEffect,useLayoutEffect, useRef} from 'react';\nimport './DateSelector.css';\n\nfunction DateSelectorScale({date, zoomfactor}) {\n\n    const scale = useRef(0)\n    const [timescale, setTimescale] = useState('')   \n    \n    // saves the current zoom and date to handle the widow resize\n    const izoom = useRef(zoomfactor)    \n    const idate = useRef(date)    \n\n\n        \n    const scaleText = (_start, _zoom) => {\n        // console.log('_start: '+_start.toJSON()+'  zoom: '+_zoom)\n        // if(!scale.current) return\n            \n        const monthcode = ['JAN','FEB','MAR','APR','MAY','JUN','JUL','AUG','SEP','OCT','NOV','DEC']\n        const YEAR_LEVEL = 1000*60*60*24*30*3\n        const MONTH4_LEVEL = 1000*60*60*24*4\n        const MONTH_LEVEL = 1000*60*60*24*2\n        const DAY5_LEVEL = 1000*60*60*8\n        const DAY_LEVEL = 1000*60*70\n        const DAY_HOUR_LEVEL = 1000*60*30\n        const HOUR6_LEVEL = 1000*60*20\n        const HOUR3_LEVEL = 1000*60*7\n        const HOUR_LEVEL = 1000*60*3\n        const MIN20_LEVEL = 1000*60\n        const MIN10_LEVEL = 1000*30\n        const MIN2_LEVEL = 1000*5\n        const MIN_LEVEL = 1000*3\n\n        function pad(number, length) {  \n            var str = '' + number;\n            while (str.length < length) {\n                str = '0' + str;\n            }           \n            return str;        \n        }\n\n\n        let day, month, hour, year, minute = 0\n        let lastday =0\n        let lastmonth = 0\n        let lastyear = 0\n        let lasthour = 0\n        let lastminute = 0\n        let tics = []\n        let lastticslength = 0   \n        let labeloffset = 0\n\n        let skip = parseInt(scale.current.style.fontSize)\n        let iteration = 0\n        for ( let i=0 ; i < scale.current.offsetHeight ; i+=1 ) {\n            let refdate = new Date( (i- scale.current.offsetHeight/2) * _zoom + _start.getTime()  )\n            day = refdate.getUTCDate()\n            month = refdate.getUTCMonth()\n            hour = refdate.getUTCHours()\n            year = refdate.getUTCFullYear()\n            minute = refdate.getUTCMinutes()\n            \n\n            switch (true) {\n                case _zoom < MIN_LEVEL:\n                    labeloffset = 60000\n                    if(minute !== lastminute && i!==0) {\n                        if (minute !== 0 || hour !== 0) {\n                            tics.push({class:'HourTic', pos: i, label: pad(hour,2)+':'+pad(minute,2)})\n                        } else {\n                            if (minute === 0 && hour === 0) {\n                                tics.push({class:'DayTic_h', pos: i, label: pad(day,2)})\n                                tics.push({class:'MonthTic_h2', pos: i, label: monthcode[month]})\n                                //tics.push({class:'YearTic_h', pos: i, label: year})\n                            }     \n                        }\n                    }\n                break\n\n                case _zoom < MIN2_LEVEL:\n                    labeloffset = 60000*2\n                    if(minute !== lastminute  && i!==0) {\n                        if( (minute !== 0 || hour !==0) && minute % 2 === 0) {\n                            tics.push({class:'HourTic', pos: i, label: pad(hour,2)+':'+pad(minute,2)})\n                        } else {\n                            if (minute === 0 && hour === 0) {\n                                tics.push({class:'DayTic_h', pos: i, label: pad(day,2)})\n                                tics.push({class:'MonthTic_h2', pos: i, label: monthcode[month]})\n                                //tics.push({class:'YearTic_h', pos: i, label: year})\n                            }     \n                        }\n                    }\n                break\n\n\n                case _zoom < MIN10_LEVEL:\n                    labeloffset = 60000*10\n                    if(minute !== lastminute  && i!==0) {\n                        if( (minute !== 0 || hour !==0) && minute % 10 === 0) {\n                            tics.push({class:'HourTic', pos: i, label: pad(hour,2)+':'+pad(minute,2)})\n                        } else {\n                            if (minute === 0 && hour === 0) {\n                                tics.push({class:'DayTic_h', pos: i, label: pad(day,2)})\n                                tics.push({class:'MonthTic_h2', pos: i, label: monthcode[month]})\n                                //tics.push({class:'YearTic_h', pos: i, label: year})\n                            }     \n                        }\n                    }\n                break\n\n                case _zoom < MIN20_LEVEL:\n                    labeloffset = 60000*20\n                    if(minute !== lastminute && i!==0) {\n                        if( (minute !== 0 || hour !==0) && minute % 20 === 0) {\n                            tics.push({class:'HourTic', pos: i, label: pad(hour,2)+':'+pad(minute,2)})\n                        } else {\n                            if (minute === 0 && hour === 0) {\n                                tics.push({class:'DayTic_h', pos: i, label: pad(day,2)})\n                                tics.push({class:'MonthTic_h2', pos: i, label: monthcode[month]})\n                                //tics.push({class:'YearTic_h', pos: i, label: year})\n                            }     \n                        }\n                    }\n                break\n\n                case _zoom < HOUR_LEVEL:\n                    labeloffset = 60000*60\n                    if(hour !== lasthour && i!==0) {\n                        if (hour !== 0) {\n                            tics.push({class:'HourTic', pos: i, label: pad(hour,2)+':00'})\n                        \n                        } else  {\n                            tics.push({class:'DayTic_h', pos: i, label: pad(day,2)})\n                            tics.push({class:'MonthTic_h2', pos: i, label: monthcode[month]})\n                            // tics.push({class:'YearTic_h', pos: i, label: year})            \n                        }\n                    }\n                break\n\n                case _zoom < HOUR3_LEVEL:\n                    labeloffset = 60000*60*3\n                    if(hour !== lasthour && i!==0) {\n                        if (hour !== 0 &&  (hour % 3 === 0 )) {\n                            tics.push({class:'HourTic', pos: i, label: pad(hour,2)+':00'})\n                        } else  {\n                            if (hour === 0) {\n                                tics.push({class:'DayTic_h', pos: i, label: pad(day,2)})\n                                tics.push({class:'MonthTic_h2', pos: i, label: monthcode[month]})\n                                // tics.push({class:'YearTic_h', pos: i, label: year})            \n                            }\n                        }\n                    }    \n                break\n\n                case _zoom < HOUR6_LEVEL:\n                    labeloffset = 60000*60*6\n                    if(hour !== lasthour && i!==0) {\n                        if (hour !== 0 &&  (hour % 6 === 0 )) {\n                            tics.push({class:'HourTic', pos: i, label: pad(hour,2)+':00'})\n                        } else  {\n                            if (hour === 0) {\n                                tics.push({class:'DayTic_h', pos: i, label: pad(day,2)})\n                                tics.push({class:'MonthTic_h2', pos: i, label: monthcode[month]})\n                                // tics.push({class:'YearTic_h', pos: i, label: year})            \n                            }\n                        }\n                    }    \n                break\n\n\n\n                case _zoom < DAY_HOUR_LEVEL:\n                    labeloffset = 60000*60*24\n                    if(day !== lastday && i!==0) {\n                        tics.push({class:'DayTic_h', pos: i, label: pad(day,2)})\n                        tics.push({class:'MonthTic_h2', pos: i, label: monthcode[month]})\n\n                    }    \n                break\n\n\n                case _zoom < DAY_LEVEL:\n                    labeloffset = 60000*60*24\n                    if(day !== lastday && i!==0) {\n                        if ( day !== 1 ) {\n                            tics.push({class:'DayTic', pos: i, label: day})\n                        } else {\n                            tics.push({class:'MonthTic_h', pos: i, label: monthcode[month]})\n                            if (month === 0) tics.push({class:'YearTic_h2', pos: i, label: year})\n                            // tics.push({class:'YearTic_h2', pos: i, label: year})\n                         }\n                        \n                    }    \n                break\n\n                case _zoom < DAY5_LEVEL:\n                    labeloffset = 60000*60*24*5\n                    if(day !== lastday && i!==0) {\n                        if ( day !== 1 && day !== 30 && day % 5 === 0 ) {\n                            tics.push({class:'DayTic', pos: i, label: day})\n                        } else {\n                            if (day === 1) {\n                                // tics.push({class:'DayTic', pos: i, label: day})\n                                tics.push({class:'MonthTic_h', pos: i, label: monthcode[month]})\n                                if (month === 0) tics.push({class:'YearTic_h2', pos: i, label: year})\n                                // tics.push({class:'YearTic_h2', pos: i, label: year})\n                            }\n                         }\n                        \n                    }    \n\n                break\n\n                case _zoom < MONTH_LEVEL:\n                    labeloffset = 60000*60*24*28\n                    if( month !== lastmonth  && i!==0) {\n                        if (month !== 0) {\n                            tics.push({class:'MonthTic', pos: i, label: monthcode[month]})\n                        } else {\n                            tics.push({class:'MonthTic_h', pos: i, label: monthcode[month]})\n                            tics.push({class:'YearTic_h2', pos: i, label: year})\n                        }\n                    }\n    \n                break\n\n                case _zoom < MONTH4_LEVEL:\n                    labeloffset = 60000*60*24*28*3\n                    if( month !== lastmonth  && i!==0) {\n                        if (month !== 0 && month !== 11 && (month) % 3 === 0 ) {\n                            tics.push({class:'MonthTic', pos: i, label: monthcode[month]})\n                        } else {\n                            if (month === 0) {\n                                tics.push({class:'MonthTic_h', pos: i, label: monthcode[month]})\n                                tics.push({class:'YearTic_h2', pos: i, label: year})\n                            }\n                        }\n                    }\n    \n                break\n\n                case _zoom < YEAR_LEVEL:\n                    labeloffset = 60000*60*24*30*12\n                    if(year !== lastyear  && i!==0) {\n                        if (month !== 0) {\n                            tics.push({class:'MonthTic', pos: i, label: monthcode[month]})\n                        } else {\n                            // tics.push({class:'MonthTic', pos: i, label: month})\n                            tics.push({class:'YearTic', pos: i, label: year})\n                        }\n                    }\n    \n                break\n\n                default:\n                break\n            }\n            lastday = day\n            lastyear = year\n            lastmonth = month\n            lasthour = hour\n            lastminute = minute\n            // optimisation to skip a fontsize number of pixels\n            if (tics.length != lastticslength) {\n                // console.log('off: '+labeloffset/_zoom+'   labeloffset: '+labeloffset)\n                i+=labeloffset/_zoom - 4\n            }\n            lastticslength = tics.length\n            // iteration +=1\n        }\n    //   console.log('iterations: '+iteration)\n        return tics.map(item => ( <div className={item.class} key={item.class+item.pos} style={{top:item.pos,opacity:1}}>{item.label}</div>))\n    }\n\n    const handleResize = () => {\n        // console.log(scale.current.style.fontSize)\n        setTimescale(scaleText(idate.current,izoom.current))\n    }\n\n    useLayoutEffect(() => {\n        // console.log('zoomfactor / date: '+zoomfactor + '/ ' + date)\n        izoom.current = zoomfactor\n        idate.current = date\n        setTimescale(scaleText(date,zoomfactor))\n    },[ zoomfactor,date])\n\n    useEffect(() => {\n        window.addEventListener('resize', handleResize)\n        return ()=>{window.removeEventListener('resize', handleResize)}\n    },[])\n\n\n    return (\n        <div ref={scale} className='DateSelectorScale' id='DateSelectorScale' style={{fontSize:'14px'}}>\n            {timescale}\n        </div>\n    )\n}\nexport default DateSelectorScale\n","import React, {useState, useEffect, useRef} from 'react'\nimport {useSpring} from 'react-spring'\nimport { useGesture } from 'react-use-gesture'\n// import { add, scale } from 'vec-la'\nimport DateSelectorScale from './DateSelectorScale'\n// import useLog from '../../../../hooks/useLog.js';\n\n\n\nimport './DateSelector.css';\n// import { start } from 'repl';\n\nfunction DateSelector({startdate, onDateChange, onFinalDateChange, onStepChange}) {\n\n\n    // const [ setlog, renderlog] = useLog()\n    // const [ setlog2, renderlog2] = useLog()\n\n    // zoomfactor of the date scale: ms/pixel\n    const MAXZOOM = 1000*60*60*24*15\n    const MINZOOM = 1000\n    const DEFZOOM = 1000*60*60\n    const ZOOMDIR = -1\n    const lastZoom = useRef(DEFZOOM)\n    const [zoomfactor, setZoomfactor ] = useState(DEFZOOM)\n\n    const selector = useRef()\n\n    const [scaledate, setScaledate ] = useState(startdate)\n    // const debouncedScaledate = useDebounce(scaledate, 10);\n\n    // const [lastStartdate, setlLastStartdate ] = useState(startdate)\n    \n    const [Selector_is_active, setSelector_is_active ] = useState(false)\n    const [step, setStep ] = useState([60000])\n    const [stepLabel, setStepLabel ] = useState('hour')\n\n    // to detect double taps\n    const lastTap = useRef()\n    const doubleTap = useRef()\n    const button = useRef()\n\n    const startingdate = useRef(startdate)\n    const discreetdate = useRef(startdate)\n\n    const detectDoubleTap = (e) => {\n        const now = Date.now();\n        button.current = e.button\n        if (lastTap.current && (now - lastTap.current) < 300) {\n            doubleTap.current = true\n        } else {\n            lastTap.current = now\n            doubleTap.current = false\n        }\n    }\n\n\n    const [{ posy_wheel }, setyOnWheel] = useSpring(() => ({posy_wheel: 0 }))\n    const [{ zoom }, springzoom] = useSpring(() => ({ zoom: 0 }))\n\n    const [{ test }, springtest] = useSpring(() => ({ test: 0 }))\n    \n    const bind = useGesture({\n\n        // onWheelEnd: () => { \n        //     setSelector_is_active(false)\n        //     onFinalDateChange(discreetdate.current)\n        //     console.log('finaldate')\n        //         // lastZoom.current = zoomfactor\n        // },\n\n        onWheel: ( {active, delta, first, down, direction, velocity, xy, movement, wheeling, ctrlKey, shiftKey } ) => {\n            // console.log(down)\n            // console.log(first)\n            \n            if (first) {\n                springtest.stop()\n            //   setSelector_is_active(true)\n              discreetdate.current = scaledate\n            }\n\n            if (ctrlKey || shiftKey) {\n                springzoom.start({\n                    zoom: delta[1],\n                    immediate: true,\n                    config: { mass: 1, tension: 100, friction: 25, precision: 0.1 },\n                    onChange: () => {\n                        let newzoom = lastZoom.current + lastZoom.current / 300 * zoom.get() * ZOOMDIR\n                        // let newzoom = lastZoom.current + zoom.get() * ZOOMDIR *5000\n                        if (newzoom < MINZOOM) newzoom = MINZOOM\n                        if (newzoom > MAXZOOM) newzoom = MAXZOOM\n                        setZoomfactor(newzoom)\n                        lastZoom.current = newzoom\n        \n                    }\n                })\n                return\n            }\n\n            setyOnWheel.start({                 \n                posy_wheel: delta[1], \n                immediate: true, \n                config: { mass: 1, tension: 100, friction: 40},\n                onChange: ()=>{\n                    setSelector_is_active(true)\n                    let newdate\n                    const rounder = (posy_wheel.get() < 0)?Math.ceil:Math.floor\n                    let nbstep = rounder(posy_wheel.get() * zoomfactor  / step[0])\n                    if(nbstep === 0) {\n                        // onFinalDateChange(discreetdate.current)\n                        // setSelector_is_active(false)\n                        setyOnWheel.stop()\n                        // return\n                    }\n                    if(stepLabel==='month') {\n                        \n                        // setlog({olddate:discreetdate.current.toJSON()})\n                        newdate = new Date(discreetdate.current.getTime())\n                        newdate.setUTCMonth( newdate.getUTCMonth()-nbstep )\n                        // setlog({newdate:discreetdate.current.toJSON()})\n                    } else { \n                        newdate = new Date(discreetdate.current.getTime() - nbstep * step[0]) \n                    }\n                    discreetdate.current = newdate\n                    setScaledate(newdate)\n                    onDateChange(newdate)\n                },\n                onRest: ()=>{\n                    if (!wheeling) {\n                        onFinalDateChange(discreetdate.current)\n                        setSelector_is_active(false)\n\n                    }\n                    // if (!down) {\n                    //     // setSelector_is_active(false)\n                    //     let newdate = new Date(discreetdate.current.getTime() + Math.ceil(posy_wheel.get() * zoomfactor  / step[0]) * step[0]) \n                    //     onFinalDateChange(newdate)\n                    //     discreetdate.current = newdate\n                    //     setScaledate(newdate)\n                    //     onDateChange(newdate)\n                    //     lastPos.current=0\n                    // }\n                }\n            })\n        },\n\n\n        onDrag: ({  event, active, first, down, touches, delta, initial, distance, velocity, direction, shiftKey, xy, movement,vxvy}) => {\n            setSelector_is_active(active)\n\n            if (first) {\n                setyOnWheel.stop()\n                detectDoubleTap(event)\n                startingdate.current = discreetdate.current\n                // setlog2({ startingdate: startingdate.current.toJSON()  })\n\n   \n            }\n\n            // setlog2({velocity1: velocity})\n            velocity = (velocity < 0.2)?0:velocity\n\n            if (doubleTap.current || shiftKey || button.current === 2) {\n                // let zoom = lastZoom.current + lastZoom.current / 50 *  delta[1] * ZOOMDIR\n                // if (zoom < MINZOOM) zoom = MINZOOM\n                // if (zoom > MAXZOOM) zoom = MAXZOOM\n                // setZoomfactor(zoom)\n                // lastZoom.current = zoom\n\n                springzoom.start({\n                    zoom: delta[1],\n                    immediate: down,\n                    config: { mass: 1, tension: 100, friction: 25, precision: 0.1 },\n                    onChange: () => {\n                        let newzoom = lastZoom.current + lastZoom.current / 50 *  zoom.get() * ZOOMDIR\n                        if (newzoom < MINZOOM) newzoom = MINZOOM\n                        if (newzoom > MAXZOOM) newzoom = MAXZOOM\n                        setZoomfactor(newzoom)\n                        lastZoom.current = newzoom\n        \n                    }\n                })\n\n                // setlog({zoomfactor:zoomfactor})\n                // temp.lastdelta = delta\n                return\n                // if(!down) setActive(false)\n            }\n\n \n\n            // Working !!\n            springtest.start({  \n                // test: scale(delta,[0,zoomfactor]),\n                // test: delta[1]*zoomfactor,\n                test: (down)?movement[1]:movement[1]+movement[1]*velocity*5,\n                immediate: down,\n                config: { mass: 1, tension: 100, friction: 25, precision: 0.1 },\n                onChange: () => {\n                    setSelector_is_active(true)\n                    // if(Math.floor(Math.abs(test.get()*zoomfactor   / step[0]))==0) test.stop()\n\n                    // let even = (test.get()<0 ? Math.ceil:Math.floor)\n                        // setlog({anim:test.get(), velocity: velocity*5})\n\n                        if(stepLabel==='month') {\n                            let nbstep = Math.ceil(test.get() * zoomfactor  / step[0])\n                            // setlog({olddate:discreetdate.current.toJSON()})\n                            let adate = new Date(startingdate.current.getTime())\n                            adate.setUTCMonth( adate.getUTCMonth()-nbstep )\n                            discreetdate.current = adate\n                            // setlog({newdate:discreetdate.current.toJSON()})\n                        } else {\n                            discreetdate.current = new Date(startingdate.current.getTime() - Math.ceil(test.get()*zoomfactor   / step[0]) * step[0])\n                        }\n                        \n\n                    // } else {\n                    //     discreetdate.current = new Date(discreetdate.current.getTime() - even(test.get()*zoomfactor   / step[0]) * step[0])\n                    //     // runningdate.current = new Date(runningdate.current.getTime() - even(spring.value.test*zoomfactor ))\n                    //     setlog({nbsteps:even(test.get()*zoomfactor   / step[0])})\n                    // }\n                    \n                    \n                    setScaledate(discreetdate.current)\n                    onDateChange(discreetdate.current)\n                },\n                onRest: () => {\n                    if (!down) {\n                        onFinalDateChange(discreetdate.current)\n                        setSelector_is_active(false)\n                    }\n                },\n                // stop: (spring)=>{\n                //     let even = (test.get()<0 ? Math.ceil:Math.floor)\n                //     return (even(test.get()*zoomfactor   / step[0])<=0)\n                // }\n            }) \n\n\n        },\n        onDragEnd: () => { \n            // setSelector_is_active(false)\n            onFinalDateChange(discreetdate.current)\n            setSelector_is_active(false)\n                // lastZoom.current = zoomfactor\n        }\n    },\n    // {initial: ()=> [0,test.get()],drag: {useTouch: true} }\n    {drag: {useTouch: true} }\n    )\n\n    const [{ xy2 }, sety2] = useSpring(() => ({ xy2: [0,0] }))\n    const moveToDate = (newdate) => {\n        // console.log('go from: '+discreetdate.current.toJSON()+' to: '+newdate.toJSON())\n        let fromtime = discreetdate.current.getTime()\n        // sety2.stop()\n        // if (!Selector_is_active) {\n            let deltaoffset = [0,(fromtime - newdate.getTime())  ]\n\n            sety2.start({ \n                from: {xy2: [0,0]},\n                to: {xy2: deltaoffset},\n                immediate: false, \n                config: {reset: true, duration: 300 },\n                // config: { mass: 1, tension: 100, friction: 25, precision: 0.1 },\n                onChange: ()=>{\n                    // setlog(({animgoto: xy2.get()[1]}))\n                    // setSelector_is_active(true)\n\n                    let adate = new Date(fromtime - xy2.get()[1] )\n                    // console.log('adate: '+adate.toJSON() )\n                    discreetdate.current = adate\n                    setScaledate(adate)\n                    onDateChange(adate)\n                },\n                // onRest: ()=>{\n                //     // setSelector_is_active(false)\n                // console.log(\"rest move\")\n                //     onFinalDateChange(discreetdate.current)\n                // }\n            })\n        // }\n\n    }\n\n    useEffect(() => {\n        // console.log('startdate changed')\n        if(!Selector_is_active) {\n            // console.log(startdate.toJSON())\n            moveToDate(startdate)\n        }\n    },[startdate])\n\n    // useEffect(() => {\n    //     console.log('laststartdate changed: '+lastStartdate.toJSON())\n    // },[lastStartdate])\n\n    // useEffect(() => {\n    //     console.log('Selector active: '+Selector_is_active)\n    // },[Selector_is_active])\n\n\n    useEffect(() => {\n        onStepChange(stepLabel)\n    },[stepLabel,onStepChange])\n\n    \n    useEffect(() => {\n        switch (true) {\n            case zoomfactor > 120426316:\n                setStep([\n                    1000*60*60*24*31,\n                    1000*60*60*24*28,\n                    1000*60*60*24*31,\n                    1000*60*60*24*30,\n                    1000*60*60*24*31,\n                    1000*60*60*24*30,\n                    1000*60*60*24*31,\n                    1000*60*60*24*31,\n                    1000*60*60*24*30,\n                    1000*60*60*24*31,\n                    1000*60*60*24*30,\n                    1000*60*60*24*31,\n                    ])\n                setStepLabel('month')\n                break\n            case zoomfactor > 94544702:\n                setStep([1000*60*60*24*12])\n                setStepLabel('cycle')\n                break\n            case zoomfactor > 14544702:\n                setStep([1000*60*60*24])\n                setStepLabel('day')\n                break\n            case zoomfactor > 735259:\n                setStep([1000*60*60])\n                setStepLabel('hour')\n                break\n            case zoomfactor > 32274:\n                setStep([1000*60])\n                setStepLabel('minute')\n                break\n            default:\n                setStep([1000])\n                setStepLabel('second')\n        }\n    },[zoomfactor])\n\n    \n\n\n    return (\n        <div>\n            <div className='DateSelector' ref={selector} >\n            <div {...bind()} className=\"touchMask\"> </div>\n            <div className=\"Mask\"  >\n\n                    <DateSelectorScale className='scale' date={scaledate} zoomfactor={zoomfactor} ></DateSelectorScale>\n                    \n                    <div className=\"TriangleContainer\" >\n                        <svg height=\"40\" width=\"20\" className=\"Triangle\">\n                            <polygon points=\"20,5 20,35 12,20\" />   \n                        </svg> \n                    </div>        \n                </div>\n            </div>\n            {/* {renderlog()}\n            {renderlog2()} */}\n        </div>\n                                   )\n}\nexport default DateSelector\n","import React, {useState, useCallback} from 'react';\nimport DateLabel from './components/datelabel'\nimport DateController from './components/datecontroller'\nimport DateSelector from './components/dateselector'\n\n\nfunction DateManager({ onDateChange, onFinalDateChange, animated}) {\n\n    let startdate = new Date()\n    const [selectorStartdate, setselectorStartdate] = useState(startdate)\n    const [controllerStartdate, setcontrollerStartdate] = useState(startdate)\n    const [labeldate, setLabelDate] = useState(startdate)\n    const [dateLabelHighlight,setDateLabelHighlight] = useState(1)\n\n    const handleSelectorDateChange = useCallback( (date) => {\n        // console.log('handleSelectorDateChange:' + date.toJSON())\n        setLabelDate(date)\n        onDateChange(date)\n        // setscontrollerStartdate(date)\n    }, [])\n\n    const handleSelectorFinalDateChange = (date) => {\n        // console.log('handleSelectorFinalDateChange:' + date.toJSON())\n        setcontrollerStartdate(date)\n        onFinalDateChange(date)\n    }\n    \n    const handleControllerDateChange = useCallback( (date) => {\n        // console.log('handleControllerDateChange' + date.toJSON())\n        setselectorStartdate(date)\n        // onFinalDateChange(date)\n    }, [])\n\n    const handleSelectorStepChange = (step) => {\n        // console.log('handleSelectorStepChange' + step)\n        setDateLabelHighlight(step)\n    }\n\n\n    return (\n        <div >\n          <DateController startdate={controllerStartdate} onDateChange={handleControllerDateChange}/>\n          <DateLabel date={labeldate} animated={animated} highlight={dateLabelHighlight}/>\n          <DateSelector startdate={selectorStartdate} \n                onDateChange={handleSelectorDateChange} \n                onFinalDateChange={handleSelectorFinalDateChange} \n                onStepChange={handleSelectorStepChange}/>\n        </div>\n    ) \n}\nexport default DateManager","import React, {  useEffect, useGlobal } from 'reactn';\n\nimport DateManager from \"../components/datemanager\"\n\nfunction DateManagerContainer() {\n\n    const [, setViewDate] = useGlobal('viewDate')\n    const [SearchDate, setSearchDate] = useGlobal('searchDate')\n\n    // useEffect(() => {\n    //     console.log('Searching: '+SearchDate)\n    // }, [SearchDate]);\n\n\n\n    return (\n        <DateManager onDateChange={setViewDate} onFinalDateChange={setSearchDate} /> \n     )\n}\n\nexport default DateManagerContainer;\n","import wellknown from 'wellknown';\n\nexport default function dhusToGeojson(response) {\n\n    \n    function mapFromHubOpenSearch(item) {    \n        function reshuffle(array) {\n            let json = {};\n            for(let i=0; i < array.length; i++) {\n                json[array[i].name] =  array[i].content;\n            }\n            return json;\n        }\n\n        try {\n            let hubItem = {};\n            if(item.date) Object.assign(hubItem,reshuffle(item.date));\n            if(item.int) Object.assign(hubItem,reshuffle(item.int));\n            if(item.double) Object.assign(hubItem,reshuffle(item.double));\n            if(item.str) Object.assign(hubItem,reshuffle(item.str));\n\n\n            var sizeArray = hubItem.size.split(\" \");\n            var sizeInBytes;\n            switch (sizeArray[1]) {\n                case \"B\":\n                    sizeInBytes = Math.round(parseFloat(sizeArray[0]));\n                    break;\n                case \"MB\":\n                    sizeInBytes = Math.round(parseFloat(sizeArray[0])*1024);\n                    break;\n                case \"GB\":\n                    sizeInBytes = Math.round(parseFloat(sizeArray[0])*1024*1024);\n                    break;\n                case \"TB\":\n                    sizeInBytes = Math.round(parseFloat(sizeArray[0])*1024*1024*1024);\n                    break;\n                default: \n                    sizeInBytes = Math.round(parseFloat(sizeArray[0]));\n                    break;\n\n            }\n            \n\n            var newItem = {\n                id: item.title,\n                geometry: wellknown(hubItem.footprint),\n                type: \"Feature\",\n                properties: {\n                    updated: new Date(hubItem.ingestiondate),\n                    title: item.title,\n                    name: item.title,\n                    uuid: item.id,\n                    date: hubItem.beginposition  +'/'+  hubItem.endposition,\n                    downloadUrl: item.link[0].href,\n                    quicklookUrl: (item.link.length >= 2) ? item.link[2].href: null,\n                    // links: {\n                    //     data: [{\n                    //         href: item.link[0].href,\n                    //     }]\n                    // },\n                    earthObservation: {\n                        parentIdentifier: \"\",\n                        status: \"ARCHIVED\",\n                        acquisitionInformation: [{\n                            platform: {\n                                platformShortName: hubItem.platformname,\n                                platformSerialIdentifier: hubItem.platformserialidentifier\n                            },\n                            sensor: {\n                                instrument: hubItem.instrumentshortname,\n                                operationalMode: hubItem.sensoroperationalmode\n                            },\n                            acquisitionParameter: {\n                                acquisitionStartTime: new Date(hubItem.beginposition),\n                                acquisitionStopTime: new Date(hubItem.endposition),\n                                relativePassNumber: parseInt(hubItem.relativeorbitnumber),\n                                orbitNumber: parseInt(hubItem.orbitnumber),\n                                startTimeFromAscendingNode: null,\n                                stopTimeFromAscendingNode: null,\n                                orbitDirection: hubItem.orbitdirection\n\n                            }\n                        }],\n                        productInformation: {\n                            productType: hubItem.producttype,\n                            //timeliness: indexes[\"product\"][\"Timeliness Category\"],\n                            size: sizeInBytes\n                        }\n                    }\n                }\n            }\n        \n            return newItem;\n        } catch (err) {\n            console.log(\"error parsing item from dhus: \"+err.message);\n            return {};\n        }\n    }\n\n    let features = [];\n    try {\n        if( response.feed.entry ) {\n            if(Array.isArray(response.feed.entry)) {\n                // console.log('entry is an  array')\n                features = response.feed.entry.map( item =>  mapFromHubOpenSearch(item)).filter(item => item !== {});\n            } else {\n                features = [mapFromHubOpenSearch(response.feed.entry)]\n            }\n                \n        } else {\n            features = []\n        }\n        \n    } catch (err) {\n        console.log(response);\n        console.log(\"Error: \");\n        console.log(err);\n        features = []\n    }\n    //console.log(JSON.stringify(features));\n    let geojson = {   \n            type: \"FeatureCollection\",\n            id: \"search\",\n            properties: {\n                totalResults: response.feed[\"opensearch:totalResults\"],\n                startIndex: (response.feed[\"opensearch:startIndex\"])?response.feed[\"opensearch:startIndex\"]:1,\n                itemsPerPage: response.feed[\"opensearch:itemsPerPage\"],\n                title: \"DHuS search response\",\n                updated: new Date()\n            },\n            features: features\n        };\n\n    return geojson\n\n}\n","import wellknown from 'wellknown';\n\nexport default function eocatToGeojson(response) {\n\n    \n    function mapFromHubOpenSearch(item) {    \n\n        try {\n            var downloadurl = null\n            var quicklookurl = null\n            for (let i = 0; i < item.properties.link.length; i++) {\n                if (item.properties.link[i]['@']['title'] == 'Download') downloadurl = item.properties.link[i]['@']['href']\n                if (item.properties.link[i]['@']['title'] == 'Quicklook') quicklookurl = item.properties.link[i]['@']['href']\n            }\n            \n\n            var newItem = {\n                id: item.id,\n                geometry: item.geometry,\n                type: \"Feature\",\n                properties: {\n                    updated: item.properties.updated,\n                    title: item.properties.title,\n                    name: item.title,\n                    uuid: item.properties.identifier,\n                    date: item.properties.date,\n                    downloadUrl: downloadurl,\n                    quicklookUrl: quicklookurl,\n                    // links: {\n                    //     data: [{\n                    //         href: item.link[0].href,\n                    //     }]\n                    // },\n                    earthObservation: {\n                        parentIdentifier: item.properties.EarthObservation.metaDataProperty.EarthObservationMetaData.parentIdentifier,\n                        status: \"ARCHIVED\",\n                        acquisitionInformation: [{\n                            platform: {\n                                platformShortName: item.properties.EarthObservation.procedure.EarthObservationEquipment.platform.Platform.shortName,\n                                platformSerialIdentifier: null\n                            },\n                            sensor: {\n                                instrument: item.properties.EarthObservation.procedure.EarthObservationEquipment.instrument.Instrument.shortName,\n                                operationalMode: item.properties.EarthObservation.procedure.EarthObservationEquipment.sensor.Sensor.operationalMode\n                            },\n                            acquisitionParameter: {\n                                acquisitionStartTime: new Date(item.properties.EarthObservation.phenomenonTime.TimePeriod.beginPosition),\n                                acquisitionStopTime: new Date(item.properties.EarthObservation.phenomenonTime.TimePeriod.endPosition),\n                                relativePassNumber: null,\n                                orbitNumber: item.properties.EarthObservation.procedure.EarthObservationEquipment.acquisitionParameters.Acquisition.orbitNumber,\n                                startTimeFromAscendingNode: null,\n                                stopTimeFromAscendingNode: null,\n                                orbitDirection: item.properties.EarthObservation.procedure.EarthObservationEquipment.acquisitionParameters.Acquisition.orbitDirection\n\n                            }\n                        }],\n                        productInformation: {\n                            productType: item.properties.EarthObservation.metaDataProperty.EarthObservationMetaData.productType,\n                            //timeliness: indexes[\"product\"][\"Timeliness Category\"],\n                            downloadUrl: downloadurl,\n                            quicklookUrl: quicklookurl,\n        \n                            size: null\n                        }\n                    }\n                }\n            }\n        \n            return newItem;\n        } catch (err) {\n            console.log(\"error parsing item from dhus: \"+err.message);\n            return {};\n        }\n    }\n\n    let features = [];\n    try {\n        if( response.features ) {\n            if(Array.isArray(response.features)) {\n                console.log('features is an  array')\n                features = response.features.map( item =>  mapFromHubOpenSearch(item)).filter(item => item !== {});\n            } \n                \n        } else {\n            features = []\n        }\n        \n    } catch (err) {\n        console.log(response);\n        console.log(\"Error: \");\n        console.log(err);\n        features = []\n    }\n    //console.log(JSON.stringify(features));\n    let geojson = {   \n            type: \"FeatureCollection\",\n            id: \"search\",\n            properties: {\n                totalResults: response.properties.totalResults,\n                startIndex: response.properties.startIndex,\n                itemsPerPage: response.properties.itemsPerPage,\n                title: response.properties.title,\n                updated: response.properties.updated\n            },\n            features: features\n        };\n\n    return geojson\n\n}\n","import { useState, useEffect, useRef } from \"react\";\nimport dhusToGeojson from \"./dhusToGeojson\";\nimport eocatToGeojson from \"./eocatToGeojson\"\n\n\n// export default function useDatahub({searchdate, mission, searchpoint})  {\nexport default function useDatahub()  {\n\n    const searchparam = useRef({})\n\n    const MAX_ITEMS = 13000\n    let windowSize = 1000 * 60 * 60 * 24 * 60\n\n    const [geojsonResults, setGeojsonResults] = useState(null)\n    const [loading, setLoading] = useState(false)\n    const [firstpage, setFirstpage] = useState(false)\n    const [ searchUrl, setSearchurl  ] = useState(null);\n\n\n    // const [ collections, setCollections ] = useState([])\n    const collections = useRef([\n        {\n            code: 'S1',\n            //templateUrl: 'https://131.176.236.55/dhus/search?q=( footprint:\"Intersects({polygon})\" AND beginposition:[{start} TO {end}] AND platformname:Sentinel-1 AND producttype:GRD)&start={startindex}&rows=100&sortedby=beginposition&order=desc&format=json',\n            templateUrl: 'https://scihub.copernicus.eu/dhus/search?q=( footprint:\"Intersects({polygon})\" AND beginposition:[{start} TO {end}] AND platformname:Sentinel-1 AND producttype:GRD)&start={startindex}&rows=100&sortedby=beginposition&order=desc&format=json',\n            name: 'Sentinel-1 A/B GRD' ,\n            startIndexOrigin: 0,\n            dateOff: ' beginposition:[{start} TO {end}] AND',\n            areaOff:  ' footprint:\"Intersects({polygon})\" AND'\n        },\n        {\n            code: 'S2',\n            templateUrl: 'https://scihub.copernicus.eu/dhus/search?q=( footprint:\"Intersects({polygon})\" AND beginposition:[{start} TO {end}] AND platformname:Sentinel-2 AND filename:*MSIL1C*)&start={startindex}&rows=100&sortedby=beginposition&order=desc&format=json',\n            name: 'Sentinel-2 A/B Level 1C',\n            startIndexOrigin: 0,\n            dateOff: ' beginposition:[{start} TO {end}] AND',\n            areaOff:  ' footprint:\"Intersects({polygon})\" AND'\n        },\n        {\n            code: 'S2B',\n            templateUrl: 'https://scihub.copernicus.eu/dhus/search?q=( footprint:\"Intersects({polygon})\" AND beginposition:[{start} TO {end}] AND platformname:Sentinel-2 AND filename:S2B_MSIL1C*)&start={startindex}&rows=100&sortedby=beginposition&order=desc&format=json',\n            name: 'Sentinel-2 A/B Level 1C',\n            startIndexOrigin: 0,\n            dateOff: ' beginposition:[{start} TO {end}] AND',\n            areaOff:  ' footprint:\"Intersects({polygon})\" AND'\n        },\n        {\n            code: 'S3',\n            templateUrl: 'https://scihub.copernicus.eu/dhus/search?q=( footprint:\"Intersects({polygon})\" AND beginposition:[{start} TO {end}] AND platformname:Sentinel-3 AND (producttype:OL_1_ERR___ OR producttype:SL_1_RBT___ OR producttype:SR_1_SRA___))&start={startindex}&rows=100&sortedby=beginposition&order=desc&format=json',\n            name: 'Sentinel-3 A/B, OLCI/SLSTR/SRAL' ,\n            startIndexOrigin: 0,\n            dateOff: ' beginposition:[{start} TO {end}] AND',\n            areaOff:  ' footprint:\"Intersects({polygon})\" AND'\n        },\n        {\n            code: 'S5P',\n            templateUrl: 'https://scihub.copernicus.eu/dhus/search?q=( footprint:\"Intersects({polygon})\" AND beginposition:[{start} TO {end}] AND platformname:Sentinel-5 precursor AND (producttype:L1B_RA_BD1 OR (producttype:L2__NO2___ AND processingmode:Near real time)))&start={startindex}&rows=100&sortedby=beginposition&order=desc&format=json',\n            name: 'Sentinel-1 A/B',\n            startIndexOrigin: 0,\n            dateOff: ' beginposition:[{start} TO {end}] AND',\n            areaOff:  ' footprint:\"Intersects({polygon})\" AND'\n        },\n        {\n            code: 'ENVISAT',\n            templateUrl: 'https://eocat.esa.int/api/catalogue/EOCAT-ENVISAT.ASA.IMP_1P/search?start={start}&stop={end}&format=json&count=50&startIndex={startindex}',\n            startIndexOrigin: 1,\n            name: 'Envisat',\n            dateOff: ' beginposition:[{start} TO {end}]',\n            areaOff:  ' footprint:\"Intersects({polygon})\"'\n        }\n\n    ])\n\n    const getcollection = (code) => {\n        for(let i=0; i < collections.current.length; i++) {\n            if(collections.current[i].code == code) {\n                return collections.current[i]\n            }\n        }\n        return null\n    }\n\n    const buildUrl = ({code, polygon, start, end, startindex}) => {\n\n        let target = getcollection(code)\n        if(!target) return null\n        let newurl = target.templateUrl\n\n        if(polygon != null) {\n            newurl = newurl.replace(\"{polygon}\", polygon)\n        } else {\n            newurl = newurl.replace(target.dateOff, '')\n        }\n\n        if (start != null  && end != null) {\n            newurl = newurl.replace(\"{start}\", start)\n            newurl = newurl.replace(\"{end}\", end)\n        } else {\n            newurl = newurl.replace(target.dateOff, '')\n        }\n        \n        // startindex = startindex == 0 ? startindex : startindex + target.startIndexOrigin\n        // newurl = newurl.replace(\"{startindex}\",target.startIndexOrigin)\n\n\n        return newurl\n    }\n\n    useEffect(() => {\n        const fetchURL = async (url,index) => {\n             setLoading(true)\n            let newurl = url\n            newurl = newurl.replace(\"{startindex}\",index)\n            console.log('Search: '+newurl)\n            let paging = {totalresults:0, startindex:0, itemsperpage:0}\n            try {\n                \n                const response = await fetch(newurl, {mode: 'cors', credentials: 'include'})\n                // console.log( response.text())\n                try {\n                    const json = await response.json()\n                    const geoJson = (searchparam.current.mission === 'ENVISAT')? eocatToGeojson(json) : dhusToGeojson(json)\n                    // console.log('totalResults: ' + geoJson.properties.totalResults)\n                    paging = {\n                        totalresults: geoJson.properties.totalResults == null ? 0 : Number(geoJson.properties.totalResults) ,\n                        startindex:  Number(geoJson.properties.startIndex), \n                        itemsperpage:  Number(geoJson.properties.itemsPerPage)\n                    }\n                    console.log(paging)\n\n                    // setPagination(paging)\n                    if(paging.totalresults>0) setGeojsonResults(geoJson) \n\n                    if (paging.startindex + paging.itemsperpage < Math.min(paging.totalresults,MAX_ITEMS) ) {\n                        console.log(\"There's More...\")  \n                        setFirstpage(false)\n                        // uncomment to get other pages\n                        fetchURL(url,(paging.startindex + paging.itemsperpage))\n                    } else {\n                        setLoading(false)  \n                    }\n\n                } catch (err) {\n                    console.log(\"Didn't receive a json !\")\n                    console.log(err)\n                    setLoading(false);\n                }\n            } catch(err) {\n                console.log(\"Error contacting server...\")\n                console.log(err)\n                setLoading(false)   \n            }\n        }\n\n        if(searchUrl) {\n            // setLoading(true)\n            fetchURL(searchUrl,getcollection(searchparam.current.mission).startIndexOrigin)\n        }\n    }, [searchUrl]);\n\n    const search = ({searchdate, mission, searchpoint}) => {\n        if(mission && searchdate) {\n            let startdate = (new Date(searchdate.getTime() - windowSize/2)).toJSON()\n            // console.log('start date: '+startdate)\n            \n            let enddate = (new Date(searchdate.getTime() + windowSize/2 - 1000)).toJSON()\n            let url = buildUrl({\n                code: mission,\n                polygon: searchpoint, \n                start: startdate,\n                end: enddate\n            })\n            setFirstpage(true)\n            searchparam.current.searchdate = searchdate\n            searchparam.current.mission = mission\n            searchparam.current.searchpoint = searchpoint\n            setSearchurl(url)\n        }\n    }\n    \n\n\n    return {geojsonResults, loading, firstpage, search}\n}\n","import React, { useState, useEffect, useRef } from \"react\";\n\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport './SearchManager.css'\nimport useDatahub from \"./useDatahub\"\n \n// npm install --save-dev @iconify/react @iconify-icons/ic\nimport { Icon, InlineIcon } from '@iconify/react';\nimport outlineSync from '@iconify-icons/ic/outline-sync';\n\n\n\nfunction SearchManager({searchdate, searchpoint, mission, onSearchComplete}) {\n\n\n    const [results, setresults] = useState([])\n    const [ searching, setsearching ] = useState(false);\n    const [ searchtrigger, setsearchtrigger ] = useState(0);\n    const searchtimeout = useRef()\n\n    const [param, setparam] = useState({})\n\n\n\n    const { geojsonResults, loading, search } = useDatahub({\n    });\n    \n\n    // const search = () => {\n    //     searchtimeout.current = setTimeout( ()=>{\n    //         setsearching(false)\n    //     }, 2000)\n    // }\n\n    useHotkeys(\"x\",()=>setsearchtrigger(Math.random())) \n\n    // useEffect(() => {\n    //     // console.log('will search: '+searchdate)\n    //     search()\n    // }, [searchdate, mission, searchpoint, searchtrigger]);\n\n    // useEffect(() => {\n    //     console.log(geojsonResults)\n    //     setresults(geojsonResults)\n    //     setsearching(false)\n    // }, [geojsonResults]);\n\n    useEffect(() => {\n        onSearchComplete(geojsonResults)\n    }, [geojsonResults]);\n\n    useEffect(() => {\n        setsearching(loading)\n    }, [loading]);\n\n    useEffect(() => {\n        search(param)\n    }, [searchtrigger]);\n\n    // useEffect(() => {\n    //     clearTimeout(searchtimeout.current)\n    //     searchtimeout.current = setTimeout( () => {\n    //         setsearchtrigger(Math.random())\n    //     },1000)\n    // }, [param]);\n\n    useEffect(() => {\n        setparam((param)=>{ return {...param, searchdate: searchdate, mission: mission, searchpoint: searchpoint }})\n    }, [searchdate, mission, searchpoint]);\n\n    //console.log('mission rendering')\n    return (\n        <div>\n            <div className={searching === true?'SearchController Active':'SearchController'} onClick={()=>{setsearchtrigger(Math.random())}}>\n                {/* {searching === true?<Icon icon={outlineSync} width='50px'/>:<span/>} */}\n                <Icon icon={outlineSync} width='50px'/>\n            </div>\n        </div>\n    )\n}\n\nexport default SearchManager;\n","\nimport React, { useState, useEffect } from \"react\";\nimport { useGlobal } from 'reactn';\nimport SearchManager from \"../components/searchmanager\"\n\n\nconst SearchManagerContainer = () => {\n\n    const [ searchDate,  ] = useGlobal('searchDate');\n    const [ searchPoint,  ] = useGlobal('searchPoint');\n    const [ mission,  ] = useGlobal('mission');\n    const [ geojson, setgeojson ] = useGlobal('geojson');\n\n    const handleSearchComplete = (results) => {\n      // console.log(results)\n      setgeojson(results)\n      };\n    \n    return (\n        <SearchManager searchdate={searchDate} searchpoint={searchPoint} mission={mission} onSearchComplete={handleSearchComplete}/>\n    )\n}\n\nexport default SearchManagerContainer;\n\n\n\n","import React, {useRef} from 'react'\nimport { useGlobal } from 'reactn'\n\nimport './App.css'\nimport Earth from '../earth'\nimport { useHotkeys } from 'react-hotkeys-hook'\nimport ControlPanel from \"../controlpanel\"\nimport MissionSelectorContainer from \"../../containers/MissionSelectorContainer\"\nimport MapSelectorContainer from \"../../containers/MapSelectorContainer\"\nimport ColorSelectorContainer from \"../../containers/ColorSelectorContainer\"\nimport DemSelectorContainer from \"../../containers/DemSelectorContainer\"\nimport AltitudeLabelContainer from \"../../containers/AltitudeLabelContainer\"\n\nimport DateManagerContainer from '../../containers/DateManagerContainer'\nimport SearchManagerContainer from '../../containers/SearchManagerContainer'\nimport useFullscreen from \"@rooks/use-fullscreen\"\n\n\nfunction App() {\n    \n    \n\n    const [ mission,  ] = useGlobal('mission');\n    // const [ mapSettings, ] = useGlobal('mapSettings')\n\n    const container = useRef();\n    const {\n        // isEnabled,\n        toggle\n        // onChange,\n        // onError,\n        // request,\n        // exit,\n        // isFullscreen,\n        // element\n    } = useFullscreen();\n\n    useHotkeys(\"f\", ()=>{toggle(container.current)} )  \n\n\n\n    return (\n        <div className=\"App\" ref={container} id=\"container\">\n             {/* <FullScreen handle={fshandle}> */}\n                <Earth id=\"globe\" />\n                {/* <DateManager startdate={startdate} onDateChange={changeDate} onFinalDateChange={finalChangeDate} animated={searching}/> */}\n                <DateManagerContainer/>\n                <SearchManagerContainer/>\n                <AltitudeLabelContainer/>\n                <ControlPanel active=\"false\" >\n                    {/* <div class='logo'><img  src='./images/ESA_logo_2020_White.png' height=\"40\" ></img></div> */}\n                    {/* <div className='logo'><img alt='' src='./images/EOi_logo.png' height=\"100\" ></img></div> */}\n                \n                    <MissionSelectorContainer></MissionSelectorContainer>\n                    <MapSelectorContainer ></MapSelectorContainer>\n                    <div className='verticalCountainer'>\n                        <DemSelectorContainer></DemSelectorContainer>\n                        <ColorSelectorContainer></ColorSelectorContainer>\n                    </div>\n                </ControlPanel>\n                <div className='MissionLabel'>{mission}</div>\n            {/* </FullScreen> */}\n        </div>\n    )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { setGlobal } from 'reactn';\n\n\nexport  function initGlobalStates() {\n    console.log(\"init global: \"+(new Date()))\n\n    // Set current time as global state\n    // setGlobal({appdate: ((new Date()).getTime())})\n    // setGlobal({searchepoch: ((new Date()).getTime())})\n    // setGlobal({mission: 'S1'})\n    // setGlobal({searching: false})\n    // setGlobal({apppolygon: ''})\n    // setGlobal({replace: true})\n    // setGlobal({startend: {start:0, end:0}})\n    // setGlobal({setApppickeditems: []})\n\n\n    setGlobal({\n        mission: 'S1',\n        altitude: '5000000',\n        satellites: true,\n        appColor: '#ebd1d1',\n        position: {\n            clon:'0.5',\n            clat:'45' \n        },\n        viewDate: new Date(),\n        searchDate: new Date(),\n        searchPoint: 'POINT(40 40)',\n        geojson: null,\n        mapSettings: {\n            atmosphere: false,\n            starfield: true,\n            names: false,\n            background: 1,\n            overlay:2,\n            dem: false\n        }\n    })\n    \n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app';\nimport reportWebVitals from './reportWebVitals';\nimport {initGlobalStates} from \"./initGlobalStates\"\n\ninitGlobalStates()\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}