{"version":3,"sources":["components/earth/wwwxx/www-overrides/SurfaceShape.js","components/earth/wwwxx/www-overrides/DrawContext.js","components/earth/wwwxx/framebuffer/FramebufferTexture.js","components/earth/wwwxx/framebuffer/Framebuffer.js","components/earth/wwwxx/www-overrides/SurfaceShapeTileBuilder.js","components/earth/wwwxx/www-overrides/SurfaceShapeTile.js","components/earth/wwwxx/www-overrides/TiledImageLayer.js","components/earth/wwwxx/textured/libtess.js","components/earth/wwwxx/textured/ScreenColorProgram.js","components/earth/wwwxx/textured/ScreenTextureProgram.js","components/earth/wwwxx/textured/TexturedSurfaceShape.js","components/earth/wwwxx/textured/TexturedSurfacePolygon.js","components/earth/wwwxx/www-overrides/GeoJSONParser.js","components/earth/wwwxx/WorldWindow.js","components/earth/wwwxx/layer/starfield/SunPosition.js","components/earth/wwwxx/layer/starfield/Celestial.js","components/earth/wwwxx/layer/starfield/StarFieldProgram.js","components/earth/wwwxx/layer/starfield/StarFieldLayer.js","components/earth/satConfig.js","components/earth/wwwxx/collada/ColladaScene.js","components/earth/satelliteLayers.js","components/earth/wwwxx/shapes/satellites/Model.js","components/earth/wwwxx/layer/SatelliteModelLayer.js","components/earth/layerConfig.js","components/earth/useEww.js","components/logpanel/LogPanel.js","components/earth/FluidWorldWindowController.js","components/infopanel/InfoPanel.js","components/earth/LookAtWidget.js","components/earth/ViewProductControl.js","components/earth/Earth.js","hooks/useDebounce.js","components/controlpanel/ControlPanel.js","components/missionselector/MissionSelector.js","containers/MissionSelectorContainer.js","components/mapselector/MapSelector.js","containers/MapSelectorContainer.js","containers/ColorSelectorContainer.js","containers/DemSelectorContainer.js","containers/AltitudeLabelContainer.js","containers/SearchLabelContainer.js","components/datemanager/components/datelabel/DateLabel.js","hooks/useHandleDoubleTap.js","components/datemanager/components/datecontroller/DateController.js","components/datemanager/components/datecontroller/useClock.js","components/datemanager/components/dateselector/DateSelectorScale.js","components/datemanager/components/dateselector/DateSelector.js","components/datemanager/DateManager.js","containers/DateManagerContainer.js","components/searchmanager/dhusToGeojson.js","components/searchmanager/eocatToGeojson.js","components/searchmanager/useDatahub.js","components/searchmanager/SearchManager.js","containers/SearchManagerContainer.js","containers/ProductInfolContainer.js","components/app/App.js","reportWebVitals.js","initGlobalStates.js","index.js"],"names":["AbstractError","WorldWind","Angle","Location","Logger","NotYetImplementedError","PickedObject","PolygonSplitter","Renderable","Sector","ShapeAttributes","Vec3","MemoryCache","BoundingBox","SurfaceShape","attributes","call","this","_displayName","_attributes","_highlightAttributes","_highlighted","_enabled","_pathType","GREAT_CIRCLE","_maximumNumEdgeIntervals","DEFAULT_NUM_EDGE_INTERVALS","_polarThrottle","DEFAULT_POLAR_THROTTLE","_sector","pickDelegate","_sectors","_locations","_boundaries","_interiorGeometry","_outlineGeometry","_isInteriorInhibited","stateKeyInvalid","_attributesStateKey","boundariesArePrepared","layer","pickColor","contours","containsPole","crossesAntiMeridian","expirationInterval","shapeDataCache","currentData","prototype","Object","create","defineProperties","stateKey","get","currentAttributesStateKey","_stateKey","computeStateKey","displayName","set","value","highlightAttributes","highlighted","enabled","pathType","resetBoundaries","maximumNumEdgeIntervals","polarThrottle","sector","staticStateKey","shape","minLatitude","maxLatitude","minLongitude","maxLongitude","area","globe","terrainConformant","logMessage","LEVEL_SEVERE","computeBoundaries","intersectsFrustum","dc","extent","pickingMode","pickFrustum","frustumInModelCoordinates","isShapeDataCurrent","shapeData","verticalExaggeration","expiryTime","Date","now","createShapeDataObject","resetExpiration","Math","random","establishCurrentData","entryForKey","globeStateKey","putEntry","isExpired","render","currentLayer","prepareBoundaries","computeExtent","surfaceShapeTileBuilder","insertSurfaceShape","interpolateLocations","locations","prev","idx","len","first","next","isNextFirst","isPrevFirst","countFirst","isInterpolated","length","latitude","longitude","interpolateEdge","push","start","end","dt","location","distanceRadians","greatCircleDistance","steps","round","PI","t","throttledStep","interpolateAlongPath","cosLat","cos","DEGREES_TO_RADIANS","weight","newBoundaries","formatBoundaries","normalizeAngles","interpolateBoundaries","contoursInfo","doesCross","splitContours","prepareGeometry","prepareSectors","clear","boundaries","i","polygon","j","lenP","point","normalizedDegreesLongitude","normalizedDegreesLatitude","contour","slice","computeSectors","boxPoints","computeBoundingPoints","setToVec3Points","boxCorners","box","corners","getCorners","computeShiftedLocations","oldLocation","newLocation","newLocations","result","newPos","Position","oldPoint","computePointFromLocation","newPoint","is2D","delta","subtract","add","computePositionFromPoint","delta_lat","delta_long","max","min","new_lat","new_long","determineSectors","sectorsOverAntiMeridian","sectorsNotOverAntiMeridian","polygons","sectors","setToBoundingSector","extremes","greatCircleArcExtremeLocations","eastSector","westSector","lenS","union","interiorPolygons","outlinePolygons","poleIndex","lenC","iMap","pole","poles","NONE","outlineForPole","outlineForSplit","outlinePolygon","pCount","k","intersection","forPole","iCount","resetPickColor","renderToTexture","ctx2D","xScale","yScale","dx","dy","drawInterior","drawOutline","outlineWidth","uniquePickColor","toHexString","draw","fillStyle","interiorColor","toRGBAString","fill","lineWidth","strokeStyle","outlineColor","stroke","po","clone","resolvePick","beginPath","x","y","moveTo","lineTo","DrawContext","pickableObject","userObject","deepPicking","regionPicking","addPickedObject","color","readPickColor","pickPoint","equals","FramebufferTexture","textureId","width","height","imageWidth","imageHeight","size","originalImageWidth","originalImageHeight","creationTime","currentGlContext","bindTexture","TEXTURE_2D","frameStatistics","incrementTextureLoadCount","gl","deleteTexture","Framebuffer","framebufferId","texture","createTexture","framebufferTexture2D","FRAMEBUFFER","COLOR_ATTACHMENT0","createFramebuffer","bindFramebuffer","viewport","clearColor","COLOR_BUFFER_BIT","fbo","canvas","console","log","texParameteri","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","texImage2D","RGBA","UNSIGNED_BYTE","ArgumentError","SurfaceShapeTileBuilder","fboCacheKey","buildTiles","surfaceShapes","assembleTiles","__fboBound__","getFbo","unbind","currentFramebuffer","splice","surfaceShapeTiles","clearShapes","addTile","tile","pickSequence","needsUpdate","bind","tileWidth","tileHeight","updateTexture","doRender","savedTiles","savedTopLevelTiles","topLevelTiles","doDeepPickingRender","surfaceTileRenderer","renderTiles","idxTile","lenTiles","idxShape","lenShapes","idxPick","lenPicks","deepPickShapes","objectsAtPickPoint","objects","indexOf","resolvablePickObjects","setShapes","gpuResourceCache","resourceForKey","putResource","__frameStart__","SurfaceShapeTile","deltaLongitude","deltaLatitude","xOffset","yOffset","asRenderedSurfaceShapeStateKeys","attachTexture","surfaceShapeStateKeys","gpuCacheKey","getCacheKey","TiledImageLayer","retrieveTileImage","suppressRedraw","pendingRequests","MAX_REQUESTS","currentRetrievals","imagePath","some","absentResourceList","isResourceAbsent","resourceUrlForTile","retrievalImageFormat","shift","fetchMoreImages","currentTilesInvalid","before","filter","pendingTile","isTileVisible","url","cache","fetchImage","err","image","removeFromCurrentRetrievals","markResourceAbsent","unmarkResourceAbsent","e","document","createEvent","initEvent","REDRAW_EVENT_TYPE","window","dispatchEvent","cb","Image","onload","onerror","Error","crossOrigin","webkit","AndroidApp","src","doRender_","terrain","lasTtMVP","navigatorState","modelviewProjection","lastGlobeStateKey","currentTiles","opacity","surfaceOpacity","incrementImageTileCount","inCurrentFrame","cleanCache","libtess","condition","opt_message","DEBUG","GLU_TESS_WINDING_ODD","GLU_TESS_WINDING_NONZERO","GLU_TESS_WINDING_POSITIVE","GLU_TESS_WINDING_NEGATIVE","GLU_TESS_WINDING_ABS_GEQ_TWO","GL_LINE_LOOP","GL_TRIANGLES","GL_TRIANGLE_STRIP","GL_TRIANGLE_FAN","GLU_TESS_MISSING_BEGIN_POLYGON","GLU_TESS_MISSING_END_POLYGON","GLU_TESS_MISSING_BEGIN_CONTOUR","GLU_TESS_MISSING_END_CONTOUR","GLU_TESS_COORD_TOO_LARGE","GLU_TESS_NEED_COMBINE_CALLBACK","GLU_TESS_BEGIN","GLU_TESS_VERTEX","GLU_TESS_END","GLU_TESS_ERROR","GLU_TESS_EDGE_FLAG","GLU_TESS_COMBINE","GLU_TESS_BEGIN_DATA","GLU_TESS_VERTEX_DATA","GLU_TESS_END_DATA","GLU_TESS_ERROR_DATA","GLU_TESS_EDGE_FLAG_DATA","GLU_TESS_COMBINE_DATA","GLU_TESS_MESH","GLU_TESS_TOLERANCE","GLU_TESS_WINDING_RULE","GLU_TESS_BOUNDARY_ONLY","GLU_INVALID_ENUM","GLU_INVALID_VALUE","geom","vertEq","u","v","s","vertLeq","edgeEval","w","gapL","gapR","edgeSign","transLeq","transEval","transSign","edgeGoesLeft","dst","org","edgeGoesRight","vertL1dist","abs","vertCCW","interpolate_","a","b","edgeIntersect","o1","d1","o2","d2","z1","z2","tmp","mesh","makeEdge","makeEdgePair_","eHead","makeVertex_","vHead","sym","makeFace_","fHead","meshSplice","eOrg","eDst","joiningLoops","joiningVertices","killVertex_","lFace","killFace_","splice_","anEdge","deleteEdge","eDel","eDelSym","rFace","oNext","oPrev","killEdge_","addEdgeVertex","eNew","eNewSym","lNext","splitEdge","winding","connect","zapFace","fZap","eStart","eNext","eSym","fPrev","fNext","meshUnion","mesh1","mesh2","f1","v1","e1","f2","v2","e2","deleteMesh","GluHalfEdge","ePrev","aONext","bONext","eOrig","vNext","vPrev","vNew","GluVertex","fNew","GluFace","inside","vDel","newOrg","fDel","newLFace","normal","S_UNIT_X_","S_UNIT_Y_","projectPolygon","tess","computedNormal","norm","computeNormal_","sUnit","tUnit","longAxis_","TRUE_PROJECT","normalize_","dot_","coords","checkOrientation_","sqrt","maxVal","GLU_TESS_MAX_COORD","minVal","maxVert","minVert","c","index","maxLen2","tNorm","tLen2","f","renderMesh","flagEdges","beginOrBeginDataCalled","edgeState","callBeginOrBeginData","primitiveType","newState","callEdgeFlagOrEdgeFlagData","callVertexOrVertexData","data","callEndOrEndData","renderBoundary","sweep","SENTINEL_COORD_","TOLERANCE_NONZERO_","computeInterior","fatalError","removeDegenerateEdges_","initPriorityQ_","initEdgeDict_","pq","extractMin","minimum","spliceMergeVertices_","sweepEvent_","minRegion","dict","getMin","getKey","event","eUp","doneEdgeDict_","donePriorityQ_","removeDegenerateFaces_","checkMesh","addWinding_","eSrc","edgeLeq_","reg1","reg2","deleteRegion_","reg","fixUpperEdge","activeRegion","deleteNode","nodeUp","fixUpperEdge_","newEdge","topLeftRegion_","regionAbove","regionBelow","topRightRegion_","addRegionBelow_","regAbove","eNewUp","regNew","ActiveRegion","insertBefore","isWindingInside_","n","windingRule","computeWinding_","windingNumber","finishRegion_","finishLeftRegions_","regFirst","regLast","regPrev","lPrev","addRightEdges_","regUp","eFirst","eLast","eTopLeft","cleanUp","firstTime","rPrev","dirty","checkForRightSplice_","walkDirtyRegions_","callCombine_","isect","weights","needed","callCombineOrCombineData","callErrorOrErrorData","errorType","vertexWeights_","weightIndex","t1","t2","i0","i1","getIntersectData_","orgUp","dstUp","orgLo","dstLo","regLo","eLo","remove","pqHandle","checkForLeftSplice_","checkForIntersect_","orgMin","insert","connectRightVertex_","eBottomLeft","degenerate","connectLeftDegenerate_","vEvent","eTopRight","connectLeftVertex_","search","dNext","addSentinel_","sentinel","Dict","eLNext","PriorityQ","init","deleteQ","tessmono","tessellateMonoRegion_","face","up","tempHalfEdge","lo","tessellateInterior","discardExterior","setWindingNumber","keepOnlyBoundary","frame","leq","head_","DictNode","frame_","leq_","deleteDict_","node","key","newNode","getMax","opt_key","opt_nextNode","opt_prevNode","getSuccessor","getPredecessor","CachedVertex","GluTesselator","state","tessState_","T_DORMANT","lastEdge_","callError_","relTolerance","GLU_TESS_DEFAULT_TOLERANCE","boundaryOnly","callBegin_","callEdgeFlag_","callVertex_","callEnd_","callMesh_","callBeginData_","callEdgeFlagData_","callVertexData_","callEndData_","callErrorData_","callCombineData_","polygonData_","emptyCache","cacheCount","Array","TESS_MAX_CACHE","T_IN_POLYGON","T_IN_CONTOUR","gluDeleteTess","requireState_","gluTessProperty","which","gluEnum","gluGetTessProperty","gluTessNormal","z","gluTessCallback","opt_fn","fn","gluTessVertex","tooLarge","clamped","emptyCache_","cacheVertex_","addVertex_","gluTessBeginPolygon","gluTessBeginContour","gluTessEndContour","gluTessEndPolygon","makeDormant_","gotoState_","GluMesh","type","flag","interpData","undefined","errno","opt_nextFace","opt_prevFace","opt_nextEdge","dPrev","rNext","eHeadSym","opt_nextVertex","opt_prevVertex","PQHandleElem","realloc","oldArray","newArray","PQNode","handle","keys_","PQKeyRealloc_","INIT_SIZE_","order_","size_","max_","initialized_","heap_","PriorityQHeap","deleteHeap","keys","comparator","sort","r","keyNew","curr","keyLessThan_","keyX","keyY","keyGreaterThan_","sortMin","isEmpty","heapMin","isEmpty_","nodes_","handles_","freeList_","floatDown_","free","floatUp_","h","hMin","hCurr","child","hChild","parent","hParent","ScreenColorProgram","resolutionLocation","uniformLocation","colorLocation","localCache","resolution","g","uniform2f","cacheColor","red","green","blue","alpha","uniform4f","GpuProgram","ScreenTextureProgram","texUnitLocation","textureUnit","unit","uniform1i","TEXTURE0","Texture","WGS84_SEMI_MAJOR_AXIS","TexturedSurfaceShape","_image","_imageUUID","_interiorVboCacheKey","_outlineVboCacheKey","_contoursPrepered","_contoursInfo","_id","nextId","img","interiorGeometry","mapGeometry","wo","windingOrder_all","points","pop","renderColor","anglesMap","topLeftIndex","uvs","computeUvs","tessGeom","tessellate_p1","tessIndices","px","py","iboData","Uint16Array","floor","vboData","Float32Array","renderTexture","tessellate","tessTris","program","findAndBindProgram","loadResolution","enableVertexAttribArray","loadColor","RADIANS_TO_DEGREES","bindInteriorVbo","vertexAttribPointer","FLOAT","frontFace","CW","drawArrays","TRIANGLES","CCW","loadTextureUnit","imageTextureKey","error","imageTexture","bindInteriorIbo","valuesPerVertex","drawElements","UNSIGNED_SHORT","disableVertexAttribArray","locations1","side","uv","nextSide","sideStart","sideEnd","jIndex","sideDistance","distance","map","reduce","acc","vboUsage","STATIC_DRAW","generateCacheKey","bindVbo","cacheKey","vbo","vboEntry","entries","vboSize","BYTES_PER_ELEMENT","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","bufferSubData","iboUsage","_interiorIboCacheKey","bindIbo","ibo","iboSize","ELEMENT_ARRAY_BUFFER","tesselator","triangles","prim","newCoords","tris","vertex","pos","bbox","minX","Number","MAX_SAFE_INTEGER","maxX","MIN_SAFE_INTEGER","minY","maxY","angles","prevX","prevY","currentX","currentY","nextX","nextY","angle","atan2","p0","el","p1","p2","p3","findWhichCorners","findIndex","userProps","userProperties","identifier","id","cornerLocations","c0","c1","newCorners","corner","reindexCorners","isEqualPoints","getBbox","getSlope","list","sum","p1x","p1y","_nextId","TexturedSurfacePolygon","isArray","removeDuplicateLocations","isPrepared","removeDuplicateLocationsFromContour","loc","loc2","GeoJSONParser","GeoJSONConstants","RenderableLayer","addRenderablesForPolygon","geometry","properties","configuration","shapeConfigurationCallback","crs","isCRSSupported","pBoundaries","boundariesIndex","coordinates","positions","positionIndex","reprojectedCoordinate","getReprojectedIfRequired","position","name","timeRange","addRenderable","load","parserCompletionCallback","_parserCompletionCallback","_shapeConfigurationCallback","_layer","dataSourceType","dataSource","obj","tryParseJSONString","requestUrl","addRenderablesForMultiPolygon","polygonsIndex","ArcBallCamera","BasicWorldWindowController","EarthElevationModel","FrameStatistics","Frustum","Globe","GoToAnimator","Globe2D","Line","GpuResourceCache","Matrix","LookAtNavigator","Navigator","PickedObjectList","Rectangle","Vec2","Terrain","WWMath","WorldWindow","canvasElem","elevationModel","controllerConstructor","cameraConstructor","WebGLRenderingContext","HTMLCanvasElement","getElementById","createContext","preventDefaultListener","preventDefault","drawContext","eventListeners","redrawRequested","redrawRequestId","scratchModelview","fromIdentity","scratchProjection","hasStencilBuffer","getContextAttributes","stencil","depthBits","getParameter","DEPTH_BITS","drawingBufferWidth","drawingBufferHeight","layers","navigator","subsurfaceMode","goToAnimator","_redrawCallbacks","_orderedRenderingFilters","thisWindow","declutter","pixelScale","addEventListener","handleRedrawEvent","handleContextLost","handleContextRestored","animationFrameLoop","getBoundingClientRect","xc","left","clientLeft","yc","top","clientTop","listener","thisWorldWindow","entry","listeners","callback","worldWindow","removeEventListener","isContextLost","resize","resetDrawContext","pickRay","rayThroughScreenPoint","drawFrame","pickTerrainOnly","rectangle","pickRectangle","glAttrs","antialias","getContext","LEVEL_INFO","statusMessage","contextLost","cancelAnimationFrame","contextRestored","redraw","redrawIfNeeded","requestAnimationFrame","previousRedrawTimestamp","timestamp","callRedrawCallbacks","BEFORE_REDRAW","toString","AFTER_REDRAW","clientWidth","clientHeight","projection","modelview","camera","createViewMatrix","setToIdentity","globeRadius","equatorialRadius","polarRadius","eyePoint","extractEyePoint","eyePos","eyeHorizon","horizonDistanceForGlobeRadius","altitude","atmosphereHorizon","farDistance","nearDistance","perspectiveNearDistanceForFarDistance","distanceToSurface","elevationAtLocation","maxNearDistance","perspectiveNearDistance","setToPerspectiveProjection","projectionInv","invertMatrix","nbl","ntr","fbl","ftr","multiplyByMatrix","nrRectWidth","fabs","frRectWidth","nrDistance","frustumWidthScale","frustumWidthOffset","pixelSizeFactor","pixelSizeOffset","computeViewingTransform","pixelMetrics","computePixelMetrics","setToMultiply","modelviewInv","invertOrthonormalMatrix","modelviewNormalTransform","setToTransposeOfMatrix","upper3By3","modelviewTranspose","fromProjectionMatrix","transformByMatrix","normalize","offset","reset","screenCreditController","computeDrawContext","update","beginFrame","continuous","do2DContiguousRepaint","doNormalRepaint","endFrame","createTerrain","clearFrame","deferOrderedRendering","makePickFrustum","doPick","doDraw","redrawSurface","drawScreenRenderables","createTerrain2DContiguous","pick2DContiguous","draw2DContiguous","resolveTerrainPick","resolveRegionPick","resolveTopPick","enable","BLEND","CULL_FACE","DEPTH_TEST","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","depthFunc","LEQUAL","makePickFramebuffer","pickFramebuffer","disable","ZERO","LESS","bindProgram","DEPTH_BUFFER_BIT","renderShapes","STENCIL_TEST","drawLayers","drawSurfaceRenderables","STENCIL_BUFFER_BIT","stencilFunc","ALWAYS","stencilOp","REPLACE","drawOrderedRenderables","EQUAL","KEEP","pick","tessellator","setTerrainTileCount","surfaceGeometry","terrainLeft","terrainCenter","terrainRight","makeCurrent","accumulateOrderedRenderables","beginTime","layerRenderingTime","indexOfLayer","sr","reverseSurfaceRenderables","popSurfaceRenderable","renderSurface","LEVEL_WARNING","message","or","sortOrderedRenderables","orderedRenderingMode","popOrderedRenderable","renderOrdered","orderedRenderingTime","nextScreenRenderable","pickedObjects","topObject","terrainObject","isTerrain","isOnTop","uniquePickColors","readPickColors","toByteString","stage","completionCallback","goTo","groupId","declutterables","orderedRenderables","orderedRenderable","declutterGroup","rects","declutterable","screenBounds","intersectsRectangles","targetVisibility","screenPoint","nearPoint","farPoint","modelviewProjectionInv","unProject","origin","direction","SunPosition","getAsGeographicLocation","date","celestialLocation","getAsCelestialLocation","celestialToGeographic","numDays","computeJulianDate","meanLongitude","normalizeAngle360","meanAnomaly","eclipticLongitude","sin","eclipticLongitudeRad","obliquityOfTheEcliptic","declination","asin","rightAscension","atan","tan","GMST","GHA","year","getUTCFullYear","month","getUTCMonth","day","getUTCDate","dayFraction","getUTCHours","getUTCMinutes","getUTCSeconds","A","trunc","B","degrees","Celestial","SUN","MERCURY","VENUS","MARS","JUPITER","SATURN","URANUS","NEPTUNE","getCelestialLocation","orbitalElements","d","computeSun","computeMercury","computeVenus","computeMars","computeJupiter","computeSaturn","computeUranus","computeNeptune","computePosition","N","M","E","aa","E1","xv","yv","xh","yh","zh","lon_corr","lonecl","latecl","getLonSun","lonsun","rsun","xg","yg","zg","ecl","xe","ye","ze","ra","dec","Color","StarFieldProgram","FRAG_MODE_MIX_COLOR","FRAG_MODE_TEXTURE","FRAG_MODE_COLOR","vertexPointLocation","attributeLocation","mvpMatrixLocation","numDaysLocation","magnitudeRangeLocation","textureUnitLocation","fragModeLocation","localState","mvpMatrix","magnitudeRange","fragMode","matrix","forceLoad","loadUniformMatrix","copy","uniform1f","minMag","maxMag","mode","loadUniformColor","Layer","StarFieldLayer","starDataSource","pickEnabled","sunSize","showSun","_starDataSource","baseUrl","_sunImageSource","_matrix","_starsPositionsVboCacheKey","_numStars","_starData","_minMagnitude","MAX_VALUE","_maxMagnitude","MIN_VALUE","_loadStarted","_minScale","_scale","pow","_sunPositionsCacheKey","_sunBufferView","_MAX_GL_POINT_SIZE","showPlanets","jupiterSize","planets","_planetsBufferView","_cacheKeys","sunPosition","planetPositions","starPositions","invalidateStarData","haveResources","beginRendering","endRendering","loadResources","sunTexture","planetTextures","every","planet","fetchStarData","retrieveTexture","forEach","depthMask","loadCommonUniforms","renderStars","renderSun","renderPlanets","currentProgram","mvp","multiplyByScale","loadModelviewProjection","julianDate","time","loadNumDays","vboId","createStarsGeometry","incrementVboLoadCount","loadMagnitudeRange","loadFragMode","POINTS","ALIASED_POINT_SIZE_RANGE","_planetsPositionsVboCacheKey","DYNAMIC_DRAW","textureSrc","sunCelestialLocation","self","xhr","XMLHttpRequest","status","JSON","parse","response","sendRedrawRequest","statusText","ontimeout","open","send","indexes","parseStarsMetadata","metadata","raIndex","decIndex","magIndex","starInfo","magnitude","pointSize","starMetaInfo","satConfig","shortName","satIndex","swathTypes","swathColors","colorFromKmlHex","swatModes","tleLineOne","tleLineTwo","hasModel","filePath","rotations","headingAxis","headingAdd","headingMultiply","preRotations","scale","translations","ignoreLocalTransforms","launchDate","groundPosition","BasicTextureProgram","ColladaScene","sceneData","_position","_nodes","_meshes","_materials","_images","_upAxis","_dirPath","_xRotation","_yRotation","_zRotation","preX","preY","preZ","_xTranslation","_yTranslation","_zTranslation","_altitudeMode","ABSOLUTE","_localTransforms","_useTexturePaths","_nodesToHide","_hideNodes","_placePoint","_transformationMatrix","_mvpMatrix","_normalTransformMatrix","_normalMatrix","_texCoordMatrix","setToUnitYFlip","_entities","_activeTexture","_tmpVector","_tmpColor","_vboCacheKey","_iboCacheKey","setSceneData","constructor","nodes","meshes","materials","images","upAxis","dirPath","xRotation","yRotation","zRotation","xTranslation","yTranslation","zTranslation","placePoint","altitudeMode","transformationMatrix","normalMatrix","localTransforms","useTexturePaths","nodesToHide","hideNodes","root","children","up_axis","flattenModel","nodesLen","flattenNode","va","imageKey","vb","meshKey","buffers","bufLen","materialBuf","material","symbol","materialKey","textures","diffuse","mapId","reflective","orderedScene","frustum","lastFrameTime","makeOrderedRenderable","containsPoint","addOrderedRenderable","surfacePointForMode","eyeDistance","distanceTo","drawOrderedScene","beginDrawing","endDrawing","iboId","setupBuffers","computeTransformationMatrix","mustRenderNode","sizeOfFloat32","sizeOfUint16","sizeOfUint32","Uint32Array","is32BitIndices","numIndices","numVertices","indexedRendering","indices","vertices","normals","vertexOffset","uvOffset","normalOffset","uIntExt","indexSize","indexBufferSize","getExtension","indexOffset","entity","nodeWorldMatrix","worldMatrix","nodeNormalMatrix","hasLighting","applyColor","path","filename","textureCacheKey","wrapMode","isClamp","REPEAT","loadTextureEnabled","loadModulateColor","loadApplyLighting","applyMatrix","indexOffsetBytes","UNSIGNED_INT","techniqueType","loadOpacity","hasTexture","multiplyMatrix","loadModelviewInverse","loadTextureMatrix","multiplyByLocalCoordinateTransform","multiplyByRotation","multiplyByTranslation","computeNormalMatrix","extractRotationAngles","nodeId","Model","model","satellite","_satellite","satelliteModel","_model","modelData","satShortName","jsonData","hasOwnProperty","eVertices","eNormals","eUvs","eIndices","info","EoUtils","WorldWindX","DEFAULT_MODEL_OPTIONS","SatelliteModelLayer","options","satelliteOptions","_satelliteOptions","_rerenderMap","Tle","heading","onLayerChanged","removeAllRenderables","doRerender","satrec","computeSatrec","getOrbitPosition","setPosition","alignWithOrbit","currentPosition","getTime","nextPosition","headingRad","headingAngleRadians","rad2deg","satKey","satName","layerKey","rerenderer","wwx","satelliteLayers","satstart","satend","setUTCFullYear","fetch","then","json","satelliteData","setModel","setTle","bgLayers","service","layerNames","title","numLevels","format","FULL_SPHERE","levelZeroDelta","ovLayers","useEww","TRAIL_PRODUCT","TRAIL_QUICKLOOK","TRAIL_QUICKLOOKWMS","eww","useRef","useState","ewwstate","setEwwState","bg","ov","sat","atm","star","na","ge","qu","qw","dem","proj","s2lut","lastepoch","lastmovetolat","lastmovetolon","toggleAtmosphere","bool","la","getLayerByName","current","toggleModel","enableSatelliteLayers","toggleStarfield","ls","toggleNames","toggleBg","background","toggleDem","ElevationModel","addCoverage","TiledElevationCoverage","coverageSector","minElevation","maxElevation","urlBuilder","WcsTileUrlBuilder","toggleProjection","supportedProjections","nbproj","ProjectionWgs84","ProjectionEquirectangular","ProjectionMercator","ProjectionPolarEquidistant","addQuicklookWMS","renderable","layername","wmsConfigQL","removeQuicklookWMS","qllayer","WmsLayer","toJSON","timerange","zIndex","addLayer","removeLayer","epoch","l","setTime","enableRenderables","trailduration","renderables","closestrenderableindex","oldestrenderableindex","youngestrenderableepoch","oldestrenderableepoch","closestrenderableepoch","visibilityend","controller","flipImage","srcBase64","createElement","ctx","transform","drawImage","toDataURL","getS2LUT","ok","text","templut","split","lut","extract","footprint","getPolygonbyS2tile","coordlist","coord","lat","lon","multiboundaries","createQL","quicklookLayer","createImage","Promise","resolve","reject","base64src","imageOfQuickLook","AbortController","toUTCString","credentials","signal","blob","objectURL","URL","createObjectURL","quicklook","revokeObjectURL","addQuicklook","quicklookUrl","earthObservation","productInformation","highestlat","decacheQuicklooks","qlarray","closestrenderable","closestRenderable","alt","travelTime","range","applyLimits","setGlobeStates","lookAtLocation","al","vp","bl","tr","view","pickTerrain","canvasCoordinates","getViewPolygon","vpp","toFixed","viewpolygon","viewpoint","useEffect","removeAllCoverages","redrawCallbacks","wwd","href","starFieldLayer","atmosphereLayer","AtmosphereLayer","initMap","clon","clat","atmosphere","starfield","satellites","names","removeGeojson","addGeojson","productlayer","visibilityEnd","acquisitionInformation","acquisitionParameter","acquisitionStartTime","visibilityStart","setProductTimeRange","placemarkAttributes","PlacemarkAttributes","imageScale","imageColor","labelAttributes","Offset","OFFSET_FRACTION","isPointType","isMultiPointType","isLineStringType","isMultiLineStringType","isPolygonType","isMultiPolygonType","toggleGeojson","lp","getRenderables","pickList","pickedItems","parentLayer","toggleQuicklookWMS","ql","removeQuicklooks","toggleQuicklooks","toggleOv","overlay","northUp","headingIncrement","setTimeout","runOperation","LogPanel","FluidWorldWindowController","memo","world","onSimpleClick","controllerRef","lastTap","doubleTap","button","clicktimeout","dragtimeout","gesturestartposition","dragenabled","rotationmode","pinchmode","debugtext","useSpring","api","bind2","useDrag","div","style","className","useGesture","onDrag","xy","vxvy","previous","down","initial","movement","velocity","tap","scrolling","touches","pinching","positionAtPickPoint","timeStamp","clearTimeout","handleSimpleClick","zoomspring","stop","pinchzoomspring","pinchrotatespring","pinchtiltspring","handlepan2d","handlepan3d","handlezoom","handletilt","onDragend","onWheel","wheeling","clientX","clientY","onPinchStart","panspring","pinchzoomrotatespring","onPinch","da","vdva","elapsedTime","lastY","handlepinch","onPinchEnd","domTarget","drag","useTouch","pinch","eventOptions","passive","handlepinchtilt","handlezoomrotate","pinchtiltvalue","sub","immediate","config","mass","tension","friction","onChange","tiltfactor","tilt","pinchzoomrotatevalue","zenabler","tenabler","molasses","rangefactor","moveZoom","pinchzoomvalue","pinchrotatevalue","tiltvalue","tiltspring","dorotation","to","tiltoffset","headingoffset","panvalue","enabler","correction","lookatxy","nextlookatxy","currentposition","nextposition","currentpoint","nextpoint","computePointFromPosition","viewMatrix","ray","extractForwardVector","intersectsLine","params","extractViewingParameters","roll","onRest","positionAtPickPoint2","rotationVector","rotationAngle","computeRotationVectorAndAngle","rotateShpere","refposition","amount","lookatAltitude","lookAtPosition","interpolateGreatCircle","intersectpoint","pickedObject","pickedPosition","vec1","vec2","MeasurerUtils","angleBetweenVectors","cross","isFinite","scratchRay","nav","clamp","ref","InfoPanel","props","LookAtWidget","active","display","icon","focusIcon","ViewProductControl","useGlobal","setselectedProduct","closestItem","setresetStartDateTrigger","setmoveToClosestItemTrigger","outlineRemoveRedEye","onClick","stopPropagation","selection","Earth","mapSettings","setMapSettings","setAltitude","viewDate","geojson","clearResultsTrigger","addQuicklookWMSTrigger","setaddQuicklookWMSTrigger","setSearchPoint","setclosestItem","pointSearchMaxAltitude","selectedProduct","moveToClosestItemTrigger","setgoToDate","productOn","setproductOn","lookwidget","setlookwidget","debouncedclosestItem","delay","debouncedValue","setDebouncedValue","handler","useDebounce","useKey","quicklooks","useMemo","pageX","pageY","ControlPanel","setOpen","mask","setMask","panelcontrol","React","mr","onDragStart","onDragEnd","bottom","baselinePalette","MissionSelector","initialmission","onMissionChange","mission","setMission","useHotkeys","MissionSelectorContainer","MapSelector","onMapSettingsChange","mapSet","setMapSet","draggable","MapSelectorContainer","ColorSelectorContainer","appcolor","setAppcolor","documentElement","setProperty","DemSelectorContainer","mapset","setmapset","checked","flexgrow","AltitudeLabelContainer","SearchLabelContainer","resultDesc","totalLoaded","totalResults","DateLabel","highlight","animated","dateFormat","toUpperCase","useHandleDoubleTap","tapCallback","doubleTapCallback","setLasttap","handleTap","DateController","startdate","onDateChange","onStateChange","initdate","setDate","speed","setSpeed","playing","setplaying","step","refreshrate","ldate","intervalRef","timeoutRef","setInterval","clearInterval","togglePause","increaseSpeed","decreaseSpeed","forceDate","newdate","useClock","roundFastRewind","roundPlayArrow","roundFastForward","DateSelectorScale","zoomfactor","resulttics","timescale","setTimescale","izoom","idate","scaleText","_start","_zoom","_resulttics","font","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","clearRect","innerWidth","innerHeight","monthcode","pad","number","str","hour","minute","lastday","lastmonth","lastyear","lasthour","lastminute","tics","lastticslength","labeloffset","parseInt","fontSize","offsetHeight","refdate","class","label","ticpos","fillText","offsetWidth","item","handleResize","DateSelector","resetToStartDateTrigger","onFinalDateChange","onStepChange","MAXZOOM","MINZOOM","DEFZOOM","lastZoom","setZoomfactor","selector","scaledate","setScaledate","Selector_is_active","setSelector_is_active","setStep","stepLabel","setStepLabel","lastTapdate","startingdate","discreetdate","posy_wheel","setyOnWheel","zoom","springzoom","test","springtest","ctrlKey","shiftKey","precision","newzoom","nbstep","ceil","setUTCMonth","detectDoubleTap","handleZoom","adate","zoom2","xy2","sety2","fromtime","deltaoffset","from","duration","moveToDate","DateManager","resetstartdatetrigger","selectorStartdate","setselectorStartdate","controllerStartdate","setcontrollerStartdate","labeldate","setLabelDate","dateLabelHighlight","setDateLabelHighlight","handleSelectorDateChange","useCallback","handleSelectorFinalDateChange","handleControllerDateChange","DateManagerContainer","setViewDate","setSearchDate","setanimated","GoToDate","resetStartDateTrigger","settics","newtics","features","dhusToGeojson","gmlToWkt","gmlfootprint","coordarray","replaceAll","wkt","mapFromHubOpenSearch","reshuffle","array","content","hubItem","assign","int","double","sizeInBytes","sizeArray","parseFloat","wellknown","updated","ingestiondate","uuid","beginposition","endposition","downloadUrl","link","parentIdentifier","platform","platformShortName","platformname","platformSerialIdentifier","platformserialidentifier","sensor","instrument","instrumentshortname","operationalMode","sensoroperationalmode","acquisitionStopTime","relativePassNumber","relativeorbitnumber","orbitNumber","orbitnumber","startTimeFromAscendingNode","stopTimeFromAscendingNode","orbitDirection","orbitdirection","productType","producttype","tileid","feed","startIndex","itemsPerPage","eocatToGeojson","downloadurl","quicklookurl","EarthObservation","metaDataProperty","EarthObservationMetaData","procedure","EarthObservationEquipment","Platform","Instrument","Sensor","phenomenonTime","TimePeriod","beginPosition","endPosition","acquisitionParameters","Acquisition","useDatahub","searchparam","geojsonResults","setGeojsonResults","loading","setLoading","collections","code","templateUrl","startIndexOrigin","dateOff","areaOff","windowSize","getcollection","fetchURL","newurl","replace","paging","totalresults","startindex","itemsperpage","geoJson","searchdate","searchpoint","enddate","target","abort","julianstart","buildUrl","SearchManager","onSearchStart","onPageSearch","onSearchComplete","searching","setsearching","searchtrigger","setsearchtrigger","firstresultdate","lastresultdate","totalloaded","param","setparam","firstitemdate","lastitemdate","resultdesc","firstResultDate","lastResultDate","sd","sp","outlineRefresh","SearchManagerContainer","searchDate","setclearResultsTrigger","searchPoint","setgeojson","setresultDesc","handlePageSearch","results","handleSearchStart","searchDesc","ProductInfolContainer","App","container","toggle","useFullscreen","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","setGlobal","appColor","goToDate","firstItemDate","lastItemDate","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.f412e547.chunk.js","sourcesContent":["/*\n * Copyright (C) 2014 United States Government as represented by the Administrator of the\n * National Aeronautics and Space Administration. All Rights Reserved.\n */\n/**\n * @exports SurfaceShape\n * @version $Id: SurfaceShape.js 3191 2015-06-15 19:35:57Z tgaskins $\n */\nimport WorldWind from 'webworldwind-esa';\n\nconst {\n    AbstractError,\n    Angle,\n    Location,\n    Logger,\n    NotYetImplementedError,\n    PickedObject,\n    PolygonSplitter,\n    Renderable,\n    Sector,\n    ShapeAttributes,\n    Vec3,\n    MemoryCache,\n    BoundingBox,\n    // SurfaceShape,\n} = WorldWind;\n\nlet SurfaceShape = WorldWind.SurfaceShape;\n\n\n/**\n * Constructs a surface shape with an optionally specified bundle of default attributes.\n * @alias SurfaceShape\n * @constructor\n * @augments Renderable\n * @abstract\n * @classdesc Represents a surface shape. This is an abstract base class and is meant to be instantiated\n * only by subclasses.\n * <p>\n * Surface shapes other than SurfacePolyline {@link SurfacePolyline} have an interior and an outline and utilize\n * the corresponding attributes in their associated ShapeAttributes {@link ShapeAttributes}. They do not\n * utilize image-related attributes.\n *\n * @param {ShapeAttributes} attributes The attributes to apply to this shape. May be null, in which case\n * attributes must be set directly before the shape is drawn.\n */\nSurfaceShape = function (attributes) {\n\n    Renderable.call(this);\n\n    // All these are documented with their property accessors below.\n    this._displayName = \"Surface Shape\";\n    this._attributes = attributes ? attributes : new ShapeAttributes(null);\n    this._highlightAttributes = null;\n    this._highlighted = false;\n    this._enabled = true;\n    this._pathType = WorldWind.GREAT_CIRCLE;\n    this._maximumNumEdgeIntervals = SurfaceShape.DEFAULT_NUM_EDGE_INTERVALS;\n    this._polarThrottle = SurfaceShape.DEFAULT_POLAR_THROTTLE;\n    this._sector = null;\n\n    /**\n     * Indicates the object to return as the owner of this shape when picked.\n     * @type {Object}\n     * @default null\n     */\n    this.pickDelegate = null;\n\n    /*\n     * The bounding sectors for this tile, which may be needed for crossing the dateline.\n     * @type {Sector[]}\n     * @protected\n     */\n    this._sectors = [];\n\n    /*\n     * The raw collection of locations defining this shape and are explicitly specified by the client of this class.\n     * @type {Location[]}\n     * @protected\n     */\n    this._locations = null;\n\n    /*\n     * Boundaries that are either the user specified locations or locations that are algorithmically generated.\n     * @type {Location[]}\n     * @protected\n     */\n    this._boundaries = null;\n\n    /*\n     * The collection of locations that describes a closed curve which can be filled.\n     * @type {Location[][]}\n     * @protected\n     */\n    this._interiorGeometry = null;\n\n    /*\n     * The collection of locations that describe the outline of the shape.\n     * @type {Location[][]}\n     * @protected\n     */\n    this._outlineGeometry = null;\n\n    /*\n     * Internal use only.\n     * Inhibit the filling of the interior. This is to be used ONLY by polylines.\n     * @type {Boolean}\n     * @protected\n     */\n    this._isInteriorInhibited = false;\n\n    /*\n     * Indicates whether this object's state key is invalid. Subclasses must set this value to true when their\n     * attributes change. The state key will be automatically computed the next time it's requested. This flag\n     * will be set to false when that occurs.\n     * @type {Boolean}\n     * @protected\n     */\n    this.stateKeyInvalid = true;\n\n    // Internal use only. Intentionally not documented.\n    this._attributesStateKey = null;\n\n    // Internal use only. Intentionally not documented.\n    this.boundariesArePrepared = false;\n\n    // Internal use only. Intentionally not documented.\n    this.layer = null;\n\n    // Internal use only. Intentionally not documented.\n    this.pickColor = null;\n\n    //the split contours returned from polygon splitter\n    this.contours = [];\n    this.containsPole = false;\n    this.crossesAntiMeridian = false;\n\n    /**\n     * Indicates how long to use terrain-specific shape data before regenerating it, in milliseconds. A value\n     * of zero specifies that shape data should be regenerated every frame. While this causes the shape to\n     * adapt more frequently to the terrain, it decreases performance.\n     * @type {Number}\n     * @default 2000 (milliseconds)\n     */\n    this.expirationInterval = 2000;\n\n    // Internal use only. Intentionally not documented.\n    // Holds the per-globe data\n    this.shapeDataCache = new MemoryCache(3, 2);\n\n    // Internal use only. Intentionally not documented.\n    // The shape-data-cache data that is for the currently active globe.\n    this.currentData = null;\n};\n\nSurfaceShape.prototype = Object.create(Renderable.prototype);\n\nObject.defineProperties(SurfaceShape.prototype, {\n    stateKey: {\n        /**\n         * A hash key of the total visible external state of the surface shape.\n         * @memberof SurfaceShape.prototype\n         * @type {String}\n         */\n        get: function () {\n            // If we don't have a state key for the shape attributes, consider this state key to be invalid.\n            if (!this._attributesStateKey) {\n                // Update the state key for the appropriate attributes for future\n                if (this._highlighted) {\n                    if (!!this._highlightAttributes) {\n                        this._attributesStateKey = this._highlightAttributes.stateKey;\n                    }\n                } else {\n                    if (!!this._attributes) {\n                        this._attributesStateKey = this._attributes.stateKey;\n                    }\n                }\n\n                // If we now actually have a state key for the attributes, it was previously invalid.\n                if (!!this._attributesStateKey) {\n                    this.stateKeyInvalid = true;\n                }\n            } else {\n                // Detect a change in the appropriate attributes.\n                var currentAttributesStateKey = null;\n\n                if (this._highlighted) {\n                    // If there are highlight attributes associated with this shape, ...\n                    if (!!this._highlightAttributes) {\n                        currentAttributesStateKey = this._highlightAttributes.stateKey;\n                    }\n                } else {\n                    if (!!this._attributes) {\n                        currentAttributesStateKey = this._attributes.stateKey;\n                    }\n                }\n\n                // If the attributes state key changed, ...\n                if (currentAttributesStateKey != this._attributesStateKey) {\n                    this._attributesStateKey = currentAttributesStateKey;\n                    this.stateKeyInvalid = true;\n                }\n            }\n\n            if (this.stateKeyInvalid) {\n                this._stateKey = this.computeStateKey();\n            }\n\n            return this._stateKey;\n        }\n    },\n\n    /**\n     * The shape's display name and label text.\n     * @memberof SurfaceShape.prototype\n     * @type {String}\n     * @default Surface Shape\n     */\n    displayName: {\n        get: function () {\n            return this._displayName;\n        },\n        set: function (value) {\n            this.stateKeyInvalid = true;\n            this._displayName = value;\n        }\n    },\n\n    /**\n     * The shape's attributes. If null and this shape is not highlighted, this shape is not drawn.\n     * @memberof SurfaceShape.prototype\n     * @type {ShapeAttributes}\n     * @default see [ShapeAttributes]{@link ShapeAttributes}\n     */\n    attributes: {\n        get: function () {\n            return this._attributes;\n        },\n        set: function (value) {\n            this.stateKeyInvalid = true;\n            this._attributes = value;\n            this._attributesStateKey = value.stateKey;\n        }\n    },\n\n    /**\n     * The attributes used when this shape's highlighted flag is true. If null and the\n     * highlighted flag is true, this shape's normal attributes are used. If they, too, are null, this\n     * shape is not drawn.\n     * @memberof SurfaceShape.prototype\n     * @type {ShapeAttributes}\n     * @default null\n     */\n    highlightAttributes: {\n        get: function () {\n            return this._highlightAttributes;\n        },\n        set: function (value) {\n            this.stateKeyInvalid = true;\n            this._highlightAttributes = value;\n        }\n    },\n\n    /**\n     * Indicates whether this shape displays with its highlight attributes rather than its normal attributes.\n     * @memberof SurfaceShape.prototype\n     * @type {Boolean}\n     * @default false\n     */\n    highlighted: {\n        get: function () {\n            return this._highlighted;\n        },\n        set: function (value) {\n            this.stateKeyInvalid = true;\n            this._highlighted = value;\n        }\n    },\n\n    /**\n     * Indicates whether this shape is drawn.\n     * @memberof SurfaceShape.prototype\n     * @type {Boolean}\n     * @default true\n     */\n    enabled: {\n        get: function () {\n            return this._enabled;\n        },\n        set: function (value) {\n            this.stateKeyInvalid = true;\n            this._enabled = value;\n        }\n    },\n\n    /**\n     * The path type to used to interpolate between locations on this shape. Recognized values are:\n     * <ul>\n     * <li>WorldWind.GREAT_CIRCLE</li>\n     * <li>WorldWind.RHUMB_LINE</li>\n     * <li>WorldWind.LINEAR</li>\n     * </ul>\n     * @memberof SurfaceShape.prototype\n     * @type {String}\n     * @default WorldWind.GREAT_CIRCLE\n     */\n    pathType: {\n        get: function () {\n            return this._pathType;\n        },\n        set: function (value) {\n            this.stateKeyInvalid = true;\n            this.resetBoundaries();\n            this._pathType = value;\n        }\n    },\n\n    /**\n     * The maximum number of intervals an edge will be broken into. This is the number of intervals that an\n     * edge that spans to opposite side of the globe would be broken into. This is strictly an upper bound\n     * and the number of edge intervals may be lower if this resolution is not needed.\n     * @memberof SurfaceShape.prototype\n     * @type {Number}\n     * @default SurfaceShape.DEFAULT_NUM_EDGE_INTERVALS\n     */\n    maximumNumEdgeIntervals: {\n        get: function () {\n            return this._maximumNumEdgeIntervals;\n        },\n        set: function (value) {\n            this.stateKeyInvalid = true;\n            this.resetBoundaries();\n            this._maximumNumEdgeIntervals = value;\n        }\n    },\n\n    /**\n     * A dimensionless number that controls throttling of edge traversal near the poles where edges need to be\n     * sampled more closely together.\n     * A value of 0 indicates that no polar throttling is to be performed.\n     * @memberof SurfaceShape.prototype\n     * @type {Number}\n     * @default SurfaceShape.DEFAULT_POLAR_THROTTLE\n     */\n    polarThrottle: {\n        get: function () {\n            return this._polarThrottle;\n        },\n        set: function (value) {\n            this.stateKeyInvalid = true;\n            this.resetBoundaries();\n            this._polarThrottle = value;\n        }\n    },\n\n    /**\n     * Defines the extent of the shape in latitude and longitude.\n     * This sector only has valid data once the boundary is defined. Prior to this, it is null.\n     * @memberof SurfaceShape.prototype\n     * @type {Sector}\n     */\n    sector: {\n        get: function () {\n            return this._sector;\n        }\n    }\n});\n\nSurfaceShape.staticStateKey = function (shape) {\n    shape.stateKeyInvalid = false;\n\n    if (shape.highlighted) {\n        if (!shape._highlightAttributes) {\n            if (!shape._attributes) {\n                shape._attributesStateKey = null;\n            } else {\n                shape._attributesStateKey = shape._attributes.stateKey;\n            }\n        } else {\n            shape._attributesStateKey = shape._highlightAttributes.stateKey;\n        }\n    } else {\n        if (!shape._attributes) {\n            shape._attributesStateKey = null;\n        } else {\n            shape._attributesStateKey = shape._attributes.stateKey;\n        }\n    }\n\n    return \"dn \" + shape.displayName +\n        \" at \" + (!shape._attributesStateKey ? \"null\" : shape._attributesStateKey) +\n        \" hi \" + shape.highlighted +\n        \" en \" + shape.enabled +\n        \" pt \" + shape.pathType +\n        \" ne \" + shape.maximumNumEdgeIntervals +\n        \" po \" + shape.polarThrottle +\n        \" se \" + \"[\" +\n        shape.sector.minLatitude + \",\" +\n        shape.sector.maxLatitude + \",\" +\n        shape.sector.minLongitude + \",\" +\n        shape.sector.maxLongitude +\n        \"]\";\n};\n\nSurfaceShape.prototype.computeStateKey = function () {\n    return SurfaceShape.staticStateKey(this);\n};\n\n/**\n * Returns this shape's area in square meters.\n * @param {Globe} globe The globe on which to compute the area.\n * @param {Boolean} terrainConformant If true, the returned area is that of the terrain,\n * including its hillsides and other undulations. If false, the returned area is the shape's\n * projected area.\n */\nSurfaceShape.prototype.area = function (globe, terrainConformant) {\n    throw new NotYetImplementedError(\n        Logger.logMessage(Logger.LEVEL_SEVERE, \"SurfaceShape\", \"area\", \"notYetImplemented\"));\n};\n\n// Internal function. Intentionally not documented.\nSurfaceShape.prototype.computeBoundaries = function (globe) {\n    // This method is in the base class and should be overridden if the boundaries are generated.\n    // It should be called only if the geometry has been provided by the user and does not need to be generated.\n    // assert(!this._boundaries);\n\n    throw new AbstractError(\n        Logger.logMessage(Logger.LEVEL_SEVERE, \"SurfaceShape\", \"computeBoundaries\", \"abstractInvocation\"));\n};\n\n\n// Internal. Intentionally not documented.\nSurfaceShape.prototype.intersectsFrustum = function (dc) {\n\n    if (this.currentData && this.currentData.extent) {\n        if (dc.pickingMode) {\n            return this.currentData.extent.intersectsFrustum(dc.pickFrustum);\n        } else {\n            return this.currentData.extent.intersectsFrustum(dc.frustumInModelCoordinates);\n        }\n    } else {\n        return true;\n    }\n};\n\n/**\n * Indicates whether a specified shape data object is current. Subclasses may override this method to add\n * criteria indicating whether the shape data object is current, but must also call this method on this base\n * class. Applications do not call this method.\n * @param {DrawContext} dc The current draw context.\n * @param {Object} shapeData The object to validate.\n * @returns {Boolean} true if the object is current, otherwise false.\n * @protected\n */\nSurfaceShape.prototype.isShapeDataCurrent = function (dc, shapeData) {\n    return shapeData.verticalExaggeration === dc.verticalExaggeration\n        && shapeData.expiryTime > Date.now();\n};\n\n/**\n * Creates a new shape data object for the current globe state. Subclasses may override this method to\n * modify the shape data object that this method creates, but must also call this method on this base class.\n * Applications do not call this method.\n * @returns {Object} The shape data object.\n * @protected\n */\nSurfaceShape.prototype.createShapeDataObject = function () {\n    return {};\n};\n\n// Intentionally not documented.\nSurfaceShape.prototype.resetExpiration = function (shapeData) {\n    // The random addition in the line below prevents all shapes from regenerating during the same frame.\n    shapeData.expiryTime = Date.now() + this.expirationInterval + 1e3 * Math.random();\n};\n\n// Internal. Intentionally not documented.\nSurfaceShape.prototype.establishCurrentData = function (dc) {\n    this.currentData = this.shapeDataCache.entryForKey(dc.globeStateKey);\n    if (!this.currentData) {\n        this.currentData = this.createShapeDataObject();\n        this.resetExpiration(this.currentData);\n        this.shapeDataCache.putEntry(dc.globeStateKey, this.currentData, 1);\n    }\n\n    this.currentData.isExpired = !this.isShapeDataCurrent(dc, this.currentData);\n};\n\n // Internal function. Intentionally not documented.\n SurfaceShape.prototype.render = function (dc) {\n    if (!this.enabled) {\n        return;\n    }\n\n    this.layer = dc.currentLayer;\n\n    this.prepareBoundaries(dc);\n\n    this.establishCurrentData(dc);\n\n    if (this.currentData.isExpired || !this.currentData.extent) {\n        this.computeExtent(dc);\n        this.currentData.verticalExaggeration = dc.verticalExaggeration;\n        this.resetExpiration(this.currentData);\n    }\n\n    // Use the last computed extent to see if this shape is out of view.\n    if (this.currentData && this.currentData.extent && !this.intersectsFrustum(dc)) {\n        return;\n    }\n\n    dc.surfaceShapeTileBuilder.insertSurfaceShape(this);\n};\n\n\n// Internal function. Intentionally not documented.\nSurfaceShape.prototype.interpolateLocations = function (locations) {\n    var first = locations[0],\n        next = first,\n        prev,\n        isNextFirst = true,\n        isPrevFirst = true,// Don't care initially, this will get set in first iteration.\n        countFirst = 0,\n        isInterpolated = true,\n        idx, len;\n\n    this._locations = [first];\n\n    for (idx = 1, len = locations.length; idx < len; idx += 1) {\n        // Advance to next location, retaining previous location.\n        prev = next;\n        isPrevFirst = isNextFirst;\n\n        next = locations[idx];\n\n        // Detect whether the next location and the first location are the same.\n        isNextFirst = next.latitude == first.latitude && next.longitude == first.longitude;\n\n        // Inhibit interpolation if either endpoint if the first location,\n        // except for the first segement which will be the actual first location or that location\n        // as the polygon closes the first time.\n        // All subsequent encounters of the first location are used to connected secondary domains with the\n        // primary domain in multiply-connected geometry (an outer ring with multiple inner rings).\n        isInterpolated = true;\n        if (isNextFirst || isPrevFirst) {\n            countFirst += 1;\n\n            if (countFirst > 2) {\n                isInterpolated = false;\n            }\n        }\n\n        if (isInterpolated) {\n            this.interpolateEdge(prev, next, this._locations);\n        }\n\n        this._locations.push(next);\n\n        prev = next;\n    }\n\n    // Force the closing of the border.\n    if (!this._isInteriorInhibited) {\n        // Avoid duplication if the first endpoint was already emitted.\n        if (prev.latitude != first.latitude || prev.longitude != first.longitude) {\n            this.interpolateEdge(prev, first, this._locations);\n            this._locations.push(first);\n        }\n    }\n};\n\n// Internal function. Intentionally not documented.\nSurfaceShape.prototype.interpolateEdge = function (start, end, locations) {\n    var distanceRadians = Location.greatCircleDistance(start, end),\n        steps = Math.round(this._maximumNumEdgeIntervals * distanceRadians / Math.PI),\n        dt,\n        location;\n\n    if (steps > 0) {\n        dt = 1 / steps;\n        location = start;\n\n        for (var t = this.throttledStep(dt, location); t < 1; t += this.throttledStep(dt, location)) {\n            location = new Location(0, 0);\n            Location.interpolateAlongPath(this._pathType, t, start, end, location);\n\n            //florin: ensure correct longitude sign and decimal error for anti-meridian\n            if (start.longitude === 180 && end.longitude === 180) {\n                location.longitude = 180;\n            }\n            else if (start.longitude === -180 && end.longitude === -180) {\n                location.longitude = -180;\n            }\n\n            locations.push(location);\n        }\n    }\n};\n\n// Internal function. Intentionally not documented.\n// Return a throttled step size when near the poles.\nSurfaceShape.prototype.throttledStep = function (dt, location) {\n    var cosLat = Math.cos(location.latitude * Angle.DEGREES_TO_RADIANS);\n    cosLat *= cosLat; // Square cos to emphasize poles and de-emphasize equator.\n\n    // Remap polarThrotle:\n    //  0 .. INF => 0 .. 1\n    // This acts as a weight between no throttle and fill throttle.\n    var weight = this._polarThrottle / (1 + this._polarThrottle);\n\n    return dt * ((1 - weight) + weight * cosLat);\n};\n\n// Internal function. Intentionally not documented.\nSurfaceShape.prototype.prepareBoundaries = function (dc) {\n    if (this.boundariesArePrepared) {\n        return;\n    }\n\n    if (!this._boundaries) {\n        this.computeBoundaries(dc);\n    }\n\n    var newBoundaries = this.formatBoundaries();\n    this.normalizeAngles(newBoundaries);\n    newBoundaries = this.interpolateBoundaries(newBoundaries);\n\n    var contoursInfo = [];\n    var doesCross = PolygonSplitter.splitContours(newBoundaries, contoursInfo);\n    this.contours = contoursInfo;\n    this.crossesAntiMeridian = doesCross;\n\n    this.prepareGeometry(dc, contoursInfo);\n\n    this.prepareSectors();\n\n    this.boundariesArePrepared = true;\n};\n\n// Internal. Resets boundaries for SurfaceShape recomputing.\nSurfaceShape.prototype.resetBoundaries = function () {\n    this.boundariesArePrepared = false;\n    this.shapeDataCache.clear(false);\n};\n\n//Internal. Formats the boundaries of a surface shape to be a multi dimensional array\nSurfaceShape.prototype.formatBoundaries = function () {\n    var boundaries = [];\n    if (!this._boundaries.length) {\n        return boundaries;\n    }\n    if (this._boundaries[0].latitude != null) {\n        //not multi dim array\n        boundaries.push(this._boundaries);\n    }\n    else {\n        boundaries = this._boundaries;\n    }\n    return boundaries;\n};\n\n// Internal use only. Intentionally not documented.\nSurfaceShape.prototype.normalizeAngles = function (boundaries) {\n    for (var i = 0, len = boundaries.length; i < len; i++) {\n        var polygon = boundaries[i];\n        for (var j = 0, lenP = polygon.length; j < lenP; j++) {\n            var point = polygon[j];\n            if (point.longitude < -180 || point.longitude > 180) {\n                point.longitude = Angle.normalizedDegreesLongitude(point.longitude);\n            }\n            if (point.latitude < -90 || point.latitude > 90) {\n                point.latitude = Angle.normalizedDegreesLatitude(point.latitude);\n            }\n        }\n    }\n};\n\n// Internal use only. Intentionally not documented.\nSurfaceShape.prototype.interpolateBoundaries = function (boundaries) {\n    var newBoundaries = [];\n    for (var i = 0, len = boundaries.length; i < len; i++) {\n        var contour = boundaries[i];\n        this.interpolateLocations(contour);\n        newBoundaries.push(this._locations.slice());\n        this._locations.length = 0;\n    }\n    return newBoundaries;\n};\n\n/**\n * Computes the bounding sectors for the shape. There will be more than one if the shape crosses the date line,\n * but does not enclose a pole.\n *\n * @param {DrawContext} dc The drawing context containing a globe.\n *\n * @return {Sector[]}  Bounding sectors for the shape.\n */\nSurfaceShape.prototype.computeSectors = function (dc) {\n    // Return a previously computed value if it already exists.\n    if (this._sectors && this._sectors.length > 0) {\n        return this._sectors;\n    }\n\n    this.prepareBoundaries(dc);\n\n    return this._sectors;\n};\n\n\n/**\n * Computes the extent for the shape based on its sectors.\n *\n * @param {DrawContext} dc The drawing context containing a globe.\n *\n * @return {BoundingBox} The extent for the shape.\n */\nSurfaceShape.prototype.computeExtent = function (dc) {\n\n    if (!this._sectors || this._sectors.length === 0) {\n        return null;\n    }\n\n    if (!this.currentData) {\n        return null;\n    }\n\n    if (!this.currentData.extent) {\n        this.currentData.extent = new BoundingBox();\n    }\n\n\n    var boxPoints;\n    // This surface shape does not cross the international dateline, and therefore has a single bounding sector.\n    // Return the box which contains that sector.\n    if (this._sectors.length === 1) {\n        boxPoints = this._sectors[0].computeBoundingPoints(dc.globe, dc.verticalExaggeration);\n        this.currentData.extent.setToVec3Points(boxPoints);\n    }\n    // This surface crosses the international dateline, and its bounding sectors are split along the dateline.\n    // Return a box which contains the corners of the boxes bounding each sector.\n    else {\n        var boxCorners = [];\n\n        for (var i = 0; i < this._sectors.length; i++) {\n            boxPoints = this._sectors[i].computeBoundingPoints(dc.globe, dc.verticalExaggeration);\n            var box = new BoundingBox();\n            box.setToVec3Points(boxPoints);\n            var corners = box.getCorners();\n            for (var j = 0; j < corners.length; j++) {\n                boxCorners.push(corners[j]);\n            }\n        }\n        this.currentData.extent.setToVec3Points(boxCorners);\n    }\n\n    return this.currentData.extent;\n\n};\n\n /**\n * Computes a new set of locations translated from a specified location to a new location for a shape.\n *\n * @param {Globe} globe The globe on which to compute a new set of locations.\n * @param {Location} oldLocation The original reference location.\n * @param {Location} newLocation The new reference location.\n * @param {Location[]} locations The locations to translate.\n *\n * @return {Location[]} The translated locations.\n */\nSurfaceShape.prototype.computeShiftedLocations = function(globe, oldLocation, newLocation, locations) {\n    var newLocations = [];\n    var result = new Vec3(0, 0, 0);\n    var newPos = new WorldWind.Position(0, 0, 0);\n\n    var oldPoint = globe.computePointFromLocation(oldLocation.latitude, oldLocation.longitude,\n        new Vec3(0, 0, 0));\n    var newPoint = globe.computePointFromLocation(newLocation.latitude, newLocation.longitude,\n        new Vec3(0, 0, 0));\n\n    if(globe.is2D()){\n        var delta = newPoint.subtract(oldPoint);\n\n        for (var i = 0, len = locations.length; i < len; i++) {\n            globe.computePointFromLocation(locations[i].latitude, locations[i].longitude, result);\n            result.add(delta);\n            globe.computePositionFromPoint(result[0], result[1], result[2], newPos);\n            newLocations.push(new Location(newPos.latitude, newPos.longitude));\n        }\n    } else {\n        // Euler method\n\n        // var xVecOld = new Vec3(0, oldPoint[1], oldPoint[2]);\n        // var yVecOld =  new Vec3(oldPoint[0], 0, oldPoint[2]);\n        // var zVecOld =  new Vec3(oldPoint[0], oldPoint[1], 0);\n        // var xVecNew = new Vec3(0, newPoint[1], newPoint[2]);\n        // var yVecNew =  new Vec3(newPoint[0], 0, newPoint[2]);\n        // var zVecNew =  new Vec3(newPoint[0], newPoint[1], 0);\n        //\n        //\n        // var alpha = Math.acos(xVecOld.dot(xVecNew) / (xVecOld.magnitude() * xVecNew.magnitude()));\n        // var beta = Math.acos(yVecOld.dot(yVecNew) / (yVecOld.magnitude() * yVecNew.magnitude()));\n        // var gama = Math.acos(zVecOld.dot(zVecNew) / (zVecOld.magnitude() * zVecNew.magnitude()));\n        //\n        // var alpha = Math.atan2()\n        //\n        // var crossX = xVecOld.cross(xVecNew);\n        // var crossY = yVecOld.cross(yVecNew);\n        // var crossZ = zVecOld.cross(zVecNew);\n        //\n        // if(new Vec3(1, 0, 0).dot(crossX) < 0){\n        //      alpha = -alpha;\n        // }\n        //\n        // if(new Vec3(0, 1, 0).dot(crossY) < 0){\n        //     beta = -beta;\n        // }\n        //\n        // if(new Vec3(0, 0, 1).dot(crossZ) < 0){\n        //     gama = -gama;\n        // }\n        //\n        // for (var i = 0, len = locations.length; i < len; i++) {\n        //     globe.computePointFromLocation(locations[i].latitude, locations[i].longitude, result);\n        //     var newX = result[0] * Math.cos(beta) * Math.cos(gama) +\n        //                result[1] * (Math.cos(beta) * (-Math.sin(gama))) +\n        //                result[2] * Math.sin(beta);\n        //\n        //     var newY = result[0] * ((-Math.sin(alpha)) * (-Math.sin(beta)) * (Math.cos(gama)) + Math.cos(alpha) * Math.sin(gama)) +\n        //                result[1] * ( (-Math.sin(alpha)) * (-Math.sin(beta)) * (-Math.sin(gama)) + Math.cos(alpha) * Math.cos(gama) ) +\n        //                result[2] * Math.sin(alpha) * Math.cos(beta);\n        //\n        //     var newZ = result[0] * (Math.cos(alpha) * (-Math.sin(beta)) * Math.cos(gama) + Math.sin(alpha) * Math.sin(gama)) +\n        //                result[1] * (Math.cos(alpha) * (-Math.sin(beta)) * (-Math.sin(gama)) + Math.sin(alpha) * Math.cos(gama)) +\n        //                result[2] * Math.cos(alpha) * Math.cos(beta);\n        //\n        //     globe.computePositionFromPoint(newX, newY, newZ, newPos);\n        //     newLocations.push(new Location(newPos.latitude, newPos.longitude));\n        // }\n\n        var delta_lat = newLocation.latitude - oldLocation.latitude;\n        var delta_long = newLocation.longitude - oldLocation.longitude;\n        var max = -90;\n        var min = 90;\n\n        for (var i = 0, len = locations.length; i < len; i++) {\n            var new_lat = locations[i].latitude + delta_lat;\n            var new_long = locations[i].longitude + delta_long;\n\n\n            if (new_lat > 90) {\n                new_lat = 180 - new_lat;\n                new_long += 180;\n            } else if (new_lat < -90) {\n                new_lat = -180 - new_lat;\n                new_long += 180;\n            }\n\n            if (new_long < -180) {\n                new_long += 360;\n            } else if (new_long > 180) {\n                new_long -= 360;\n            }\n\n\n            if (new_lat > max) {\n                max = new_lat;\n            }\n\n            if (new_lat < min) {\n                min = new_lat;\n            }\n\n            newLocations.push(new Location(new_lat, new_long));\n        }\n\n        if (max > 90) {\n            var delta = max - 90;\n            for (var i = 0, len = newLocations.length; i < len; i++) {\n                newLocations[i].latitude -= delta;\n            }\n        }\n    }\n\n    return newLocations;\n};\n\n\n\n// Internal use only. Intentionally not documented.\nSurfaceShape.prototype.prepareSectors = function () {\n    this.determineSectors();\n    if (this.crossesAntiMeridian) {\n        this.sectorsOverAntiMeridian();\n    }\n    else {\n        this.sectorsNotOverAntiMeridian();\n    }\n};\n\n// Internal use only. Intentionally not documented.\nSurfaceShape.prototype.determineSectors = function () {\n    for (var i = 0, len = this.contours.length; i < len; i++) {\n        var contour = this.contours[i];\n        var polygons = contour.polygons;\n        contour.sectors = [];\n        for (var j = 0, lenP = polygons.length; j < lenP; j++) {\n            var polygon = polygons[j];\n            var sector = new Sector(0, 0, 0, 0);\n            sector.setToBoundingSector(polygon);\n            if (this._pathType === WorldWind.GREAT_CIRCLE) {\n                var extremes = Location.greatCircleArcExtremeLocations(polygon);\n                var minLatitude = Math.min(sector.minLatitude, extremes[0].latitude);\n                var maxLatitude = Math.max(sector.maxLatitude, extremes[1].latitude);\n                sector.minLatitude = minLatitude;\n                sector.maxLatitude = maxLatitude;\n            }\n            contour.sectors.push(sector);\n        }\n    }\n};\n\n// Internal use only. Intentionally not documented.\nSurfaceShape.prototype.sectorsOverAntiMeridian = function () {\n    var eastSector = new Sector(90, -90, 180, -180); //positive\n    var westSector = new Sector(90, -90, 180, -180); //negative\n    for (var i = 0, len = this.contours.length; i < len; i++) {\n        var sectors = this.contours[i].sectors;\n        for (var j = 0, lenS = sectors.length; j < lenS; j++) {\n            var sector = sectors[j];\n            if (sector.minLongitude < 0 && sector.maxLongitude > 0) {\n                westSector.union(sector);\n                eastSector.union(sector);\n            }\n            else if (sector.minLongitude < 0) {\n                westSector.union(sector);\n            }\n            else {\n                eastSector.union(sector);\n            }\n        }\n    }\n    var minLatitude = Math.min(eastSector.minLatitude, westSector.minLatitude);\n    var maxLatitude = Math.max(eastSector.maxLatitude, eastSector.maxLatitude);\n    this._sector = new Sector(minLatitude, maxLatitude, -180, 180);\n    this._sectors = [eastSector, westSector];\n};\n\n// Internal use only. Intentionally not documented.\nSurfaceShape.prototype.sectorsNotOverAntiMeridian = function () {\n    this._sector = new Sector(90, -90, 180, -180);\n    for (var i = 0, len = this.contours.length; i < len; i++) {\n        var sectors = this.contours[i].sectors;\n        for (var j = 0, lenS = sectors.length; j < lenS; j++) {\n            this._sector.union(sectors[j]);\n        }\n    }\n    this._sectors = [this._sector];\n};\n\n// Internal use only. Intentionally not documented.\nSurfaceShape.prototype.prepareGeometry = function (dc, contours) {\n    var interiorPolygons = [];\n    var outlinePolygons = [];\n\n    for (var i = 0, len = contours.length; i < len; i++) {\n        var contour = contours[i];\n        var poleIndex = contour.poleIndex;\n\n        for (var j = 0, lenC = contour.polygons.length; j < lenC; j++) {\n            var polygon = contour.polygons[j];\n            var iMap = contour.iMap[j];\n            interiorPolygons.push(polygon);\n\n            if (contour.pole !== Location.poles.NONE && lenC > 1) {\n                //split with pole\n                if (j === poleIndex) {\n                    this.outlineForPole(polygon, iMap, outlinePolygons);\n                }\n                else {\n                    this.outlineForSplit(polygon, iMap, outlinePolygons);\n                }\n            }\n            else if (contour.pole !== Location.poles.NONE && lenC === 1) {\n                //only pole\n                this.outlineForPole(polygon, iMap, outlinePolygons);\n            }\n            else if (contour.pole === Location.poles.NONE && lenC > 1) {\n                //only split\n                this.outlineForSplit(polygon, iMap, outlinePolygons);\n            }\n            else if (contour.pole === Location.poles.NONE && lenC === 1) {\n                //no pole, no split\n                outlinePolygons.push(polygon);\n            }\n        }\n    }\n\n    this._interiorGeometry = interiorPolygons;\n    this._outlineGeometry = outlinePolygons;\n};\n\n// Internal use only. Intentionally not documented.\nSurfaceShape.prototype.outlineForPole = function (polygon, iMap, outlinePolygons) {\n    this.containsPole = true;\n    var outlinePolygon = [];\n    var pCount = 0;\n    for (var k = 0, lenP = polygon.length; k < lenP; k++) {\n        var point = polygon[k];\n        var intersection = iMap.get(k);\n        if (intersection && intersection.forPole) {\n            pCount++;\n            if (pCount % 2 === 1) {\n                outlinePolygon.push(point);\n                outlinePolygons.push(outlinePolygon);\n                outlinePolygon = [];\n            }\n        }\n        if (pCount % 2 === 0) {\n            outlinePolygon.push(point);\n        }\n    }\n    if (outlinePolygon.length) {\n        outlinePolygons.push(outlinePolygon);\n    }\n};\n\n// Internal use only. Intentionally not documented.\nSurfaceShape.prototype.outlineForSplit = function (polygon, iMap, outlinePolygons) {\n    var outlinePolygon = [];\n    var iCount = 0;\n    for (var k = 0, lenP = polygon.length; k < lenP; k++) {\n        var point = polygon[k];\n        var intersection = iMap.get(k);\n        if (intersection && !intersection.forPole) {\n            iCount++;\n            if (iCount % 2 === 0) {\n                outlinePolygon.push(point);\n                outlinePolygons.push(outlinePolygon);\n                outlinePolygon = [];\n            }\n        }\n        if (iCount % 2 === 1) {\n            outlinePolygon.push(point);\n        }\n    }\n};\n\n// Internal use only. Intentionally not documented.\nSurfaceShape.prototype.resetPickColor = function () {\n    this.pickColor = null;\n};\n\n/**\n * Internal use only.\n * Render the shape onto the texture map of the tile.\n * @param {DrawContext} dc The draw context to render onto.\n * @param {CanvasRenderingContext2D} ctx2D The rendering context for SVG.\n * @param {Number} xScale The multiplicative scale factor in the horizontal direction.\n * @param {Number} yScale The multiplicative scale factor in the vertical direction.\n * @param {Number} dx The additive offset in the horizontal direction.\n * @param {Number} dy The additive offset in the vertical direction.\n */\nSurfaceShape.prototype.renderToTexture = function (dc, ctx2D, xScale, yScale, dx, dy) {\n    var attributes = (this._highlighted ? (this._highlightAttributes || this._attributes) : this._attributes);\n    var drawInterior = (!this._isInteriorInhibited && attributes.drawInterior);\n    var drawOutline = (attributes.drawOutline && attributes.outlineWidth > 0);\n\n    if (!drawInterior && !drawOutline) {\n        return;\n    }\n\n    if (dc.pickingMode && !this.pickColor) {\n        this.pickColor = dc.uniquePickColor();\n    }\n\n    if (dc.pickingMode) {\n        var pickColor = this.pickColor.toHexString();\n    }\n\n    if (this.crossesAntiMeridian || this.containsPole) {\n        if (drawInterior) {\n            this.draw(this._interiorGeometry, ctx2D, xScale, yScale, dx, dy);\n            ctx2D.fillStyle = dc.pickingMode ? pickColor : attributes.interiorColor.toRGBAString();\n            ctx2D.fill();\n        }\n        if (drawOutline) {\n            this.draw(this._outlineGeometry, ctx2D, xScale, yScale, dx, dy);\n            ctx2D.lineWidth = 4 * attributes.outlineWidth;\n            ctx2D.strokeStyle = dc.pickingMode ? pickColor : attributes.outlineColor.toRGBAString();\n            ctx2D.stroke();\n        }\n    }\n    else {\n        this.draw(this._interiorGeometry, ctx2D, xScale, yScale, dx, dy);\n        if (drawInterior) {\n            ctx2D.fillStyle = dc.pickingMode ? pickColor : attributes.interiorColor.toRGBAString();\n            ctx2D.fill();\n        }\n        if (drawOutline) {\n            ctx2D.lineWidth = 4 * attributes.outlineWidth;\n            ctx2D.strokeStyle = dc.pickingMode ? pickColor : attributes.outlineColor.toRGBAString();\n            ctx2D.stroke();\n        }\n    }\n\n    if (dc.pickingMode) {\n        var po = new PickedObject(this.pickColor.clone(), this.pickDelegate ? this.pickDelegate : this,\n            null, this.layer, false);\n        dc.resolvePick(po);\n    }\n};\n\nSurfaceShape.prototype.draw = function (contours, ctx2D, xScale, yScale, dx, dy) {\n    ctx2D.beginPath();\n    for (var i = 0, len = contours.length; i < len; i++) {\n        var contour = contours[i];\n        var point = contour[0];\n        var x = point.longitude * xScale + dx;\n        var y = point.latitude * yScale + dy;\n        ctx2D.moveTo(x, y);\n        for (var j = 1, lenC = contour.length; j < lenC; j++) {\n            point = contour[j];\n            x = point.longitude * xScale + dx;\n            y = point.latitude * yScale + dy;\n            ctx2D.lineTo(x, y);\n        }\n    }\n};\n\n/**\n * Default value for the maximum number of edge intervals. This results in a maximum error of 480 m for an arc\n * that spans the entire globe.\n *\n * Other values for this parameter have the associated errors below:\n * Intervals        Maximum error (meters)\n *      2           1280253.5\n *      4           448124.5\n *      8           120837.6\n *      16          30628.3\n *      32          7677.9\n *      64          1920.6\n *      128         480.2\n *      256         120.0\n *      512         30.0\n *      1024        7.5\n *      2048        1.8\n * The errors cited above are upper bounds and the actual error may be lower.\n * @type {Number}\n */\nSurfaceShape.DEFAULT_NUM_EDGE_INTERVALS = 128;\n\n/**\n * The defualt value for the polar throttle, which slows edge traversal near the poles.\n * @type {Number}\n */\nSurfaceShape.DEFAULT_POLAR_THROTTLE = 10;\n\nWorldWind.SurfaceShape = SurfaceShape;\n\nexport default SurfaceShape;","import WorldWind from 'webworldwind-esa';\nimport SurfaceShape from './SurfaceShape';\n\nconst {\n    DrawContext,\n    // SurfaceShape,\n} = WorldWind;\n\n/**\n * Determines whether a specified picked object is under the pick point, and if it is adds it to this draw\n * context's list of picked objects. This method should be called by shapes during ordered rendering\n * after the shape is drawn. If this draw context is in single-picking mode, the specified pickable object\n * is added to the list of picked objects whether or not it is under the pick point.\n * @param pickableObject\n * @returns {null}\n */\nDrawContext.prototype.resolvePick = function (pickableObject) {\n    if (!(pickableObject.userObject instanceof SurfaceShape) && this.deepPicking && !this.regionPicking) {\n        var color = this.readPickColor(this.pickPoint);\n        if (!color) { // getPickColor returns null if the pick point selects the clear color\n            return null;\n        }\n\n        if (pickableObject.color.equals(color)) {\n            this.addPickedObject(pickableObject);\n        }\n    } else {\n        // Don't resolve. Just add the object to the pick list. It will be resolved later.\n        this.addPickedObject(pickableObject);\n    }\n};","export default class FramebufferTexture {\n\n    constructor(textureId, width, height) {\n        this.textureId = textureId || null;\n        this.imageWidth = width;\n        this.imageHeight = height;\n        this.size = width * height * 4;\n        this.originalImageWidth = width;\n        this.originalImageHeight = height;\n        this.creationTime = new Date();\n    }\n\n    bind(dc) {\n        dc.currentGlContext.bindTexture(dc.currentGlContext.TEXTURE_2D, this.textureId);\n        dc.frameStatistics.incrementTextureLoadCount(1);\n        return true;\n    }\n\n    dispose(gl) {\n        gl.deleteTexture(this.textureId);\n        delete this.textureId;\n    }\n\n}\n","import FramebufferTexture from './FramebufferTexture';\n\nexport default class Framebuffer {\n\n    constructor() {\n        this.framebufferId = null;\n        this.textureId = null;\n        this.width = 0;\n        this.height = 0;\n        this.texture = null;\n    }\n\n    attachTexture(gl, width, height) {\n        this.textureId = this.createTexture(gl, width, height);\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.textureId, 0);\n\n        /*const e = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n        if (e !== gl.FRAMEBUFFER_COMPLETE) {\n            console.log('bind Error creating framebuffer', e);\n            this.framebufferId = null;\n            this.textureId = null;\n            return false;\n        }*/\n\n        this.texture = new FramebufferTexture(this.textureId, width, height);\n\n        return true;\n    }\n\n    bind(gl, width, height) {\n        if(!this.framebufferId) {\n            this.framebufferId = gl.createFramebuffer();\n        }\n\n        this.width = width;\n        this.height = height;\n\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebufferId);\n        gl.viewport(0, 0, width, height);\n    }\n\n    bind_or(gl, width, height) {\n        /*if (!this.framebufferId) {\n            return false;\n        }*/\n\n        if(!this.framebufferId) {\n            this.framebufferId = gl.createFramebuffer();\n        }\n\n        this.width = width;\n        this.height = height;\n\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebufferId);\n        gl.viewport(0, 0, width, height);\n        this.textureId = this.createTexture(gl, width, height);\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.textureId, 0);\n\n        /*const e = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n        if (e !== gl.FRAMEBUFFER_COMPLETE) {\n            console.log('bind Error creating framebuffer', e);\n            this.framebufferId = null;\n            this.textureId = null;\n            return false;\n        }*/\n\n        this.texture = new FramebufferTexture(this.textureId, width, height);\n\n        return true;\n    }\n\n    clear(gl) {\n        gl.clearColor(0, 0, 0, 0);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n    }\n\n    unbind(gl, fbo) {\n        if (!fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n            gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n        }\n        else {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.framebufferId);\n            gl.viewport(0, 0, fbo.width, fbo.height);\n\n        }\n    }\n\n    createTexture(gl, width, height) {\n        if (width !== 256) {\n            console.log('width', width);\n        }\n        if (height !== 256) {\n            console.log('width', height);\n        }\n        const textureId = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, textureId);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n\n        /*var ext = (\n            gl.getExtension(\"EXT_texture_filter_anisotropic\") ||\n            gl.getExtension(\"WEBKIT_EXT_texture_filter_anisotropic\"));\n        if (ext) {\n            gl.texParameteri(gl.TEXTURE_2D, ext.TEXTURE_MAX_ANISOTROPY_EXT, 16);\n        }*/\n\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n\n        //gl.generateMipmap(gl.TEXTURE_2D);\n        //gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, textureId, 0);\n        return textureId;\n    }\n\n}","import Framebuffer from '../framebuffer/Framebuffer';\nimport WorldWind from 'webworldwind-esa';\n\nconst {\n    ArgumentError,\n    Logger,\n    SurfaceShapeTileBuilder,\n    SurfaceShape,\n    PickedObject\n} = WorldWind;\n\nconst fboCacheKey = 'SurfaceShapeFBO';\n\nSurfaceShapeTileBuilder.prototype.buildTiles = function (dc) {\n    if (!dc) {\n        throw new ArgumentError(\n            Logger.logMessage(Logger.LEVEL_SEVERE, 'SurfaceShapeTileBuilder', 'buildTiles', 'missingDc'));\n    }\n\n    if (!this.surfaceShapes || this.surfaceShapes.length < 1) {\n        return;\n    }\n\n    // Assemble the current visible tiles and update their associated textures if necessary.\n    this.assembleTiles(dc);\n\n    if (SurfaceShapeTileBuilder.__fboBound__) {\n        const fbo = SurfaceShapeTileBuilder.getFbo(dc);\n        fbo.unbind(dc.currentGlContext, dc.currentFramebuffer);\n        SurfaceShapeTileBuilder.__fboBound__ = false;\n    }\n\n    // Clean up references to all surface shapes to avoid dangling references. The surface shape list is no\n    // longer needed, now that the shapes are held by each tile.\n    this.surfaceShapes.splice(0, this.surfaceShapes.length);\n    for (var idx = 0, len = this.surfaceShapeTiles.length; idx < len; idx += 1) {\n        var tile = this.surfaceShapeTiles[idx];\n        tile.clearShapes();\n    }\n};\n\n\nSurfaceShapeTileBuilder.prototype.addTile = function (dc, tile) {\n    if (dc.pickingMode) {\n        tile.pickSequence = SurfaceShapeTileBuilder.pickSequence;\n    }\n\n    if (tile.needsUpdate(dc)) {\n\n        const fbo = SurfaceShapeTileBuilder.getFbo(dc);\n        if (!SurfaceShapeTileBuilder.__fboBound__) {\n            fbo.bind(dc.currentGlContext, this.tileWidth, this.tileHeight);\n            SurfaceShapeTileBuilder.__fboBound__ = true;\n        }\n\n        tile.updateTexture(dc);\n    }\n\n    this.surfaceShapeTiles.push(tile);\n};\n\n\n/**\n * Perform the rendering of any accumulated surface shapes by building the surface shape tiles that contain these\n * shapes and then rendering those tiles.\n *\n * @param {DrawContext} dc The drawing context.\n */\nSurfaceShapeTileBuilder.prototype.doRender = function (dc) {\n    if (dc.pickingMode) {\n        // Picking rendering strategy:\n        //  1) save all tiles created prior to picking,\n        //  2) construct and render new tiles with pick-based contents (colored with pick IDs),\n        //  3) restore all prior tiles.\n        // This has a big potential win for normal rendering, since there is a lot of coherence\n        // from frame to frame if no picking is occurring.\n        for (var idx = 0, len = this.surfaceShapes.length; idx < len; idx += 1) {\n            this.surfaceShapes[idx].resetPickColor();\n        }\n\n        SurfaceShapeTileBuilder.pickSequence += 1;\n\n        var savedTiles = this.surfaceShapeTiles;\n        var savedTopLevelTiles = this.topLevelTiles;\n\n        this.surfaceShapeTiles = [];\n        this.topLevelTiles = [];\n\n        this.buildTiles(dc);\n\n        if (dc.deepPicking) {\n            // Normally, we render all shapes together in one tile (or a small number, but this detail\n            // doesn't matter). For deep picking, we need to render each shape individually.\n            this.doDeepPickingRender(dc);\n\n        } else {\n            dc.surfaceTileRenderer.renderTiles(dc, this.surfaceShapeTiles, 1);\n        }\n\n        this.surfaceShapeTiles = savedTiles;\n        this.topLevelTiles = savedTopLevelTiles;\n    } else {\n        this.buildTiles(dc);\n\n        dc.surfaceTileRenderer.renderTiles(dc, this.surfaceShapeTiles, 1);\n    }\n};\n\nSurfaceShapeTileBuilder.prototype.doDeepPickingRender = function (dc) {\n    var idxTile, lenTiles, idxShape, lenShapes, idxPick, lenPicks, po, shape, tile;\n\n    // Determine the shapes that were drawn during buildTiles. These shapes may not actually be\n    // at the pick point, but they are candidates for deep picking.\n    var deepPickShapes = [];\n    for (idxPick = 0, lenPicks = dc.objectsAtPickPoint.objects.length; idxPick < lenPicks; idxPick += 1) {\n        po = dc.objectsAtPickPoint.objects[idxPick];\n        if (po.userObject instanceof SurfaceShape) {\n            shape = po.userObject;\n\n            // If the shape was not already in the collection of deep picked shapes, ...\n            if (deepPickShapes.indexOf(shape) < 0) {\n                deepPickShapes.push(shape);\n\n                // Delete the shape that was drawn during buildTiles from the pick list.\n                dc.objectsAtPickPoint.objects.splice(idxPick, 1);\n\n                // Update the index and length to reflect the deletion.\n                idxPick -= 1;\n                lenPicks -= 1;\n            }\n        }\n    }\n\n    if (deepPickShapes.length <= 0) {\n        return;\n    }\n\n    // For all shapes,\n    //  1) force that shape to be the only shape in a tile,\n    //  2) re-render the tile, and\n    //  3) use the surfaceTileRenderer to render the tile on the terrain,\n    //  4) read the color to see if it is attributable to the current shape.\n    var resolvablePickObjects = [];\n    for (idxShape = 0, lenShapes = deepPickShapes.length; idxShape < lenShapes; idxShape += 1) {\n        shape = deepPickShapes[idxShape];\n\n        const fbo = SurfaceShapeTileBuilder.getFbo(dc);\n        if (!SurfaceShapeTileBuilder.__fboBound__) {\n            fbo.bind(dc.currentGlContext, this.tileWidth, this.tileHeight);\n            SurfaceShapeTileBuilder.__fboBound__ = true;\n        }\n\n        for (idxTile = 0, lenTiles = this.surfaceShapeTiles.length; idxTile < lenTiles; idxTile += 1) {\n            tile = this.surfaceShapeTiles[idxTile];\n            tile.setShapes([shape]);\n\n            tile.updateTexture(dc);\n        }\n\n        if (SurfaceShapeTileBuilder.__fboBound__) {\n            const fbo = SurfaceShapeTileBuilder.getFbo(dc);\n            fbo.unbind(dc.currentGlContext, dc.currentFramebuffer);\n            SurfaceShapeTileBuilder.__fboBound__ = false;\n        }\n\n        dc.surfaceTileRenderer.renderTiles(dc, this.surfaceShapeTiles, 1);\n\n        var pickColor = dc.readPickColor(dc.pickPoint);\n        if (!!pickColor && shape.pickColor.equals(pickColor)) {\n            po = new PickedObject(shape.pickColor.clone(),\n                shape.pickDelegate ? shape.pickDelegate : shape, null, shape.layer, false);\n            resolvablePickObjects.push(po);\n        }\n    }\n\n    // Flush surface shapes that have accumulated in the updateTexture pass just completed on all shapes.\n    for (idxPick = 0, lenPicks = dc.objectsAtPickPoint.objects.length; idxPick < lenPicks; idxPick += 1) {\n        po = dc.objectsAtPickPoint.objects[idxPick];\n        if (po.userObject instanceof SurfaceShape) {\n            // Delete the shape that was picked in the most recent pass.\n            dc.objectsAtPickPoint.objects.splice(idxPick, 1);\n\n            // Update the index and length to reflect the deletion.\n            idxPick -= 1;\n            lenPicks -= 1;\n        }\n    }\n\n    // Add the resolvable pick objects for surface shapes that were actually visible at the pick point\n    // to the pick list.\n    for (idxPick = 0, lenPicks = resolvablePickObjects.length; idxPick < lenPicks; idxPick += 1) {\n        po = resolvablePickObjects[idxPick];\n        dc.objectsAtPickPoint.objects.push(po);\n    }\n};\n\nSurfaceShapeTileBuilder.getFbo = function (dc) {\n    let fbo = dc.gpuResourceCache.resourceForKey(fboCacheKey);\n    if (!fbo) {\n        fbo = new Framebuffer();\n        dc.gpuResourceCache.putResource(fboCacheKey, fbo, 1);\n    }\n    return fbo;\n};\n\nSurfaceShapeTileBuilder.__frameStart__ = false;\nSurfaceShapeTileBuilder.__fboBound__ = false;","import Framebuffer from '../framebuffer/Framebuffer';\nimport WorldWind from 'webworldwind-esa';\n\nconst {\n    SurfaceShapeTile\n} = WorldWind;\n\nSurfaceShapeTile.prototype.updateTexture = function (dc) {\n    var gl = dc.currentGlContext;\n    // Mapping from lat/lon to x/y:\n    //  lon = minlon => x = 0\n    //  lon = maxLon => x = 256\n    //  lat = minLat => y = 256\n    //  lat = maxLat => y = 0\n    //  (assuming texture size is 256)\n    // So:\n    //  x = 256 / sector.dlon * (lon - minLon)\n    //  y = -256 / sector.dlat * (lat - maxLat)\n    var xScale = this.tileWidth / this.sector.deltaLongitude(),\n        yScale = -this.tileHeight / this.sector.deltaLatitude(),\n        xOffset = -this.sector.minLongitude * xScale,\n        yOffset = -this.sector.maxLatitude * yScale;\n\n    // Reset the surface shape state keys\n    this.asRenderedSurfaceShapeStateKeys = [];\n\n    var fbo = dc.gpuResourceCache.resourceForKey('SurfaceShapeFBO');\n    fbo.attachTexture(gl, this.tileWidth, this.tileHeight);\n    fbo.clear(gl);\n\n    for (var idx = 0, len = this.surfaceShapes.length; idx < len; idx += 1) {\n        var shape = this.surfaceShapes[idx];\n        this.asRenderedSurfaceShapeStateKeys.push(this.surfaceShapeStateKeys[idx]);\n\n        shape.renderToTexture(dc, fbo, xScale, yScale, xOffset, yOffset);\n    }\n\n    this.gpuCacheKey = this.getCacheKey();\n\n    var gpuResourceCache = dc.gpuResourceCache;\n    var texture = fbo.texture;\n    gpuResourceCache.putResource(this.gpuCacheKey, texture, texture.size);\n\n    return texture;\n};","import WorldWind from 'webworldwind-esa';\n\nconst {\n    TiledImageLayer\n} = WorldWind;\n\nvar index = 0;\n\nTiledImageLayer.prototype.retrieveTileImage = function (dc, tile, suppressRedraw) {\n    if (!this.pendingRequests) {\n        this.pendingRequests = [];\n    }\n    if (!this.MAX_REQUESTS) {\n        this.MAX_REQUESTS = 16;\n    }\n\n    const isBeingRetrieved = this.currentRetrievals.indexOf(tile.imagePath) >= 0;\n    if (isBeingRetrieved) {\n        return;\n    }\n\n    const isPending = this.pendingRequests.some(t => t.imagePath === tile.imagePath);\n    if (isPending) {\n        return;\n    }\n\n    if (this.absentResourceList.isResourceAbsent(tile.imagePath)) {\n        return;\n    }\n\n    const url = this.resourceUrlForTile(tile, this.retrievalImageFormat);\n    //const imagePath = tile.imagePath;\n\n    if (!url) {\n        this.currentTilesInvalid = true;\n        return;\n    }\n\n    /*this.pendingRequests.push(tile);\n    if (this.pendingRequests.length === 100) {\n        console.log('pendingRequests', this.pendingRequests.length, 'currentRetrievals', this.currentRetrievals.length);\n        //console.log('pendingRequests', this.pendingRequests.slice());\n\n        this.pendingRequests = this.pendingRequests.slice(80);\n\n        console.log('pendingRequests', this.pendingRequests.length, 'currentRetrievals', this.currentRetrievals.length);\n    }*/\n    if (this.pendingRequests.length === 20) {\n        //console.log(20);\n        this.pendingRequests.shift();\n    }\n    this.pendingRequests.push(tile);\n\n    if (this.currentRetrievals.length <= this.MAX_REQUESTS) {\n        this.fetchMoreImages(dc, this);\n    }\n};\n\nTiledImageLayer.prototype.fetchMoreImages = function (dc, layer) {\n    const before = layer.pendingRequests.length;\n    layer.pendingRequests = layer.pendingRequests.filter(pendingTile => layer.isTileVisible(dc, pendingTile));\n    if (!layer.pendingRequests.length) {\n        return;\n    }\n\n    const skip = before - layer.pendingRequests.length\n\n    //if (skip) console.log('skip tiles', skip);\n\n    var pendingTile = layer.pendingRequests.shift();\n    var imagePath = pendingTile.imagePath;\n    var url = layer.resourceUrlForTile(pendingTile, layer.retrievalImageFormat);\n\n    if (!imagePath || !url) {\n        return;\n    }\n\n    const cache = dc.gpuResourceCache;\n    //const layer = self;\n\n    layer.fetchImage(url, function (err, image) {\n        if (err) {\n            layer.removeFromCurrentRetrievals(imagePath);\n            layer.absentResourceList.markResourceAbsent(imagePath);\n\n            if (layer.currentRetrievals.length <= layer.MAX_REQUESTS) {\n                layer.fetchMoreImages(dc, layer);\n            }\n            return;\n        }\n\n        var texture = layer.createTexture(dc, null, image);\n        layer.removeFromCurrentRetrievals(imagePath);\n\n        if (texture) {\n            cache.putResource(imagePath, texture, texture.size);\n\n            layer.currentTilesInvalid = true;\n            layer.absentResourceList.unmarkResourceAbsent(imagePath);\n\n            var e = document.createEvent('Event');\n            e.initEvent(WorldWind.REDRAW_EVENT_TYPE, true, true);\n            window.dispatchEvent(e);\n        }\n\n        if (layer.currentRetrievals.length <= layer.MAX_REQUESTS) {\n            layer.fetchMoreImages(dc, layer);\n        }\n    });\n\n    layer.currentRetrievals.push(imagePath);\n};\n\nTiledImageLayer.prototype.fetchImage = function (url, cb) {\n    const image = new Image();\n\n    image.onload = function () {\n        cb(null, image);\n    };\n\n    image.onerror = function () {\n        cb(new Error('Image retrieval failed'), null);\n    };\n\n    image.crossOrigin = 'anonymous';\n\n    if (window.webkit) {\n        // url = '/proxy?url=' + encodeURIComponent(url);\n    }\n    else if (!window.webkit && !window.AndroidApp) {\n        // url = '/proxy?url=' + encodeURIComponent(url);\n    }\n\n    image.src = url;\n};\n\nTiledImageLayer.prototype.doRender_ = function (dc) {\n    if (!dc.terrain)\n        return;\n\n    if (this.currentTilesInvalid\n        || !this.lasTtMVP || !dc.navigatorState.modelviewProjection.equals(this.lasTtMVP)\n        || dc.globeStateKey !== this.lastGlobeStateKey) {\n        this.currentTilesInvalid = false;\n\n        this.assembleTiles(dc);\n\n        // Tile fading works visually only when the surface tiles are opaque, otherwise the surface flashes\n        // when two tiles are drawn over the same area, even though one of them is semi-transparent.\n        // So do not provide fading when the surface opacity is less than 1;\n        /*if (dc.surfaceOpacity >= 1 && this.opacity >= 1) {\n            // Fading of outgoing tiles requires determination of the those tiles. Prepare an object with all of\n            // the preceding frame's tiles so that we can subsequently compare the list of newly selected tiles\n            // with the previously selected tiles.\n            this.previousTiles = {};\n            for (var j = 0; j < this.currentTiles.length; j++) {\n                this.previousTiles[this.currentTiles[j].imagePath] = this.currentTiles[j];\n            }\n\n            this.assembleTiles(dc);\n            this.fadeOutgoingTiles(dc);\n        } else {\n            this.assembleTiles(dc);\n        }*/\n\n    }\n\n    this.lasTtMVP = dc.navigatorState.modelviewProjection;\n    this.lastGlobeStateKey = dc.globeStateKey;\n\n    //this.cleanCache(dc);\n\n    if (this.currentTiles.length > 0) {\n        dc.surfaceTileRenderer.renderTiles(dc, this.currentTiles, this.opacity, dc.surfaceOpacity >= 1);\n        dc.frameStatistics.incrementImageTileCount(this.currentTiles.length);\n        this.inCurrentFrame = true;\n    }\n};\n\nTiledImageLayer.prototype.cleanCache = function () {\n\n};","/*\n * @license\n * Copyright 2000, Silicon Graphics, Inc. All Rights Reserved.\n * Copyright 2014, Google Inc. All Rights Reserved.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to\n * deal in the Software without restriction, including without limitation the\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n * sell copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice including the dates of first publication and\n * either this permission notice or a reference to http://oss.sgi.com/projects/FreeB/\n * shall be included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n * SILICON GRAPHICS, INC. BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR\n * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n *\n * Original Code. The Original Code is: OpenGL Sample Implementation,\n * Version 1.2.1, released January 26, 2000, developed by Silicon Graphics,\n * Inc. The Original Code is Copyright (c) 1991-2000 Silicon Graphics, Inc.\n * Copyright in any portions created by third parties is as indicated\n * elsewhere herein. All Rights Reserved.\n */\n/*\n * @author ericv@cs.stanford.edu (Eric Veach)\n * @author bckenny@google.com (Brendan Kenny)\n */\n\n/*\n * Base namespace.\n * @const\n */\nvar libtess = {};\n\n/**\n * Whether to run asserts and extra debug checks.\n * @define {boolean}\n */\nlibtess.DEBUG = false;\n\n/**\n * Checks if the condition evaluates to true if libtess.DEBUG is true.\n * @param {*} condition The condition to check.\n * @param {string=} opt_message Error message in case of failure.\n * @throws {Error} Assertion failed, the condition evaluates to false.\n */\nlibtess.assert = function(condition, opt_message) {\n  if (libtess.DEBUG && !condition) {\n    throw new Error('Assertion failed' +\n        (opt_message ? ': ' + opt_message : ''));\n  }\n};\n\n/**\n * The maximum vertex coordinate size, 1e150. Anything larger will trigger a\n * GLU_TESS_COORD_TOO_LARGE error callback and the vertex will be clamped to\n * this value for all tessellation calculations.\n * @const {number}\n */\nlibtess.GLU_TESS_MAX_COORD = 1e150;\n// NOTE(bckenny): value from glu.pl generator\n\n/**\n * Normally the polygon is projected to a plane perpendicular to one of the\n * three coordinate axes before tessellating in 2d. This helps numerical\n * accuracy by forgoing a transformation step by simply dropping one coordinate\n * dimension.\n *\n * However, this can affect the placement of intersection points for non-axis-\n * aligned polygons. Setting TRUE_PROJECT to true will instead project onto a\n * plane actually perpendicular to the polygon's normal.\n *\n * NOTE(bckenny): I can find no instances on the internet in which this mode has\n * been used, but it's difficult to search for. This was a compile-time setting\n * in the original, so setting this as constant. If this is exposed in the\n * public API, remove the ignore coverage directives on\n * libtess.normal.projectPolygon and libtess.normal.normalize_.\n * @const {boolean}\n */\nlibtess.TRUE_PROJECT = false;\n\n/**\n * We cache vertex data for single-contour polygons so that we can try a\n * quick-and-dirty decomposition first.\n * @const {number}\n */\nlibtess.TESS_MAX_CACHE = 100;\n\n/**\n * The default tolerance for merging features, 0, meaning vertices are only\n * merged if they are exactly coincident\n * If a higher tolerance is needed, significant rewriting will need to occur.\n * See libtess.sweep.TOLERANCE_NONZERO_ as a starting place.\n * @const {number}\n */\nlibtess.GLU_TESS_DEFAULT_TOLERANCE = 0;\n\n/**\n * The input contours parition the plane into regions. A winding\n * rule determines which of these regions are inside the polygon.\n *\n * For a single contour C, the winding number of a point x is simply\n * the signed number of revolutions we make around x as we travel\n * once around C (where CCW is positive). When there are several\n * contours, the individual winding numbers are summed. This\n * procedure associates a signed integer value with each point x in\n * the plane. Note that the winding number is the same for all\n * points in a single region.\n *\n * The winding rule classifies a region as \"inside\" if its winding\n * number belongs to the chosen category (odd, nonzero, positive,\n * negative, or absolute value of at least two). The current GLU\n * tesselator implements the \"odd\" rule. The \"nonzero\" rule is another\n * common way to define the interior. The other three rules are\n * useful for polygon CSG operations.\n * @enum {number}\n */\nlibtess.windingRule = {\n  // NOTE(bckenny): values from enumglu.spec\n  GLU_TESS_WINDING_ODD: 100130,\n  GLU_TESS_WINDING_NONZERO: 100131,\n  GLU_TESS_WINDING_POSITIVE: 100132,\n  GLU_TESS_WINDING_NEGATIVE: 100133,\n  GLU_TESS_WINDING_ABS_GEQ_TWO: 100134\n};\n\n/**\n * The type of primitive return from a \"begin\" callback. GL_LINE_LOOP is only\n * returned when GLU_TESS_BOUNDARY_ONLY is true. GL_TRIANGLE_STRIP and\n * GL_TRIANGLE_FAN are no longer returned since 1.1.0 (see release notes).\n * @enum {number}\n */\nlibtess.primitiveType = {\n  GL_LINE_LOOP: 2,\n  GL_TRIANGLES: 4,\n  GL_TRIANGLE_STRIP: 5,\n  GL_TRIANGLE_FAN: 6\n};\n\n/**\n * The types of errors provided in the error callback.\n * @enum {number}\n */\nlibtess.errorType = {\n  // TODO(bckenny) doc types\n  // NOTE(bckenny): values from enumglu.spec\n  GLU_TESS_MISSING_BEGIN_POLYGON: 100151,\n  GLU_TESS_MISSING_END_POLYGON: 100153,\n  GLU_TESS_MISSING_BEGIN_CONTOUR: 100152,\n  GLU_TESS_MISSING_END_CONTOUR: 100154,\n  GLU_TESS_COORD_TOO_LARGE: 100155,\n  GLU_TESS_NEED_COMBINE_CALLBACK: 100156\n};\n\n/**\n * Enum values necessary for providing settings and callbacks. See the readme\n * for details.\n * @enum {number}\n */\nlibtess.gluEnum = {\n  // TODO(bckenny): rename so not always typing libtess.gluEnum.*?\n\n  // NOTE(bckenny): values from enumglu.spec\n  GLU_TESS_BEGIN: 100100,\n  GLU_TESS_VERTEX: 100101,\n  GLU_TESS_END: 100102,\n  GLU_TESS_ERROR: 100103,\n  GLU_TESS_EDGE_FLAG: 100104,\n  GLU_TESS_COMBINE: 100105,\n  GLU_TESS_BEGIN_DATA: 100106,\n  GLU_TESS_VERTEX_DATA: 100107,\n  GLU_TESS_END_DATA: 100108,\n  GLU_TESS_ERROR_DATA: 100109,\n  GLU_TESS_EDGE_FLAG_DATA: 100110,\n  GLU_TESS_COMBINE_DATA: 100111,\n\n  GLU_TESS_MESH: 100112,  //  NOTE(bckenny): from tess.c\n  GLU_TESS_TOLERANCE: 100142,\n  GLU_TESS_WINDING_RULE: 100140,\n  GLU_TESS_BOUNDARY_ONLY: 100141,\n\n  // TODO(bckenny): move this to libtess.errorType?\n  GLU_INVALID_ENUM: 100900,\n  GLU_INVALID_VALUE: 100901\n};\n\n/** @typedef {number} */\n//libtess.PQHandle;\n\n// TODO(bckenny): better typing on key?\n/** @typedef {Object} */\n//libtess.PQKey;\n\n\n/* global libtess */\n\n/** @const */\nlibtess.geom = {};\n\n/**\n * Returns whether vertex u and vertex v are equal.\n * @param {libtess.GluVertex} u\n * @param {libtess.GluVertex} v\n * @return {boolean}\n */\nlibtess.geom.vertEq = function(u, v) {\n  return u.s === v.s && u.t === v.t;\n};\n\n/**\n * Returns whether vertex u is lexicographically less than or equal to vertex v.\n * @param {libtess.GluVertex} u\n * @param {libtess.GluVertex} v\n * @return {boolean}\n */\nlibtess.geom.vertLeq = function(u, v) {\n  return (u.s < v.s) || (u.s === v.s && u.t <= v.t);\n};\n\n/**\n * Given three vertices u,v,w such that geom.vertLeq(u,v) && geom.vertLeq(v,w),\n * evaluates the t-coord of the edge uw at the s-coord of the vertex v.\n * Returns v.t - (uw)(v.s), ie. the signed distance from uw to v.\n * If uw is vertical (and thus passes thru v), the result is zero.\n *\n * The calculation is extremely accurate and stable, even when v\n * is very close to u or w.  In particular if we set v.t = 0 and\n * let r be the negated result (this evaluates (uw)(v.s)), then\n * r is guaranteed to satisfy MIN(u.t,w.t) <= r <= MAX(u.t,w.t).\n * @param {libtess.GluVertex} u\n * @param {libtess.GluVertex} v\n * @param {libtess.GluVertex} w\n * @return {number}\n */\nlibtess.geom.edgeEval = function(u, v, w) {\n\n  var gapL = v.s - u.s;\n  var gapR = w.s - v.s;\n\n  if (gapL + gapR > 0) {\n    if (gapL < gapR) {\n      return (v.t - u.t) + (u.t - w.t) * (gapL / (gapL + gapR));\n    } else {\n      return (v.t - w.t) + (w.t - u.t) * (gapR / (gapL + gapR));\n    }\n  }\n\n  // vertical line\n  return 0;\n};\n\n/**\n * Returns a number whose sign matches geom.edgeEval(u,v,w) but which\n * is cheaper to evaluate.  Returns > 0, == 0 , or < 0\n * as v is above, on, or below the edge uw.\n * @param {libtess.GluVertex} u\n * @param {libtess.GluVertex} v\n * @param {libtess.GluVertex} w\n * @return {number}\n */\nlibtess.geom.edgeSign = function(u, v, w) {\n\n  var gapL = v.s - u.s;\n  var gapR = w.s - v.s;\n\n  if (gapL + gapR > 0) {\n    return (v.t - w.t) * gapL + (v.t - u.t) * gapR;\n  }\n\n  // vertical line\n  return 0;\n};\n\n/**\n * Version of VertLeq with s and t transposed.\n * Returns whether vertex u is lexicographically less than or equal to vertex v.\n * @param {libtess.GluVertex} u\n * @param {libtess.GluVertex} v\n * @return {boolean}\n */\nlibtess.geom.transLeq = function(u, v) {\n  return (u.t < v.t) || (u.t === v.t && u.s <= v.s);\n};\n\n/**\n * Version of geom.edgeEval with s and t transposed.\n * Given three vertices u,v,w such that geom.transLeq(u,v) &&\n * geom.transLeq(v,w), evaluates the t-coord of the edge uw at the s-coord of\n * the vertex v. Returns v.s - (uw)(v.t), ie. the signed distance from uw to v.\n * If uw is vertical (and thus passes thru v), the result is zero.\n *\n * The calculation is extremely accurate and stable, even when v\n * is very close to u or w.  In particular if we set v.s = 0 and\n * let r be the negated result (this evaluates (uw)(v.t)), then\n * r is guaranteed to satisfy MIN(u.s,w.s) <= r <= MAX(u.s,w.s).\n * @param {libtess.GluVertex} u\n * @param {libtess.GluVertex} v\n * @param {libtess.GluVertex} w\n * @return {number}\n */\nlibtess.geom.transEval = function(u, v, w) {\n\n  var gapL = v.t - u.t;\n  var gapR = w.t - v.t;\n\n  if (gapL + gapR > 0) {\n    if (gapL < gapR) {\n      return (v.s - u.s) + (u.s - w.s) * (gapL / (gapL + gapR));\n    } else {\n      return (v.s - w.s) + (w.s - u.s) * (gapR / (gapL + gapR));\n    }\n  }\n\n  // vertical line\n  return 0;\n};\n\n/**\n * Version of geom.edgeSign with s and t transposed.\n * Returns a number whose sign matches geom.transEval(u,v,w) but which\n * is cheaper to evaluate.  Returns > 0, == 0 , or < 0\n * as v is above, on, or below the edge uw.\n * @param {libtess.GluVertex} u\n * @param {libtess.GluVertex} v\n * @param {libtess.GluVertex} w\n * @return {number}\n */\nlibtess.geom.transSign = function(u, v, w) {\n\n  var gapL = v.t - u.t;\n  var gapR = w.t - v.t;\n\n  if (gapL + gapR > 0) {\n    return (v.s - w.s) * gapL + (v.s - u.s) * gapR;\n  }\n\n  // vertical line\n  return 0;\n};\n\n/**\n * Returns whether edge is directed from right to left.\n * @param {libtess.GluHalfEdge} e\n * @return {boolean}\n */\nlibtess.geom.edgeGoesLeft = function(e) {\n  return libtess.geom.vertLeq(e.dst(), e.org);\n};\n\n/**\n * Returns whether edge is directed from left to right.\n * @param {libtess.GluHalfEdge} e\n * @return {boolean}\n */\nlibtess.geom.edgeGoesRight = function(e) {\n  return libtess.geom.vertLeq(e.org, e.dst());\n};\n\n/**\n * Calculates the L1 distance between vertices u and v.\n * @param {libtess.GluVertex} u\n * @param {libtess.GluVertex} v\n * @return {number}\n */\nlibtess.geom.vertL1dist = function(u, v) {\n  return Math.abs(u.s - v.s) + Math.abs(u.t - v.t);\n};\n\n// NOTE(bckenny): vertCCW is called nowhere in libtess and isn't part of the\n// public API.\n/* istanbul ignore next */\n/**\n * For almost-degenerate situations, the results are not reliable.\n * Unless the floating-point arithmetic can be performed without\n * rounding errors, *any* implementation will give incorrect results\n * on some degenerate inputs, so the client must have some way to\n * handle this situation.\n * @param {!libtess.GluVertex} u\n * @param {!libtess.GluVertex} v\n * @param {!libtess.GluVertex} w\n * @return {boolean}\n */\nlibtess.geom.vertCCW = function(u, v, w) {\n  return (u.s * (v.t - w.t) + v.s * (w.t - u.t) + w.s * (u.t - v.t)) >= 0;\n};\n\n/**\n * Given parameters a,x,b,y returns the value (b*x+a*y)/(a+b),\n * or (x+y)/2 if a==b==0. It requires that a,b >= 0, and enforces\n * this in the rare case that one argument is slightly negative.\n * The implementation is extremely stable numerically.\n * In particular it guarantees that the result r satisfies\n * MIN(x,y) <= r <= MAX(x,y), and the results are very accurate\n * even when a and b differ greatly in magnitude.\n * @private\n * @param {number} a\n * @param {number} x\n * @param {number} b\n * @param {number} y\n * @return {number}\n */\nlibtess.geom.interpolate_ = function(a, x, b, y) {\n  // from Macro RealInterpolate:\n  //(a = (a < 0) ? 0 : a, b = (b < 0) ? 0 : b, ((a <= b) ? ((b == 0) ? ((x+y) / 2) : (x + (y-x) * (a/(a+b)))) : (y + (x-y) * (b/(a+b)))))\n  a = (a < 0) ? 0 : a;\n  b = (b < 0) ? 0 : b;\n\n  if (a <= b) {\n    if (b === 0) {\n      return (x + y) / 2;\n    } else {\n      return x + (y - x) * (a / (a + b));\n    }\n  } else {\n    return y + (x - y) * (b / (a + b));\n  }\n};\n\n/**\n * Given edges (o1,d1) and (o2,d2), compute their point of intersection.\n * The computed point is guaranteed to lie in the intersection of the\n * bounding rectangles defined by each edge.\n * @param {!libtess.GluVertex} o1\n * @param {!libtess.GluVertex} d1\n * @param {!libtess.GluVertex} o2\n * @param {!libtess.GluVertex} d2\n * @param {!libtess.GluVertex} v\n */\nlibtess.geom.edgeIntersect = function(o1, d1, o2, d2, v) {\n  // This is certainly not the most efficient way to find the intersection\n  // of two line segments, but it is very numerically stable.\n\n  // Strategy: find the two middle vertices in the VertLeq ordering,\n  // and interpolate the intersection s-value from these. Then repeat\n  // using the TransLeq ordering to find the intersection t-value.\n  var z1;\n  var z2;\n  var tmp;\n  if (!libtess.geom.vertLeq(o1, d1)) {\n    // Swap(o1, d1);\n    tmp = o1;\n    o1 = d1;\n    d1 = tmp;\n  }\n  if (!libtess.geom.vertLeq(o2, d2)) {\n    // Swap(o2, d2);\n    tmp = o2;\n    o2 = d2;\n    d2 = tmp;\n  }\n  if (!libtess.geom.vertLeq(o1, o2)) {\n    // Swap(o1, o2);\n    tmp = o1;\n    o1 = o2;\n    o2 = tmp;\n    // Swap(d1, d2);\n    tmp = d1;\n    d1 = d2;\n    d2 = tmp;\n  }\n\n  if (!libtess.geom.vertLeq(o2, d1)) {\n    // Technically, no intersection -- do our best\n    v.s = (o2.s + d1.s) / 2;\n\n  } else if (libtess.geom.vertLeq(d1, d2)) {\n    // Interpolate between o2 and d1\n    z1 = libtess.geom.edgeEval(o1, o2, d1);\n    z2 = libtess.geom.edgeEval(o2, d1, d2);\n    if (z1 + z2 < 0) { z1 = -z1; z2 = -z2; }\n    v.s = libtess.geom.interpolate_(z1, o2.s, z2, d1.s);\n\n  } else {\n    // Interpolate between o2 and d2\n    z1 = libtess.geom.edgeSign(o1, o2, d1);\n    z2 = -libtess.geom.edgeSign(o1, d2, d1);\n    if (z1 + z2 < 0) { z1 = -z1; z2 = -z2; }\n    v.s = libtess.geom.interpolate_(z1, o2.s, z2, d2.s);\n  }\n\n  // Now repeat the process for t\n  if (!libtess.geom.transLeq(o1, d1)) {\n    // Swap(o1, d1);\n    tmp = o1;\n    o1 = d1;\n    d1 = tmp;\n  }\n  if (!libtess.geom.transLeq(o2, d2)) {\n    // Swap(o2, d2);\n    tmp = o2;\n    o2 = d2;\n    d2 = tmp;\n  }\n  if (!libtess.geom.transLeq(o1, o2)) {\n    // Swap(o1, o2);\n    tmp = o1;\n    o1 = o2;\n    o2 = tmp;\n    // Swap(d1, d2);\n    tmp = d1;\n    d1 = d2;\n    d2 = tmp;\n  }\n\n  if (!libtess.geom.transLeq(o2, d1)) {\n    // Technically, no intersection -- do our best\n    v.t = (o2.t + d1.t) / 2;\n\n  } else if (libtess.geom.transLeq(d1, d2)) {\n    // Interpolate between o2 and d1\n    z1 = libtess.geom.transEval(o1, o2, d1);\n    z2 = libtess.geom.transEval(o2, d1, d2);\n    if (z1 + z2 < 0) { z1 = -z1; z2 = -z2; }\n    v.t = libtess.geom.interpolate_(z1, o2.t, z2, d1.t);\n\n  } else {\n    // Interpolate between o2 and d2\n    z1 = libtess.geom.transSign(o1, o2, d1);\n    z2 = -libtess.geom.transSign(o1, d2, d1);\n    if (z1 + z2 < 0) { z1 = -z1; z2 = -z2; }\n    v.t = libtess.geom.interpolate_(z1, o2.t, z2, d2.t);\n  }\n};\n\n\n\n/* global libtess */\n\n// TODO(bckenny): could maybe merge GluMesh and mesh.js since these are\n// operations on the mesh\n\n/** @const */\nlibtess.mesh = {};\n\n/****************** Basic Edge Operations **********************/\n\n\n/**\n * makeEdge creates one edge, two vertices, and a loop (face).\n * The loop consists of the two new half-edges.\n *\n * @param {libtess.GluMesh} mesh [description].\n * @return {libtess.GluHalfEdge} [description].\n */\nlibtess.mesh.makeEdge = function(mesh) {\n  // TODO(bckenny): probably move to GluMesh, but needs Make* methods with it\n\n  var e = libtess.mesh.makeEdgePair_(mesh.eHead);\n\n  // complete edge with vertices and face (see mesh.makeEdgePair_)\n  libtess.mesh.makeVertex_(e, mesh.vHead);\n  libtess.mesh.makeVertex_(e.sym, mesh.vHead);\n  libtess.mesh.makeFace_(e, mesh.fHead);\n\n  return e;\n};\n\n\n/**\n * meshSplice(eOrg, eDst) is the basic operation for changing the\n * mesh connectivity and topology. It changes the mesh so that\n *  eOrg.oNext <- OLD( eDst.oNext )\n *  eDst.oNext <- OLD( eOrg.oNext )\n * where OLD(...) means the value before the meshSplice operation.\n *\n * This can have two effects on the vertex structure:\n *  - if eOrg.org != eDst.org, the two vertices are merged together\n *  - if eOrg.org == eDst.org, the origin is split into two vertices\n * In both cases, eDst.org is changed and eOrg.org is untouched.\n *\n * Similarly (and independently) for the face structure,\n *  - if eOrg.lFace == eDst.lFace, one loop is split into two\n *  - if eOrg.lFace != eDst.lFace, two distinct loops are joined into one\n * In both cases, eDst.lFace is changed and eOrg.lFace is unaffected.\n *\n * Some special cases:\n * If eDst == eOrg, the operation has no effect.\n * If eDst == eOrg.lNext, the new face will have a single edge.\n * If eDst == eOrg.lPrev(), the old face will have a single edge.\n * If eDst == eOrg.oNext, the new vertex will have a single edge.\n * If eDst == eOrg.oPrev(), the old vertex will have a single edge.\n *\n * @param {libtess.GluHalfEdge} eOrg [description].\n * @param {libtess.GluHalfEdge} eDst [description].\n */\nlibtess.mesh.meshSplice = function(eOrg, eDst) {\n  // TODO: more descriptive name?\n\n  var joiningLoops = false;\n  var joiningVertices = false;\n\n  if (eOrg === eDst) {\n    return;\n  }\n\n  if (eDst.org !== eOrg.org) {\n    // We are merging two disjoint vertices -- destroy eDst.org\n    joiningVertices = true;\n    libtess.mesh.killVertex_(eDst.org, eOrg.org);\n  }\n\n  if (eDst.lFace !== eOrg.lFace) {\n    // We are connecting two disjoint loops -- destroy eDst.lFace\n    joiningLoops = true;\n    libtess.mesh.killFace_(eDst.lFace, eOrg.lFace);\n  }\n\n  // Change the edge structure\n  libtess.mesh.splice_(eDst, eOrg);\n\n  if (!joiningVertices) {\n    // We split one vertex into two -- the new vertex is eDst.org.\n    // Make sure the old vertex points to a valid half-edge.\n    libtess.mesh.makeVertex_(eDst, eOrg.org);\n    eOrg.org.anEdge = eOrg;\n  }\n\n  if (!joiningLoops) {\n    // We split one loop into two -- the new loop is eDst.lFace.\n    // Make sure the old face points to a valid half-edge.\n    libtess.mesh.makeFace_(eDst, eOrg.lFace);\n    eOrg.lFace.anEdge = eOrg;\n  }\n};\n\n\n/**\n * deleteEdge(eDel) removes the edge eDel. There are several cases:\n * if (eDel.lFace != eDel.rFace()), we join two loops into one; the loop\n * eDel.lFace is deleted. Otherwise, we are splitting one loop into two;\n * the newly created loop will contain eDel.dst(). If the deletion of eDel\n * would create isolated vertices, those are deleted as well.\n *\n * This function could be implemented as two calls to __gl_meshSplice\n * plus a few calls to memFree, but this would allocate and delete\n * unnecessary vertices and faces.\n *\n * @param {libtess.GluHalfEdge} eDel [description].\n */\nlibtess.mesh.deleteEdge = function(eDel) {\n  var eDelSym = eDel.sym;\n  var joiningLoops = false;\n\n  // First step: disconnect the origin vertex eDel.org.  We make all\n  // changes to get a consistent mesh in this \"intermediate\" state.\n  if (eDel.lFace !== eDel.rFace()) {\n    // We are joining two loops into one -- remove the left face\n    joiningLoops = true;\n    libtess.mesh.killFace_(eDel.lFace, eDel.rFace());\n  }\n\n  if (eDel.oNext === eDel) {\n    libtess.mesh.killVertex_(eDel.org, null);\n\n  } else {\n    // Make sure that eDel.org and eDel.rFace() point to valid half-edges\n    eDel.rFace().anEdge = eDel.oPrev();\n    eDel.org.anEdge = eDel.oNext;\n\n    libtess.mesh.splice_(eDel, eDel.oPrev());\n\n    if (!joiningLoops) {\n      // We are splitting one loop into two -- create a new loop for eDel.\n      libtess.mesh.makeFace_(eDel, eDel.lFace);\n    }\n  }\n\n  // Claim: the mesh is now in a consistent state, except that eDel.org\n  // may have been deleted.  Now we disconnect eDel.dst().\n  if (eDelSym.oNext === eDelSym) {\n    libtess.mesh.killVertex_(eDelSym.org, null);\n    libtess.mesh.killFace_(eDelSym.lFace, null);\n\n  } else {\n    // Make sure that eDel.dst() and eDel.lFace point to valid half-edges\n    eDel.lFace.anEdge = eDelSym.oPrev();\n    eDelSym.org.anEdge = eDelSym.oNext;\n    libtess.mesh.splice_(eDelSym, eDelSym.oPrev());\n  }\n\n  // Any isolated vertices or faces have already been freed.\n  libtess.mesh.killEdge_(eDel);\n};\n\n/******************** Other Edge Operations **********************/\n\n/* All these routines can be implemented with the basic edge\n * operations above.  They are provided for convenience and efficiency.\n */\n\n\n/**\n * addEdgeVertex(eOrg) creates a new edge eNew such that\n * eNew == eOrg.lNext, and eNew.dst() is a newly created vertex.\n * eOrg and eNew will have the same left face.\n *\n * @param {libtess.GluHalfEdge} eOrg [description].\n * @return {libtess.GluHalfEdge} [description].\n */\nlibtess.mesh.addEdgeVertex = function(eOrg) {\n  // TODO(bckenny): why is it named this?\n\n  var eNew = libtess.mesh.makeEdgePair_(eOrg);\n  var eNewSym = eNew.sym;\n\n  // Connect the new edge appropriately\n  libtess.mesh.splice_(eNew, eOrg.lNext);\n\n  // Set the vertex and face information\n  eNew.org = eOrg.dst();\n\n  libtess.mesh.makeVertex_(eNewSym, eNew.org);\n\n  eNew.lFace = eNewSym.lFace = eOrg.lFace;\n\n  return eNew;\n};\n\n\n/**\n * splitEdge(eOrg) splits eOrg into two edges eOrg and eNew,\n * such that eNew == eOrg.lNext. The new vertex is eOrg.dst() == eNew.org.\n * eOrg and eNew will have the same left face.\n *\n * @param {libtess.GluHalfEdge} eOrg [description].\n * @return {!libtess.GluHalfEdge} [description].\n */\nlibtess.mesh.splitEdge = function(eOrg) {\n  var tempHalfEdge = libtess.mesh.addEdgeVertex(eOrg);\n  var eNew = tempHalfEdge.sym;\n\n  // Disconnect eOrg from eOrg.dst() and connect it to eNew.org\n  libtess.mesh.splice_(eOrg.sym, eOrg.sym.oPrev());\n  libtess.mesh.splice_(eOrg.sym, eNew);\n\n  // Set the vertex and face information\n  eOrg.sym.org = eNew.org; // NOTE(bckenny): assignment to dst\n  eNew.dst().anEdge = eNew.sym;  // may have pointed to eOrg.sym\n  eNew.sym.lFace = eOrg.rFace(); // NOTE(bckenny): assignment to rFace\n  eNew.winding = eOrg.winding;  // copy old winding information\n  eNew.sym.winding = eOrg.sym.winding;\n\n  return eNew;\n};\n\n\n/**\n * connect(eOrg, eDst) creates a new edge from eOrg.dst()\n * to eDst.org, and returns the corresponding half-edge eNew.\n * If eOrg.lFace == eDst.lFace, this splits one loop into two,\n * and the newly created loop is eNew.lFace. Otherwise, two disjoint\n * loops are merged into one, and the loop eDst.lFace is destroyed.\n *\n * If (eOrg == eDst), the new face will have only two edges.\n * If (eOrg.lNext == eDst), the old face is reduced to a single edge.\n * If (eOrg.lNext.lNext == eDst), the old face is reduced to two edges.\n *\n * @param {libtess.GluHalfEdge} eOrg [description].\n * @param {libtess.GluHalfEdge} eDst [description].\n * @return {!libtess.GluHalfEdge} [description].\n */\nlibtess.mesh.connect = function(eOrg, eDst) {\n  var joiningLoops = false;\n  var eNew = libtess.mesh.makeEdgePair_(eOrg);\n  var eNewSym = eNew.sym;\n\n  if (eDst.lFace !== eOrg.lFace) {\n    // We are connecting two disjoint loops -- destroy eDst.lFace\n    joiningLoops = true;\n    libtess.mesh.killFace_(eDst.lFace, eOrg.lFace);\n  }\n\n  // Connect the new edge appropriately\n  libtess.mesh.splice_(eNew, eOrg.lNext);\n  libtess.mesh.splice_(eNewSym, eDst);\n\n  // Set the vertex and face information\n  eNew.org = eOrg.dst();\n  eNewSym.org = eDst.org;\n  eNew.lFace = eNewSym.lFace = eOrg.lFace;\n\n  // Make sure the old face points to a valid half-edge\n  eOrg.lFace.anEdge = eNewSym;\n\n  if (!joiningLoops) {\n    // We split one loop into two -- the new loop is eNew.lFace\n    libtess.mesh.makeFace_(eNew, eOrg.lFace);\n  }\n  return eNew;\n};\n\n/******************** Other Operations **********************/\n\n\n/**\n * zapFace(fZap) destroys a face and removes it from the\n * global face list. All edges of fZap will have a null pointer as their\n * left face. Any edges which also have a null pointer as their right face\n * are deleted entirely (along with any isolated vertices this produces).\n * An entire mesh can be deleted by zapping its faces, one at a time,\n * in any order. Zapped faces cannot be used in further mesh operations!\n *\n * @param {libtess.GluFace} fZap [description].\n */\nlibtess.mesh.zapFace = function(fZap) {\n  var eStart = fZap.anEdge;\n\n  // walk around face, deleting edges whose right face is also NULL\n  var eNext = eStart.lNext;\n  var e;\n  do {\n    e = eNext;\n    eNext = e.lNext;\n\n    e.lFace = null;\n    if (e.rFace() === null) {\n      // delete the edge -- see mesh.deleteEdge above\n      if (e.oNext === e) {\n        libtess.mesh.killVertex_(e.org, null);\n\n      } else {\n        // Make sure that e.org points to a valid half-edge\n        e.org.anEdge = e.oNext;\n        libtess.mesh.splice_(e, e.oPrev());\n      }\n\n      var eSym = e.sym;\n\n      if (eSym.oNext === eSym) {\n        libtess.mesh.killVertex_(eSym.org, null);\n\n      } else {\n        // Make sure that eSym.org points to a valid half-edge\n        eSym.org.anEdge = eSym.oNext;\n        libtess.mesh.splice_(eSym, eSym.oPrev());\n      }\n      libtess.mesh.killEdge_(e);\n    }\n  } while (e !== eStart);\n\n  // delete from circular doubly-linked list\n  var fPrev = fZap.prev;\n  var fNext = fZap.next;\n  fNext.prev = fPrev;\n  fPrev.next = fNext;\n\n  // TODO(bckenny): memFree( fZap );\n  // TODO(bckenny): probably null at callsite\n};\n\n// TODO(bckenny): meshUnion isn't called within libtess and isn't part of the\n// public API. Could be useful if more mesh manipulation functions are exposed.\n/* istanbul ignore next */\n/**\n * meshUnion() forms the union of all structures in\n * both meshes, and returns the new mesh (the old meshes are destroyed).\n *\n * @param {!libtess.GluMesh} mesh1\n * @param {!libtess.GluMesh} mesh2\n * @return {!libtess.GluMesh}\n */\nlibtess.mesh.meshUnion = function(mesh1, mesh2) {\n  // TODO(bceknny): probably move to GluMesh method\n  var f1 = mesh1.fHead;\n  var v1 = mesh1.vHead;\n  var e1 = mesh1.eHead;\n\n  var f2 = mesh2.fHead;\n  var v2 = mesh2.vHead;\n  var e2 = mesh2.eHead;\n\n  // Add the faces, vertices, and edges of mesh2 to those of mesh1\n  if (f2.next !== f2) {\n    f1.prev.next = f2.next;\n    f2.next.prev = f1.prev;\n    f2.prev.next = f1;\n    f1.prev = f2.prev;\n  }\n\n  if (v2.next !== v2) {\n    v1.prev.next = v2.next;\n    v2.next.prev = v1.prev;\n    v2.prev.next = v1;\n    v1.prev = v2.prev;\n  }\n\n  if (e2.next !== e2) {\n    e1.sym.next.sym.next = e2.next;\n    e2.next.sym.next = e1.sym.next;\n    e2.sym.next.sym.next = e1;\n    e1.sym.next = e2.sym.next;\n  }\n\n  // TODO(bckenny): memFree(mesh2);\n  // TODO(bckenny): If function is kept, remove mesh2's data to enforce.\n  return mesh1;\n};\n\n\n/**\n * deleteMesh(mesh) will free all storage for any valid mesh.\n * @param {libtess.GluMesh} mesh [description].\n */\nlibtess.mesh.deleteMesh = function(mesh) {\n  // TODO(bckenny): unnecessary, I think.\n  // TODO(bckenny): might want to explicitly null at callsite\n  // lots of memFrees. see also DELETE_BY_ZAPPING\n};\n\n/************************ Utility Routines ************************/\n\n\n/**\n * Creates a new pair of half-edges which form their own loop.\n * No vertex or face structures are allocated, but these must be assigned\n * before the current edge operation is completed.\n *\n * TODO(bckenny): warning about eNext strictly being first of pair? (see code)\n *\n * @private\n * @param {libtess.GluHalfEdge} eNext [description].\n * @return {libtess.GluHalfEdge} [description].\n */\nlibtess.mesh.makeEdgePair_ = function(eNext) {\n  var e = new libtess.GluHalfEdge();\n  var eSym = new libtess.GluHalfEdge();\n\n  // TODO(bckenny): how do we ensure this? see above comment in jsdoc\n  // Make sure eNext points to the first edge of the edge pair\n  // if (eNext->Sym < eNext ) { eNext = eNext->Sym; }\n\n  // NOTE(bckenny): check this for bugs in current implementation!\n\n  // Insert in circular doubly-linked list before eNext.\n  // Note that the prev pointer is stored in sym.next.\n  var ePrev = eNext.sym.next;\n  eSym.next = ePrev;\n  ePrev.sym.next = e;\n  e.next = eNext;\n  eNext.sym.next = eSym;\n\n  e.sym = eSym;\n  e.oNext = e;\n  e.lNext = eSym;\n\n  eSym.sym = e;\n  eSym.oNext = eSym;\n  eSym.lNext = e;\n\n  return e;\n};\n\n\n/**\n * splice_ is best described by the Guibas/Stolfi paper or the\n * CS348a notes. Basically, it modifies the mesh so that\n * a.oNext and b.oNext are exchanged. This can have various effects\n * depending on whether a and b belong to different face or vertex rings.\n * For more explanation see mesh.meshSplice below.\n *\n * @private\n * @param {libtess.GluHalfEdge} a [description].\n * @param {libtess.GluHalfEdge} b [description].\n */\nlibtess.mesh.splice_ = function(a, b) {\n  var aONext = a.oNext;\n  var bONext = b.oNext;\n\n  aONext.sym.lNext = b;\n  bONext.sym.lNext = a;\n  a.oNext = bONext;\n  b.oNext = aONext;\n};\n\n\n/**\n * makeVertex_(eOrig, vNext) attaches a new vertex and makes it the\n * origin of all edges in the vertex loop to which eOrig belongs. \"vNext\" gives\n * a place to insert the new vertex in the global vertex list.  We insert\n * the new vertex *before* vNext so that algorithms which walk the vertex\n * list will not see the newly created vertices.\n *\n * NOTE: unlike original, acutally allocates new vertex.\n *\n * @private\n * @param {libtess.GluHalfEdge} eOrig [description].\n * @param {libtess.GluVertex} vNext [description].\n */\nlibtess.mesh.makeVertex_ = function(eOrig, vNext) {\n  // insert in circular doubly-linked list before vNext\n  var vPrev = vNext.prev;\n  var vNew = new libtess.GluVertex(vNext, vPrev);\n  vPrev.next = vNew;\n  vNext.prev = vNew;\n\n  vNew.anEdge = eOrig;\n  // leave coords, s, t undefined\n  // TODO(bckenny): does above line mean 0 specifically, or does it matter?\n\n  // fix other edges on this vertex loop\n  var e = eOrig;\n  do {\n    e.org = vNew;\n    e = e.oNext;\n  } while (e !== eOrig);\n};\n\n\n/**\n * makeFace_(eOrig, fNext) attaches a new face and makes it the left\n * face of all edges in the face loop to which eOrig belongs. \"fNext\" gives\n * a place to insert the new face in the global face list.  We insert\n * the new face *before* fNext so that algorithms which walk the face\n * list will not see the newly created faces.\n *\n * NOTE: unlike original, acutally allocates new face.\n *\n * @private\n * @param {libtess.GluHalfEdge} eOrig [description].\n * @param {libtess.GluFace} fNext [description].\n */\nlibtess.mesh.makeFace_ = function(eOrig, fNext) {\n  // insert in circular doubly-linked list before fNext\n  var fPrev = fNext.prev;\n  var fNew = new libtess.GluFace(fNext, fPrev);\n  fPrev.next = fNew;\n  fNext.prev = fNew;\n\n  fNew.anEdge = eOrig;\n\n  // The new face is marked \"inside\" if the old one was.  This is a\n  // convenience for the common case where a face has been split in two.\n  fNew.inside = fNext.inside;\n\n  // fix other edges on this face loop\n  var e = eOrig;\n  do {\n    e.lFace = fNew;\n    e = e.lNext;\n  } while (e !== eOrig);\n};\n\n\n/**\n * killEdge_ destroys an edge (the half-edges eDel and eDel.sym),\n * and removes from the global edge list.\n *\n * @private\n * @param {libtess.GluHalfEdge} eDel [description].\n */\nlibtess.mesh.killEdge_ = function(eDel) {\n  // TODO(bckenny): in this case, no need to worry(?), but check when checking mesh.makeEdgePair_\n  // Half-edges are allocated in pairs, see EdgePair above\n  // if (eDel->Sym < eDel ) { eDel = eDel->Sym; }\n\n  // delete from circular doubly-linked list\n  var eNext = eDel.next;\n  var ePrev = eDel.sym.next;\n  eNext.sym.next = ePrev;\n  ePrev.sym.next = eNext;\n\n  // TODO(bckenny): memFree( eDel ); (which also frees eDel.sym)\n  // TODO(bckenny): need to null at callsites?\n};\n\n\n/**\n * killVertex_ destroys a vertex and removes it from the global\n * vertex list. It updates the vertex loop to point to a given new vertex.\n *\n * @private\n * @param {libtess.GluVertex} vDel [description].\n * @param {libtess.GluVertex} newOrg [description].\n */\nlibtess.mesh.killVertex_ = function(vDel, newOrg) {\n  var eStart = vDel.anEdge;\n\n  // change the origin of all affected edges\n  var e = eStart;\n  do {\n    e.org = newOrg;\n    e = e.oNext;\n  } while (e !== eStart);\n\n  // delete from circular doubly-linked list\n  var vPrev = vDel.prev;\n  var vNext = vDel.next;\n  vNext.prev = vPrev;\n  vPrev.next = vNext;\n\n  // TODO(bckenny): memFree( vDel );\n  // TODO(bckenny): need to null at callsites?\n};\n\n\n/**\n * killFace_ destroys a face and removes it from the global face\n * list. It updates the face loop to point to a given new face.\n *\n * @private\n * @param {libtess.GluFace} fDel [description].\n * @param {libtess.GluFace} newLFace [description].\n */\nlibtess.mesh.killFace_ = function(fDel, newLFace) {\n  var eStart = fDel.anEdge;\n\n  // change the left face of all affected edges\n  var e = eStart;\n  do {\n    e.lFace = newLFace;\n    e = e.lNext;\n  } while (e !== eStart);\n\n  // delete from circular doubly-linked list\n  var fPrev = fDel.prev;\n  var fNext = fDel.next;\n  fNext.prev = fPrev;\n  fPrev.next = fNext;\n\n  // TODO(bckenny): memFree( fDel );\n  // TODO(bckenny): need to null at callsites?\n};\n\n\n/* global libtess */\n\n/** @const */\nlibtess.normal = {};\n\n// TODO(bckenny): Integrate SLANTED_SWEEP somehow?\n/* The \"feature merging\" is not intended to be complete. There are\n * special cases where edges are nearly parallel to the sweep line\n * which are not implemented. The algorithm should still behave\n * robustly (ie. produce a reasonable tesselation) in the presence\n * of such edges, however it may miss features which could have been\n * merged. We could minimize this effect by choosing the sweep line\n * direction to be something unusual (ie. not parallel to one of the\n * coordinate axes).\n * #if defined(SLANTED_SWEEP)\n * #define S_UNIT_X  0.50941539564955385 // Pre-normalized\n * #define S_UNIT_Y  0.86052074622010633\n * #endif\n */\n\n/**\n * X coordinate of local basis for polygon projection.\n * @private\n * @const\n */\nlibtess.normal.S_UNIT_X_ = 1.0;\n\n/**\n * Y coordinate of local basis for polygon projection.\n * @private\n * @const\n */\nlibtess.normal.S_UNIT_Y_ = 0.0;\n\n/**\n * Determines a polygon normal and projects vertices onto the plane of the\n * polygon.\n * @param {!libtess.GluTesselator} tess\n */\nlibtess.normal.projectPolygon = function(tess) {\n  var computedNormal = false;\n\n  var norm = [\n    tess.normal[0],\n    tess.normal[1],\n    tess.normal[2]\n  ];\n  if (norm[0] === 0 && norm[1] === 0 && norm[2] === 0) {\n    libtess.normal.computeNormal_(tess, norm);\n    computedNormal = true;\n  }\n\n  var sUnit = tess.sUnit;\n  var tUnit = tess.tUnit;\n  var i = libtess.normal.longAxis_(norm);\n\n  // NOTE(bckenny): This branch is never taken. See comment on\n  // libtess.TRUE_PROJECT.\n  /* istanbul ignore if */\n  if (libtess.TRUE_PROJECT) {\n    // Choose the initial sUnit vector to be approximately perpendicular\n    // to the normal.\n    libtess.normal.normalize_(norm);\n\n    sUnit[i] = 0;\n    sUnit[(i + 1) % 3] = libtess.normal.S_UNIT_X_;\n    sUnit[(i + 2) % 3] = libtess.normal.S_UNIT_Y_;\n\n    // Now make it exactly perpendicular\n    var w = libtess.normal.dot_(sUnit, norm);\n    sUnit[0] -= w * norm[0];\n    sUnit[1] -= w * norm[1];\n    sUnit[2] -= w * norm[2];\n    libtess.normal.normalize_(sUnit);\n\n    // Choose tUnit so that (sUnit,tUnit,norm) form a right-handed frame\n    tUnit[0] = norm[1] * sUnit[2] - norm[2] * sUnit[1];\n    tUnit[1] = norm[2] * sUnit[0] - norm[0] * sUnit[2];\n    tUnit[2] = norm[0] * sUnit[1] - norm[1] * sUnit[0];\n    libtess.normal.normalize_(tUnit);\n\n  } else {\n    // Project perpendicular to a coordinate axis -- better numerically\n    sUnit[i] = 0;\n    sUnit[(i + 1) % 3] = libtess.normal.S_UNIT_X_;\n    sUnit[(i + 2) % 3] = libtess.normal.S_UNIT_Y_;\n\n    tUnit[i] = 0;\n    tUnit[(i + 1) % 3] = (norm[i] > 0) ?\n        -libtess.normal.S_UNIT_Y_ : libtess.normal.S_UNIT_Y_;\n    tUnit[(i + 2) % 3] = (norm[i] > 0) ?\n        libtess.normal.S_UNIT_X_ : -libtess.normal.S_UNIT_X_;\n  }\n\n  // Project the vertices onto the sweep plane\n  var vHead = tess.mesh.vHead;\n  for (var v = vHead.next; v !== vHead; v = v.next) {\n    v.s = libtess.normal.dot_(v.coords, sUnit);\n    v.t = libtess.normal.dot_(v.coords, tUnit);\n  }\n\n  if (computedNormal) {\n    libtess.normal.checkOrientation_(tess);\n  }\n};\n\n/**\n * Computes the dot product of vectors u and v.\n * @private\n * @param {!Array.<number>} u\n * @param {!Array.<number>} v\n * @return {number}\n */\nlibtess.normal.dot_ = function(u, v) {\n  return u[0] * v[0] + u[1] * v[1] + u[2] * v[2];\n};\n\n// NOTE(bckenny): only called from within libtess.normal.projectPolygon's\n// TRUE_PROJECT branch, so ignoring for code coverage.\n/* istanbul ignore next */\n/**\n * Normalize vector v.\n * @private\n * @param {!Array.<number>} v\n */\nlibtess.normal.normalize_ = function(v) {\n  var len = v[0] * v[0] + v[1] * v[1] + v[2] * v[2];\n\n  len = Math.sqrt(len);\n  v[0] /= len;\n  v[1] /= len;\n  v[2] /= len;\n};\n\n/**\n * Returns the index of the longest component of vector v.\n * @private\n * @param {!Array.<number>} v\n * @return {number}\n */\nlibtess.normal.longAxis_ = function(v) {\n  var i = 0;\n\n  if (Math.abs(v[1]) > Math.abs(v[0])) {\n    i = 1;\n  }\n  if (Math.abs(v[2]) > Math.abs(v[i])) {\n    i = 2;\n  }\n\n  return i;\n};\n\n/**\n * Compute an approximate normal of the polygon from the vertices themselves.\n * Result returned in norm.\n * @private\n * @param {!libtess.GluTesselator} tess\n * @param {!Array.<number>} norm\n */\nlibtess.normal.computeNormal_ = function(tess, norm) {\n  var maxVal = [\n    -2 * libtess.GLU_TESS_MAX_COORD,\n    -2 * libtess.GLU_TESS_MAX_COORD,\n    -2 * libtess.GLU_TESS_MAX_COORD\n  ];\n  var minVal = [\n    2 * libtess.GLU_TESS_MAX_COORD,\n    2 * libtess.GLU_TESS_MAX_COORD,\n    2 * libtess.GLU_TESS_MAX_COORD\n  ];\n  var maxVert = [];\n  var minVert = [];\n\n  var v;\n  var vHead = tess.mesh.vHead;\n  for (v = vHead.next; v !== vHead; v = v.next) {\n    for (var i = 0; i < 3; ++i) {\n      var c = v.coords[i];\n      if (c < minVal[i]) { minVal[i] = c; minVert[i] = v; }\n      if (c > maxVal[i]) { maxVal[i] = c; maxVert[i] = v; }\n    }\n  }\n\n  // Find two vertices separated by at least 1/sqrt(3) of the maximum\n  // distance between any two vertices\n  var index = 0;\n  if (maxVal[1] - minVal[1] > maxVal[0] - minVal[0]) { index = 1; }\n  if (maxVal[2] - minVal[2] > maxVal[index] - minVal[index]) { index = 2; }\n  if (minVal[index] >= maxVal[index]) {\n    // All vertices are the same -- normal doesn't matter\n    norm[0] = 0; norm[1] = 0; norm[2] = 1;\n    return;\n  }\n\n  // Look for a third vertex which forms the triangle with maximum area\n  // (Length of normal == twice the triangle area)\n  var maxLen2 = 0;\n  var v1 = minVert[index];\n  var v2 = maxVert[index];\n  var tNorm = [0, 0, 0];\n  var d1 = [\n    v1.coords[0] - v2.coords[0],\n    v1.coords[1] - v2.coords[1],\n    v1.coords[2] - v2.coords[2]\n  ];\n  var d2 = [0, 0, 0];\n  for (v = vHead.next; v !== vHead; v = v.next) {\n    d2[0] = v.coords[0] - v2.coords[0];\n    d2[1] = v.coords[1] - v2.coords[1];\n    d2[2] = v.coords[2] - v2.coords[2];\n    tNorm[0] = d1[1] * d2[2] - d1[2] * d2[1];\n    tNorm[1] = d1[2] * d2[0] - d1[0] * d2[2];\n    tNorm[2] = d1[0] * d2[1] - d1[1] * d2[0];\n    var tLen2 = tNorm[0] * tNorm[0] + tNorm[1] * tNorm[1] + tNorm[2] * tNorm[2];\n    if (tLen2 > maxLen2) {\n      maxLen2 = tLen2;\n      norm[0] = tNorm[0];\n      norm[1] = tNorm[1];\n      norm[2] = tNorm[2];\n    }\n  }\n\n  if (maxLen2 <= 0) {\n    // All points lie on a single line -- any decent normal will do\n    norm[0] = norm[1] = norm[2] = 0;\n    norm[libtess.normal.longAxis_(d1)] = 1;\n  }\n};\n\n/**\n * Check that the sum of the signed area of all projected contours is\n * non-negative. If not, negate the t-coordinates to reverse the orientation and\n * make it so.\n * @private\n * @param {!libtess.GluTesselator} tess\n */\nlibtess.normal.checkOrientation_ = function(tess) {\n  var area = 0;\n  var fHead = tess.mesh.fHead;\n  for (var f = fHead.next; f !== fHead; f = f.next) {\n    var e = f.anEdge;\n    if (e.winding <= 0) { continue; }\n    do {\n      area += (e.org.s - e.dst().s) * (e.org.t + e.dst().t);\n      e = e.lNext;\n    } while (e !== f.anEdge);\n  }\n\n  if (area < 0) {\n    // Reverse the orientation by flipping all the t-coordinates\n    var vHead = tess.mesh.vHead;\n    for (var v = vHead.next; v !== vHead; v = v.next) {\n      v.t = -v.t;\n    }\n    tess.tUnit[0] = -tess.tUnit[0];\n    tess.tUnit[1] = -tess.tUnit[1];\n    tess.tUnit[2] = -tess.tUnit[2];\n  }\n};\n\n\n/* global libtess */\n\n/** @const */\nlibtess.render = {};\n\n/**\n * Takes a mesh, breaks it into separate triangles, and renders them. The\n * rendering output is provided as callbacks (see the API). Set flagEdges to\n * true to get edgeFlag callbacks (tess.flagBoundary in original libtess).\n * @param {!libtess.GluTesselator} tess\n * @param {!libtess.GluMesh} mesh\n * @param {boolean} flagEdges\n */\nlibtess.render.renderMesh = function(tess, mesh, flagEdges) {\n  var beginOrBeginDataCalled = false;\n\n  // TODO(bckenny): edgeState needs to be boolean, but !== on first call\n  // force edge state output for first vertex\n  var edgeState = -1;\n\n  // We examine all faces in an arbitrary order. Whenever we find\n  // an inside triangle f, we render f.\n  // NOTE(bckenny): go backwards through face list to match original libtess\n  // triangle order\n  for (var f = mesh.fHead.prev; f !== mesh.fHead; f = f.prev) {\n    if (f.inside) {\n      // We're going to emit a triangle, so call begin callback once\n      if (!beginOrBeginDataCalled) {\n        tess.callBeginOrBeginData(libtess.primitiveType.GL_TRIANGLES);\n        beginOrBeginDataCalled = true;\n      }\n\n      // check that face has only three edges\n      var e = f.anEdge;\n      // Loop once for each edge (there will always be 3 edges)\n      do {\n        if (flagEdges) {\n          // Set the \"edge state\" to true just before we output the\n          // first vertex of each edge on the polygon boundary.\n          var newState = !e.rFace().inside ? 1 : 0; // TODO(bckenny): total hack to get edgeState working. fix me.\n          if (edgeState !== newState) {\n            edgeState = newState;\n            // TODO(bckenny): edgeState should be boolean now\n            tess.callEdgeFlagOrEdgeFlagData(!!edgeState);\n          }\n        }\n\n        // emit vertex\n        tess.callVertexOrVertexData(e.org.data);\n\n        e = e.lNext;\n      } while (e !== f.anEdge);\n    }\n  }\n\n  // only call end callback if begin was called\n  if (beginOrBeginDataCalled) {\n    tess.callEndOrEndData();\n  }\n};\n\n/**\n * Takes a mesh, and outputs one contour for each face marked \"inside\". The\n * rendering output is provided as callbacks (see the API).\n * @param {!libtess.GluTesselator} tess\n * @param {!libtess.GluMesh} mesh\n */\nlibtess.render.renderBoundary = function(tess, mesh) {\n  for (var f = mesh.fHead.next; f !== mesh.fHead; f = f.next) {\n    if (f.inside) {\n      tess.callBeginOrBeginData(libtess.primitiveType.GL_LINE_LOOP);\n\n      var e = f.anEdge;\n      do {\n        tess.callVertexOrVertexData(e.org.data);\n        e = e.lNext;\n      } while (e !== f.anEdge);\n\n      tess.callEndOrEndData();\n    }\n  }\n};\n\n\n/* global libtess */\n\n// TODO(bckenny): a number of these never return null (as opposed to original) and should be typed appropriately\n\n/*\n * Invariants for the Edge Dictionary.\n * - each pair of adjacent edges e2=succ(e1) satisfies edgeLeq_(e1,e2)\n *   at any valid location of the sweep event\n * - if edgeLeq_(e2,e1) as well (at any valid sweep event), then e1 and e2\n *   share a common endpoint\n * - for each e, e.dst() has been processed, but not e.org\n * - each edge e satisfies vertLeq(e.dst(),event) && vertLeq(event,e.org)\n *   where \"event\" is the current sweep line event.\n * - no edge e has zero length\n *\n * Invariants for the Mesh (the processed portion).\n * - the portion of the mesh left of the sweep line is a planar graph,\n *   ie. there is *some* way to embed it in the plane\n * - no processed edge has zero length\n * - no two processed vertices have identical coordinates\n * - each \"inside\" region is monotone, ie. can be broken into two chains\n *   of monotonically increasing vertices according to VertLeq(v1,v2)\n *   - a non-invariant: these chains may intersect (very slightly)\n *\n * Invariants for the Sweep.\n * - if none of the edges incident to the event vertex have an activeRegion\n *   (ie. none of these edges are in the edge dictionary), then the vertex\n *   has only right-going edges.\n * - if an edge is marked \"fixUpperEdge\" (it is a temporary edge introduced\n *   by ConnectRightVertex), then it is the only right-going edge from\n *   its associated vertex.  (This says that these edges exist only\n *   when it is necessary.)\n */\n\n/** @const */\nlibtess.sweep = {};\n\n\n/**\n * Make the sentinel coordinates big enough that they will never be\n * merged with real input features.  (Even with the largest possible\n * input contour and the maximum tolerance of 1.0, no merging will be\n * done with coordinates larger than 3 * libtess.GLU_TESS_MAX_COORD).\n * @private\n * @const\n * @type {number}\n */\nlibtess.sweep.SENTINEL_COORD_ = 4 * libtess.GLU_TESS_MAX_COORD;\n\n\n/**\n * Because vertices at exactly the same location are merged together\n * before we process the sweep event, some degenerate cases can't occur.\n * However if someone eventually makes the modifications required to\n * merge features which are close together, the cases below marked\n * TOLERANCE_NONZERO will be useful.  They were debugged before the\n * code to merge identical vertices in the main loop was added.\n * @private\n * @const\n * @type {boolean}\n */\nlibtess.sweep.TOLERANCE_NONZERO_ = false;\n\n\n/**\n * computeInterior(tess) computes the planar arrangement specified\n * by the given contours, and further subdivides this arrangement\n * into regions. Each region is marked \"inside\" if it belongs\n * to the polygon, according to the rule given by tess.windingRule.\n * Each interior region is guaranteed be monotone.\n *\n * @param {libtess.GluTesselator} tess [description].\n */\nlibtess.sweep.computeInterior = function(tess) {\n  tess.fatalError = false;\n\n  // Each vertex defines an event for our sweep line. Start by inserting\n  // all the vertices in a priority queue. Events are processed in\n  // lexicographic order, ie.\n  // e1 < e2  iff  e1.x < e2.x || (e1.x == e2.x && e1.y < e2.y)\n  libtess.sweep.removeDegenerateEdges_(tess);\n  libtess.sweep.initPriorityQ_(tess);\n  libtess.sweep.initEdgeDict_(tess);\n\n  // TODO(bckenny): don't need the cast if pq's key is better typed\n  var v;\n  while ((v = /** @type {libtess.GluVertex} */(tess.pq.extractMin())) !== null) {\n    for (;;) {\n      var vNext = /** @type {libtess.GluVertex} */(tess.pq.minimum());\n      if (vNext === null || !libtess.geom.vertEq(vNext, v)) {\n        break;\n      }\n\n      /* Merge together all vertices at exactly the same location.\n       * This is more efficient than processing them one at a time,\n       * simplifies the code (see connectLeftDegenerate), and is also\n       * important for correct handling of certain degenerate cases.\n       * For example, suppose there are two identical edges A and B\n       * that belong to different contours (so without this code they would\n       * be processed by separate sweep events).  Suppose another edge C\n       * crosses A and B from above.  When A is processed, we split it\n       * at its intersection point with C.  However this also splits C,\n       * so when we insert B we may compute a slightly different\n       * intersection point.  This might leave two edges with a small\n       * gap between them.  This kind of error is especially obvious\n       * when using boundary extraction (GLU_TESS_BOUNDARY_ONLY).\n       */\n      vNext = /** @type {libtess.GluVertex} */(tess.pq.extractMin());\n      libtess.sweep.spliceMergeVertices_(tess, v.anEdge, vNext.anEdge);\n    }\n    libtess.sweep.sweepEvent_(tess, v);\n  }\n\n  // TODO(bckenny): what does the next comment mean? can we eliminate event except when debugging?\n  // Set tess.event for debugging purposes\n  var minRegion = tess.dict.getMin().getKey();\n  tess.event = minRegion.eUp.org;\n  libtess.sweep.doneEdgeDict_(tess);\n  libtess.sweep.donePriorityQ_(tess);\n\n  libtess.sweep.removeDegenerateFaces_(tess.mesh);\n  tess.mesh.checkMesh();\n};\n\n\n/**\n * When we merge two edges into one, we need to compute the combined\n * winding of the new edge.\n * @private\n * @param {libtess.GluHalfEdge} eDst [description].\n * @param {libtess.GluHalfEdge} eSrc [description].\n */\nlibtess.sweep.addWinding_ = function(eDst, eSrc) {\n  // NOTE(bckenny): from AddWinding macro\n  eDst.winding += eSrc.winding;\n  eDst.sym.winding += eSrc.sym.winding;\n};\n\n\n/**\n * Both edges must be directed from right to left (this is the canonical\n * direction for the upper edge of each region).\n *\n * The strategy is to evaluate a \"t\" value for each edge at the\n * current sweep line position, given by tess.event.  The calculations\n * are designed to be very stable, but of course they are not perfect.\n *\n * Special case: if both edge destinations are at the sweep event,\n * we sort the edges by slope (they would otherwise compare equally).\n *\n * @private\n * @param {!libtess.GluTesselator} tess\n * @param {!libtess.ActiveRegion} reg1\n * @param {!libtess.ActiveRegion} reg2\n * @return {boolean}\n */\nlibtess.sweep.edgeLeq_ = function(tess, reg1, reg2) {\n  var event = tess.event;\n  var e1 = reg1.eUp;\n  var e2 = reg2.eUp;\n\n  if (e1.dst() === event) {\n    if (e2.dst() === event) {\n      // Two edges right of the sweep line which meet at the sweep event.\n      // Sort them by slope.\n      if (libtess.geom.vertLeq(e1.org, e2.org)) {\n        return libtess.geom.edgeSign(e2.dst(), e1.org, e2.org) <= 0;\n      }\n\n      return libtess.geom.edgeSign(e1.dst(), e2.org, e1.org) >= 0;\n    }\n\n    return libtess.geom.edgeSign(e2.dst(), event, e2.org) <= 0;\n  }\n\n  if (e2.dst() === event) {\n    return libtess.geom.edgeSign(e1.dst(), event, e1.org) >= 0;\n  }\n\n  // General case - compute signed distance *from* e1, e2 to event\n  var t1 = libtess.geom.edgeEval(e1.dst(), event, e1.org);\n  var t2 = libtess.geom.edgeEval(e2.dst(), event, e2.org);\n  return (t1 >= t2);\n};\n\n\n/**\n * [deleteRegion_ description]\n * @private\n * @param {libtess.GluTesselator} tess [description].\n * @param {libtess.ActiveRegion} reg [description].\n */\nlibtess.sweep.deleteRegion_ = function(tess, reg) {\n  if (reg.fixUpperEdge) {\n    // It was created with zero winding number, so it better be\n    // deleted with zero winding number (ie. it better not get merged\n    // with a real edge).\n  }\n\n  reg.eUp.activeRegion = null;\n\n  tess.dict.deleteNode(reg.nodeUp);\n  reg.nodeUp = null;\n\n  // memFree( reg ); TODO(bckenny)\n  // TODO(bckenny): may need to null at callsite\n};\n\n\n/**\n * Replace an upper edge which needs fixing (see connectRightVertex).\n * @private\n * @param {libtess.ActiveRegion} reg [description].\n * @param {libtess.GluHalfEdge} newEdge [description].\n */\nlibtess.sweep.fixUpperEdge_ = function(reg, newEdge) {\n  libtess.mesh.deleteEdge(reg.eUp);\n\n  reg.fixUpperEdge = false;\n  reg.eUp = newEdge;\n  newEdge.activeRegion = reg;\n};\n\n\n/**\n * Find the region above the uppermost edge with the same origin.\n * @private\n * @param {libtess.ActiveRegion} reg [description].\n * @return {libtess.ActiveRegion} [description].\n */\nlibtess.sweep.topLeftRegion_ = function(reg) {\n  var org = reg.eUp.org;\n\n  // Find the region above the uppermost edge with the same origin\n  do {\n    reg = reg.regionAbove();\n  } while (reg.eUp.org === org);\n\n  // If the edge above was a temporary edge introduced by connectRightVertex,\n  // now is the time to fix it.\n  if (reg.fixUpperEdge) {\n    var e = libtess.mesh.connect(reg.regionBelow().eUp.sym, reg.eUp.lNext);\n    libtess.sweep.fixUpperEdge_(reg, e);\n    reg = reg.regionAbove();\n  }\n\n  return reg;\n};\n\n\n/**\n * Find the region above the uppermost edge with the same destination.\n * @private\n * @param {libtess.ActiveRegion} reg [description].\n * @return {libtess.ActiveRegion} [description].\n */\nlibtess.sweep.topRightRegion_ = function(reg) {\n  var dst = reg.eUp.dst();\n\n  do {\n    reg = reg.regionAbove();\n  } while (reg.eUp.dst() === dst);\n\n  return reg;\n};\n\n\n/**\n * Add a new active region to the sweep line, *somewhere* below \"regAbove\"\n * (according to where the new edge belongs in the sweep-line dictionary).\n * The upper edge of the new region will be \"eNewUp\".\n * Winding number and \"inside\" flag are not updated.\n *\n * @private\n * @param {libtess.GluTesselator} tess [description].\n * @param {libtess.ActiveRegion} regAbove [description].\n * @param {libtess.GluHalfEdge} eNewUp [description].\n * @return {libtess.ActiveRegion} regNew.\n */\nlibtess.sweep.addRegionBelow_ = function(tess, regAbove, eNewUp) {\n  var regNew = new libtess.ActiveRegion();\n\n  regNew.eUp = eNewUp;\n  regNew.nodeUp = tess.dict.insertBefore(regAbove.nodeUp, regNew);\n  eNewUp.activeRegion = regNew;\n\n  return regNew;\n};\n\n\n/**\n * [isWindingInside_ description]\n * @private\n * @param {libtess.GluTesselator} tess [description].\n * @param {number} n int.\n * @return {boolean} [description].\n */\nlibtess.sweep.isWindingInside_ = function(tess, n) {\n  switch (tess.windingRule) {\n    case libtess.windingRule.GLU_TESS_WINDING_ODD:\n      return ((n & 1) !== 0);\n    case libtess.windingRule.GLU_TESS_WINDING_NONZERO:\n      return (n !== 0);\n    case libtess.windingRule.GLU_TESS_WINDING_POSITIVE:\n      return (n > 0);\n    case libtess.windingRule.GLU_TESS_WINDING_NEGATIVE:\n      return (n < 0);\n    case libtess.windingRule.GLU_TESS_WINDING_ABS_GEQ_TWO:\n      return (n >= 2) || (n <= -2);\n  }\n\n  // TODO(bckenny): not reached\n  return false;\n};\n\n\n/**\n * [computeWinding_ description]\n * @private\n * @param {libtess.GluTesselator} tess [description].\n * @param {libtess.ActiveRegion} reg [description].\n */\nlibtess.sweep.computeWinding_ = function(tess, reg) {\n  reg.windingNumber = reg.regionAbove().windingNumber + reg.eUp.winding;\n  reg.inside = libtess.sweep.isWindingInside_(tess, reg.windingNumber);\n};\n\n\n/**\n * Delete a region from the sweep line. This happens when the upper\n * and lower chains of a region meet (at a vertex on the sweep line).\n * The \"inside\" flag is copied to the appropriate mesh face (we could\n * not do this before -- since the structure of the mesh is always\n * changing, this face may not have even existed until now).\n *\n * @private\n * @param {libtess.GluTesselator} tess [description].\n * @param {libtess.ActiveRegion} reg [description].\n */\nlibtess.sweep.finishRegion_ = function(tess, reg) {\n  // TODO(bckenny): may need to null reg at callsite\n\n  var e = reg.eUp;\n  var f = e.lFace;\n\n  f.inside = reg.inside;\n  f.anEdge = e;   // optimization for tessmono.tessellateMonoRegion() // TODO(bckenny): how so?\n  libtess.sweep.deleteRegion_(tess, reg);\n};\n\n\n/**\n * We are given a vertex with one or more left-going edges. All affected\n * edges should be in the edge dictionary. Starting at regFirst.eUp,\n * we walk down deleting all regions where both edges have the same\n * origin vOrg. At the same time we copy the \"inside\" flag from the\n * active region to the face, since at this point each face will belong\n * to at most one region (this was not necessarily true until this point\n * in the sweep). The walk stops at the region above regLast; if regLast\n * is null we walk as far as possible. At the same time we relink the\n * mesh if necessary, so that the ordering of edges around vOrg is the\n * same as in the dictionary.\n *\n * @private\n * @param {libtess.GluTesselator} tess [description].\n * @param {libtess.ActiveRegion} regFirst [description].\n * @param {libtess.ActiveRegion} regLast [description].\n * @return {libtess.GluHalfEdge} [description].\n */\nlibtess.sweep.finishLeftRegions_ = function(tess, regFirst, regLast) {\n  var regPrev = regFirst;\n  var ePrev = regFirst.eUp;\n  while (regPrev !== regLast) {\n    // placement was OK\n    regPrev.fixUpperEdge = false;\n    var reg = regPrev.regionBelow();\n    var e = reg.eUp;\n    if (e.org !== ePrev.org) {\n      if (!reg.fixUpperEdge) {\n        /* Remove the last left-going edge. Even though there are no further\n         * edges in the dictionary with this origin, there may be further\n         * such edges in the mesh (if we are adding left edges to a vertex\n         * that has already been processed). Thus it is important to call\n         * finishRegion rather than just deleteRegion.\n         */\n        libtess.sweep.finishRegion_(tess, regPrev);\n        break;\n      }\n\n      // If the edge below was a temporary edge introduced by\n      // connectRightVertex, now is the time to fix it.\n      e = libtess.mesh.connect(ePrev.lPrev(), e.sym);\n      libtess.sweep.fixUpperEdge_(reg, e);\n    }\n\n    // Relink edges so that ePrev.oNext === e\n    if (ePrev.oNext !== e) {\n      libtess.mesh.meshSplice(e.oPrev(), e);\n      libtess.mesh.meshSplice(ePrev, e);\n    }\n\n    // may change reg.eUp\n    libtess.sweep.finishRegion_(tess, regPrev);\n    ePrev = reg.eUp;\n    regPrev = reg;\n  }\n\n  return ePrev;\n};\n\n\n/**\n * Purpose: insert right-going edges into the edge dictionary, and update\n * winding numbers and mesh connectivity appropriately. All right-going\n * edges share a common origin vOrg. Edges are inserted CCW starting at\n * eFirst; the last edge inserted is eLast.oPrev. If vOrg has any\n * left-going edges already processed, then eTopLeft must be the edge\n * such that an imaginary upward vertical segment from vOrg would be\n * contained between eTopLeft.oPrev and eTopLeft; otherwise eTopLeft\n * should be null.\n *\n * @private\n * @param {libtess.GluTesselator} tess [description].\n * @param {libtess.ActiveRegion} regUp [description].\n * @param {libtess.GluHalfEdge} eFirst [description].\n * @param {libtess.GluHalfEdge} eLast [description].\n * @param {libtess.GluHalfEdge} eTopLeft [description].\n * @param {boolean} cleanUp [description].\n */\nlibtess.sweep.addRightEdges_ = function(tess, regUp, eFirst, eLast, eTopLeft,\n    cleanUp) {\n\n  var firstTime = true;\n\n  // Insert the new right-going edges in the dictionary\n  var e = eFirst;\n  do {\n    libtess.sweep.addRegionBelow_(tess, regUp, e.sym);\n    e = e.oNext;\n  } while (e !== eLast);\n\n  // Walk *all* right-going edges from e.org, in the dictionary order,\n  // updating the winding numbers of each region, and re-linking the mesh\n  // edges to match the dictionary ordering (if necessary).\n  if (eTopLeft === null) {\n    eTopLeft = regUp.regionBelow().eUp.rPrev();\n  }\n  var regPrev = regUp;\n  var ePrev = eTopLeft;\n  var reg;\n  for (;;) {\n    reg = regPrev.regionBelow();\n    e = reg.eUp.sym;\n    if (e.org !== ePrev.org) {\n      break;\n    }\n\n    if (e.oNext !== ePrev) {\n      // Unlink e from its current position, and relink below ePrev\n      libtess.mesh.meshSplice(e.oPrev(), e);\n      libtess.mesh.meshSplice(ePrev.oPrev(), e);\n    }\n    // Compute the winding number and \"inside\" flag for the new regions\n    reg.windingNumber = regPrev.windingNumber - e.winding;\n    reg.inside = libtess.sweep.isWindingInside_(tess, reg.windingNumber);\n\n    // Check for two outgoing edges with same slope -- process these\n    // before any intersection tests (see example in libtess.sweep.computeInterior).\n    regPrev.dirty = true;\n    if (!firstTime && libtess.sweep.checkForRightSplice_(tess, regPrev)) {\n      libtess.sweep.addWinding_(e, ePrev);\n      libtess.sweep.deleteRegion_(tess, regPrev); // TODO(bckenny): need to null regPrev anywhere else?\n      libtess.mesh.deleteEdge(ePrev);\n    }\n    firstTime = false;\n    regPrev = reg;\n    ePrev = e;\n  }\n\n  regPrev.dirty = true;\n\n  if (cleanUp) {\n    // Check for intersections between newly adjacent edges.\n    libtess.sweep.walkDirtyRegions_(tess, regPrev);\n  }\n};\n\n\n/**\n * [callCombine_ description]\n * @private\n * @param {libtess.GluTesselator} tess [description].\n * @param {libtess.GluVertex} isect [description].\n * @param {Array.<Object>} data [description].\n * @param {Array.<number>} weights [description].\n * @param {boolean} needed [description].\n */\nlibtess.sweep.callCombine_ = function(tess, isect, data, weights, needed) {\n  // Copy coord data in case the callback changes it.\n  var coords = [\n    isect.coords[0],\n    isect.coords[1],\n    isect.coords[2]\n  ];\n\n  isect.data = null;\n  isect.data = tess.callCombineOrCombineData(coords, data, weights);\n  if (isect.data === null) {\n    if (!needed) {\n      // not needed, so just use data from first vertex\n      isect.data = data[0];\n\n    } else if (!tess.fatalError) {\n      // The only way fatal error is when two edges are found to intersect,\n      // but the user has not provided the callback necessary to handle\n      // generated intersection points.\n      tess.callErrorOrErrorData(\n          libtess.errorType.GLU_TESS_NEED_COMBINE_CALLBACK);\n      tess.fatalError = true;\n    }\n  }\n};\n\n\n/**\n * Two vertices with idential coordinates are combined into one.\n * e1.org is kept, while e2.org is discarded.\n * @private\n * @param {libtess.GluTesselator} tess [description].\n * @param {libtess.GluHalfEdge} e1 [description].\n * @param {libtess.GluHalfEdge} e2 [description].\n */\nlibtess.sweep.spliceMergeVertices_ = function(tess, e1, e2) {\n  // TODO(bckenny): better way to init these? save them?\n  var data = [null, null, null, null];\n  var weights = [0.5, 0.5, 0, 0];\n\n  data[0] = e1.org.data;\n  data[1] = e2.org.data;\n  libtess.sweep.callCombine_(tess, e1.org, data, weights, false);\n  libtess.mesh.meshSplice(e1, e2);\n};\n\n\n/**\n * Find some weights which describe how the intersection vertex is\n * a linear combination of org and dst. Each of the two edges\n * which generated \"isect\" is allocated 50% of the weight; each edge\n * splits the weight between its org and dst according to the\n * relative distance to \"isect\".\n *\n * @private\n * @param {libtess.GluVertex} isect [description].\n * @param {libtess.GluVertex} org [description].\n * @param {libtess.GluVertex} dst [description].\n * @param {Array.<number>} weights [description].\n * @param {number} weightIndex Index into weights for first weight to supply.\n */\nlibtess.sweep.vertexWeights_ = function(isect, org, dst, weights, weightIndex) {\n  // TODO(bckenny): think through how we can use L1dist here and be correct for coords\n  var t1 = libtess.geom.vertL1dist(org, isect);\n  var t2 = libtess.geom.vertL1dist(dst, isect);\n\n  // TODO(bckenny): introduced weightIndex to mimic addressing in original\n  // 1) document (though it is private and only used from getIntersectData)\n  // 2) better way? manually inline into getIntersectData? supply two two-length tmp arrays?\n  var i0 = weightIndex;\n  var i1 = weightIndex + 1;\n  weights[i0] = 0.5 * t2 / (t1 + t2);\n  weights[i1] = 0.5 * t1 / (t1 + t2);\n  isect.coords[0] += weights[i0] * org.coords[0] + weights[i1] * dst.coords[0];\n  isect.coords[1] += weights[i0] * org.coords[1] + weights[i1] * dst.coords[1];\n  isect.coords[2] += weights[i0] * org.coords[2] + weights[i1] * dst.coords[2];\n};\n\n\n/**\n * We've computed a new intersection point, now we need a \"data\" pointer\n * from the user so that we can refer to this new vertex in the\n * rendering callbacks.\n * @private\n * @param {libtess.GluTesselator} tess [description].\n * @param {libtess.GluVertex} isect [description].\n * @param {libtess.GluVertex} orgUp [description].\n * @param {libtess.GluVertex} dstUp [description].\n * @param {libtess.GluVertex} orgLo [description].\n * @param {libtess.GluVertex} dstLo [description].\n */\nlibtess.sweep.getIntersectData_ = function(tess, isect, orgUp, dstUp, orgLo,\n    dstLo) {\n\n  // TODO(bckenny): called for every intersection event, should these be from a pool?\n  // TODO(bckenny): better way to init these?\n  var weights = [0, 0, 0, 0];\n  var data = [\n    orgUp.data,\n    dstUp.data,\n    orgLo.data,\n    dstLo.data\n  ];\n\n  // TODO(bckenny): it appears isect is a reappropriated vertex, so does need to be zeroed.\n  // double check this.\n  isect.coords[0] = isect.coords[1] = isect.coords[2] = 0;\n\n  // TODO(bckenny): see note in libtess.sweep.vertexWeights_ for explanation of weightIndex. fix?\n  libtess.sweep.vertexWeights_(isect, orgUp, dstUp, weights, 0);\n  libtess.sweep.vertexWeights_(isect, orgLo, dstLo, weights, 2);\n\n  libtess.sweep.callCombine_(tess, isect, data, weights, true);\n};\n\n\n/**\n * Check the upper and lower edge of regUp, to make sure that the\n * eUp.org is above eLo, or eLo.org is below eUp (depending on which\n * origin is leftmost).\n *\n * The main purpose is to splice right-going edges with the same\n * dest vertex and nearly identical slopes (ie. we can't distinguish\n * the slopes numerically). However the splicing can also help us\n * to recover from numerical errors. For example, suppose at one\n * point we checked eUp and eLo, and decided that eUp.org is barely\n * above eLo. Then later, we split eLo into two edges (eg. from\n * a splice operation like this one). This can change the result of\n * our test so that now eUp.org is incident to eLo, or barely below it.\n * We must correct this condition to maintain the dictionary invariants.\n *\n * One possibility is to check these edges for intersection again\n * (i.e. checkForIntersect). This is what we do if possible. However\n * checkForIntersect requires that tess.event lies between eUp and eLo,\n * so that it has something to fall back on when the intersection\n * calculation gives us an unusable answer. So, for those cases where\n * we can't check for intersection, this routine fixes the problem\n * by just splicing the offending vertex into the other edge.\n * This is a guaranteed solution, no matter how degenerate things get.\n * Basically this is a combinatorial solution to a numerical problem.\n *\n * @private\n * @param {libtess.GluTesselator} tess [description].\n * @param {libtess.ActiveRegion} regUp [description].\n * @return {boolean} [description].\n */\nlibtess.sweep.checkForRightSplice_ = function(tess, regUp) {\n  // TODO(bckenny): fully learn how these two checks work\n\n  var regLo = regUp.regionBelow();\n  var eUp = regUp.eUp;\n  var eLo = regLo.eUp;\n\n  if (libtess.geom.vertLeq(eUp.org, eLo.org)) {\n    if (libtess.geom.edgeSign(eLo.dst(), eUp.org, eLo.org) > 0) {\n      return false;\n    }\n\n    // eUp.org appears to be below eLo\n    if (!libtess.geom.vertEq(eUp.org, eLo.org)) {\n      // Splice eUp.org into eLo\n      libtess.mesh.splitEdge(eLo.sym);\n      libtess.mesh.meshSplice(eUp, eLo.oPrev());\n      regUp.dirty = regLo.dirty = true;\n\n    } else if (eUp.org !== eLo.org) {\n      // merge the two vertices, discarding eUp.org\n      // TODO(bckenny): fix pqHandle null situation\n      tess.pq.remove(/** @type {libtess.PQHandle} */(eUp.org.pqHandle));\n      libtess.sweep.spliceMergeVertices_(tess, eLo.oPrev(), eUp);\n    }\n\n  } else {\n    if (libtess.geom.edgeSign(eUp.dst(), eLo.org, eUp.org) < 0) {\n      return false;\n    }\n\n    // eLo.org appears to be above eUp, so splice eLo.org into eUp\n    regUp.regionAbove().dirty = regUp.dirty = true;\n    libtess.mesh.splitEdge(eUp.sym);\n    libtess.mesh.meshSplice(eLo.oPrev(), eUp);\n  }\n\n  return true;\n};\n\n\n/**\n * Check the upper and lower edge of regUp to make sure that the\n * eUp.dst() is above eLo, or eLo.dst() is below eUp (depending on which\n * destination is rightmost).\n *\n * Theoretically, this should always be true. However, splitting an edge\n * into two pieces can change the results of previous tests. For example,\n * suppose at one point we checked eUp and eLo, and decided that eUp.dst()\n * is barely above eLo. Then later, we split eLo into two edges (eg. from\n * a splice operation like this one). This can change the result of\n * the test so that now eUp.dst() is incident to eLo, or barely below it.\n * We must correct this condition to maintain the dictionary invariants\n * (otherwise new edges might get inserted in the wrong place in the\n * dictionary, and bad stuff will happen).\n *\n * We fix the problem by just splicing the offending vertex into the\n * other edge.\n *\n * @private\n * @param {libtess.GluTesselator} tess description].\n * @param {libtess.ActiveRegion} regUp [description].\n * @return {boolean} [description].\n */\nlibtess.sweep.checkForLeftSplice_ = function(tess, regUp) {\n  var regLo = regUp.regionBelow();\n  var eUp = regUp.eUp;\n  var eLo = regLo.eUp;\n  var e;\n\n  if (libtess.geom.vertLeq(eUp.dst(), eLo.dst())) {\n    if (libtess.geom.edgeSign(eUp.dst(), eLo.dst(), eUp.org) < 0) {\n      return false;\n    }\n\n    // eLo.dst() is above eUp, so splice eLo.dst() into eUp\n    regUp.regionAbove().dirty = regUp.dirty = true;\n    e = libtess.mesh.splitEdge(eUp);\n    libtess.mesh.meshSplice(eLo.sym, e);\n    e.lFace.inside = regUp.inside;\n\n  } else {\n    if (libtess.geom.edgeSign(eLo.dst(), eUp.dst(), eLo.org) > 0) {\n      return false;\n    }\n\n    // eUp.dst() is below eLo, so splice eUp.dst() into eLo\n    regUp.dirty = regLo.dirty = true;\n    e = libtess.mesh.splitEdge(eLo);\n    libtess.mesh.meshSplice(eUp.lNext, eLo.sym);\n    e.rFace().inside = regUp.inside;\n  }\n\n  return true;\n};\n\n\n/**\n * Check the upper and lower edges of the given region to see if\n * they intersect. If so, create the intersection and add it\n * to the data structures.\n *\n * Returns true if adding the new intersection resulted in a recursive\n * call to addRightEdges_(); in this case all \"dirty\" regions have been\n * checked for intersections, and possibly regUp has been deleted.\n *\n * @private\n * @param {libtess.GluTesselator} tess [description].\n * @param {libtess.ActiveRegion} regUp [description].\n * @return {boolean} [description].\n */\nlibtess.sweep.checkForIntersect_ = function(tess, regUp) {\n  var regLo = regUp.regionBelow();\n  var eUp = regUp.eUp;\n  var eLo = regLo.eUp;\n  var orgUp = eUp.org;\n  var orgLo = eLo.org;\n  var dstUp = eUp.dst();\n  var dstLo = eLo.dst();\n\n  var isect = new libtess.GluVertex();\n\n  if (orgUp === orgLo) {\n    // right endpoints are the same\n    return false;\n  }\n\n  var tMinUp = Math.min(orgUp.t, dstUp.t);\n  var tMaxLo = Math.max(orgLo.t, dstLo.t);\n  if (tMinUp > tMaxLo) {\n    // t ranges do not overlap\n    return false;\n  }\n\n  if (libtess.geom.vertLeq(orgUp, orgLo)) {\n    if (libtess.geom.edgeSign(dstLo, orgUp, orgLo) > 0) {\n      return false;\n    }\n  } else {\n    if (libtess.geom.edgeSign(dstUp, orgLo, orgUp) < 0) {\n      return false;\n    }\n  }\n\n  // At this point the edges intersect, at least marginally\n  libtess.geom.edgeIntersect(dstUp, orgUp, dstLo, orgLo, isect);\n\n  // The following properties are guaranteed:\n\n  if (libtess.geom.vertLeq(isect, tess.event)) {\n    /* The intersection point lies slightly to the left of the sweep line,\n     * so move it until it's slightly to the right of the sweep line.\n     * (If we had perfect numerical precision, this would never happen\n     * in the first place). The easiest and safest thing to do is\n     * replace the intersection by tess.event.\n     */\n    isect.s = tess.event.s;\n    isect.t = tess.event.t;\n  }\n\n  // TODO(bckenny): try to find test54.d\n  /* Similarly, if the computed intersection lies to the right of the\n   * rightmost origin (which should rarely happen), it can cause\n   * unbelievable inefficiency on sufficiently degenerate inputs.\n   * (If you have the test program, try running test54.d with the\n   * \"X zoom\" option turned on).\n   */\n  var orgMin = libtess.geom.vertLeq(orgUp, orgLo) ? orgUp : orgLo;\n  if (libtess.geom.vertLeq(orgMin, isect)) {\n    isect.s = orgMin.s;\n    isect.t = orgMin.t;\n  }\n\n  if (libtess.geom.vertEq(isect, orgUp) || libtess.geom.vertEq(isect, orgLo)) {\n    // Easy case -- intersection at one of the right endpoints\n    libtess.sweep.checkForRightSplice_(tess, regUp);\n    return false;\n  }\n\n  // TODO(bckenny): clean this up; length is distracting\n  if ((!libtess.geom.vertEq(dstUp, tess.event) &&\n      libtess.geom.edgeSign(dstUp, tess.event, isect) >= 0) ||\n      (!libtess.geom.vertEq(dstLo, tess.event) &&\n      libtess.geom.edgeSign(dstLo, tess.event, isect) <= 0)) {\n\n    /* Very unusual -- the new upper or lower edge would pass on the\n     * wrong side of the sweep event, or through it. This can happen\n     * due to very small numerical errors in the intersection calculation.\n     */\n    if (dstLo === tess.event) {\n      // Splice dstLo into eUp, and process the new region(s)\n      libtess.mesh.splitEdge(eUp.sym);\n      libtess.mesh.meshSplice(eLo.sym, eUp);\n      regUp = libtess.sweep.topLeftRegion_(regUp);\n      eUp = regUp.regionBelow().eUp;\n      libtess.sweep.finishLeftRegions_(tess, regUp.regionBelow(), regLo);\n      libtess.sweep.addRightEdges_(tess, regUp, eUp.oPrev(), eUp, eUp, true);\n      return true;\n    }\n\n    if (dstUp === tess.event) {\n      // Splice dstUp into eLo, and process the new region(s)\n      libtess.mesh.splitEdge(eLo.sym);\n      libtess.mesh.meshSplice(eUp.lNext, eLo.oPrev());\n      regLo = regUp;\n      regUp = libtess.sweep.topRightRegion_(regUp);\n      var e = regUp.regionBelow().eUp.rPrev();\n      regLo.eUp = eLo.oPrev();\n      eLo = libtess.sweep.finishLeftRegions_(tess, regLo, null);\n      libtess.sweep.addRightEdges_(tess, regUp, eLo.oNext, eUp.rPrev(), e,\n          true);\n      return true;\n    }\n\n    /* Special case: called from connectRightVertex. If either\n     * edge passes on the wrong side of tess.event, split it\n     * (and wait for connectRightVertex to splice it appropriately).\n     */\n    if (libtess.geom.edgeSign(dstUp, tess.event, isect) >= 0) {\n      regUp.regionAbove().dirty = regUp.dirty = true;\n      libtess.mesh.splitEdge(eUp.sym);\n      eUp.org.s = tess.event.s;\n      eUp.org.t = tess.event.t;\n    }\n\n    if (libtess.geom.edgeSign(dstLo, tess.event, isect) <= 0) {\n      regUp.dirty = regLo.dirty = true;\n      libtess.mesh.splitEdge(eLo.sym);\n      eLo.org.s = tess.event.s;\n      eLo.org.t = tess.event.t;\n    }\n\n    // leave the rest for connectRightVertex\n    return false;\n  }\n\n  /* General case -- split both edges, splice into new vertex.\n   * When we do the splice operation, the order of the arguments is\n   * arbitrary as far as correctness goes. However, when the operation\n   * creates a new face, the work done is proportional to the size of\n   * the new face. We expect the faces in the processed part of\n   * the mesh (ie. eUp.lFace) to be smaller than the faces in the\n   * unprocessed original contours (which will be eLo.oPrev.lFace).\n   */\n  libtess.mesh.splitEdge(eUp.sym);\n  libtess.mesh.splitEdge(eLo.sym);\n  libtess.mesh.meshSplice(eLo.oPrev(), eUp);\n  eUp.org.s = isect.s;\n  eUp.org.t = isect.t;\n  eUp.org.pqHandle = tess.pq.insert(eUp.org);\n  libtess.sweep.getIntersectData_(tess, eUp.org, orgUp, dstUp, orgLo, dstLo);\n  regUp.regionAbove().dirty = regUp.dirty = regLo.dirty = true;\n\n  return false;\n};\n\n\n/**\n * When the upper or lower edge of any region changes, the region is\n * marked \"dirty\". This routine walks through all the dirty regions\n * and makes sure that the dictionary invariants are satisfied\n * (see the comments at the beginning of this file). Of course,\n * new dirty regions can be created as we make changes to restore\n * the invariants.\n * @private\n * @param {libtess.GluTesselator} tess [description].\n * @param {libtess.ActiveRegion} regUp [description].\n */\nlibtess.sweep.walkDirtyRegions_ = function(tess, regUp) {\n  var regLo = regUp.regionBelow();\n\n  for (;;) {\n    // Find the lowest dirty region (we walk from the bottom up).\n    while (regLo.dirty) {\n      regUp = regLo;\n      regLo = regLo.regionBelow();\n    }\n    if (!regUp.dirty) {\n      regLo = regUp;\n      regUp = regUp.regionAbove();\n      if (regUp === null || !regUp.dirty) {\n        // We've walked all the dirty regions\n        return;\n      }\n    }\n\n    regUp.dirty = false;\n    var eUp = regUp.eUp;\n    var eLo = regLo.eUp;\n\n    if (eUp.dst() !== eLo.dst()) {\n      // Check that the edge ordering is obeyed at the dst vertices.\n      if (libtess.sweep.checkForLeftSplice_(tess, regUp)) {\n        // If the upper or lower edge was marked fixUpperEdge, then\n        // we no longer need it (since these edges are needed only for\n        // vertices which otherwise have no right-going edges).\n        if (regLo.fixUpperEdge) {\n          libtess.sweep.deleteRegion_(tess, regLo);\n          libtess.mesh.deleteEdge(eLo);\n          regLo = regUp.regionBelow();\n          eLo = regLo.eUp;\n\n        } else if (regUp.fixUpperEdge) {\n          libtess.sweep.deleteRegion_(tess, regUp);\n          libtess.mesh.deleteEdge(eUp);\n          regUp = regLo.regionAbove();\n          eUp = regUp.eUp;\n        }\n      }\n    }\n\n    if (eUp.org !== eLo.org) {\n      if (eUp.dst() !== eLo.dst() && !regUp.fixUpperEdge &&\n          !regLo.fixUpperEdge &&\n          (eUp.dst() === tess.event || eLo.dst() === tess.event)) {\n        /* When all else fails in checkForIntersect(), it uses tess.event\n         * as the intersection location. To make this possible, it requires\n         * that tess.event lie between the upper and lower edges, and also\n         * that neither of these is marked fixUpperEdge (since in the worst\n         * case it might splice one of these edges into tess.event, and\n         * violate the invariant that fixable edges are the only right-going\n         * edge from their associated vertex).\n         */\n        if (libtess.sweep.checkForIntersect_(tess, regUp)) {\n          // walkDirtyRegions() was called recursively; we're done\n          return;\n        }\n\n      } else {\n        // Even though we can't use checkForIntersect(), the org vertices\n        // may violate the dictionary edge ordering. Check and correct this.\n        libtess.sweep.checkForRightSplice_(tess, regUp);\n      }\n    }\n\n    if (eUp.org === eLo.org && eUp.dst() === eLo.dst()) {\n      // A degenerate loop consisting of only two edges -- delete it.\n      libtess.sweep.addWinding_(eLo, eUp);\n      libtess.sweep.deleteRegion_(tess, regUp);\n      libtess.mesh.deleteEdge(eUp);\n      regUp = regLo.regionAbove();\n    }\n  }\n};\n\n\n/**\n * Purpose: connect a \"right\" vertex vEvent (one where all edges go left)\n * to the unprocessed portion of the mesh. Since there are no right-going\n * edges, two regions (one above vEvent and one below) are being merged\n * into one. regUp is the upper of these two regions.\n *\n * There are two reasons for doing this (adding a right-going edge):\n *  - if the two regions being merged are \"inside\", we must add an edge\n *    to keep them separated (the combined region would not be monotone).\n *  - in any case, we must leave some record of vEvent in the dictionary,\n *    so that we can merge vEvent with features that we have not seen yet.\n *    For example, maybe there is a vertical edge which passes just to\n *    the right of vEvent; we would like to splice vEvent into this edge.\n *\n * However, we don't want to connect vEvent to just any vertex. We don't\n * want the new edge to cross any other edges; otherwise we will create\n * intersection vertices even when the input data had no self-intersections.\n * (This is a bad thing; if the user's input data has no intersections,\n * we don't want to generate any false intersections ourselves.)\n *\n * Our eventual goal is to connect vEvent to the leftmost unprocessed\n * vertex of the combined region (the union of regUp and regLo).\n * But because of unseen vertices with all right-going edges, and also\n * new vertices which may be created by edge intersections, we don't\n * know where that leftmost unprocessed vertex is. In the meantime, we\n * connect vEvent to the closest vertex of either chain, and mark the region\n * as \"fixUpperEdge\". This flag says to delete and reconnect this edge\n * to the next processed vertex on the boundary of the combined region.\n * Quite possibly the vertex we connected to will turn out to be the\n * closest one, in which case we won't need to make any changes.\n *\n * @private\n * @param {libtess.GluTesselator} tess [description].\n * @param {libtess.ActiveRegion} regUp [description].\n * @param {libtess.GluHalfEdge} eBottomLeft [description].\n */\nlibtess.sweep.connectRightVertex_ = function(tess, regUp, eBottomLeft) {\n  var eTopLeft = eBottomLeft.oNext;\n  var regLo = regUp.regionBelow();\n  var eUp = regUp.eUp;\n  var eLo = regLo.eUp;\n  var degenerate = false;\n\n  if (eUp.dst() !== eLo.dst()) {\n    libtess.sweep.checkForIntersect_(tess, regUp);\n  }\n\n  // Possible new degeneracies: upper or lower edge of regUp may pass\n  // through vEvent, or may coincide with new intersection vertex\n  if (libtess.geom.vertEq(eUp.org, tess.event)) {\n    libtess.mesh.meshSplice(eTopLeft.oPrev(), eUp);\n    regUp = libtess.sweep.topLeftRegion_(regUp);\n    eTopLeft = regUp.regionBelow().eUp;\n    libtess.sweep.finishLeftRegions_(tess, regUp.regionBelow(), regLo);\n    degenerate = true;\n  }\n  if (libtess.geom.vertEq(eLo.org, tess.event)) {\n    libtess.mesh.meshSplice(eBottomLeft, eLo.oPrev());\n    eBottomLeft = libtess.sweep.finishLeftRegions_(tess, regLo, null);\n    degenerate = true;\n  }\n  if (degenerate) {\n    libtess.sweep.addRightEdges_(tess, regUp, eBottomLeft.oNext, eTopLeft,\n        eTopLeft, true);\n    return;\n  }\n\n  // Non-degenerate situation -- need to add a temporary, fixable edge.\n  // Connect to the closer of eLo.org, eUp.org.\n  var eNew;\n  if (libtess.geom.vertLeq(eLo.org, eUp.org)) {\n    eNew = eLo.oPrev();\n  } else {\n    eNew = eUp;\n  }\n  eNew = libtess.mesh.connect(eBottomLeft.lPrev(), eNew);\n\n  // Prevent cleanup, otherwise eNew might disappear before we've even\n  // had a chance to mark it as a temporary edge.\n  libtess.sweep.addRightEdges_(tess, regUp, eNew, eNew.oNext, eNew.oNext,\n      false);\n  eNew.sym.activeRegion.fixUpperEdge = true;\n  libtess.sweep.walkDirtyRegions_(tess, regUp);\n};\n\n\n/**\n * The event vertex lies exacty on an already-processed edge or vertex.\n * Adding the new vertex involves splicing it into the already-processed\n * part of the mesh.\n * @private\n * @param {libtess.GluTesselator} tess [description].\n * @param {libtess.ActiveRegion} regUp [description].\n * @param {libtess.GluVertex} vEvent [description].\n */\nlibtess.sweep.connectLeftDegenerate_ = function(tess, regUp, vEvent) {\n  var e = regUp.eUp;\n  /* istanbul ignore if */\n  if (libtess.geom.vertEq(e.org, vEvent)) {\n    // NOTE(bckenny): this code is unreachable but remains for a hypothetical\n    // future extension of libtess. See docs on libtess.sweep.TOLERANCE_NONZERO_\n    // for more information. Conditional on TOLERANCE_NONZERO_ to help Closure\n    // Compiler eliminate dead code.\n    // e.org is an unprocessed vertex - just combine them, and wait\n    // for e.org to be pulled from the queue\n    if (libtess.sweep.TOLERANCE_NONZERO_) {\n      libtess.sweep.spliceMergeVertices_(tess, e, vEvent.anEdge);\n    }\n    return;\n  }\n\n  if (!libtess.geom.vertEq(e.dst(), vEvent)) {\n    // General case -- splice vEvent into edge e which passes through it\n    libtess.mesh.splitEdge(e.sym);\n\n    if (regUp.fixUpperEdge) {\n      // This edge was fixable -- delete unused portion of original edge\n      libtess.mesh.deleteEdge(e.oNext);\n      regUp.fixUpperEdge = false;\n    }\n\n    libtess.mesh.meshSplice(vEvent.anEdge, e);\n\n    // recurse\n    libtess.sweep.sweepEvent_(tess, vEvent);\n    return;\n  }\n\n  // NOTE(bckenny): this code is unreachable but remains for a hypothetical\n  // future extension of libtess. See docs on libtess.sweep.TOLERANCE_NONZERO_\n  // for more information. Conditional on TOLERANCE_NONZERO_ to help Closure\n  // Compiler eliminate dead code.\n  // vEvent coincides with e.dst(), which has already been processed.\n  // Splice in the additional right-going edges.\n  /* istanbul ignore next */\n\n  /* istanbul ignore next */\n  if (libtess.sweep.TOLERANCE_NONZERO_) {\n    regUp = libtess.sweep.topRightRegion_(regUp);\n    var reg = regUp.regionBelow();\n    var eTopRight = reg.eUp.sym;\n    var eTopLeft = eTopRight.oNext;\n    var eLast = eTopLeft;\n\n    if (reg.fixUpperEdge) {\n      // Here e.dst() has only a single fixable edge going right.\n      // We can delete it since now we have some real right-going edges.\n\n      // there are some left edges too\n      libtess.sweep.deleteRegion_(tess, reg); // TODO(bckenny): something to null?\n      libtess.mesh.deleteEdge(eTopRight);\n      eTopRight = eTopLeft.oPrev();\n    }\n\n    libtess.mesh.meshSplice(vEvent.anEdge, eTopRight);\n    if (!libtess.geom.edgeGoesLeft(eTopLeft)) {\n      // e.dst() had no left-going edges -- indicate this to addRightEdges()\n      eTopLeft = null;\n    }\n\n    libtess.sweep.addRightEdges_(tess, regUp, eTopRight.oNext, eLast, eTopLeft,\n        true);\n  }\n};\n\n\n/**\n * Connect a \"left\" vertex (one where both edges go right)\n * to the processed portion of the mesh. Let R be the active region\n * containing vEvent, and let U and L be the upper and lower edge\n * chains of R. There are two possibilities:\n *\n * - the normal case: split R into two regions, by connecting vEvent to\n *   the rightmost vertex of U or L lying to the left of the sweep line\n *\n * - the degenerate case: if vEvent is close enough to U or L, we\n *   merge vEvent into that edge chain. The subcases are:\n *  - merging with the rightmost vertex of U or L\n *  - merging with the active edge of U or L\n *  - merging with an already-processed portion of U or L\n *\n * @private\n * @param {libtess.GluTesselator} tess   [description].\n * @param {libtess.GluVertex} vEvent [description].\n */\nlibtess.sweep.connectLeftVertex_ = function(tess, vEvent) {\n  // TODO(bckenny): tmp only used for sweep. better to keep tmp across calls?\n  var tmp = new libtess.ActiveRegion();\n\n  // NOTE(bckenny): this was commented out in the original\n  // libtess.assert(vEvent.anEdge.oNext.oNext === vEvent.anEdge);\n\n  // Get a pointer to the active region containing vEvent\n  tmp.eUp = vEvent.anEdge.sym;\n  var regUp = tess.dict.search(tmp).getKey();\n  var regLo = regUp.regionBelow();\n  var eUp = regUp.eUp;\n  var eLo = regLo.eUp;\n\n  // try merging with U or L first\n  if (libtess.geom.edgeSign(eUp.dst(), vEvent, eUp.org) === 0) {\n    libtess.sweep.connectLeftDegenerate_(tess, regUp, vEvent);\n    return;\n  }\n\n  // Connect vEvent to rightmost processed vertex of either chain.\n  // e.dst() is the vertex that we will connect to vEvent.\n  var reg = libtess.geom.vertLeq(eLo.dst(), eUp.dst()) ? regUp : regLo;\n  var eNew;\n  if (regUp.inside || reg.fixUpperEdge) {\n    if (reg === regUp) {\n      eNew = libtess.mesh.connect(vEvent.anEdge.sym, eUp.lNext);\n\n    } else {\n      var tempHalfEdge = libtess.mesh.connect(eLo.dNext(), vEvent.anEdge);\n      eNew = tempHalfEdge.sym;\n    }\n\n    if (reg.fixUpperEdge) {\n      libtess.sweep.fixUpperEdge_(reg, eNew);\n\n    } else {\n      libtess.sweep.computeWinding_(tess,\n          libtess.sweep.addRegionBelow_(tess, regUp, eNew));\n    }\n    libtess.sweep.sweepEvent_(tess, vEvent);\n\n  } else {\n    // The new vertex is in a region which does not belong to the polygon.\n    // We don''t need to connect this vertex to the rest of the mesh.\n    libtess.sweep.addRightEdges_(tess, regUp, vEvent.anEdge, vEvent.anEdge,\n        null, true);\n  }\n};\n\n\n/**\n * Does everything necessary when the sweep line crosses a vertex.\n * Updates the mesh and the edge dictionary.\n * @private\n * @param {libtess.GluTesselator} tess [description].\n * @param {libtess.GluVertex} vEvent [description].\n */\nlibtess.sweep.sweepEvent_ = function(tess, vEvent) {\n  tess.event = vEvent; // for access in edgeLeq_ // TODO(bckenny): wuh?\n\n  /* Check if this vertex is the right endpoint of an edge that is\n   * already in the dictionary.  In this case we don't need to waste\n   * time searching for the location to insert new edges.\n   */\n  var e = vEvent.anEdge;\n  while (e.activeRegion === null) {\n    e = e.oNext;\n    if (e === vEvent.anEdge) {\n      // All edges go right -- not incident to any processed edges\n      libtess.sweep.connectLeftVertex_(tess, vEvent);\n      return;\n    }\n  }\n\n  /* Processing consists of two phases: first we \"finish\" all the\n   * active regions where both the upper and lower edges terminate\n   * at vEvent (ie. vEvent is closing off these regions).\n   * We mark these faces \"inside\" or \"outside\" the polygon according\n   * to their winding number, and delete the edges from the dictionary.\n   * This takes care of all the left-going edges from vEvent.\n   */\n  var regUp = libtess.sweep.topLeftRegion_(e.activeRegion);\n  var reg = regUp.regionBelow();\n  var eTopLeft = reg.eUp;\n  var eBottomLeft = libtess.sweep.finishLeftRegions_(tess, reg, null);\n\n  /* Next we process all the right-going edges from vEvent. This\n   * involves adding the edges to the dictionary, and creating the\n   * associated \"active regions\" which record information about the\n   * regions between adjacent dictionary edges.\n   */\n  if (eBottomLeft.oNext === eTopLeft) {\n    // No right-going edges -- add a temporary \"fixable\" edge\n    libtess.sweep.connectRightVertex_(tess, regUp, eBottomLeft);\n\n  } else {\n    libtess.sweep.addRightEdges_(tess, regUp, eBottomLeft.oNext, eTopLeft,\n        eTopLeft, true);\n  }\n};\n\n\n/**\n * We add two sentinel edges above and below all other edges,\n * to avoid special cases at the top and bottom.\n * @private\n * @param {libtess.GluTesselator} tess [description].\n * @param {number} t [description].\n */\nlibtess.sweep.addSentinel_ = function(tess, t) {\n  var reg = new libtess.ActiveRegion();\n\n  var e = libtess.mesh.makeEdge(tess.mesh);\n\n  e.org.s = libtess.sweep.SENTINEL_COORD_;\n  e.org.t = t;\n  e.dst().s = -libtess.sweep.SENTINEL_COORD_;\n  e.dst().t = t;\n  tess.event = e.dst(); //initialize it\n\n  reg.eUp = e;\n  reg.windingNumber = 0;\n  reg.inside = false;\n  reg.fixUpperEdge = false;\n  reg.sentinel = true;\n  reg.dirty = false;\n  reg.nodeUp = tess.dict.insert(reg);\n};\n\n\n/**\n * We maintain an ordering of edge intersections with the sweep line.\n * This order is maintained in a dynamic dictionary.\n * @private\n * @param {libtess.GluTesselator} tess [description].\n */\nlibtess.sweep.initEdgeDict_ = function(tess) {\n  tess.dict = new libtess.Dict(tess, libtess.sweep.edgeLeq_);\n\n  libtess.sweep.addSentinel_(tess, -libtess.sweep.SENTINEL_COORD_);\n  libtess.sweep.addSentinel_(tess, libtess.sweep.SENTINEL_COORD_);\n};\n\n\n/**\n * [doneEdgeDict_ description]\n * @private\n * @param {libtess.GluTesselator} tess [description].\n */\nlibtess.sweep.doneEdgeDict_ = function(tess) {\n  // NOTE(bckenny): fixedEdges is only used in the assert below, so ignore so\n  // when asserts are removed jshint won't error.\n  /* jshint unused:false */\n  var fixedEdges = 0;\n\n  var reg;\n  while ((reg = tess.dict.getMin().getKey()) !== null) {\n    // At the end of all processing, the dictionary should contain\n    // only the two sentinel edges, plus at most one \"fixable\" edge\n    // created by connectRightVertex().\n    if (!reg.sentinel) {\n    }\n    libtess.sweep.deleteRegion_(tess, reg);\n  }\n\n  // NOTE(bckenny): see tess.dict.deleteDict_() for old delete dict function\n  tess.dict = null;\n};\n\n\n/**\n * Remove zero-length edges, and contours with fewer than 3 vertices.\n * @private\n * @param {libtess.GluTesselator} tess [description].\n */\nlibtess.sweep.removeDegenerateEdges_ = function(tess) {\n  var eHead = tess.mesh.eHead;\n\n  var eNext;\n  for (var e = eHead.next; e !== eHead; e = eNext) {\n    eNext = e.next;\n    var eLNext = e.lNext;\n\n    if (libtess.geom.vertEq(e.org, e.dst()) && e.lNext.lNext !== e) {\n      // Zero-length edge, contour has at least 3 edges\n      libtess.sweep.spliceMergeVertices_(tess, eLNext, e); // deletes e.org\n      libtess.mesh.deleteEdge(e); // e is a self-loop TODO(bckenny): does this comment really apply here?\n      e = eLNext;\n      eLNext = e.lNext;\n    }\n\n    if (eLNext.lNext === e) {\n      // Degenerate contour (one or two edges)\n      if (eLNext !== e) {\n        if (eLNext === eNext || eLNext === eNext.sym) {\n          eNext = eNext.next;\n        }\n        libtess.mesh.deleteEdge(eLNext);\n      }\n\n      if (e === eNext || e === eNext.sym) {\n        eNext = eNext.next;\n      }\n      libtess.mesh.deleteEdge(e);\n    }\n  }\n};\n\n\n/**\n * Construct priority queue and insert all vertices into it, which determines\n * the order in which vertices cross the sweep line.\n * @private\n * @param {libtess.GluTesselator} tess [description].\n */\nlibtess.sweep.initPriorityQ_ = function(tess) {\n  // TODO(bckenny): libtess.geom.vertLeq needs cast?\n  var pq = new libtess.PriorityQ(\n      /** @type {function(Object, Object): boolean} */(libtess.geom.vertLeq));\n  tess.pq = pq;\n\n  var vHead = tess.mesh.vHead;\n  var v;\n  for (v = vHead.next; v !== vHead; v = v.next) {\n    v.pqHandle = pq.insert(v);\n  }\n\n  pq.init();\n};\n\n\n/**\n * [donePriorityQ_ description]\n * @private\n * @param {libtess.GluTesselator} tess [description].\n */\nlibtess.sweep.donePriorityQ_ = function(tess) {\n  // TODO(bckenny): probably don't need deleteQ. check that function for comment\n  tess.pq.deleteQ();\n  tess.pq = null;\n};\n\n\n/**\n * Delete any degenerate faces with only two edges. walkDirtyRegions()\n * will catch almost all of these, but it won't catch degenerate faces\n * produced by splice operations on already-processed edges.\n * The two places this can happen are in finishLeftRegions(), when\n * we splice in a \"temporary\" edge produced by connectRightVertex(),\n * and in checkForLeftSplice(), where we splice already-processed\n * edges to ensure that our dictionary invariants are not violated\n * by numerical errors.\n *\n * In both these cases it is *very* dangerous to delete the offending\n * edge at the time, since one of the routines further up the stack\n * will sometimes be keeping a pointer to that edge.\n *\n * @private\n * @param {libtess.GluMesh} mesh [description].\n */\nlibtess.sweep.removeDegenerateFaces_ = function(mesh) {\n  var fNext;\n  for (var f = mesh.fHead.next; f !== mesh.fHead; f = fNext) {\n    fNext = f.next;\n    var e = f.anEdge;\n\n    if (e.lNext.lNext === e) {\n      // A face with only two edges\n      libtess.sweep.addWinding_(e.oNext, e);\n      libtess.mesh.deleteEdge(e);\n    }\n  }\n};\n\n\n/* global libtess */\n\n/** @const */\nlibtess.tessmono = {};\n\n/**\n * Tessellates a monotone region (what else would it do??). The region must\n * consist of a single loop of half-edges (see mesh.js) oriented CCW. \"Monotone\"\n * in this case means that any vertical line intersects the interior of the\n * region in a single interval.\n *\n * Tessellation consists of adding interior edges (actually pairs of\n * half-edges), to split the region into non-overlapping triangles.\n * @private\n * @param {!libtess.GluFace} face\n */\nlibtess.tessmono.tessellateMonoRegion_ = function(face) {\n  /* The basic idea is explained in Preparata and Shamos (which I don't\n   * have handy right now), although their implementation is more\n   * complicated than this one. The are two edge chains, an upper chain\n   * and a lower chain. We process all vertices from both chains in order,\n   * from right to left.\n   *\n   * The algorithm ensures that the following invariant holds after each\n   * vertex is processed: the untessellated region consists of two\n   * chains, where one chain (say the upper) is a single edge, and\n   * the other chain is concave. The left vertex of the single edge\n   * is always to the left of all vertices in the concave chain.\n   *\n   * Each step consists of adding the rightmost unprocessed vertex to one\n   * of the two chains, and forming a fan of triangles from the rightmost\n   * of two chain endpoints. Determining whether we can add each triangle\n   * to the fan is a simple orientation test. By making the fan as large\n   * as possible, we restore the invariant (check it yourself).\n   *\n   * All edges are oriented CCW around the boundary of the region.\n   * First, find the half-edge whose origin vertex is rightmost.\n   * Since the sweep goes from left to right, face.anEdge should\n   * be close to the edge we want.\n   */\n  var up = face.anEdge;\n\n  for (; libtess.geom.vertLeq(up.dst(), up.org); up = up.lPrev()) { }\n  for (; libtess.geom.vertLeq(up.org, up.dst()); up = up.lNext) { }\n\n  var lo = up.lPrev();\n\n  var tempHalfEdge;\n  while (up.lNext !== lo) {\n    if (libtess.geom.vertLeq(up.dst(), lo.org)) {\n      // up.dst() is on the left. It is safe to form triangles from lo.org.\n      // The edgeGoesLeft test guarantees progress even when some triangles\n      // are CW, given that the upper and lower chains are truly monotone.\n      while (lo.lNext !== up && (libtess.geom.edgeGoesLeft(lo.lNext) ||\n          libtess.geom.edgeSign(lo.org, lo.dst(), lo.lNext.dst()) <= 0)) {\n\n        tempHalfEdge = libtess.mesh.connect(lo.lNext, lo);\n        lo = tempHalfEdge.sym;\n      }\n      lo = lo.lPrev();\n\n    } else {\n      // lo.org is on the left. We can make CCW triangles from up.dst().\n      while (lo.lNext !== up && (libtess.geom.edgeGoesRight(up.lPrev()) ||\n          libtess.geom.edgeSign(up.dst(), up.org, up.lPrev().org) >= 0)) {\n\n        tempHalfEdge = libtess.mesh.connect(up, up.lPrev());\n        up = tempHalfEdge.sym;\n      }\n      up = up.lNext;\n    }\n  }\n\n  // Now lo.org == up.dst() == the leftmost vertex. The remaining region\n  // can be tessellated in a fan from this leftmost vertex.\n  while (lo.lNext.lNext !== up) {\n    tempHalfEdge = libtess.mesh.connect(lo.lNext, lo);\n    lo = tempHalfEdge.sym;\n  }\n};\n\n/**\n * Tessellates each region of the mesh which is marked \"inside\" the polygon.\n * Each such region must be monotone.\n * @param {!libtess.GluMesh} mesh\n */\nlibtess.tessmono.tessellateInterior = function(mesh) {\n  var next;\n  for (var f = mesh.fHead.next; f !== mesh.fHead; f = next) {\n    // Make sure we don't try to tessellate the new triangles.\n    next = f.next;\n    if (f.inside) {\n      libtess.tessmono.tessellateMonoRegion_(f);\n    }\n  }\n};\n\n/**\n * Zaps (i.e. sets to null) all faces which are not marked \"inside\" the polygon.\n * Since further mesh operations on null faces are not allowed, the main purpose\n * is to clean up the mesh so that exterior loops are not represented in the\n * data structure.\n * @param {!libtess.GluMesh} mesh\n */\nlibtess.tessmono.discardExterior = function(mesh) {\n  var next;\n  for (var f = mesh.fHead.next; f !== mesh.fHead; f = next) {\n    // Since f will be destroyed, save its next pointer.\n    next = f.next;\n    if (!f.inside) {\n      libtess.mesh.zapFace(f);\n    }\n  }\n};\n\n/**\n * Resets the winding numbers on all edges so that regions marked \"inside\" the\n * polygon have a winding number of \"value\", and regions outside have a winding\n * number of 0.\n *\n * If keepOnlyBoundary is true, it also deletes all edges which do not separate\n * an interior region from an exterior one.\n *\n * @param {!libtess.GluMesh} mesh\n * @param {number} value\n * @param {boolean} keepOnlyBoundary\n */\nlibtess.tessmono.setWindingNumber = function(mesh, value, keepOnlyBoundary) {\n  var eNext;\n  for (var e = mesh.eHead.next; e !== mesh.eHead; e = eNext) {\n    eNext = e.next;\n\n    if (e.rFace().inside !== e.lFace.inside) {\n      // This is a boundary edge (one side is interior, one is exterior).\n      e.winding = (e.lFace.inside) ? value : -value;\n\n    } else {\n      // Both regions are interior, or both are exterior.\n      if (!keepOnlyBoundary) {\n        e.winding = 0;\n\n      } else {\n        libtess.mesh.deleteEdge(e);\n      }\n    }\n  }\n};\n\n\n/* global libtess */\n\n/**\n * A list of edges crossing the sweep line, sorted from top to bottom.\n * Implementation is a doubly-linked list, sorted by the injected edgeLeq\n * comparator function. Here it is a simple ordering, but see libtess.sweep for\n * the list of invariants on the edge dictionary this ordering creates.\n * @constructor\n * @struct\n * @param {!libtess.GluTesselator} frame\n * @param {function(!libtess.GluTesselator, !libtess.ActiveRegion, !libtess.ActiveRegion): boolean} leq\n */\nlibtess.Dict = function(frame, leq) {\n\n  /**\n   * The head of the doubly-linked DictNode list. At creation time, links back\n   * and forward only to itself.\n   * @private\n   */\n  this.head_ = new libtess.DictNode();\n\n  /**\n   * The GluTesselator used as the frame for edge/event comparisons.\n   * @private\n   */\n  this.frame_ = frame;\n\n  /**\n   * Comparison function to maintain the invariants of the Dict. See\n   * libtess.sweep.edgeLeq_ for source.\n   * @private\n   * @type {function(!libtess.GluTesselator, !libtess.ActiveRegion, !libtess.ActiveRegion): boolean}\n   */\n  this.leq_ = leq;\n};\n\n/* istanbul ignore next */\n/**\n * Formerly used to delete the dict.\n * NOTE(bckenny): No longer called but left for memFree documentation. Nulled at\n * former callsite instead (sweep.doneEdgeDict_)\n * @private\n */\nlibtess.Dict.prototype.deleteDict_ = function() {\n  // for (var node = this.head_.next; node !== this.head_; node = node.next) {\n  //   memFree(node);\n  // }\n  // memFree(dict);\n};\n\n/**\n * Insert the supplied key into the edge list and return its new node.\n * @param {libtess.DictNode} node\n * @param {!libtess.ActiveRegion} key\n * @return {!libtess.DictNode}\n */\nlibtess.Dict.prototype.insertBefore = function(node, key) {\n  do {\n    node = node.prev;\n  } while (node.key !== null && !this.leq_(this.frame_, node.key, key));\n\n  // insert the new node and update the surrounding nodes to point to it\n  var newNode = new libtess.DictNode(key, node.next, node);\n  node.next.prev = newNode;\n  node.next = newNode;\n\n  return newNode;\n};\n\n/**\n * Insert key into the dict and return the new node that contains it.\n * @param {!libtess.ActiveRegion} key\n * @return {!libtess.DictNode}\n */\nlibtess.Dict.prototype.insert = function(key) {\n  // NOTE(bckenny): from a macro in dict.h/dict-list.h\n  return this.insertBefore(this.head_, key);\n};\n\n/**\n * Remove node from the list.\n * @param {libtess.DictNode} node\n */\nlibtess.Dict.prototype.deleteNode = function(node) {\n  node.next.prev = node.prev;\n  node.prev.next = node.next;\n\n  // NOTE(bckenny): nulled at callsite (sweep.deleteRegion_)\n  // memFree( node );\n};\n\n/**\n * Search returns the node with the smallest key greater than or equal\n * to the given key. If there is no such key, returns a node whose\n * key is null. Similarly, max(d).getSuccessor() has a null key, etc.\n * @param {!libtess.ActiveRegion} key\n * @return {!libtess.DictNode}\n */\nlibtess.Dict.prototype.search = function(key) {\n  var node = this.head_;\n\n  do {\n    node = node.next;\n  } while (node.key !== null && !this.leq_(this.frame_, key, node.key));\n\n  return node;\n};\n\n/**\n * Return the node with the smallest key.\n * @return {!libtess.DictNode}\n */\nlibtess.Dict.prototype.getMin = function() {\n  // NOTE(bckenny): from a macro in dict.h/dict-list.h\n  return this.head_.next;\n};\n\n// NOTE(bckenny): libtess.Dict.getMax isn't called within libtess and isn't part\n// of the public API. For now, leaving in but ignoring for coverage.\n/* istanbul ignore next */\n/**\n * Returns the node with the greatest key.\n * @return {!libtess.DictNode}\n */\nlibtess.Dict.prototype.getMax = function() {\n  // NOTE(bckenny): from a macro in dict.h/dict-list.h\n  return this.head_.prev;\n};\n\n\n/* global libtess */\n\n/**\n * A doubly-linked-list node with a libtess.ActiveRegion payload.\n * The key for this node and the next and previous nodes in the parent Dict list\n * can be provided to insert it into an existing list (or all can be omitted if\n * this is to be the founding node of the list).\n * @param {!libtess.ActiveRegion=} opt_key\n * @param {!libtess.DictNode=} opt_nextNode\n * @param {!libtess.DictNode=} opt_prevNode\n * @constructor\n * @struct\n */\nlibtess.DictNode = function(opt_key, opt_nextNode, opt_prevNode) {\n  /**\n   * The ActiveRegion key for this node, or null if the head of the list.\n   * @type {libtess.ActiveRegion}\n   */\n  this.key = opt_key || null;\n\n  /**\n   * Link to next DictNode in parent list or to self if this is the first node.\n   * @type {!libtess.DictNode}\n   */\n  this.next = opt_nextNode || this;\n\n  /**\n   * Link to previous DictNode in parent list or to self if this is the first\n   * node.\n   * @type {!libtess.DictNode}\n   */\n  this.prev = opt_prevNode || this;\n};\n\n/**\n * Get the key from this node.\n * @return {libtess.ActiveRegion}\n */\nlibtess.DictNode.prototype.getKey = function() {\n  return this.key;\n};\n\n/**\n * Get the successor node to this one.\n * @return {!libtess.DictNode}\n */\nlibtess.DictNode.prototype.getSuccessor = function() {\n  return this.next;\n};\n\n/**\n * Get the predecessor node to this one.\n * @return {!libtess.DictNode}\n */\nlibtess.DictNode.prototype.getPredecessor = function() {\n  return this.prev;\n};\n\n\n\n/* global libtess */\n\n/**\n * Cached vertex data for single-countour polygons for quick-and-dirty\n * decomposition.\n * @constructor\n * @struct\n */\nlibtess.CachedVertex = function() {\n  /**\n   * [coords description]\n   * @type {Array.<number>}\n   */\n  this.coords = [0, 0, 0];\n  // TODO(bckenny): better way to init?\n\n  /**\n   * [data description]\n   * @type {Object}\n   */\n  this.data = null;\n};\n\n\n\n/* global libtess */\n\n// TODO(bckenny): create more javascript-y API, e.g. make gluTessEndPolygon\n// async, don't require so many temp objects created\n\n/**\n * The tesselator main class, providing the public API.\n * @constructor\n * @struct\n */\nlibtess.GluTesselator = function() {\n  // Only initialize fields which can be changed by the api. Other fields\n  // are initialized where they are used.\n\n  // TODO(bckenny): many of these can be made private\n  // TODO(bckenny): can we combine call* and call*Data functions?\n\n  /*** state needed for collecting the input data ***/\n\n  /**\n   * what begin/end calls have we seen?\n   * @type {libtess.GluTesselator.tessState_}\n   */\n  this.state = libtess.GluTesselator.tessState_.T_DORMANT;\n\n  /**\n   * lastEdge_.org is the most recent vertex\n   * @private\n   * @type {libtess.GluHalfEdge}\n   */\n  this.lastEdge_ = null;\n\n  /**\n   * stores the input contours, and eventually the tessellation itself\n   * @type {libtess.GluMesh}\n   */\n  this.mesh = null;\n  // NOTE(bckenny): initialized in this.emptyCache_\n\n  /**\n   * Error callback.\n   * @private\n   * @type {?function((libtess.errorType|libtess.gluEnum))}\n   */\n  this.callError_ = null;\n\n\n  /*** state needed for projecting onto the sweep plane ***/\n\n  /**\n   * user-specified normal (if provided)\n   * @type {!Array.<number>}\n   */\n  this.normal = [0, 0, 0];\n  // TODO(bckenny): better way to init these arrays?\n\n  /**\n   * unit vector in s-direction (debugging)\n   * @type {!Array.<number>}\n   */\n  this.sUnit = [0, 0, 0];\n\n  /**\n   * unit vector in t-direction (debugging)\n   * @type {!Array.<number>}\n   */\n  this.tUnit = [0, 0, 0];\n\n  /*** state needed for the line sweep ***/\n  // TODO(bckenny): this could be moved to a sweep state object of some sort\n\n  /**\n   * tolerance for merging features\n   * @type {number}\n   */\n  this.relTolerance = libtess.GLU_TESS_DEFAULT_TOLERANCE;\n\n  /**\n   * rule for determining polygon interior\n   * @type {libtess.windingRule}\n   */\n  this.windingRule = libtess.windingRule.GLU_TESS_WINDING_ODD;\n\n  /**\n   * fatal error: needed combine callback\n   * @type {boolean}\n   */\n  this.fatalError = false;\n\n  /**\n   * edge dictionary for sweep line\n   * @type {libtess.Dict}\n   */\n  this.dict = null;\n  // NOTE(bckenny): dict initialized in sweep.initEdgeDict_, removed in sweep.doneEdgeDict_\n\n  /**\n   * priority queue of vertex events\n   * @type {libtess.PriorityQ}\n   */\n  this.pq = null;\n  // NOTE(bckenny): pq initialized in sweep.initPriorityQ\n\n  /**\n   * current sweep event being processed\n   * @type {libtess.GluVertex}\n   */\n  this.event = null;\n\n  /**\n   * Combine callback.\n   * @private\n   * @type {?function(Array.<number>, Array.<Object>, Array.<number>): Object}\n   */\n  this.callCombine_ = null;\n\n  /*** state needed for rendering callbacks (see render.js) ***/\n\n  /**\n   * Extract contours, not triangles\n   * @type {boolean}\n   */\n  this.boundaryOnly = false;\n\n  /**\n   * Begin callback.\n   * @private\n   * @type {?function(libtess.primitiveType)}\n   */\n  this.callBegin_ = null;\n\n  /**\n   * Edge flag callback.\n   * @private\n   * @type {?function(boolean)}\n   */\n  this.callEdgeFlag_ = null;\n\n  /**\n   * Vertex callback.\n   * @private\n   * @type {?function(Object)}\n   */\n  this.callVertex_ = null;\n\n  /**\n   * End callback.\n   * @private\n   * @type {?function()}\n   */\n  this.callEnd_ = null;\n\n  /**\n   * Mesh callback.\n   * @private\n   * @type {?function(libtess.GluMesh)}\n   */\n  this.callMesh_ = null;\n\n  /*** rendering callbacks that also pass polygon data  ***/\n  /**\n   * BeginData callback.\n   * @private\n   * @type {?function(libtess.primitiveType, Object)}\n   */\n  this.callBeginData_ = null;\n\n  /**\n   * EdgeFlagData callback.\n   * @private\n   * @type {?function(boolean, Object)}\n   */\n  this.callEdgeFlagData_ = null;\n\n  /**\n   * VertexData callback.\n   * @private\n   * @type {?function(Object, Object)}\n   */\n  this.callVertexData_ = null;\n\n  /**\n   * EndData callback.\n   * @private\n   * @type {?function(Object)}\n   */\n  this.callEndData_ = null;\n\n  /**\n   * ErrorData callback.\n   * @private\n   * @type {?function((libtess.errorType|libtess.gluEnum), Object)}\n   */\n  this.callErrorData_ = null;\n\n  /**\n   * CombineData callback.\n   * @private\n   * @type {?function(Array.<number>, Array.<Object>, Array.<number>, Object): Object}\n   */\n  this.callCombineData_ = null;\n\n  /**\n   * client data for current polygon\n   * @private\n   * @type {Object}\n   */\n  this.polygonData_ = null;\n\n  /*** state needed to cache single-contour polygons for renderCache() ***/\n  /**\n   * empty cache on next vertex() call\n   * @type {boolean}\n   */\n  this.emptyCache = false;\n  // TODO(bckenny): possibly rename to be clear it's a boolean\n\n  /**\n   * number of cached vertices\n   * @type {number}\n   */\n  this.cacheCount = 0;\n\n  /**\n   * the vertex data\n   * @type {Array.<libtess.CachedVertex>}\n   */\n  this.cache = new Array(libtess.TESS_MAX_CACHE);\n\n  // TODO(bckenny): fill now? or init on demand\n  for (var i = 0; i < libtess.TESS_MAX_CACHE; i++) {\n    this.cache[i] = new libtess.CachedVertex();\n  }\n};\n\n/**\n * The begin/end calls must be properly nested. We keep track of the current\n * state to enforce the ordering.\n * @enum {number}\n * @private\n */\nlibtess.GluTesselator.tessState_ = {\n  T_DORMANT: 0,\n  T_IN_POLYGON: 1,\n  T_IN_CONTOUR: 2\n};\n\n/**\n * Destory the tesselator object. See README.\n */\nlibtess.GluTesselator.prototype.gluDeleteTess = function() {\n  // TODO(bckenny): This does nothing but assert that it isn't called while\n  // building the polygon since we rely on GC to handle memory. *If* the public\n  // API changes, this should go.\n  this.requireState_(libtess.GluTesselator.tessState_.T_DORMANT);\n  // memFree(tess); TODO(bckenny)\n};\n\n\n/**\n * Set properties for control over tesselation. See README.\n * @param {libtess.gluEnum} which [description].\n * @param {number|boolean} value [description].\n */\nlibtess.GluTesselator.prototype.gluTessProperty = function(which, value) {\n  // TODO(bckenny): split into more setters?\n  // TODO(bckenny): in any case, we can do better than this switch statement\n\n  switch (which) {\n    case libtess.gluEnum.GLU_TESS_TOLERANCE:\n      if (value < 0 || value > 1) {\n        break;\n      }\n      // TODO(bckenny): libtess doesn't support any tolerance but 0. This should\n      // reject any non-zero tolerance accordingly.\n      this.relTolerance = /** @type {number} */(value);\n      return;\n\n    case libtess.gluEnum.GLU_TESS_WINDING_RULE:\n      var windingRule = /** @type {libtess.windingRule} */(value);\n\n      switch (windingRule) {\n        case libtess.windingRule.GLU_TESS_WINDING_ODD:\n        case libtess.windingRule.GLU_TESS_WINDING_NONZERO:\n        case libtess.windingRule.GLU_TESS_WINDING_POSITIVE:\n        case libtess.windingRule.GLU_TESS_WINDING_NEGATIVE:\n        case libtess.windingRule.GLU_TESS_WINDING_ABS_GEQ_TWO:\n          this.windingRule = windingRule;\n          return;\n        default:\n      }\n      break;\n\n    case libtess.gluEnum.GLU_TESS_BOUNDARY_ONLY:\n      // TODO(bckenny): added boolean param type. make sure ok.\n      this.boundaryOnly = !!value;\n      return;\n\n    default:\n      this.callErrorOrErrorData(libtess.gluEnum.GLU_INVALID_ENUM);\n      return;\n  }\n  this.callErrorOrErrorData(libtess.gluEnum.GLU_INVALID_VALUE);\n};\n\n\n/**\n * Returns tessellator property\n * @param {libtess.gluEnum} which [description].\n * @return {number|boolean} [description].\n */\nlibtess.GluTesselator.prototype.gluGetTessProperty = function(which) {\n  // TODO(bckenny): as above, split into more getters? and improve on switch statement\n  // why are these being asserted in getter but not setter?\n\n  switch (which) {\n    case libtess.gluEnum.GLU_TESS_TOLERANCE:\n      // tolerance should be in range [0..1]\n      return this.relTolerance;\n\n    case libtess.gluEnum.GLU_TESS_WINDING_RULE:\n      var rule = this.windingRule;\n      return rule;\n\n    case libtess.gluEnum.GLU_TESS_BOUNDARY_ONLY:\n      return this.boundaryOnly;\n\n    default:\n      this.callErrorOrErrorData(libtess.gluEnum.GLU_INVALID_ENUM);\n      break;\n  }\n  return false;\n};\n\n\n/**\n * Lets the user supply the polygon normal, if known.  All input data\n * is projected into a plane perpendicular to the normal before\n * tesselation. All output triangles are oriented CCW with\n * respect to the normal (CW orientation can be obtained by\n * reversing the sign of the supplied normal). For example, if\n * you know that all polygons lie in the x-y plane, call\n * \"tess.gluTessNormal(0.0, 0.0, 1.0)\" before rendering any polygons.\n *\n * @param {number} x [description].\n * @param {number} y [description].\n * @param {number} z [description].\n */\nlibtess.GluTesselator.prototype.gluTessNormal = function(x, y, z) {\n  this.normal[0] = x;\n  this.normal[1] = y;\n  this.normal[2] = z;\n};\n\n\n/**\n * Specify callbacks. See README. A null or undefined opt_fn removes current callback.\n *\n * @param {libtess.gluEnum} which [description].\n * @param {?Function=} opt_fn [description].\n */\nlibtess.GluTesselator.prototype.gluTessCallback = function(which, opt_fn) {\n  var fn = !opt_fn ? null : opt_fn;\n  // TODO(bckenny): better opt_fn typing?\n\n  switch (which) {\n    case libtess.gluEnum.GLU_TESS_BEGIN:\n      this.callBegin_ = /** @type {function(libtess.primitiveType)} */ (fn);\n      return;\n\n    case libtess.gluEnum.GLU_TESS_BEGIN_DATA:\n      this.callBeginData_ =\n          /** @type {function(libtess.primitiveType, Object)} */ (fn);\n      return;\n\n    case libtess.gluEnum.GLU_TESS_EDGE_FLAG:\n      this.callEdgeFlag_ = /** @type {function(boolean)} */ (fn);\n      return;\n\n    case libtess.gluEnum.GLU_TESS_EDGE_FLAG_DATA:\n      this.callEdgeFlagData_ = /** @type {function(boolean, Object)} */ (fn);\n      return;\n\n    case libtess.gluEnum.GLU_TESS_VERTEX:\n      this.callVertex_ = /** @type {function(Object)} */ (fn);\n      return;\n\n    case libtess.gluEnum.GLU_TESS_VERTEX_DATA:\n      this.callVertexData_ = /** @type {function(Object, Object)} */ (fn);\n      return;\n\n    case libtess.gluEnum.GLU_TESS_END:\n      this.callEnd_ = /** @type {function()} */ (fn);\n      return;\n\n    case libtess.gluEnum.GLU_TESS_END_DATA:\n      this.callEndData_ = /** @type {function(Object)} */ (fn);\n      return;\n\n    case libtess.gluEnum.GLU_TESS_ERROR:\n      this.callError_ = /** @type {function((libtess.errorType|libtess.gluEnum))} */ (fn);\n      return;\n\n    case libtess.gluEnum.GLU_TESS_ERROR_DATA:\n      this.callErrorData_ =\n          /** @type {function((libtess.errorType|libtess.gluEnum), Object)} */ (fn);\n      return;\n\n    case libtess.gluEnum.GLU_TESS_COMBINE:\n      this.callCombine_ = /** @type {function(Array.<number>, Array.<Object>, Array.<number>): Object} */ (fn);\n      return;\n\n    case libtess.gluEnum.GLU_TESS_COMBINE_DATA:\n      this.callCombineData_ = /** @type {function(Array.<number>, Array.<Object>, Array.<number>, Object): Object} */ (fn);\n      return;\n\n    case libtess.gluEnum.GLU_TESS_MESH:\n      this.callMesh_ = /** @type {function(libtess.GluMesh)} */ (fn);\n      return;\n\n    default:\n      this.callErrorOrErrorData(libtess.gluEnum.GLU_INVALID_ENUM);\n      return;\n  }\n};\n\n\n/**\n * Specify a vertex and associated data. Must be within calls to\n * beginContour/endContour. See README.\n *\n * @param {Array.<number>} coords [description].\n * @param {Object} data [description].\n */\nlibtess.GluTesselator.prototype.gluTessVertex = function(coords, data) {\n  var tooLarge = false;\n\n  // TODO(bckenny): pool allocation?\n  var clamped = [0, 0, 0];\n\n  this.requireState_(libtess.GluTesselator.tessState_.T_IN_CONTOUR);\n\n  if (this.emptyCache) {\n    this.emptyCache_();\n    this.lastEdge_ = null;\n  }\n\n  for (var i = 0; i < 3; ++i) {\n    var x = coords[i];\n    if (x < -libtess.GLU_TESS_MAX_COORD) {\n      x = -libtess.GLU_TESS_MAX_COORD;\n      tooLarge = true;\n    }\n    if (x > libtess.GLU_TESS_MAX_COORD) {\n      x = libtess.GLU_TESS_MAX_COORD;\n      tooLarge = true;\n    }\n    clamped[i] = x;\n  }\n\n  if (tooLarge) {\n    this.callErrorOrErrorData(libtess.errorType.GLU_TESS_COORD_TOO_LARGE);\n  }\n\n  if (this.mesh === null) {\n    if (this.cacheCount < libtess.TESS_MAX_CACHE) {\n      this.cacheVertex_(clamped, data);\n      return;\n    }\n\n    // cache is full, create mesh and add cached verts to it\n    this.emptyCache_();\n  }\n\n  this.addVertex_(clamped, data);\n};\n\n\n/**\n * [gluTessBeginPolygon description]\n * @param {Object} data Client data for current polygon.\n */\nlibtess.GluTesselator.prototype.gluTessBeginPolygon = function(data) {\n  this.requireState_(libtess.GluTesselator.tessState_.T_DORMANT);\n\n  this.state = libtess.GluTesselator.tessState_.T_IN_POLYGON;\n  this.cacheCount = 0;\n  this.emptyCache = false;\n  this.mesh = null;\n\n  this.polygonData_ = data;\n};\n\n\n/**\n * [gluTessBeginContour description]\n */\nlibtess.GluTesselator.prototype.gluTessBeginContour = function() {\n  this.requireState_(libtess.GluTesselator.tessState_.T_IN_POLYGON);\n\n  this.state = libtess.GluTesselator.tessState_.T_IN_CONTOUR;\n  this.lastEdge_ = null;\n  if (this.cacheCount > 0) {\n    // Just set a flag so we don't get confused by empty contours\n    // -- these can be generated accidentally with the obsolete\n    // NextContour() interface.\n    // TODO(bckenny): we aren't implementing NextContour() interface.\n    this.emptyCache = true;\n  }\n};\n\n\n/**\n * [gluTessEndContour description]\n */\nlibtess.GluTesselator.prototype.gluTessEndContour = function() {\n  this.requireState_(libtess.GluTesselator.tessState_.T_IN_CONTOUR);\n  this.state = libtess.GluTesselator.tessState_.T_IN_POLYGON;\n};\n\n\n/**\n * [gluTessEndPolygon description]\n */\nlibtess.GluTesselator.prototype.gluTessEndPolygon = function() {\n  this.requireState_(libtess.GluTesselator.tessState_.T_IN_POLYGON);\n  this.state = libtess.GluTesselator.tessState_.T_DORMANT;\n\n  if (this.mesh === null) {\n    // TODO(bckenny): can we eliminate more cache functionality?\n    this.emptyCache_();\n  }\n\n  // Determine the polygon normal and project vertices onto the plane\n  // of the polygon.\n  libtess.normal.projectPolygon(this);\n\n  // computeInterior(tess) computes the planar arrangement specified\n  // by the given contours, and further subdivides this arrangement\n  // into regions. Each region is marked \"inside\" if it belongs\n  // to the polygon, according to the rule given by this.windingRule.\n  // Each interior region is guaranteed be monotone.\n  libtess.sweep.computeInterior(this);\n\n  if (!this.fatalError) {\n    // If the user wants only the boundary contours, we throw away all edges\n    // except those which separate the interior from the exterior.\n    // Otherwise we tessellate all the regions marked \"inside\".\n    // NOTE(bckenny): we know this.mesh has been initialized, so help closure out.\n    var mesh = /** @type {!libtess.GluMesh} */(this.mesh);\n    if (this.boundaryOnly) {\n      libtess.tessmono.setWindingNumber(mesh, 1, true);\n    } else {\n      libtess.tessmono.tessellateInterior(mesh);\n    }\n\n    this.mesh.checkMesh();\n\n    if (this.callBegin_ || this.callEnd_ || this.callVertex_ ||\n        this.callEdgeFlag_ || this.callBeginData_ || this.callEndData_ ||\n        this.callVertexData_ || this.callEdgeFlagData_) {\n\n      if (this.boundaryOnly) {\n        // output boundary contours\n        libtess.render.renderBoundary(this, this.mesh);\n\n      } else {\n        // output triangles (with edge callback if one is set)\n        var flagEdges = !!(this.callEdgeFlag_ || this.callEdgeFlagData_);\n        libtess.render.renderMesh(this, this.mesh, flagEdges);\n      }\n    }\n\n    if (this.callMesh_) {\n      // Throw away the exterior faces, so that all faces are interior.\n      // This way the user doesn't have to check the \"inside\" flag,\n      // and we don't need to even reveal its existence. It also leaves\n      // the freedom for an implementation to not generate the exterior\n      // faces in the first place.\n      libtess.tessmono.discardExterior(this.mesh);\n      // user wants the mesh itself\n      this.callMesh_(this.mesh);\n\n      this.mesh = null;\n      this.polygonData_ = null;\n      return;\n    }\n  }\n\n  libtess.mesh.deleteMesh(this.mesh);\n  this.polygonData_ = null;\n  this.mesh = null;\n};\n\n\n/**\n * Return the tessellator to its original dormant state.\n * @private\n */\nlibtess.GluTesselator.prototype.makeDormant_ = function() {\n  if (this.mesh) {\n    libtess.mesh.deleteMesh(this.mesh);\n  }\n  this.state = libtess.GluTesselator.tessState_.T_DORMANT;\n  this.lastEdge_ = null;\n  this.mesh = null;\n};\n\n\n/**\n * [requireState_ description]\n * @private\n * @param {libtess.GluTesselator.tessState_} state [description].\n */\nlibtess.GluTesselator.prototype.requireState_ = function(state) {\n  if (this.state !== state) {\n    this.gotoState_(state);\n  }\n};\n\n\n/**\n * [gotoState_ description]\n * @private\n * @param  {libtess.GluTesselator.tessState_} newState [description].\n */\nlibtess.GluTesselator.prototype.gotoState_ = function(newState) {\n  while (this.state !== newState) {\n    // We change the current state one level at a time, to get to the desired\n    // state.\n    if (this.state < newState) {\n      switch (this.state) {\n        case libtess.GluTesselator.tessState_.T_DORMANT:\n          this.callErrorOrErrorData(\n              libtess.errorType.GLU_TESS_MISSING_BEGIN_POLYGON);\n          this.gluTessBeginPolygon(null);\n          break;\n\n        case libtess.GluTesselator.tessState_.T_IN_POLYGON:\n          this.callErrorOrErrorData(\n              libtess.errorType.GLU_TESS_MISSING_BEGIN_CONTOUR);\n          this.gluTessBeginContour();\n          break;\n      }\n\n    } else {\n      switch (this.state) {\n        case libtess.GluTesselator.tessState_.T_IN_CONTOUR:\n          this.callErrorOrErrorData(\n              libtess.errorType.GLU_TESS_MISSING_END_CONTOUR);\n          this.gluTessEndContour();\n          break;\n\n        case libtess.GluTesselator.tessState_.T_IN_POLYGON:\n          this.callErrorOrErrorData(\n              libtess.errorType.GLU_TESS_MISSING_END_POLYGON);\n          // this.gluTessEndPolygon() is too much work!\n          this.makeDormant_();\n          break;\n      }\n    }\n  }\n};\n\n\n/**\n * [addVertex_ description]\n * @private\n * @param {Array.<number>} coords [description].\n * @param {Object} data [description].\n */\nlibtess.GluTesselator.prototype.addVertex_ = function(coords, data) {\n  var e = this.lastEdge_;\n  if (e === null) {\n    // Make a self-loop (one vertex, one edge).\n    e = libtess.mesh.makeEdge(this.mesh);\n    libtess.mesh.meshSplice(e, e.sym);\n\n  } else {\n    // Create a new vertex and edge which immediately follow e\n    // in the ordering around the left face.\n    libtess.mesh.splitEdge(e);\n    e = e.lNext;\n  }\n\n  // The new vertex is now e.org.\n  e.org.data = data;\n  e.org.coords[0] = coords[0];\n  e.org.coords[1] = coords[1];\n  e.org.coords[2] = coords[2];\n\n  // The winding of an edge says how the winding number changes as we\n  // cross from the edge''s right face to its left face.  We add the\n  // vertices in such an order that a CCW contour will add +1 to\n  // the winding number of the region inside the contour.\n  e.winding = 1;\n  e.sym.winding = -1;\n\n  this.lastEdge_ = e;\n};\n\n\n/**\n * [cacheVertex_ description]\n * @private\n * @param {Array.<number>} coords [description].\n * @param {Object} data [description].\n */\nlibtess.GluTesselator.prototype.cacheVertex_ = function(coords, data) {\n  var v = this.cache[this.cacheCount];\n\n  v.data = data;\n  v.coords[0] = coords[0];\n  v.coords[1] = coords[1];\n  v.coords[2] = coords[2];\n  ++this.cacheCount;\n};\n\n\n/**\n * [emptyCache_ description]\n * @private\n */\nlibtess.GluTesselator.prototype.emptyCache_ = function() {\n  // NOTE(bckenny): surprise!\n  this.mesh = new libtess.GluMesh();\n\n  for (var i = 0; i < this.cacheCount; i++) {\n    var v = this.cache[i];\n    this.addVertex_(v.coords, v.data);\n  }\n\n  this.cacheCount = 0;\n  this.emptyCache = false;\n};\n\n\n// TODO(bckenny): all following conditional callbacks could be simplified\n// TODO(bckenny): using null for now, but may rework\n// TODO(bckenny): should add documentation that references in callback are volatile (or make a copy)\n// see README callback descriptions\n/**\n * [callBeginOrBeginData description]\n * @param {libtess.primitiveType} type [description].\n */\nlibtess.GluTesselator.prototype.callBeginOrBeginData = function(type) {\n  if (this.callBeginData_) {\n    this.callBeginData_(type, this.polygonData_);\n\n  } else if (this.callBegin_) {\n    this.callBegin_(type);\n  }\n};\n\n\n/**\n * [callVertexOrVertexData description]\n * @param {Object} data [description].\n */\nlibtess.GluTesselator.prototype.callVertexOrVertexData = function(data) {\n  if (this.callVertexData_) {\n    this.callVertexData_(data, this.polygonData_);\n\n  } else if (this.callVertex_) {\n    this.callVertex_(data);\n  }\n};\n\n\n/**\n * [callEdgeFlagOrEdgeFlagData description]\n * @param {boolean} flag [description].\n */\nlibtess.GluTesselator.prototype.callEdgeFlagOrEdgeFlagData = function(flag) {\n  if (this.callEdgeFlagData_) {\n    this.callEdgeFlagData_(flag, this.polygonData_);\n\n  } else if (this.callEdgeFlag_) {\n    this.callEdgeFlag_(flag);\n  }\n};\n\n\n/**\n * [callEndOrEndData description]\n */\nlibtess.GluTesselator.prototype.callEndOrEndData = function() {\n  if (this.callEndData_) {\n    this.callEndData_(this.polygonData_);\n\n  } else if (this.callEnd_) {\n    this.callEnd_();\n  }\n};\n\n\n/**\n * [callCombineOrCombineData description]\n * @param {Array.<number>} coords [description].\n * @param {Array.<Object>} data [description].\n * @param {Array.<number>} weight [description].\n * @return {Object} Interpolated vertex.\n */\nlibtess.GluTesselator.prototype.callCombineOrCombineData =\n    function(coords, data, weight) {\n\n  var interpData;\n  if (this.callCombineData_) {\n    interpData = this.callCombineData_(coords, data, weight, this.polygonData_);\n\n  } else if (this.callCombine_) {\n    interpData = this.callCombine_(coords, data, weight);\n  }\n\n  // TODO(bckenny): can't be undefined\n  if (interpData === undefined) {\n    interpData = null;\n  }\n  return interpData;\n};\n\n\n// TODO(bckenny): combine the enums in libtess\n/**\n * [callErrorOrErrorData description]\n * @param {(libtess.errorType|libtess.gluEnum)} errno [description].\n */\nlibtess.GluTesselator.prototype.callErrorOrErrorData = function(errno) {\n  if (this.callErrorData_) {\n    this.callErrorData_(errno, this.polygonData_);\n\n  } else if (this.callError_) {\n    this.callError_(errno);\n  }\n};\n\n\n\n/* global libtess */\n\n/**\n * Each face has a pointer to the next and previous faces in the\n * circular list, and a pointer to a half-edge with this face as\n * the left face (null if this is the dummy header). There is also\n * a field \"data\" for client data.\n *\n * @param {libtess.GluFace=} opt_nextFace\n * @param {libtess.GluFace=} opt_prevFace\n * @constructor\n * @struct\n */\nlibtess.GluFace = function(opt_nextFace, opt_prevFace) {\n  // TODO(bckenny): reverse order of params?\n\n  /**\n   * next face (never null)\n   * @type {!libtess.GluFace}\n   */\n  this.next = opt_nextFace || this;\n\n  /**\n   * previous face (never NULL)\n   * @type {!libtess.GluFace}\n   */\n  this.prev = opt_prevFace || this;\n\n  /**\n   * A half edge with this left face.\n   * @type {libtess.GluHalfEdge}\n   */\n  this.anEdge = null;\n\n  /**\n   * room for client's data\n   * @type {Object}\n   */\n  this.data = null;\n\n  /**\n   * This face is in the polygon interior.\n   * @type {boolean}\n   */\n  this.inside = false;\n};\n\n\n\n/* global libtess */\n\n/**\n * The fundamental data structure is the \"half-edge\". Two half-edges\n * go together to make an edge, but they point in opposite directions.\n * Each half-edge has a pointer to its mate (the \"symmetric\" half-edge sym),\n * its origin vertex (org), the face on its left side (lFace), and the\n * adjacent half-edges in the CCW direction around the origin vertex\n * (oNext) and around the left face (lNext). There is also a \"next\"\n * pointer for the global edge list (see below).\n *\n * The notation used for mesh navigation:\n *  sym   = the mate of a half-edge (same edge, but opposite direction)\n *  oNext = edge CCW around origin vertex (keep same origin)\n *  dNext = edge CCW around destination vertex (keep same dest)\n *  lNext = edge CCW around left face (dest becomes new origin)\n *  rNext = edge CCW around right face (origin becomes new dest)\n *\n * \"prev\" means to substitute CW for CCW in the definitions above.\n *\n * The circular edge list is special; since half-edges always occur\n * in pairs (e and e.sym), each half-edge stores a pointer in only\n * one direction. Starting at eHead and following the e.next pointers\n * will visit each *edge* once (ie. e or e.sym, but not both).\n * e.sym stores a pointer in the opposite direction, thus it is\n * always true that e.sym.next.sym.next === e.\n *\n * @param {libtess.GluHalfEdge=} opt_nextEdge\n * @constructor\n * @struct\n */\nlibtess.GluHalfEdge = function(opt_nextEdge) {\n  // TODO(bckenny): are these the right defaults? (from gl_meshNewMesh requirements)\n\n  /**\n   * doubly-linked list (prev==sym->next)\n   * @type {!libtess.GluHalfEdge}\n   */\n  this.next = opt_nextEdge || this;\n\n  // TODO(bckenny): how can this be required if created in pairs? move to factory creation only?\n  /**\n   * same edge, opposite direction\n   * @type {libtess.GluHalfEdge}\n   */\n  this.sym = null;\n\n  /**\n   * next edge CCW around origin\n   * @type {libtess.GluHalfEdge}\n   */\n  this.oNext = null;\n\n  /**\n   * next edge CCW around left face\n   * @type {libtess.GluHalfEdge}\n   */\n  this.lNext = null;\n\n  /**\n   * origin vertex (oVertex too long)\n   * @type {libtess.GluVertex}\n   */\n  this.org = null;\n\n  /**\n   * left face\n   * @type {libtess.GluFace}\n   */\n  this.lFace = null;\n\n  // Internal data (keep hidden)\n  // NOTE(bckenny): can't be private, though...\n\n  /**\n   * a region with this upper edge (see sweep.js)\n   * @type {libtess.ActiveRegion}\n   */\n  this.activeRegion = null;\n\n  /**\n   * change in winding number when crossing from the right face to the left face\n   * @type {number}\n   */\n  this.winding = 0;\n};\n\n// NOTE(bckenny): the following came from macros in mesh\n// TODO(bckenny): using methods as aliases for sym connections for now.\n// not sure about this approach. getters? renames?\n\n\n/**\n * [rFace description]\n * @return {libtess.GluFace} [description].\n */\nlibtess.GluHalfEdge.prototype.rFace = function() {\n  return this.sym.lFace;\n};\n\n\n/**\n * [dst description]\n * @return {libtess.GluVertex} [description].\n */\nlibtess.GluHalfEdge.prototype.dst = function() {\n  return this.sym.org;\n};\n\n\n/**\n * [oPrev description]\n * @return {libtess.GluHalfEdge} [description].\n */\nlibtess.GluHalfEdge.prototype.oPrev = function() {\n  return this.sym.lNext;\n};\n\n\n/**\n * [lPrev description]\n * @return {libtess.GluHalfEdge} [description].\n */\nlibtess.GluHalfEdge.prototype.lPrev = function() {\n  return this.oNext.sym;\n};\n\n// NOTE(bckenny): libtess.GluHalfEdge.dPrev is called nowhere in libtess and\n// isn't part of the current public API. It could be useful for mesh traversal\n// and manipulation if made public, however.\n/* istanbul ignore next */\n/**\n * The edge clockwise around destination vertex (keep same dest).\n * @return {libtess.GluHalfEdge}\n */\nlibtess.GluHalfEdge.prototype.dPrev = function() {\n  return this.lNext.sym;\n};\n\n\n/**\n * [rPrev description]\n * @return {libtess.GluHalfEdge} [description].\n */\nlibtess.GluHalfEdge.prototype.rPrev = function() {\n  return this.sym.oNext;\n};\n\n\n/**\n * [dNext description]\n * @return {libtess.GluHalfEdge} [description].\n */\nlibtess.GluHalfEdge.prototype.dNext = function() {\n  return this.rPrev().sym;\n};\n\n\n// NOTE(bckenny): libtess.GluHalfEdge.rNext is called nowhere in libtess and\n// isn't part of the current public API. It could be useful for mesh traversal\n// and manipulation if made public, however.\n/* istanbul ignore next */\n/**\n * The edge CCW around the right face (origin of this becomes new dest).\n * @return {libtess.GluHalfEdge}\n */\nlibtess.GluHalfEdge.prototype.rNext = function() {\n  return this.oPrev().sym;\n};\n\n\n\n/* global libtess */\n\n/**\n * Creates a new mesh with no edges, no vertices,\n * and no loops (what we usually call a \"face\").\n *\n * @constructor\n * @struct\n */\nlibtess.GluMesh = function() {\n  /**\n   * dummy header for vertex list\n   * @type {libtess.GluVertex}\n   */\n  this.vHead = new libtess.GluVertex();\n\n  /**\n   * dummy header for face list\n   * @type {libtess.GluFace}\n   */\n  this.fHead = new libtess.GluFace();\n\n  /**\n   * dummy header for edge list\n   * @type {libtess.GluHalfEdge}\n   */\n  this.eHead = new libtess.GluHalfEdge();\n\n  /**\n   * and its symmetric counterpart\n   * @type {libtess.GluHalfEdge}\n   */\n  this.eHeadSym = new libtess.GluHalfEdge();\n\n  // TODO(bckenny): better way to pair these?\n  this.eHead.sym = this.eHeadSym;\n  this.eHeadSym.sym = this.eHead;\n};\n\n\n// TODO(bckenny): #ifndef NDEBUG\n/**\n * Checks mesh for self-consistency.\n */\nlibtess.GluMesh.prototype.checkMesh = function() {\n  if (!libtess.DEBUG) {\n    return;\n  }\n\n  var fHead = this.fHead;\n  var vHead = this.vHead;\n  var eHead = this.eHead;\n\n  var e;\n\n  // faces\n  var f;\n  var fPrev = fHead;\n  for (fPrev = fHead; (f = fPrev.next) !== fHead; fPrev = f) {\n    e = f.anEdge;\n    do {\n      e = e.lNext;\n    } while (e !== f.anEdge);\n  }\n\n  // vertices\n  var v;\n  var vPrev = vHead;\n  for (vPrev = vHead; (v = vPrev.next) !== vHead; vPrev = v) {\n    e = v.anEdge;\n    do {\n      e = e.oNext;\n    } while (e !== v.anEdge);\n  }\n\n  // edges\n  var ePrev = eHead;\n  for (ePrev = eHead; (e = ePrev.next) !== eHead; ePrev = e) {\n  }\n};\n\n\n\n/* global libtess */\n\n/**\n * Each vertex has a pointer to next and previous vertices in the\n * circular list, and a pointer to a half-edge with this vertex as\n * the origin (null if this is the dummy header). There is also a\n * field \"data\" for client data.\n *\n * @param {libtess.GluVertex=} opt_nextVertex [description].\n * @param {libtess.GluVertex=} opt_prevVertex [description].\n * @constructor\n * @struct\n */\nlibtess.GluVertex = function(opt_nextVertex, opt_prevVertex) {\n  // TODO(bckenny): reverse order of params?\n\n  /**\n   * Next vertex (never null).\n   * @type {!libtess.GluVertex}\n   */\n  this.next = opt_nextVertex || this;\n\n  /**\n   * Previous vertex (never null).\n   * @type {!libtess.GluVertex}\n   */\n  this.prev = opt_prevVertex || this;\n\n  /**\n   * A half-edge with this origin.\n   * @type {libtess.GluHalfEdge}\n   */\n  this.anEdge = null;\n\n  /**\n   * The client's data.\n   * @type {Object}\n   */\n  this.data = null;\n\n  /**\n   * The vertex location in 3D.\n   * @type {!Array.<number>}\n   */\n  this.coords = [0, 0, 0];\n  // TODO(bckenny): we may want to rethink coords, either eliminate (using s\n  // and t and user data) or index into contiguous storage?\n\n  /**\n   * Component of projection onto the sweep plane.\n   * @type {number}\n   */\n  this.s = 0;\n\n  /**\n   * Component of projection onto the sweep plane.\n   * @type {number}\n   */\n  this.t = 0;\n\n  /**\n   * To allow deletion from priority queue.\n   * @type {?libtess.PQHandle}\n   */\n  this.pqHandle = null;\n  // NOTE(bckenny): pqHandle inited in sweep\n  // TODO(bckenny): can we have a numeric default value? null may do bad things\n};\n\n\n\n/* global libtess */\n\n// TODO(bckenny): more specific typing on key\n\n/**\n * [PQHandleElem description]\n * @constructor\n * @struct\n */\nlibtess.PQHandleElem = function() {\n  // TODO(bckenny): if key could instead be an indexed into another store, makes heap storage a lot easier\n\n  /**\n   * [key description]\n   * @type {libtess.PQKey}\n   */\n  this.key = null;\n\n  /**\n   * [node description]\n   * @type {libtess.PQHandle}\n   */\n  this.node = 0;\n};\n\n\n/**\n * Allocate a PQHandleElem array of size size. If oldArray is not null, its\n * contents are copied to the beginning of the new array. The rest of the array\n * is filled with new PQHandleElems.\n *\n * @param {?Array.<libtess.PQHandleElem>} oldArray [description].\n * @param {number} size [description].\n * @return {Array.<libtess.PQHandleElem>} [description].\n */\nlibtess.PQHandleElem.realloc = function(oldArray, size) {\n  var newArray = new Array(size);\n\n  // TODO(bckenny): better to reallocate array? or grow array?\n  var index = 0;\n  if (oldArray !== null) {\n    for (; index < oldArray.length; index++) {\n      newArray[index] = oldArray[index];\n    }\n  }\n\n  for (; index < size; index++) {\n    newArray[index] = new libtess.PQHandleElem();\n  }\n\n  return newArray;\n};\n\n\n\n/* global libtess */\n\n// TODO(bckenny): maybe just have these created inline as literals\n// (or unboxed directly - PQHandle is just an array index number)\n\n/**\n * [PQNode description]\n * @constructor\n * @struct\n */\nlibtess.PQNode = function() {\n  /**\n   * [handle description]\n   * @type {libtess.PQHandle}\n   */\n  this.handle = 0;\n};\n\n\n/**\n * Allocate a PQNode array of size size. If oldArray is not null, its contents\n * are copied to the beginning of the new array. The rest of the array is\n * filled with new PQNodes.\n *\n * @param {?Array.<libtess.PQNode>} oldArray [description].\n * @param {number} size [description].\n * @return {Array.<libtess.PQNode>} [description].\n */\nlibtess.PQNode.realloc = function(oldArray, size) {\n  var newArray = new Array(size);\n\n  // TODO(bckenny): better to reallocate array? or grow array?\n  var index = 0;\n  if (oldArray !== null) {\n    for (; index < oldArray.length; index++) {\n      newArray[index] = oldArray[index];\n    }\n  }\n\n  for (; index < size; index++) {\n    newArray[index] = new libtess.PQNode();\n  }\n\n  return newArray;\n};\n\n\n\n/* global libtess */\n\n// TODO(bckenny): preallocating arrays may actually be hurting us in sort\n// performance (esp if theres some undefs in there)\n\n/**\n * [PriorityQ description]\n * @constructor\n * @struct\n * @param {function(Object, Object): boolean} leq [description].\n */\nlibtess.PriorityQ = function(leq) {\n  /**\n   * [keys description]\n   * @private\n   * @type {Array.<libtess.PQKey>}\n   */\n  this.keys_ = libtess.PriorityQ.prototype.PQKeyRealloc_(null,\n      libtess.PriorityQ.INIT_SIZE_);\n\n  /**\n   * Array of indexes into this.keys_\n   * @private\n   * @type {Array.<number>}\n   */\n  this.order_ = null;\n\n  /**\n   * [size description]\n   * @private\n   * @type {number}\n   */\n  this.size_ = 0;\n\n  /**\n   * [max_ description]\n   * @private\n   * @type {number}\n   */\n  this.max_ = libtess.PriorityQ.INIT_SIZE_;\n\n  /**\n   * [initialized description]\n   * @private\n   * @type {boolean}\n   */\n  this.initialized_ = false;\n\n  // TODO(bckenny): leq was inlined by define in original, but appears to just\n  // be vertLeq, as passed. keep an eye on this as to why its not used.\n  /**\n   * [leq description]\n   * @private\n   * @type {function(libtess.PQKey, libtess.PQKey): boolean}\n   */\n  this.leq_ =\n      /** @type {function(libtess.PQKey, libtess.PQKey): boolean} */(leq);\n\n  /**\n   * [heap_ description]\n   * @private\n   * @type {libtess.PriorityQHeap}\n   */\n  this.heap_ = new libtess.PriorityQHeap(this.leq_);\n};\n\n\n/**\n * [INIT_SIZE_ description]\n * @private\n * @const\n * @type {number}\n */\nlibtess.PriorityQ.INIT_SIZE_ = 32;\n\n\n/**\n * [deleteQ description]\n */\nlibtess.PriorityQ.prototype.deleteQ = function() {\n  // TODO(bckenny): unnecessary, I think.\n  this.heap_.deleteHeap();\n  this.heap_ = null;\n  this.order_ = null;\n  this.keys_ = null;\n  // NOTE(bckenny): nulled at callsite (sweep.donePriorityQ_)\n};\n\n\n/**\n * [init description]\n */\nlibtess.PriorityQ.prototype.init = function() {\n  // TODO(bckenny): reuse. in theory, we don't have to empty this, as access is\n  // dictated by this.size_, but array.sort doesn't know that\n  this.order_ = [];\n\n  // Create an array of indirect pointers to the keys, so that\n  // the handles we have returned are still valid.\n  // TODO(bckenny): valid for when? it appears we can just store indexes into\n  // keys_, but what did this mean?\n  for (var i = 0; i < this.size_; i++) {\n    this.order_[i] = i;\n  }\n\n  // sort the indirect pointers in descending order of the keys themselves\n  // TODO(bckenny): make sure it's ok that keys[a] === keys[b] returns 1\n  // TODO(bckenny): unstable sort means we may get slightly different polys in\n  // different browsers, but only when passing in equal points\n  // TODO(bckenny): make less awkward closure?\n  var comparator = (function(keys, leq) {\n    return function(a, b) {\n      return leq(keys[a], keys[b]) ? 1 : -1;\n    };\n  })(this.keys_, this.leq_);\n  this.order_.sort(comparator);\n\n  this.max_ = this.size_;\n  this.initialized_ = true;\n  this.heap_.init();\n\n  // TODO(bckenny):\n  // #ifndef NDEBUG\n  if (libtess.DEBUG) {\n    var p = 0;\n    var r = p + this.size_ - 1;\n    for (i = p; i < r; ++i) {\n    }\n  }\n  // #endif\n};\n\n\n/**\n * [insert description]\n * @param {libtess.PQKey} keyNew [description].\n * @return {libtess.PQHandle} [description].\n */\nlibtess.PriorityQ.prototype.insert = function(keyNew) {\n  // NOTE(bckenny): originally returned LONG_MAX as alloc failure signal. no\n  // longer does.\n  if (this.initialized_) {\n    return this.heap_.insert(keyNew);\n  }\n\n  var curr = this.size_;\n  if (++this.size_ >= this.max_) {\n    // If the heap overflows, double its size.\n    this.max_ *= 2;\n    this.keys_ =\n        libtess.PriorityQ.prototype.PQKeyRealloc_(this.keys_, this.max_);\n  }\n\n  this.keys_[curr] = keyNew;\n\n  // Negative handles index the sorted array.\n  return -(curr + 1);\n};\n\n\n/**\n * Allocate a PQKey array of size size. If oldArray is not null, its\n * contents are copied to the beginning of the new array. The rest of the array\n * is filled with nulls.\n *\n * @private\n * @param {?Array.<libtess.PQKey>} oldArray [description].\n * @param {number} size [description].\n * @return {Array.<(?libtess.PQKey)>} [description].\n */\nlibtess.PriorityQ.prototype.PQKeyRealloc_ = function(oldArray, size) {\n  // TODO(bckenny): double check return type. can we have ? there?\n  var newArray = new Array(size);\n\n  // TODO(bckenny): better to reallocate array? or grow array?\n  var index = 0;\n  if (oldArray !== null) {\n    for (; index < oldArray.length; index++) {\n      newArray[index] = oldArray[index];\n    }\n  }\n\n  for (; index < size; index++) {\n    newArray[index] = null;\n  }\n\n  return newArray;\n};\n\n// NOTE(bckenny): libtess.PriorityQ.keyLessThan_ is called nowhere in libtess\n// and isn't part of the public API.\n/* istanbul ignore next */\n/**\n * Whether x is less than y according to this.leq_.\n * @private\n * @param {number} x\n * @param {number} y\n * @return {boolean}\n */\nlibtess.PriorityQ.prototype.keyLessThan_ = function(x, y) {\n  // NOTE(bckenny): was macro LT\n  var keyX = this.keys_[x];\n  var keyY = this.keys_[y];\n  return !this.leq_(keyY, keyX);\n};\n\n// NOTE(bckenny): libtess.PriorityQ.keyGreaterThan_ is called nowhere in libtess\n// and isn't part of the public API.\n/* istanbul ignore next */\n/**\n * Whether x is greater than y according to this.leq_.\n * @private\n * @param {number} x\n * @param {number} y\n * @return {boolean}\n */\nlibtess.PriorityQ.prototype.keyGreaterThan_ = function(x, y) {\n  // NOTE(bckenny): was macro GT\n  var keyX = this.keys_[x];\n  var keyY = this.keys_[y];\n  return !this.leq_(keyX, keyY);\n};\n\n\n/**\n * [extractMin description]\n * @return {libtess.PQKey} [description].\n */\nlibtess.PriorityQ.prototype.extractMin = function() {\n  if (this.size_ === 0) {\n    return this.heap_.extractMin();\n  }\n\n  var sortMin = this.keys_[this.order_[this.size_ - 1]];\n  if (!this.heap_.isEmpty()) {\n    var heapMin = this.heap_.minimum();\n    if (this.leq_(heapMin, sortMin)) {\n      return this.heap_.extractMin();\n    }\n  }\n\n  do {\n    --this.size_;\n  } while (this.size_ > 0 && this.keys_[this.order_[this.size_ - 1]] === null);\n\n  return sortMin;\n};\n\n\n/**\n * [minimum description]\n * @return {libtess.PQKey} [description].\n */\nlibtess.PriorityQ.prototype.minimum = function() {\n  if (this.size_ === 0) {\n    return this.heap_.minimum();\n  }\n\n  var sortMin = this.keys_[this.order_[this.size_ - 1]];\n  if (!this.heap_.isEmpty()) {\n    var heapMin = this.heap_.minimum();\n    if (this.leq_(heapMin, sortMin)) {\n      return heapMin;\n    }\n  }\n\n  return sortMin;\n};\n\n// NOTE(bckenny): libtess.PriorityQ.isEmpty_ isn't called within libtess and\n// isn't part of the public API. For now, leaving in but ignoring for coverage.\n/* istanbul ignore next */\n/**\n * Returns whether the priority queue is empty.\n * @private\n * @return {boolean}\n */\nlibtess.PriorityQ.prototype.isEmpty_ = function() {\n  return (this.size_ === 0) && this.heap_.isEmpty();\n};\n\n\n/**\n * [remove description]\n * @param {libtess.PQHandle} curr [description].\n */\nlibtess.PriorityQ.prototype.remove = function(curr) {\n  if (curr >= 0) {\n    this.heap_.remove(curr);\n    return;\n  }\n  curr = -(curr + 1);\n\n  this.keys_[curr] = null;\n  while (this.size_ > 0 && this.keys_[this.order_[this.size_ - 1]] === null) {\n    --this.size_;\n  }\n};\n\n\n\n/* global libtess */\n\n// TODO(bckenny): keys appear to always be GluVertex in this case?\n\n/**\n * [PriorityQHeap description]\n * @constructor\n * @struct\n * @param {function(libtess.PQKey, libtess.PQKey): boolean} leq [description].\n */\nlibtess.PriorityQHeap = function(leq) {\n  /**\n   * The heap itself. Active nodes are stored in the range 1..size. Each node\n   * stores only an index into handles.\n   * @private\n   * @type {Array.<libtess.PQNode>}\n   */\n  this.nodes_ = libtess.PQNode.realloc(null,\n      libtess.PriorityQHeap.INIT_SIZE_ + 1);\n\n  /**\n   * Each handle stores a key, plus a pointer back to the node which currently\n   * represents that key (ie. nodes[handles[i].node].handle == i).\n   * @private\n   * @type {Array.<libtess.PQHandleElem>}\n   */\n  this.handles_ = libtess.PQHandleElem.realloc(null,\n      libtess.PriorityQHeap.INIT_SIZE_ + 1);\n\n  // TODO(bckenny): size and max should probably be libtess.PQHandle for correct\n  // typing (see PriorityQ.js)\n  /**\n   * The size of the queue.\n   * @private\n   * @type {number}\n   */\n  this.size_ = 0;\n\n  /**\n   * The queue's current allocated space.\n   * @private\n   * @type {number}\n   */\n  this.max_ = libtess.PriorityQHeap.INIT_SIZE_;\n\n  /**\n   * The index of the next free hole in the handles array. Handle in that slot\n   * has next item in freeList in its node propert. If there are no holes,\n   * freeList === 0 and one at the end of handles must be use.\n   * @private\n   * @type {libtess.PQHandle}\n   */\n  this.freeList_ = 0;\n\n  /**\n   * Indicates that the heap has been initialized via init. If false, inserts\n   * are fast insertions at the end of a list. If true, all inserts will now be\n   * correctly ordered in the queue before returning.\n   * @private\n   * @type {boolean}\n   */\n  this.initialized_ = false;\n\n  // TODO(bckenny): leq was inlined by define in original, but appears to\n  // be vertLeq, as passed. Using injected version, but is it better just to\n  // manually inline?\n  /**\n   * [leq description]\n   * @private\n   * @type {function(libtess.PQKey, libtess.PQKey): boolean}\n   */\n  this.leq_ = leq;\n\n  // so that minimum returns null\n  this.nodes_[1].handle = 1;\n};\n\n\n/**\n * [INIT_SIZE_ description]\n * @private\n * @const\n * @type {number}\n */\nlibtess.PriorityQHeap.INIT_SIZE_ = 32;\n\n\n/**\n * [deleteHeap description]\n */\nlibtess.PriorityQHeap.prototype.deleteHeap = function() {\n  // TODO(bckenny): unnecessary, I think.\n  this.handles_ = null;\n  this.nodes_ = null;\n  // NOTE(bckenny): nulled at callsite in PriorityQ.deleteQ\n};\n\n\n/**\n * Initializing ordering of the heap. Must be called before any method other\n * than insert is called to ensure correctness when removing or querying.\n */\nlibtess.PriorityQHeap.prototype.init = function() {\n  // This method of building a heap is O(n), rather than O(n lg n).\n  for (var i = this.size_; i >= 1; --i) {\n    this.floatDown_(i);\n  }\n\n  this.initialized_ = true;\n};\n\n\n/**\n * Insert a new key into the heap.\n * @param {libtess.PQKey} keyNew The key to insert.\n * @return {libtess.PQHandle} A handle that can be used to remove the key.\n */\nlibtess.PriorityQHeap.prototype.insert = function(keyNew) {\n  var curr = ++this.size_;\n\n  // if the heap overflows, double its size.\n  if ((curr * 2) > this.max_) {\n    this.max_ *= 2;\n    this.nodes_ = libtess.PQNode.realloc(this.nodes_, this.max_ + 1);\n    this.handles_ = libtess.PQHandleElem.realloc(this.handles_, this.max_ + 1);\n  }\n\n  var free;\n  if (this.freeList_ === 0) {\n    free = curr;\n  } else {\n    free = this.freeList_;\n    this.freeList_ = this.handles_[free].node;\n  }\n\n  this.nodes_[curr].handle = free;\n  this.handles_[free].node = curr;\n  this.handles_[free].key = keyNew;\n\n  if (this.initialized_) {\n    this.floatUp_(curr);\n  }\n\n  return free;\n};\n\n\n/**\n * @return {boolean} Whether the heap is empty.\n */\nlibtess.PriorityQHeap.prototype.isEmpty = function() {\n  return this.size_ === 0;\n};\n\n\n/**\n * Returns the minimum key in the heap. If the heap is empty, null will be\n * returned.\n * @return {libtess.PQKey} [description].\n */\nlibtess.PriorityQHeap.prototype.minimum = function() {\n  return this.handles_[this.nodes_[1].handle].key;\n};\n\n\n/**\n * Removes the minimum key from the heap and returns it. If the heap is empty,\n * null will be returned.\n * @return {libtess.PQKey} [description].\n */\nlibtess.PriorityQHeap.prototype.extractMin = function() {\n  var n = this.nodes_;\n  var h = this.handles_;\n  var hMin = n[1].handle;\n  var min = h[hMin].key;\n\n  if (this.size_ > 0) {\n    n[1].handle = n[this.size_].handle;\n    h[n[1].handle].node = 1;\n\n    h[hMin].key = null;\n    h[hMin].node = this.freeList_;\n    this.freeList_ = hMin;\n\n    if (--this.size_ > 0) {\n      this.floatDown_(1);\n    }\n  }\n\n  return min;\n};\n\n\n/**\n * Remove key associated with handle hCurr (returned from insert) from heap.\n * @param {libtess.PQHandle} hCurr [description].\n */\nlibtess.PriorityQHeap.prototype.remove = function(hCurr) {\n  var n = this.nodes_;\n  var h = this.handles_;\n\n  var curr = h[hCurr].node;\n  n[curr].handle = n[this.size_].handle;\n  h[n[curr].handle].node = curr;\n\n  if (curr <= --this.size_) {\n    if (curr <= 1 ||\n        this.leq_(h[n[curr >> 1].handle].key, h[n[curr].handle].key)) {\n\n      this.floatDown_(curr);\n    } else {\n      this.floatUp_(curr);\n    }\n  }\n\n  h[hCurr].key = null;\n  h[hCurr].node = this.freeList_;\n  this.freeList_ = hCurr;\n};\n\n\n/**\n * [floatDown_ description]\n * @private\n * @param {libtess.PQHandle} curr [description].\n */\nlibtess.PriorityQHeap.prototype.floatDown_ = function(curr) {\n  var n = this.nodes_;\n  var h = this.handles_;\n\n  var hCurr = n[curr].handle;\n  for (;;) {\n    // The children of node i are nodes 2i and 2i+1.\n    // set child to the index of the child with the minimum key\n    var child = curr << 1;\n    if (child < this.size_ &&\n        this.leq_(h[n[child + 1].handle].key, h[n[child].handle].key)) {\n\n      ++child;\n    }\n\n    var hChild = n[child].handle;\n    if (child > this.size_ || this.leq_(h[hCurr].key, h[hChild].key)) {\n      n[curr].handle = hCurr;\n      h[hCurr].node = curr;\n      break;\n    }\n    n[curr].handle = hChild;\n    h[hChild].node = curr;\n    curr = child;\n  }\n};\n\n\n/**\n * [floatUp_ description]\n * @private\n * @param {libtess.PQHandle} curr [description].\n */\nlibtess.PriorityQHeap.prototype.floatUp_ = function(curr) {\n  var n = this.nodes_;\n  var h = this.handles_;\n\n  var hCurr = n[curr].handle;\n  for (;;) {\n    var parent = curr >> 1;\n    var hParent = n[parent].handle;\n    if (parent === 0 || this.leq_(h[hParent].key, h[hCurr].key)) {\n      n[curr].handle = hCurr;\n      h[hCurr].node = curr;\n      break;\n    }\n\n    n[curr].handle = hParent;\n    h[hParent].node = curr;\n    curr = parent;\n  }\n};\n\n\n/* global libtess */\n\n// TODO(bckenny): apparently only visible outside of sweep for debugging routines.\n// find out if we can hide\n\n/**\n * For each pair of adjacent edges crossing the sweep line, there is\n * an ActiveRegion to represent the region between them. The active\n * regions are kept in sorted order in a dynamic dictionary. As the\n * sweep line crosses each vertex, we update the affected regions.\n * @constructor\n * @struct\n */\nlibtess.ActiveRegion = function() {\n  // TODO(bckenny): I *think* eUp and nodeUp could be passed in as constructor params\n\n  /**\n   * The upper edge of the region, directed right to left\n   * @type {libtess.GluHalfEdge}\n   */\n  this.eUp = null;\n\n  /**\n   * Dictionary node corresponding to eUp edge.\n   * @type {libtess.DictNode}\n   */\n  this.nodeUp = null;\n\n  /**\n   * Used to determine which regions are inside the polygon.\n   * @type {number}\n   */\n  this.windingNumber = 0;\n\n  /**\n   * Whether this region is inside the polygon.\n   * @type {boolean}\n   */\n  this.inside = false;\n\n  /**\n   * Marks fake edges at t = +/-infinity.\n   * @type {boolean}\n   */\n  this.sentinel = false;\n\n  /**\n   * Marks regions where the upper or lower edge has changed, but we haven't\n   * checked whether they intersect yet.\n   * @type {boolean}\n   */\n  this.dirty = false;\n\n  /**\n   * marks temporary edges introduced when we process a \"right vertex\" (one\n   * without any edges leaving to the right)\n   * @type {boolean}\n   */\n  this.fixUpperEdge = false;\n};\n\n/**\n * Returns the ActiveRegion below this one.\n * @return {libtess.ActiveRegion}\n */\nlibtess.ActiveRegion.prototype.regionBelow = function() {\n  return this.nodeUp.getPredecessor().getKey();\n};\n\n/**\n * Returns the ActiveRegion above this one.\n * @return {libtess.ActiveRegion}\n */\nlibtess.ActiveRegion.prototype.regionAbove = function() {\n  return this.nodeUp.getSuccessor().getKey();\n};\n\n/* global libtess, module */\n\nexport default libtess;\n","import WorldWind from 'webworldwind-esa';\n\nconst {\n    GpuProgram\n} = WorldWind;\n\nexport default class ScreenColorProgram extends GpuProgram {\n\n    constructor(gl) {\n        const vertexShaderSource =\n            'attribute vec3 a_position;\\n' +\n\n            'uniform vec2 u_resolution;\\n' +\n\n            'void main() {\\n' +\n                // convert the position from pixels to 0.0 to 1.0\n            '   vec2 zeroToOne = a_position.xy / u_resolution;\\n' +\n\n                // convert from 0->1 to 0->2\n            '   vec2 zeroToTwo = zeroToOne * 2.0;\\n' +\n\n                // convert from 0->2 to -1->+1 (clipspace)\n            '   vec2 clipSpace = zeroToTwo - 1.0;\\n' +\n\n            '   gl_Position = vec4(clipSpace, 0, 1);\\n' +\n            '}';\n\n        const fragmentShaderSource =\n            'precision mediump float;\\n' +\n\n            'uniform vec4 color;\\n' +\n\n            'void main() {\\n' +\n            '   gl_FragColor = color;\\n' +\n            '}';\n\n        super(gl, vertexShaderSource, fragmentShaderSource, ['a_position']);\n\n        this.resolutionLocation = this.uniformLocation(gl, 'u_resolution');\n        this.colorLocation = this.uniformLocation(gl, 'color');\n\n        this.localCache = {\n            resolution: {\n                width: null,\n                height: null,\n            },\n            color: {\n                r: null,\n                g: null,\n                b: null,\n                a: null,\n            },\n        };\n    }\n\n    loadResolution(gl, width, height) {\n        if (this.localCache.resolution.width === width && this.localCache.resolution.height === height) {\n            return;\n        }\n        gl.uniform2f(this.resolutionLocation, width, height);\n        this.localCache.resolution.width = width;\n        this.localCache.resolution.height = height;\n    }\n\n    loadColor(gl, color) {\n        const cacheColor = this.localCache.color;\n        if (cacheColor.r === color.red &&\n            cacheColor.g === color.green &&\n            cacheColor.b === color.blue &&\n            cacheColor.a === color.alpha) {\n            return;\n        }\n        const a = color.alpha;\n        gl.uniform4f(this.colorLocation, color.red * a, color.green * a, color.blue * a, color.alpha);\n        cacheColor.r = color.red;\n        cacheColor.g = color.green;\n        cacheColor.b = color.blue;\n        cacheColor.a = color.alpha;\n    }\n\n}\n\nScreenColorProgram.key = 'WorldWindGpuScreenColorProgram';","import WorldWind from 'webworldwind-esa';\n\nconst {\n    GpuProgram\n} = WorldWind;\n\nexport default class ScreenTextureProgram extends GpuProgram {\n\n    constructor(gl) {\n        const vertexShaderSource =\n            'attribute vec3 a_position;\\n' +\n            'attribute vec2 vertexTexCoord;\\n' +\n\n            'uniform vec2 u_resolution;\\n' +\n\n            'varying vec2 texCoord;\\n' +\n\n            'void main() {\\n' +\n            // convert the position from pixels to 0.0 to 1.0\n            '   vec2 zeroToOne = a_position.xy / u_resolution;\\n' +\n\n            // convert from 0->1 to 0->2\n            '   vec2 zeroToTwo = zeroToOne * 2.0;\\n' +\n\n            // convert from 0->2 to -1->+1 (clipspace)\n            '   vec2 clipSpace = zeroToTwo - 1.0;\\n' +\n\n            '   gl_Position = vec4(clipSpace, 0, 1);\\n' +\n            '   gl_PointSize = 3.0;\\n' +\n            '   texCoord = vertexTexCoord;\\n' +\n            '}';\n\n        const fragmentShaderSource =\n            'precision mediump float;\\n' +\n\n            'uniform sampler2D textureSampler;\\n' +\n\n            'varying vec2 texCoord;\\n' +\n\n            'void main() {\\n' +\n            '   gl_FragColor = texture2D(textureSampler, texCoord);\\n' +\n            //'   gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);\\n' +\n            '}';\n\n        super(gl, vertexShaderSource, fragmentShaderSource, ['a_position', 'vertexTexCoord']);\n\n        this.resolutionLocation = this.uniformLocation(gl, 'u_resolution');\n        this.texUnitLocation = this.uniformLocation(gl, 'textureSampler');\n\n        this.localCache = {\n            resolution: {\n                width: null,\n                height: null,\n            },\n            textureUnit: null,\n        };\n    }\n\n    loadResolution(gl, width, height) {\n        if (this.localCache.resolution.width === width && this.localCache.resolution.height === height) {\n            return;\n        }\n        gl.uniform2f(this.resolutionLocation, width, height);\n        this.localCache.resolution.width = width;\n        this.localCache.resolution.height = height;\n    }\n\n    loadTextureUnit(gl, unit) {\n        if (this.localCache.textureUnit === unit) {\n            return;\n        }\n        gl.uniform1i(this.texUnitLocation, unit - gl.TEXTURE0);\n        this.localCache.textureUnit = unit;\n    }\n\n}\n\nScreenTextureProgram.key = 'WorldWindGpuScreenTextureProgram';","import libtess from './libtess';\nimport ScreenColorProgram from './ScreenColorProgram';\nimport ScreenTextureProgram from './ScreenTextureProgram';\nimport WorldWind from 'webworldwind-esa';\n\nconst {\n    Angle,\n    SurfaceShape,\n    PickedObject,\n    Texture,\n    Location,\n} = WorldWind;\n\nconst WGS84_SEMI_MAJOR_AXIS = 6378137.0;\n\nexport default class TexturedSurfaceShape extends SurfaceShape {\n\n    static tesselator() {\n        if (!TexturedSurfaceShape.tess) {\n            TexturedSurfaceShape.tess = new libtess.GluTesselator();\n        }\n        return TexturedSurfaceShape.tess;\n    }\n\n    static nextId() {\n        if (!TexturedSurfaceShape._nextId) {\n            TexturedSurfaceShape._nextId = 0;\n        }\n        return TexturedSurfaceShape._nextId++;\n    }\n\n    static staticStateKey(shape) {\n        shape.stateKeyInvalid = false;\n\n        if (shape.highlighted) {\n            if (!shape._highlightAttributes) {\n                if (!shape._attributes) {\n                    shape._attributesStateKey = null;\n                } else {\n                    shape._attributesStateKey = shape._attributes.stateKey;\n                }\n            } else {\n                shape._attributesStateKey = shape._highlightAttributes.stateKey;\n            }\n        } else {\n            if (!shape._attributes) {\n                shape._attributesStateKey = null;\n            } else {\n                shape._attributesStateKey = shape._attributes.stateKey;\n            }\n        }\n\n        return 'dn ' + shape.displayName +\n            ' id ' + shape._id +\n            ' at ' + (!shape._attributesStateKey ? 'null' : shape._attributesStateKey) +\n            ' hi ' + shape.highlighted +\n            ' en ' + shape.enabled +\n            ' pt ' + shape.pathType +\n            ' ne ' + shape.maximumNumEdgeIntervals +\n            ' po ' + shape.polarThrottle +\n            ' img ' + !!shape.image +\n            ' se ' + '[' +\n            shape.sector.minLatitude + ',' +\n            shape.sector.maxLatitude + ',' +\n            shape.sector.minLongitude + ',' +\n            shape.sector.maxLongitude +\n            ']';\n    }\n\n    constructor(attributes) {\n        super(attributes);\n\n        this._image = null;\n        this._imageUUID = '';\n        this._interiorVboCacheKey = '';\n        this._outlineVboCacheKey = '';\n\n        this._contoursPrepered = false;\n        this._contoursInfo = [];\n\n        this._id = TexturedSurfaceShape.nextId();\n    }\n\n    get image() {\n        return this._image;\n    }\n\n    set image(img) {\n        this._image = img;\n        this.stateKeyInvalid = true;\n    }\n\n    get imageUUID() {\n        return this._imageUUID;\n    }\n\n    set imageUUID(value) {\n        this._imageUUID = value;\n    }\n\n    renderToTexture(dc, fbo, xScale, yScale, dx, dy) {\n        const attributes = (this._highlighted ? (this._highlightAttributes || this._attributes) : this._attributes);\n        const drawInterior = (!this._isInteriorInhibited && attributes.drawInterior);\n        const drawOutline = (attributes.drawOutline && attributes.outlineWidth > 0);\n\n        if (!drawInterior && !drawOutline) {\n            return;\n        }\n\n        if (dc.pickingMode && !this.pickColor) {\n            this.pickColor = dc.uniquePickColor();\n        }\n\n        //TODO pass width and height from SurfaceShapeTile\n        const tileWidth = 256;\n        const tileHeight = 256;\n\n        var i;\n        const interiorGeometry = this.mapGeometry(this._interiorGeometry, xScale, yScale, dx, dy);\n        for (i = 0; i < interiorGeometry.length; i++) {\n            if (!this._contoursPrepered) {\n                var wo = this.windingOrder_all(interiorGeometry[i]);\n                this._contoursInfo.push({wo: wo});\n            }\n\n            var points = interiorGeometry[i];\n            if (points[0] === points[points.length - 2] && points[1] === points[points.length - 1]) {\n                points.pop();\n                points.pop();\n            }\n        }\n\n        if (this._image && !dc.pickingMode && !this.crossesAntiMeridian && !this.containsPole) {\n            if (!this._contoursPrepered) {\n                if (interiorGeometry.length === 1) {\n                    const {anglesMap, topLeftIndex} = this.getCorners(interiorGeometry[0], this._contoursInfo[0].wo);\n                    const uvs = this.computeUvs(this._contoursInfo[0].wo, anglesMap, topLeftIndex, this._interiorGeometry[0]);\n                    this._contoursInfo[0].anglesMap = anglesMap;\n                    this._contoursInfo[0].topLeftIndex = topLeftIndex;\n                    this._contoursInfo[0].uvs = uvs;\n\n                    var tessGeom = this.tessellate_p1(interiorGeometry[0], uvs);\n                    var tessIndices = [];\n                    for (i = 0; i < tessGeom.length; i += 5) {\n                        var x = tessGeom[i];\n                        var y = tessGeom[i + 1];\n\n                        for (var j = 0; j < interiorGeometry[0].length; j += 2) {\n                            var px = interiorGeometry[0][j];\n                            var py = interiorGeometry[0][j + 1];\n                            if (px === x && py === y) {\n                                tessIndices.push(j / 2);\n                                break;\n                            }\n                        }\n                    }\n                    this._contoursInfo[0].iboData = new Uint16Array(tessIndices);\n\n                    var len = Math.floor(interiorGeometry[0].length / 2) * 5;\n                    this._contoursInfo[0].vboData = new Float32Array(len);\n\n                    var vboData = this._contoursInfo[0].vboData;\n                    var k = 0;\n                    for (i = 0; i < vboData.length; i += 5) {\n                        vboData[i] = interiorGeometry[k];\n                        vboData[i + 1] = interiorGeometry[k + 1];\n                        vboData[i + 2] = 0;\n                        vboData[i + 3] = uvs[k];\n                        vboData[i + 4] = uvs[k + 1];\n                        k += 2;\n                    }\n\n                    this._contoursPrepered = true;\n                }\n                else {\n\n                }\n                //this._contoursPrepered = true;\n            }\n            this.renderTexture(dc, {\n                points: interiorGeometry[0],\n                tileWidth,\n                tileHeight,\n                xScale,\n                yScale,\n                dx,\n                dy,\n            });\n        }\n        else {\n            this.renderColor(dc, {\n                tileWidth,\n                tileHeight,\n                xScale,\n                yScale,\n                dx,\n                dy,\n                drawInterior,\n                interiorColor: attributes.interiorColor,\n                drawOutline,\n                outlineColor: attributes.outlineColor,\n            });\n            this._contoursPrepered = true;\n        }\n\n        if (dc.pickingMode) {\n            var po = new PickedObject(this.pickColor.clone(), this.pickDelegate ? this.pickDelegate : this,\n                null, this.layer, false);\n            dc.resolvePick(po);\n        }\n    }\n\n    renderColor(dc, {tileWidth, tileHeight, xScale, yScale, dx, dy, drawInterior, interiorColor}) {\n        if (!this.tessGeom) {\n            this.tessGeom = this.tessellate(this._interiorGeometry);\n            this.tessTris = new Float32Array(this.tessGeom.length);\n        }\n\n        if (!this.wo) {\n            const interiorGeometry = this.mapGeometry(this._interiorGeometry, xScale, yScale, dx, dy);\n            this.wo = this.windingOrder_all(interiorGeometry[0]);\n        }\n\n        const gl = dc.currentGlContext;\n        const program = dc.findAndBindProgram(ScreenColorProgram);\n        program.loadResolution(gl, tileWidth, tileHeight);\n        gl.enableVertexAttribArray(0);\n\n        if (drawInterior) {\n            program.loadColor(gl, dc.pickingMode ? this.pickColor : interiorColor);\n\n            for (var i = 0; i < this.tessGeom.length; i += 3) {\n                var x = this.tessGeom[i];\n                var y = this.tessGeom[i + 1];\n                this.tessTris[i] = x * Angle.RADIANS_TO_DEGREES * xScale + dx;\n                this.tessTris[i + 1] = y * Angle.RADIANS_TO_DEGREES * yScale + dy;\n                this.tessTris[i + 2] = 0;\n            }\n\n            this.bindInteriorVbo(dc, this.tessTris, null);\n            gl.vertexAttribPointer(0, 3, gl.FLOAT, false, 0, 0);\n\n            if (this.wo === 'CW') {\n                gl.frontFace(gl.CW);\n            }\n            gl.drawArrays(gl.TRIANGLES, 0, Math.floor(this.tessTris.length / 3));\n\n            if (this.wo === 'CW') {\n                gl.frontFace(gl.CCW);\n            }\n        }\n\n        //if (drawOutline || true) {\n        /*program.loadColor(gl, attributes.outlineColor);\n        this.bindOutlineVbo(dc, new Float32Array(outlineGeometry[0]), null);\n        gl.vertexAttribPointer(0, 2, gl.FLOAT, false, 0, 0);\n        gl.drawArrays(gl.LINE_STRIP, 0, Math.floor(outlineGeometry[0].length / 2));*/\n        //}\n    }\n\n    renderTexture(dc, {points, tileWidth, tileHeight, xScale, yScale, dx, dy, anglesMap, topLeftIndex}) {\n\n        var vboData = this._contoursInfo[0].vboData;\n        var k = 0;\n        for (var i = 0; i < vboData.length; i += 5) {\n            vboData[i] = points[k];\n            vboData[i + 1] = points[k + 1];\n            k += 2;\n        }\n\n        const gl = dc.currentGlContext;\n        const program = dc.findAndBindProgram(ScreenTextureProgram);\n        program.loadResolution(gl, tileWidth, tileHeight);\n        gl.enableVertexAttribArray(0);\n        gl.enableVertexAttribArray(1);\n        program.loadTextureUnit(gl, gl.TEXTURE0);\n        const imageTextureKey = this._imageUUID || this._image.src;\n        if (!imageTextureKey) {\n            console.error('TexturedSurfaceShape, no uuid for image. Use shape.imageUUID to set a unique id');\n        }\n        let imageTexture = dc.gpuResourceCache.resourceForKey(imageTextureKey);\n\n        if (!imageTexture) {\n            imageTexture = new Texture(gl, this._image, null, true);\n            dc.gpuResourceCache.putResource(imageTextureKey, imageTexture, imageTexture.size);\n        }\n\n        imageTexture.bind(dc);\n\n        this.bindInteriorVbo(dc, vboData, null);\n        this.bindInteriorIbo(dc, this._contoursInfo[0].iboData, null);\n        /*var buf = gl.createBuffer();\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buf);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, this._contoursInfo[0].iboData, gl.STATIC_DRAW);*/\n        const valuesPerVertex = 3 + 2; //3 values for position and 2 values for uvs\n        const sizeOfFloat32 = 4;\n        const vertexSize = valuesPerVertex * sizeOfFloat32;\n\n        gl.vertexAttribPointer(0, 3, gl.FLOAT, false, vertexSize, 0);\n        gl.vertexAttribPointer(1, 2, gl.FLOAT, false, vertexSize, 3 * sizeOfFloat32);\n\n        if (this._contoursInfo[0].wo === 'CW') {\n            gl.frontFace(gl.CW);\n        }\n\n        gl.drawElements(gl.TRIANGLES, this._contoursInfo[0].iboData.length, gl.UNSIGNED_SHORT, 0);\n\n        //gl.drawArrays(gl.TRIANGLES, 0, Math.floor(this._contoursInfo[0].tessTris.length / 5));\n        //gl.drawArrays(gl.POINTS, 0,  Math.floor(this.tessTris.length / 5));\n        /*for (var i =0 ; i < this.tessTris.length; i += 3) {\n            gl.drawArrays(gl.LINE_LOOP, i, 3);\n        }*/\n\n        if (this._contoursInfo[0].wo === 'CW') {\n            gl.frontFace(gl.CCW);\n        }\n\n        gl.disableVertexAttribArray(1);\n    }\n\n    computeUvs(wo, anglesMap, topLeftIndex, locations1) {\n        const locations = locations1.slice();\n        locations.pop();\n        var uvs = new Float32Array(locations.length * 2);\n        var side = '';\n\n        for (var i = topLeftIndex; i < locations.length + topLeftIndex; i++) {\n            var index = i % locations.length;\n            var uv = {s: -1, t: -1};\n\n            if (anglesMap[index]) {\n                //is corner\n                side = this.nextSide(side, wo);\n\n                var sideStart = locations[index];\n                var sideEnd = null;\n                for (var j = i + 1; j < locations.length + topLeftIndex; j++) {\n                    var jIndex = j % locations.length;\n                    if (anglesMap[jIndex] != null) {\n                        sideEnd = locations[jIndex];\n                        break;\n                    }\n                }\n                if (!sideEnd) {\n                    sideEnd = locations[topLeftIndex];\n                }\n                var sideDistance = Location.greatCircleDistance(sideStart, sideEnd) * WGS84_SEMI_MAJOR_AXIS;\n            }\n\n            var distance = Location.greatCircleDistance(sideStart, locations[index]) * WGS84_SEMI_MAJOR_AXIS;\n\n            if (wo === 'CW') {\n                if (side === 'top') {\n                    uv.s = distance / sideDistance;\n                    uv.t = 0;\n                }\n                else if (side === 'right') {\n                    uv.s = 1;\n                    uv.t = distance / sideDistance;\n                }\n                else if (side === 'bottom') {\n                    uv.s = 1 - distance / sideDistance;\n                    uv.t = 1;\n                }\n                else if (side === 'left') {\n                    uv.s = 0;\n                    uv.t = 1 - distance / sideDistance;\n                }\n            }\n            else {\n                if (side === 'left') {\n                    uv.s = 0;\n                    uv.t = distance / sideDistance;\n                }\n                else if (side === 'bottom') {\n                    uv.s = distance / sideDistance;\n                    uv.t = 1;\n                }\n                else if (side === 'right') {\n                    uv.s = 1;\n                    uv.t = 1 - distance / sideDistance;\n                }\n                else if (side === 'top') {\n                    uv.s = 1 - distance / sideDistance;\n                    uv.t = 0;\n                }\n            }\n\n            uvs[index * 2] = uv.s;\n            uvs[index * 2 + 1] = uv.t;\n        }\n\n        return uvs;\n    }\n\n    nextSide(side, wo) {\n        var nextSide = '';\n        if (wo === 'CW') {\n            nextSide = 'top';\n            if (side === 'top') {\n                nextSide = 'right';\n            }\n            else if (side === 'right') {\n                nextSide = 'bottom';\n            }\n            else if (side === 'bottom') {\n                nextSide = 'left';\n            }\n            else if (side === 'left') {\n                nextSide = 'top';\n            }\n        }\n        else {\n            nextSide = 'left';\n            if (side === 'left') {\n                nextSide = 'bottom';\n            }\n            else if (side === 'bottom') {\n                nextSide = 'right';\n            }\n            else if (side === 'right') {\n                nextSide = 'top';\n            }\n            else if (side === 'top') {\n                nextSide = 'left';\n            }\n        }\n\n        return nextSide;\n    }\n\n    mapGeometry(contours, xScale, yScale, dx, dy) {\n        return contours.map(contour => {\n            return contour.reduce((acc, location) => {\n                const x = location.longitude * xScale + dx;\n                const y = location.latitude * yScale + dy;\n                acc.push(x, y);\n                return acc;\n            }, []);\n        });\n    }\n\n    bindInteriorVbo(dc, vboData, vboUsage) {\n        vboUsage = vboUsage || dc.currentGlContext.STATIC_DRAW;\n        if (!this._interiorVboCacheKey) {\n            this._interiorVboCacheKey = dc.gpuResourceCache.generateCacheKey();\n        }\n\n        this.bindVbo(dc, vboData, vboUsage, this._interiorVboCacheKey);\n    }\n\n    bindOutlineVbo(dc, vboData, vboUsage) {\n        vboUsage = vboUsage || dc.currentGlContext.STATIC_DRAW;\n        if (!this._outlineVboCacheKey) {\n            this._outlineVboCacheKey = dc.gpuResourceCache.generateCacheKey();\n        }\n\n        this.bindVbo(dc, vboData, vboUsage, this._outlineVboCacheKey);\n    }\n\n    bindVbo(dc, vboData, vboUsage, cacheKey) {\n        const gl = dc.currentGlContext;\n\n        let vbo = dc.gpuResourceCache.resourceForKey(cacheKey);\n        const vboEntry = dc.gpuResourceCache.entries.entries[cacheKey];\n        let vboSize = 0;\n        if (vboEntry) {\n            vboSize = vboEntry.size;\n        }\n        if (!vbo || vboSize < vboData.length * vboData.BYTES_PER_ELEMENT) {\n            vbo = gl.createBuffer();\n            gl.bindBuffer(gl.ARRAY_BUFFER, vbo);\n            gl.bufferData(gl.ARRAY_BUFFER, vboData, vboUsage);\n            dc.gpuResourceCache.putResource(cacheKey, vbo, vboData.length * vboData.BYTES_PER_ELEMENT);\n        }\n        else {\n            gl.bindBuffer(gl.ARRAY_BUFFER, vbo);\n            gl.bufferSubData(gl.ARRAY_BUFFER, 0, vboData);\n        }\n    }\n\n    bindInteriorIbo(dc, iboData, iboUsage) {\n        iboUsage = iboUsage || dc.currentGlContext.STATIC_DRAW;\n        if (!this._interiorIboCacheKey) {\n            this._interiorIboCacheKey = dc.gpuResourceCache.generateCacheKey();\n        }\n\n        this.bindIbo(dc, iboData, iboUsage, this._interiorIboCacheKey);\n    }\n\n    bindIbo(dc, iboData, iboUsage, cacheKey) {\n        const gl = dc.currentGlContext;\n\n        let ibo = dc.gpuResourceCache.resourceForKey(cacheKey);\n        const vboEntry = dc.gpuResourceCache.entries.entries[cacheKey];\n        let iboSize = 0;\n        if (vboEntry) {\n            iboSize = vboEntry.size;\n        }\n        if (!ibo || iboSize < iboData.length * iboData.BYTES_PER_ELEMENT) {\n            ibo = gl.createBuffer();\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, ibo);\n            gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, iboData, iboUsage);\n            dc.gpuResourceCache.putResource(cacheKey, ibo, iboData.length * iboData.BYTES_PER_ELEMENT);\n        }\n        else {\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, ibo);\n        }\n    }\n\n    tessellate_p(points, uvs) {\n        var tess = TexturedSurfaceShape.tesselator();\n        var triangles = [];\n\n        tess.gluTessCallback(libtess.gluEnum.GLU_TESS_BEGIN, function (prim) {\n            if (prim !== libtess.primitiveType.GL_TRIANGLES) {\n                console.error('Tessellation error, primitive is not TRIANGLES.');\n            }\n        });\n\n        tess.gluTessCallback(libtess.gluEnum.GLU_TESS_COMBINE, function (coords, data, weight) {\n            var newCoords = [coords[0], coords[1], coords[2]];\n\n            if (uvs && uvs.length) {\n                for (var i = 3; i <= 4; i++) {\n                    var value = 0;\n                    for (var w = 0; w < 4; w++) {\n                        if (weight[w] > 0) {\n                            value += weight[w] * data[w][i];\n                        }\n                    }\n\n                    newCoords[i] = value;\n                }\n            }\n\n            return newCoords;\n        });\n\n        //prevents triangle fans and strips\n        tess.gluTessCallback(libtess.gluEnum.GLU_TESS_EDGE_FLAG, function () {\n        });\n\n        tess.gluTessCallback(libtess.gluEnum.GLU_TESS_VERTEX_DATA, function (data, tris) {\n            tris.push(data[0]);\n            tris.push(data[1]);\n            tris.push(data[2]);\n\n            if (uvs && uvs.length) {\n                tris.push(data[3]);\n                tris.push(data[4]);\n            }\n        });\n\n        tess.gluTessCallback(libtess.gluEnum.GLU_TESS_ERROR, function (errno) {\n            console.error('tess err', errno);\n        });\n\n        tess.gluTessBeginPolygon(triangles);\n        tess.gluTessBeginContour();\n\n        var k = 0;\n        for (var i = 0; i < points.length; i++) {\n\n            var vertex = [points[i].x, points[i].y, 0];\n            if (uvs && uvs.length) {\n                vertex.push(uvs[k], uvs[k + 1]);\n                k += 2;\n            }\n\n            tess.gluTessVertex(vertex, vertex);\n        }\n\n        tess.gluTessEndContour();\n        tess.gluTessEndPolygon();\n\n        return triangles;\n    }\n\n    tessellate_p1(points, uvs) {\n        var tess = TexturedSurfaceShape.tesselator();\n        var triangles = [];\n\n        tess.gluTessCallback(libtess.gluEnum.GLU_TESS_BEGIN, function (prim) {\n            if (prim !== libtess.primitiveType.GL_TRIANGLES) {\n                console.error('Tessellation error, primitive is not TRIANGLES.');\n            }\n        });\n\n        tess.gluTessCallback(libtess.gluEnum.GLU_TESS_COMBINE, function (coords, data, weight) {\n            var newCoords = [coords[0], coords[1], coords[2]];\n\n            if (uvs && uvs.length) {\n                for (var i = 3; i <= 4; i++) {\n                    var value = 0;\n                    for (var w = 0; w < 4; w++) {\n                        if (weight[w] > 0) {\n                            value += weight[w] * data[w][i];\n                        }\n                    }\n\n                    newCoords[i] = value;\n                }\n            }\n\n            return newCoords;\n        });\n\n        //prevents triangle fans and strips\n        tess.gluTessCallback(libtess.gluEnum.GLU_TESS_EDGE_FLAG, function () {\n        });\n\n        tess.gluTessCallback(libtess.gluEnum.GLU_TESS_VERTEX_DATA, function (data, tris) {\n            tris.push(data[0]);\n            tris.push(data[1]);\n            tris.push(data[2]);\n\n            if (uvs && uvs.length) {\n                tris.push(data[3]);\n                tris.push(data[4]);\n            }\n        });\n\n        tess.gluTessCallback(libtess.gluEnum.GLU_TESS_ERROR, function (errno) {\n            console.error('tess err', errno);\n        });\n\n        tess.gluTessBeginPolygon(triangles);\n        tess.gluTessBeginContour();\n\n        var k = 0;\n        for (var i = 0; i < points.length; i += 2) {\n\n            var vertex = [points[i], points[i + 1], 0];\n            if (uvs && uvs.length) {\n                vertex.push(uvs[k], uvs[k + 1]);\n                k += 2;\n            }\n\n            tess.gluTessVertex(vertex, vertex);\n        }\n\n        tess.gluTessEndContour();\n        tess.gluTessEndPolygon();\n\n        return triangles;\n    }\n\n    tessellate(contours, uvs) {\n        var tess = TexturedSurfaceShape.tesselator();\n        var triangles = [];\n\n        tess.gluTessCallback(libtess.gluEnum.GLU_TESS_BEGIN, function (prim) {\n            if (prim !== libtess.primitiveType.GL_TRIANGLES) {\n                console.error('Tessellation error, primitive is not TRIANGLES.');\n            }\n        });\n\n        tess.gluTessCallback(libtess.gluEnum.GLU_TESS_COMBINE, function (coords, data, weight) {\n            var newCoords = [coords[0], coords[1], coords[2]];\n\n            if (uvs && uvs.length) {\n                for (var i = 3; i <= 4; i++) {\n                    var value = 0;\n                    for (var w = 0; w < 4; w++) {\n                        if (weight[w] > 0) {\n                            value += weight[w] * data[w][i];\n                        }\n                    }\n\n                    newCoords[i] = value;\n                }\n            }\n\n            return newCoords;\n        });\n\n        //prevents triangle fans and strips\n        tess.gluTessCallback(libtess.gluEnum.GLU_TESS_EDGE_FLAG, function () {\n        });\n\n        tess.gluTessCallback(libtess.gluEnum.GLU_TESS_VERTEX_DATA, function (data, tris) {\n            tris.push(data[0]);\n            tris.push(data[1]);\n            tris.push(data[2]);\n\n            if (uvs && uvs.length) {\n                tris.push(data[3]);\n                tris.push(data[4]);\n            }\n        });\n\n        tess.gluTessCallback(libtess.gluEnum.GLU_TESS_ERROR, function (errno) {\n            console.error('tess err', errno);\n        });\n\n        // Tessellate the polygon.\n        tess.gluTessBeginPolygon(triangles);\n        var k = 0;\n        for (var i = 0; i < contours.length; i++) {\n            tess.gluTessBeginContour();\n            var contour = contours[i];\n            for (var j = 0; j < contour.length; j += 1) {\n                var pos = contour[j];\n                var x = pos.longitude * Angle.DEGREES_TO_RADIANS;\n                var y = pos.latitude * Angle.DEGREES_TO_RADIANS;\n                var vertex = [x, y, 0];\n                if (uvs && uvs.length) {\n                    vertex.push(uvs[k], uvs[k + 1]);\n                    k += 2;\n                }\n                //console.log('vertex', vertex);\n                tess.gluTessVertex(vertex, vertex);\n            }\n            tess.gluTessEndContour();\n        }\n        tess.gluTessEndPolygon();\n\n        return triangles;\n    }\n\n    getBbox(points) {\n        const bbox = {\n            minX: Number.MAX_SAFE_INTEGER,\n            maxX: Number.MIN_SAFE_INTEGER,\n            minY: Number.MAX_SAFE_INTEGER,\n            maxY: Number.MIN_SAFE_INTEGER,\n            width: 0,\n            height: 0\n        };\n\n        for (var i = 0; i < points.length; i++) {\n            var point = points[i];\n            bbox.minX = Math.min(bbox.minX, point.x);\n            bbox.maxX = Math.max(bbox.maxX, point.x);\n            bbox.minY = Math.min(bbox.minY, point.y);\n            bbox.maxY = Math.max(bbox.maxY, point.y);\n        }\n\n        bbox.width = Math.abs(bbox.maxX - bbox.minX);\n        bbox.height = Math.abs(bbox.maxY - bbox.minY);\n\n        return bbox;\n    }\n\n    getCorners(points, wo) {\n        if (points.length === 4) {\n            //return this.reindexCorners(points);\n        }\n\n        var angles = [];\n        for (var i = 0; i < points.length; i += 2) {\n            var prevX;\n            var prevY;\n            var currentX;\n            var currentY;\n            var nextX;\n            var nextY;\n\n            if (i === 0) {\n                prevX = points[points.length - 2];\n                prevY = points[points.length - 1];\n            }\n            else {\n                prevX = points[i - 2];\n                prevY = points[i - 1];\n            }\n\n            currentX = points[i];\n            currentY = points[i + 1];\n\n            if (i === points.length - 2) {\n                nextX = points[0];\n                nextY = points[1];\n            }\n            else {\n                nextX = points[i + 2];\n                nextY = points[i + 3];\n            }\n\n            var angle = Math.atan2(nextY - currentY, nextX - currentX) -\n                Math.atan2(prevY - currentY, prevX - currentX);\n\n            angles.push({\n                index: i / 2,\n                angle: Math.abs(angle) * Angle.RADIANS_TO_DEGREES\n            });\n        }\n\n        angles = angles.filter(el => {\n            if (el.angle < 170 || el.angle > 190) {\n                return true;\n            }\n            return false;\n        });\n\n        /*var p0 = points[angles[0].index];\n        var p1 = points[angles[1].index];\n        var p2 = points[angles[2].index];\n        var p3 = points[angles[3].index];*/\n\n        var p0 = {x: points[angles[0].index * 2], y: points[angles[0].index * 2 + 1], index: angles[0].index};\n        var p1 = {x: points[angles[1].index * 2], y: points[angles[1].index * 2 + 1], index: angles[1].index};\n        var p2 = {x: points[angles[2].index * 2], y: points[angles[2].index * 2 + 1], index: angles[2].index};\n        var p3 = {x: points[angles[3].index * 2], y: points[angles[3].index * 2 + 1], index: angles[3].index};\n\n       /* p0.index = angles[0].index;\n        p1.index = angles[1].index;\n        p2.index = angles[2].index;\n        p3.index = angles[3].index;*/\n\n        //const corners = this.reindexCorners([p0, p1, p2, p3]);\n        const corners = this.findWhichCorners([p0, p1, p2, p3]);\n        const topLeftIndex = corners[0].index;\n\n        /*const newPoints = [];\n        const topLeftIndex = corners[0].index;\n        for (i = topLeftIndex; i < points.length + topLeftIndex; i++) {\n            newPoints.push(points[i % points.length]);\n        }*/\n\n        var anglesMap = angles.reduce((map, el) => {\n            var type = '';\n            var i = corners.findIndex(c => c.index === el.index);\n            if (wo === 'CW') {\n                if (i === 0) {\n                    type = 'tl';\n                }\n                else if (i === 1) {\n                    type = 'tr';\n                }\n                else if (i === 2) {\n                    type = 'br';\n                }\n                else if (i === 3) {\n                    type = 'bl';\n                }\n            }\n            else {\n                if (i === 0) {\n                    type = 'tl';\n                }\n                else if (i === 1) {\n                    type = 'bl';\n                }\n                else if (i === 2) {\n                    type = 'br';\n                }\n                else if (i === 3) {\n                    type = 'tr';\n                }\n            }\n            map[el.index] = type;\n            return map;\n        }, Object.create(null));\n\n        return {anglesMap, topLeftIndex};\n    }\n\n    findWhichCorners(corners) {\n        const userProps = this.userProperties;\n        if (userProps && userProps.identifier) {\n            var id = userProps.identifier;\n            //id = \"S3A_OL_1_ERR____20190110T190220_20190110T194614_20190110T211413_2634_040_113______SVL_O_NR_002.SEN3\"\n            if (id.indexOf('S3') === 0 && id.indexOf('OL_1_ERR___') !== -1) {\n                //these shapes span from pole to pole and became twisted in 2D\n                var geom = this._interiorGeometry[0];\n                var cornerLocations = corners.map(c => {\n                    var location = geom[c.index];\n                    return {latitude: location.latitude, longitude: location.longitude, index: c.index};\n                });\n                cornerLocations.sort((a, b) => a.latitude - b.latitude);\n                cornerLocations.length = 2;\n                var c0 = cornerLocations[0];\n                var c1 = cornerLocations[1];\n                if ((c0.longitude < 0 && c1.longitude > 0) ||\n                    (c0.longitude > 0 && c1.longitude < 0)) {\n                    cornerLocations.sort((a, b) => Math.abs(b.longitude) - Math.abs(a.longitude));\n                }\n                else {\n                    cornerLocations.sort((a, b) => Math.abs(a.longitude) - Math.abs(b.longitude));\n                }\n\n                var topLeftIndex = corners.findIndex(corner => corner.index === cornerLocations[0].index);\n                var newCorners;\n                if (topLeftIndex > 0) {\n                    newCorners = [];\n                    for (var i = topLeftIndex; i < corners.length + topLeftIndex; i++) {\n                        newCorners.push(corners[i % corners.length]);\n                    }\n                }\n\n                return newCorners || corners;\n            }\n        }\n\n        return this.reindexCorners(corners);\n    }\n\n    getCorners_old(points, bbox) {\n        if (this.isEqualPoints(points[0], points[points.length - 1])) {\n            points.pop();\n        }\n\n        if (points.length === 4) {\n            return this.reindexCorners(points);\n        }\n\n        bbox = bbox || this.getBbox(points);\n\n        var corners = [];\n        for (var i = 0; i < points.length - 1; i++) {\n            var point = points[i];\n            if (point.x === bbox.minX || point.x === bbox.maxX) {\n                corners.push(point);\n            }\n            else if (point.y === bbox.minY || point.y === bbox.maxY) {\n                corners.push(point);\n            }\n        }\n\n        if (corners.length < 4) {\n            return corners;\n        }\n\n        return this.reindexCorners(corners);\n    }\n\n    reindexCorners(corners) {\n        //return corners;\n\n        var topLeftIndex = -1;\n        var c = corners.slice();\n        c.sort((a, b) => b.y - a.y);\n        c.length = 2;\n        c.sort((a, b) => a.x - b.x);\n        topLeftIndex = c[0].index;\n        topLeftIndex = corners.findIndex(corner => corner.index === c[0].index);\n\n        //return topLeftIndex;\n\n        var newCorners;\n        if (topLeftIndex > 0) {\n            newCorners = [];\n            for (var i = topLeftIndex; i < corners.length + topLeftIndex; i++) {\n                newCorners.push(corners[i % corners.length]);\n            }\n        }\n\n        return newCorners || corners;\n    }\n\n    reindexCorners_old(corners) {\n        var topLeftIndex = -1;\n        var slope1 = this.getSlope(corners[0], corners[2]);\n        if (slope1 > 0) {\n            if (corners[0].y < corners[2].y) {\n                topLeftIndex = 0;\n            }\n            else {\n                topLeftIndex = 2;\n            }\n        }\n        var slope2 = this.getSlope(corners[1], corners[3]);\n        if (slope2 > 0) {\n            if (corners[1].y < corners[3].y) {\n                if (topLeftIndex !== -1) {\n                    console.error('slope method is not ok 1');\n                }\n                topLeftIndex = 1;\n            }\n            else {\n                if (topLeftIndex !== -1) {\n                    console.error('slope method is not ok 2');\n                }\n                topLeftIndex = 3;\n            }\n        }\n\n        if (topLeftIndex === -1) {\n            console.error('slope method could not determine topLeft');\n        }\n\n        var newCorners;\n        if (topLeftIndex > 0) {\n            newCorners = [];\n            for (var i = topLeftIndex; i < corners.length + topLeftIndex; i++) {\n                newCorners.push(corners[i % corners.length]);\n            }\n        }\n\n        return newCorners || corners;\n    }\n\n    isEqualPoints(p1, p2) {\n        return (\n            p1.x === p2.x &&\n            p1.y === p2.y\n        );\n    }\n\n    windingOrder(corners) {\n        const e0 = (corners[1].x - corners[0].x) * (corners[1].y + corners[0].y);\n        const e1 = (corners[2].x - corners[1].x) * (corners[2].y + corners[1].y);\n        const e2 = (corners[3].x - corners[2].x) * (corners[3].y + corners[2].y);\n        const e3 = (corners[0].x - corners[3].x) * (corners[0].y + corners[3].y);\n        const sum = e0 + e1 + e2 + e3;\n        if (sum < 0) {\n            return 'CCW';\n        }\n        return 'CW';\n    }\n\n    windingOrder_all(list) {\n        let sum = 0;\n        for (let i = 0; i < list.length - 2; i += 2) {\n            let i1 = (i + 2) % list.length;\n            let i0 = i % list.length;\n            let p1x = list[i1];\n            let p1y = list[i1 + 1];\n            let p0x = list[i0];\n            let p0y = list[i0 + 1];\n            sum += ((p1x - p0x) * (p1y + p0y));\n        }\n        if (sum < 0) {\n            return 'CCW';\n        }\n        return 'CW';\n    }\n\n    getSlope(p1, p2) {\n        return (p1.y - p2.y) / (p1.x - p2.x);\n    }\n\n    distance2D(p1, p2) {\n        var dx = p2.x - p1.x;\n        var dy = p2.y - p1.y;\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n\n}\n\nvar a = [\n    {latitude: -71.0573, longitude: -119.968}, //TL\n    {latitude: -79.6085, longitude: -149.754}, //TR\n    {latitude: 55.7391, longitude: 27.7961}, //BR\n    {latitude: 58.487, longitude: 6.61523}, //BL\n];\n\nvar b = [\n    {latitude: -70.6695, longitude: -54.5441}, //TL\n    {latitude: -79.8964, longitude: -85.1012}, //TR\n    {latitude: 55.9681, longitude: 91.5418}, //BR\n    {latitude: 58.7238, longitude: 70.2286}, //BL\n];","import TexturedSurfaceShape from './TexturedSurfaceShape';\n\nexport default class TexturedSurfacePolygon extends TexturedSurfaceShape {\n\n    static staticStateKey(shape) {\n        return TexturedSurfaceShape.staticStateKey(shape);\n    }\n\n    constructor(boundaries, attributes) {\n        super(attributes);\n\n        if (!Array.isArray(boundaries)) {\n            throw new Error('TexturedSurfacePolygon - constructor - The specified boundary is not an array.');\n\n        }\n\n        //this._boundaries = boundaries;\n        this._boundaries = this.removeDuplicateLocations(boundaries);\n    }\n\n    get boundaries() {\n        return this._boundaries;\n    }\n\n    set boundaries(boundaries) {\n        if (!Array.isArray(boundaries)) {\n            throw new Error('TexturedSurfacePolygon - set boundaries - The specified boundary is not an array.');\n        }\n        //this._boundaries = boundaries;\n        this._boundaries = this.removeDuplicateLocations(boundaries);\n        this.isPrepared = false;\n        this.stateKeyInvalid = true;\n    }\n\n    removeDuplicateLocations(boundaries) {\n        if (Array.isArray(boundaries[0])) {\n            const newBoundaries = [];\n            for (var i = 0; i < boundaries.length; i++) {\n                var contour = this.removeDuplicateLocationsFromContour(boundaries[i]);\n                newBoundaries.push(contour);\n            }\n            return newBoundaries;\n        }\n        else {\n            return this.removeDuplicateLocationsFromContour(boundaries);\n        }\n    }\n\n    removeDuplicateLocationsFromContour(contour) {\n        const newBoundaries = [];\n\n        for (var i = 0; i < contour.length ; i++) {\n            var loc = contour[i];\n            newBoundaries.push(loc);\n            for (var j = i + 1; j < contour.length; j++) {\n                var loc2 = contour[j];\n                if (loc.latitude !== loc2.latitude || loc.longitude !== loc2.longitude) {\n                    break;\n                }\n                i++;\n            }\n        }\n\n        return newBoundaries;\n    }\n\n    computeStateKey() {\n        return TexturedSurfacePolygon.staticStateKey(this);\n    }\n\n}","/*\n * Copyright 2003-2006, 2009, 2017, United States Government, as represented by the Administrator of the\n * National Aeronautics and Space Administration. All rights reserved.\n *\n * The NASAWorldWind/WebWorldWind platform is licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @exports GeoJSONParser\n */\nimport WorldWind from 'webworldwind-esa';\nimport TexturedSurfacePolygon from '../../wwwxx/textured/TexturedSurfacePolygon'\n\n\n\n    const { \n        ArgumentError,\n        GeoJSONConstants,\n        GeoJSONParser,\n        Location ,\n        Logger,\n        RenderableLayer\n              \n            } = WorldWind;\n\n        /**\n         * Creates a {@link SurfacePolygon} for a Polygon geometry.\n         * Applications typically do not call this method directly. It is called by\n         * [addRenderablesForGeometry]{@link GeoJSONParser#addRenderablesForGeometry}.\n         * <p>\n         * This method invokes this GeoJSON's\n         * [shapeConfigurationCallback]{@link GeoJSONParser#shapeConfigurationCallback} for the geometry.\n         * @param {RenderableLayer} layer The layer in which to place the newly created shapes.\n         * @param {GeoJSONGeometryPolygon} geometry The Polygon geometry object.\n         * @param {Object} properties The properties related to the Polygon geometry.\n         * @throws {ArgumentError} If the specified layer is null or undefined.\n         * @throws {ArgumentError} If the specified geometry is null or undefined.\n         */\n        GeoJSONParser.prototype.addRenderablesForPolygon = function (layer, geometry, properties) {\n            if (!layer) {\n                throw new ArgumentError(\n                    Logger.logMessage(Logger.LEVEL_SEVERE, \"GeoJSON\", \"addRenderablesForPolygon\", \"missingLayer\"));\n            }\n\n            if (!geometry) {\n                throw new ArgumentError(\n                    Logger.logMessage(Logger.LEVEL_SEVERE, \"GeoJSON\", \"addRenderablesForPolygon\", \"missingGeometry\"));\n            }\n\n            var configuration = this.shapeConfigurationCallback(geometry, properties);\n\n            if (!this.crs || this.crs.isCRSSupported()) {\n                var pBoundaries = [];\n                for (var boundariesIndex = 0, boundaries = geometry.coordinates;\n                     boundariesIndex < boundaries.length; boundariesIndex++) {\n                    var positions = [];\n\n                    for (var positionIndex = 0, points = boundaries[boundariesIndex];\n                         positionIndex < points.length; positionIndex++) {\n                        var longitude = points[positionIndex][0],\n                            latitude = points[positionIndex][1];\n                        //altitude = points[positionIndex][2] ?  points[positionIndex][2] : 0,\n                        var reprojectedCoordinate = this.getReprojectedIfRequired(\n                            latitude,\n                            longitude,\n                            this.crs);\n                        var position = new Location(reprojectedCoordinate[1], reprojectedCoordinate[0]);\n                        positions.push(position);\n                    }\n                    pBoundaries.push(positions);\n                }\n\n                    var shape;\n                    shape = new TexturedSurfacePolygon(\n                        pBoundaries,\n                        configuration && configuration.attributes ? configuration.attributes : null);\n                    if (configuration.highlightAttributes) {\n                        shape.highlightAttributes = configuration.highlightAttributes;\n                    }\n                    if (configuration && configuration.name) {\n                        shape.displayName = configuration.name;\n                    }\n                    if (configuration && configuration.pickDelegate) {\n                        shape.pickDelegate = configuration.pickDelegate;\n                    }\n                    if (configuration && configuration.userProperties) {\n                        shape.userProperties = configuration.userProperties;\n                    }\n                    if (configuration && configuration.timeRange) {\n                        shape.timeRange = configuration.timeRange;\n                    }\n                    layer.addRenderable(shape);\n            }\n        };\n\n        GeoJSONParser.prototype.load = function (parserCompletionCallback, shapeConfigurationCallback, layer) {\n            if (parserCompletionCallback) {\n                this._parserCompletionCallback = parserCompletionCallback;\n            }\n            if (shapeConfigurationCallback) {\n                this._shapeConfigurationCallback = shapeConfigurationCallback;\n            }\n            this._layer = layer || new RenderableLayer();\n            var dataSourceType = (typeof this.dataSource);\n            if (dataSourceType === 'string') {\n                var obj = GeoJSONParser.tryParseJSONString(this.dataSource);\n                if (obj !== null) {\n                    this.handle(obj);\n                } else {\n                    this.requestUrl(this.dataSource);\n                }\n            } else if (dataSourceType === 'object') {\n                this.handle(this.dataSource);\n            } else {\n                Logger.logMessage(Logger.LEVEL_SEVERE, \"GeoJSON\", \"load\",\n                    \"Unsupported data source type: \" + dataSourceType);\n            }\n        };\n\n\n\n        GeoJSONParser.prototype.addRenderablesForMultiPolygon = function (layer, geometry, properties) {\n            if (!layer) {\n                throw new ArgumentError(\n                    Logger.logMessage(Logger.LEVEL_SEVERE, \"GeoJSON\", \"addRenderablesForMultiPolygon\",\n                        \"missingLayer\"));\n            }\n            if (!geometry) {\n                throw new ArgumentError(\n                    Logger.logMessage(Logger.LEVEL_SEVERE, \"GeoJSON\", \"addRenderablesForMultiPolygon\",\n                        \"missingGeometry\"));\n            }\n            var configuration = this.shapeConfigurationCallback(geometry, properties);\n            if (!this.crs || this.crs.isCRSSupported()) {\n                for (var polygonsIndex = 0, polygons = geometry.coordinates;\n                     polygonsIndex < polygons.length; polygonsIndex++) {\n                    var boundaries = [];\n                    for (var boundariesIndex = 0; boundariesIndex < polygons[polygonsIndex].length; boundariesIndex++) {\n                        var positions = [];\n                        for (var positionIndex = 0, points = polygons[polygonsIndex][boundariesIndex];\n                             positionIndex < points.length; positionIndex++) {\n                            var longitude = points[positionIndex][0],\n                                latitude = points[positionIndex][1];\n                            //altitude = points[positionIndex][2] ?  points[positionIndex][2] : 0,;\n                            var reprojectedCoordinate = this.getReprojectedIfRequired(\n                                latitude,\n                                longitude,\n                                this.crs);\n                            var position = new Location(reprojectedCoordinate[1], reprojectedCoordinate[0]);\n                            positions.push(position);\n                        }\n                        boundaries.push(positions);\n                    }\n                    var shape;\n                    shape = new TexturedSurfacePolygon(\n                        boundaries,\n                        configuration && configuration.attributes ? configuration.attributes : null);\n                    if (configuration.highlightAttributes) {\n                        shape.highlightAttributes = configuration.highlightAttributes;\n                    }\n                    if (configuration && configuration.name) {\n                        shape.displayName = configuration.name;\n                    }\n                    if (configuration && configuration.pickDelegate) {\n                        shape.pickDelegate = configuration.pickDelegate;\n                    }\n                    if (configuration && configuration.userProperties) {\n                        shape.userProperties = configuration.userProperties;\n                    }\n                    if (configuration && configuration.timeRange) {\n                        shape.timeRange = configuration.timeRange;\n                    }\n                    layer.addRenderable(shape);\n                }\n            }\n        };\n\n\n","import WorldWind from 'webworldwind-esa';\n\nconst {\n    ArcBallCamera,\n    ArgumentError,\n    BasicWorldWindowController,\n    DrawContext,\n    EarthElevationModel,\n    FrameStatistics,\n    Frustum,\n    Globe,\n    Globe2D,\n    GoToAnimator,\n    GpuResourceCache,\n    Line,\n    Logger,\n    LookAtNavigator,\n    Matrix,\n    Navigator,\n    PickedObjectList,\n    Position,\n    Rectangle,\n    Sector,\n    SurfaceShape,\n    SurfaceShapeTileBuilder,\n    Terrain,\n    Vec2,\n    Vec3,\n    WWMath\n} = WorldWind;\n\n\n/**\n * Constructs a WorldWind window for an HTML canvas.\n * @alias WorldWindow\n * @constructor\n * @classdesc Represents a WorldWind window for an HTML canvas.\n * @param {String|HTMLCanvasElement} canvasElem The ID assigned to the HTML canvas in the document or the canvas\n * element itself.\n * @param {ElevationModel} elevationModel An optional argument indicating the elevation model to use for the World\n * Window. If missing or null, a default elevation model is used.\n * @throws {ArgumentError} If there is no HTML element with the specified ID in the document, or if the\n * HTML canvas does not support WebGL.\n */\nclass WorldWindow {\n    constructor(canvasElem, elevationModel, controllerConstructor, cameraConstructor) {\n        console.log('constructing worlwindow')\n        if (!(window.WebGLRenderingContext)) {\n            throw new ArgumentError(\n                Logger.logMessage(Logger.LEVEL_SEVERE, \"WorldWindow\", \"constructor\", \"webglNotSupported\"));\n        }\n\n        // Get the actual canvas element either directly or by ID.\n        var canvas;\n        if (canvasElem instanceof HTMLCanvasElement) {\n            canvas = canvasElem;\n        } else {\n            // Attempt to get the HTML canvas with the specified ID.\n            canvas = document.getElementById(canvasElem);\n\n            if (!canvas) {\n                throw new ArgumentError(\n                    Logger.logMessage(Logger.LEVEL_SEVERE, \"WorldWindow\", \"constructor\",\n                        \"The specified canvas ID is not in the document.\"));\n            }\n        }\n\n        // Create the WebGL context associated with the HTML canvas.\n        var gl = this.createContext(canvas);\n        if (!gl) {\n            throw new ArgumentError(\n                Logger.logMessage(Logger.LEVEL_SEVERE, \"WorldWindow\", \"constructor\", \"webglNotSupported\"));\n        }\n\n        // Internal. Intentionally not documented.\n        this.drawContext = new DrawContext(gl);\n\n        // Internal. Intentionally not documented. Must be initialized before the navigator is created.\n        this.eventListeners = {};\n\n        // Internal. Intentionally not documented. Initially true in order to redraw at least once.\n        this.redrawRequested = true;\n\n        // Internal. Intentionally not documented.\n        this.redrawRequestId = null;\n\n        // Internal. Intentionally not documented.\n        this.scratchModelview = Matrix.fromIdentity();\n\n        // Internal. Intentionally not documented.\n        this.scratchProjection = Matrix.fromIdentity();\n\n        // Internal. Intentionally not documented.\n        this.hasStencilBuffer = gl.getContextAttributes().stencil;\n\n        /**\n         * The HTML canvas associated with this WorldWindow.\n         * @type {HTMLElement}\n         * @readonly\n         */\n        this.canvas = canvas;\n\n        /**\n         * The number of bits in the depth buffer associated with this WorldWindow.\n         * @type {number}\n         * @readonly\n         */\n        this.depthBits = gl.getParameter(gl.DEPTH_BITS);\n\n        /**\n         * The current viewport of this WorldWindow.\n         * @type {Rectangle}\n         * @readonly\n         */\n        this.viewport = new Rectangle(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\n        /**\n         * The globe displayed.\n         * @type {Globe}\n         */\n        this.globe = new Globe(elevationModel || new EarthElevationModel());\n\n        /**\n         * The layers to display in this WorldWindow.\n         * This property is read-only. Use [addLayer]{@link WorldWindow#addLayer} or\n         * [insertLayer]{@link WorldWindow#insertLayer} to add layers to this WorldWindow.\n         * Use [removeLayer]{@link WorldWindow#removeLayer} to remove layers from this WorldWindow.\n         * @type {Layer[]}\n         * @readonly\n         */\n        this.layers = [];\n\n        /**\n         * The navigator used to manipulate the globe.\n         * @type {Navigator}\n         * @default [Navigator]{@link Navigator}\n         */\n        this.navigator = new Navigator(cameraConstructor && new cameraConstructor(this) || new ArcBallCamera(this));\n\n\n        /**\n         * The controller used to manipulate the globe.\n         * @type {WorldWindowController}\n         * @default [BasicWorldWindowController]{@link BasicWorldWindowController}\n         */\n        // this.worldWindowController = controllerConstructor && new controllerConstructor(this) || new BasicWorldWindowController(this);\n\n        /**\n         * The vertical exaggeration to apply to the terrain.\n         * @type {Number}\n         */\n        this.verticalExaggeration = 1;\n\n        /**\n         * Indicates that picking will return all objects at the pick point, if any. The top-most object will have\n         * its isOnTop flag set to true.\n         * If deep picking is false, the default, only the top-most object is returned, plus\n         * the picked-terrain object if the pick point is over the terrain.\n         * @type {boolean}\n         * @default false\n         */\n        this.deepPicking = false;\n\n        /**\n         * Indicates whether this WorldWindow should be configured for sub-surface rendering. If true, shapes\n         * below the terrain can be seen when the terrain is made transparent. If false, sub-surface shapes are\n         * not visible, however, performance is slightly increased.\n         * @type {boolean}\n         * @default false\n         */\n        this.subsurfaceMode = false;\n\n        /**\n         * The opacity to apply to terrain and surface shapes. This property is typically used when viewing\n         * the sub-surface. It modifies the opacity of the terrain and surface shapes as a whole. It should be\n         * a number between 0 and 1. It is compounded with the individual opacities of the image layers and\n         * surface shapes on the terrain.\n         * @type {Number}\n         * @default 1\n         */\n        this.surfaceOpacity = 1;\n\n        /**\n         * Performance statistics for this WorldWindow.\n         * @type {FrameStatistics}\n         */\n        this.frameStatistics = new FrameStatistics();\n\n        /**\n         * The {@link GoToAnimator} used by this WorldWindow to respond to its goTo method.\n         * @type {GoToAnimator}\n         */\n        this.goToAnimator = new GoToAnimator(this);\n\n        // Documented with its property accessor below.\n        this._redrawCallbacks = [];\n\n        // Documented with its property accessor below.\n        this._orderedRenderingFilters = [\n            function (dc) {\n                thisWindow.declutter(dc, 1);\n            },\n            function (dc) {\n                thisWindow.declutter(dc, 2);\n            }\n        ];\n\n        // Intentionally not documented.\n        this.pixelScale = 1;\n\n        // Prevent the browser's default actions in response to mouse and touch events, which interfere with\n        // navigation. Register these event listeners  before any others to ensure that they're called last.\n        function preventDefaultListener(event) {\n            event.preventDefault();\n        }\n\n        this.addEventListener(\"mousedown\", preventDefaultListener);\n        this.addEventListener(\"touchstart\", preventDefaultListener);\n        this.addEventListener(\"contextmenu\", preventDefaultListener);\n        this.addEventListener(\"wheel\", preventDefaultListener);\n\n        var thisWindow = this;\n\n        // Redirect various UI interactions to the appropriate handler.\n        // function onGestureEvent(event) {\n        //     thisWindow.onGestureEvent(event);\n        // }\n\n        // if (window.PointerEvent) {\n        //     // Prevent the browser's default actions in response to pointer events which interfere with navigation.\n        //     // This CSS style property is configured here to ensure that it's set for all applications.\n        //     this.canvas.style.setProperty(\"touch-action\", \"none\");\n\n        //     this.addEventListener(\"pointerdown\", onGestureEvent, false);\n        //     window.addEventListener(\"pointermove\", onGestureEvent, false); // get pointermove events outside event target\n        //     window.addEventListener(\"pointercancel\", onGestureEvent, false); // get pointercancel events outside event target\n        //     window.addEventListener(\"pointerup\", onGestureEvent, false); // get pointerup events outside event target\n        // } else {\n        //     this.addEventListener(\"mousedown\", onGestureEvent, false);\n        //     window.addEventListener(\"mousemove\", onGestureEvent, false); // get mousemove events outside event target\n        //     window.addEventListener(\"mouseup\", onGestureEvent, false); // get mouseup events outside event target\n        //     this.addEventListener(\"touchstart\", onGestureEvent, false);\n        //     this.addEventListener(\"touchmove\", onGestureEvent, false);\n        //     this.addEventListener(\"touchend\", onGestureEvent, false);\n        //     this.addEventListener(\"touchcancel\", onGestureEvent, false);\n        // }\n\n        // // Register wheel event listeners on the WorldWindow's canvas.\n        // this.addEventListener(\"wheel\", function (event) {\n        //     onGestureEvent(event);\n        // });\n\n        // Set up to handle WebGL context lost events.\n        function handleContextLost(event) {\n            thisWindow.handleContextLost(event);\n        }\n\n        this.canvas.addEventListener(\"webglcontextlost\", handleContextLost, false);\n\n        // Set up to handle WebGL context restored events.\n        function handleContextRestored(event) {\n            thisWindow.handleContextRestored(event);\n        }\n\n        this.canvas.addEventListener(\"webglcontextrestored\", handleContextRestored, false);\n\n        // Set up to handle WebGL context events and WorldWind redraw request events. Imagery uses the canvas\n        // redraw events because images are generally specific to the WebGL context associated with the canvas.\n        // Elevation models use the global window redraw events because they can be shared among WorldWindows.\n        function handleRedrawEvent(event) {\n            thisWindow.handleRedrawEvent(event)\n        }\n\n        this.canvas.addEventListener(WorldWind.REDRAW_EVENT_TYPE, handleRedrawEvent, false);\n        window.addEventListener(WorldWind.REDRAW_EVENT_TYPE, handleRedrawEvent, false);\n\n        // Render to the WebGL context in an animation frame loop until the WebGL context is lost.\n        this.animationFrameLoop();\n    };\n\n\n    /**\n     * An array of functions to call during ordered rendering prior to rendering the ordered renderables.\n     * Each function is passed one argument, the current draw context. The function may modify the\n     * ordered renderables in the draw context's ordered renderable list, which has been sorted from front\n     * to back when the filter function is called. Ordered rendering filters are typically used to apply\n     * decluttering. The default set of filter functions contains one function that declutters shapes with\n     * declutter group ID of 1 ({@link GeographicText} by default) and one function that declutters shapes\n     * with declutter group ID 2 ({@link Placemark} by default). Applications can add functions to this\n     * array or remove them.\n     * @type {Function[]}\n     * @default [WorldWindow.declutter]{@link WorldWindow#declutter} with a group ID of 1\n     * @readonly\n     * @memberof WorldWindow.prototype\n     */\n    orderedRenderingFilters() {\n        return this._orderedRenderingFilters;\n    }\n\n    /**\n     * The list of callbacks to call immediately before and immediately after performing a redraw. The callbacks\n     * have two arguments: this WorldWindow and the redraw stage, e.g., <code style='white-space:nowrap'>redrawCallback(worldWindow, stage);</code>.\n     * The stage will be either WorldWind.BEFORE_REDRAW or WorldWind.AFTER_REDRAW indicating whether the\n     * callback has been called either immediately before or immediately after a redraw, respectively.\n     * Applications may add functions to this array or remove them.\n     * @type {Function[]}\n     * @readonly\n     * @memberof WorldWindow.prototype\n     */\n    redrawCallbacks() {\n        return this._redrawCallbacks;\n    }\n\n    /**\n     * Converts window coordinates to coordinates relative to this WorldWindow's canvas.\n     * @param {Number} x The X coordinate to convert.\n     * @param {Number} y The Y coordinate to convert.\n     * @returns {Vec2} The converted coordinates.\n     */\n    canvasCoordinates(x, y) {\n        var bbox = this.canvas.getBoundingClientRect(),\n            xc = x - (bbox.left + this.canvas.clientLeft),// * (this.canvas.width / bbox.width),\n            yc = y - (bbox.top + this.canvas.clientTop);// * (this.canvas.height / bbox.height);\n\n        return new Vec2(xc, yc);\n    };\n\n    // onGestureEvent(event) {\n    //     this.worldWindowController.onGestureEvent(event);\n    // };\n\n    /**\n     * Registers an event listener for the specified event type on this WorldWindow's canvas. This function\n     * delegates the processing of events to the WorldWindow's canvas. For details on this function and its\n     * arguments, see the W3C [EventTarget]{@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget}\n     * documentation.\n     *\n     * Registering event listeners using this function enables applications to prevent the WorldWindow's default\n     * navigation behavior. To prevent default navigation behavior, call the [Event]{@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-Event}'s\n     * preventDefault method from within an event listener for any events the navigator should not respond to.\n     *\n     * When an event occurs, this calls the registered event listeners in order of reverse registration. Since the\n     * WorldWindow registers its navigator event listeners first, application event listeners are called before\n     * navigator event listeners.\n     *\n     * @param type The event type to listen for.\n     * @param listener The function to call when the event occurs.\n     * @throws {ArgumentError} If any argument is null or undefined.\n     */\n    addEventListener(type, listener) {\n        if (!type) {\n            throw new ArgumentError(\n                Logger.logMessage(Logger.LEVEL_SEVERE, \"WorldWindow\", \"addEventListener\", \"missingType\"));\n        }\n\n        if (!listener) {\n            throw new ArgumentError(\n                Logger.logMessage(Logger.LEVEL_SEVERE, \"WorldWindow\", \"addEventListener\", \"missingListener\"));\n        }\n\n        var thisWorldWindow = this;\n        var entry = this.eventListeners[type];\n        if (!entry) {\n            entry = {\n                listeners: [],\n                callback: function (event) { // calls listeners in reverse registration order\n                    event.worldWindow = thisWorldWindow;\n                    for (var i = 0, len = entry.listeners.length; i < len; i++) {\n                        entry.listeners[i](event);\n                    }\n                }\n            };\n            this.eventListeners[type] = entry;\n        }\n\n        var index = entry.listeners.indexOf(listener);\n        if (index == -1) { // suppress duplicate listeners\n            entry.listeners.splice(0, 0, listener); // insert the listener at the beginning of the list\n\n            if (entry.listeners.length == 1) { // first listener added, add the event listener callback\n                this.canvas.addEventListener(type, entry.callback, false);\n            }\n        }\n    };\n\n    /**\n     * Removes an event listener for the specified event type from this WorldWindow's canvas. The listener must be\n     * the same object passed to addEventListener. Calling removeEventListener with arguments that do not identify a\n     * currently registered listener has no effect.\n     *\n     * @param type Indicates the event type the listener registered for.\n     * @param listener The listener to remove. Must be the same function object passed to addEventListener.\n     * @throws {ArgumentError} If any argument is null or undefined.\n     */\n    removeEventListener(type, listener) {\n        if (!type) {\n            throw new ArgumentError(\n                Logger.logMessage(Logger.LEVEL_SEVERE, \"WorldWindow\", \"removeEventListener\", \"missingType\"));\n        }\n\n        if (!listener) {\n            throw new ArgumentError(\n                Logger.logMessage(Logger.LEVEL_SEVERE, \"WorldWindow\", \"removeEventListener\", \"missingListener\"));\n        }\n\n        var entry = this.eventListeners[type];\n        if (!entry) {\n            return; // no entry for the specified type\n        }\n\n        var index = entry.listeners.indexOf(listener);\n        if (index != -1) {\n            entry.listeners.splice(index, 1); // remove the listener from the list\n\n            if (entry.listeners.length == 0) { // last listener removed, remove the event listener callback\n                this.canvas.removeEventListener(type, entry.callback, false);\n            }\n        }\n    };\n\n    /**\n     * Causes this WorldWindow to redraw itself at the next available opportunity. The redraw occurs on the main\n     * thread at a time of the browser's discretion. Applications should call redraw after changing the World\n     * Window's state, but should not expect that change to be reflected on screen immediately after this function\n     * returns. This is the preferred method for requesting a redraw of the WorldWindow.\n     */\n    redraw() {\n        this.redrawRequested = true; // redraw during the next animation frame\n    };\n\n    /**\n     * Requests the WorldWind objects displayed at a specified screen-coordinate point.\n     *\n     * If the point intersects the terrain, the returned list contains an object identifying the associated geographic\n     * position. This returns an empty list when nothing in the WorldWind scene intersects the specified point.\n     *\n     * @param pickPoint The point to examine in this WorldWindow's screen coordinates.\n     * @returns {PickedObjectList} A list of picked WorldWind objects at the specified pick point.\n     * @throws {ArgumentError} If the specified pick point is null or undefined.\n     */\n    pick(pickPoint) {\n        if (!pickPoint) {\n            throw new ArgumentError(\n                Logger.logMessage(Logger.LEVEL_SEVERE, \"WorldWindow\", \"pick\", \"missingPoint\"));\n        }\n\n        // Suppress the picking operation and return an empty list when the WebGL context has been lost.\n        if (this.drawContext.currentGlContext.isContextLost()) {\n            return new PickedObjectList();\n        }\n\n        this.resize();\n        this.resetDrawContext();\n        this.drawContext.pickingMode = true;\n        this.drawContext.pickPoint = pickPoint;\n        this.drawContext.pickRay = this.rayThroughScreenPoint(pickPoint);\n        this.drawFrame();\n\n        return this.drawContext.objectsAtPickPoint;\n    };\n\n    /**\n     * Requests the position of the WorldWind terrain at a specified screen-coordinate point. If the point\n     * intersects the terrain, the returned list contains a single object identifying the associated geographic\n     * position. Otherwise this returns an empty list.\n     * @param pickPoint The point to examine in this WorldWindow's screen coordinates.\n     * @returns {PickedObjectList} A list containing the picked WorldWind terrain position at the specified point,\n     * or an empty list if the point does not intersect the terrain.\n     * @throws {ArgumentError} If the specified pick point is null or undefined.\n     */\n    pickTerrain(pickPoint) {\n        if (!pickPoint) {\n            throw new ArgumentError(\n                Logger.logMessage(Logger.LEVEL_SEVERE, \"WorldWindow\", \"pickTerrain\", \"missingPoint\"));\n        }\n\n        // Suppress the picking operation and return an empty list when the WebGL context has been lost.\n        if (this.drawContext.currentGlContext.isContextLost()) {\n            return new PickedObjectList();\n        }\n\n        this.resize();\n        this.resetDrawContext();\n        this.drawContext.pickingMode = true;\n        this.drawContext.pickTerrainOnly = true;\n        this.drawContext.pickPoint = pickPoint;\n        this.drawContext.pickRay = this.rayThroughScreenPoint(pickPoint);\n        this.drawFrame();\n\n        return this.drawContext.objectsAtPickPoint;\n    };\n\n    /**\n     * Requests the WorldWind objects displayed within a specified screen-coordinate region. This returns all\n     * objects that intersect the specified region, regardless of whether or not an object is actually visible, and\n     * marks objects that are visible as on top.\n     * @param {Rectangle} rectangle The screen coordinate rectangle identifying the region to search.\n     * @returns {PickedObjectList} A list of visible WorldWind objects within the specified region.\n     * @throws {ArgumentError} If the specified rectangle is null or undefined.\n     */\n    pickShapesInRegion(rectangle) {\n        if (!rectangle) {\n            throw new ArgumentError(\n                Logger.logMessage(Logger.LEVEL_SEVERE, \"WorldWindow\", \"pickShapesInRegion\", \"missingRectangle\"));\n        }\n\n        // Suppress the picking operation and return an empty list when the WebGL context has been lost.\n        if (this.drawContext.currentGlContext.isContextLost()) {\n            return new PickedObjectList();\n        }\n\n        this.resize();\n        this.resetDrawContext();\n        this.drawContext.pickingMode = true;\n        this.drawContext.regionPicking = true;\n        this.drawContext.pickRectangle =\n            new Rectangle(rectangle.x, this.canvas.height - rectangle.y, rectangle.width, rectangle.height);\n        this.drawFrame();\n\n        return this.drawContext.objectsAtPickPoint;\n    };\n\n    // Internal function. Intentionally not documented.\n    createContext(canvas) {\n        // Request a WebGL context with antialiasing is disabled. Antialiasing causes gaps to appear at the edges of\n        // terrain tiles.\n        var glAttrs = { antialias: false, stencil: true },\n            gl = canvas.getContext(\"webgl\", glAttrs);\n        if (!gl) {\n            gl = canvas.getContext(\"experimental-webgl\", glAttrs);\n        }\n\n        // uncomment to debug WebGL\n        //var gl = WebGLDebugUtils.makeDebugContext(this.canvas.getContext(\"webgl\"),\n        //        this.throwOnGLError,\n        //        this.logAndValidate\n        //);\n\n        return gl;\n    };\n\n    // Internal function. Intentionally not documented.\n    handleContextLost(event) {\n        Logger.log(Logger.LEVEL_INFO, \"WebGL context event: \" + event.statusMessage);\n        // Inform WebGL that we handle context restoration, enabling the context restored event to be delivered.\n        event.preventDefault();\n        // Notify the draw context that the WebGL rendering context has been lost.\n        this.drawContext.contextLost();\n        // Stop the rendering animation frame loop, resuming only if the WebGL context is restored.\n        window.cancelAnimationFrame(this.redrawRequestId);\n    };\n\n    // Internal function. Intentionally not documented.\n    handleContextRestored(event) {\n        Logger.log(Logger.LEVEL_INFO, \"WebGL context event: \" + event.statusMessage);\n        // Notify the draw context that the WebGL rendering context has been restored.\n        this.drawContext.contextRestored();\n        // Resume the rendering animation frame loop until the WebGL context is lost.\n        this.redraw();\n        this.animationFrameLoop();\n    };\n\n    // Internal function. Intentionally not documented.\n    handleRedrawEvent(event) {\n        this.redraw(); // redraw in the next animation frame\n    };\n\n    // Internal function. Intentionally not documented.\n    animationFrameLoop() {\n        // Render to the WebGL context as needed.\n        this.redrawIfNeeded();\n\n        // Continue the animation frame loop until the WebGL context is lost.\n        var thisWindow = this;\n\n        function animationFrameCallback() {\n            thisWindow.animationFrameLoop();\n        }\n\n        this.redrawRequestId = window.requestAnimationFrame(animationFrameCallback);\n    };\n\n    // Internal function. Intentionally not documented.\n    redrawIfNeeded() {\n        // Check if the drawing buffer needs to resize to match its screen size, which requires a redraw.\n        this.resize();\n\n        // Redraw the WebGL drawing buffer only when necessary.\n        if (!this.redrawRequested) {\n            return;\n        }\n\n        try {\n            // Prepare to redraw and notify the redraw callbacks that a redraw is about to occur.\n            this.redrawRequested = false;\n            this.drawContext.previousRedrawTimestamp = this.drawContext.timestamp;\n            this.callRedrawCallbacks(WorldWind.BEFORE_REDRAW);\n            // Redraw the WebGL drawing buffer.\n            this.resetDrawContext();\n            this.drawFrame();\n        } catch (e) {\n            Logger.logMessage(Logger.LEVEL_SEVERE, \"WorldWindow\", \"redrawIfNeeded\",\n                \"Exception occurred during redrawing.\\n\" + e.toString());\n        } finally {\n            // Notify the redraw callbacks that a redraw has completed.\n            this.callRedrawCallbacks(WorldWind.AFTER_REDRAW);\n            // Handle rendering code redraw requests.\n            if (this.drawContext.redrawRequested) {\n                this.redrawRequested = true;\n            }\n        }\n    };\n\n    // Internal function. Intentionally not documented.\n    resize() {\n        var gl = this.drawContext.currentGlContext,\n            width = gl.canvas.clientWidth * this.pixelScale,\n            height = gl.canvas.clientHeight * this.pixelScale;\n\n        if (gl.canvas.width != width ||\n            gl.canvas.height != height) {\n\n            // Make the canvas drawing buffer size match its screen size.\n            gl.canvas.width = width;\n            gl.canvas.height = height;\n\n            // Set the WebGL viewport to match the canvas drawing buffer size.\n            gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n            this.viewport = new Rectangle(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\n            // Cause this WorldWindow to redraw with the new size.\n            this.redrawRequested = true;\n        }\n    };\n\n    // Internal. Intentionally not documented.\n    computeViewingTransform(projection, modelview) {\n        if (!modelview) {\n            throw new ArgumentError(\n                Logger.logMessage(Logger.LEVEL_SEVERE, \"WorldWindow\", \"computeViewingTransform\", \"missingModelview\"));\n        }\n\n        var globe = this.globe;\n        this.navigator.camera.createViewMatrix(modelview);\n\n        if (projection) {\n            projection.setToIdentity();\n            var globeRadius = WWMath.max(globe.equatorialRadius, globe.polarRadius),\n                eyePoint = modelview.extractEyePoint(new Vec3(0, 0, 0)),\n                eyePos = globe.computePositionFromPoint(eyePoint[0], eyePoint[1], eyePoint[2], new Position(0, 0, 0)),\n                eyeHorizon = WWMath.horizonDistanceForGlobeRadius(globeRadius, eyePos.altitude),\n                atmosphereHorizon = WWMath.horizonDistanceForGlobeRadius(globeRadius, 160000),\n                viewport = this.viewport;\n\n            // Set the far clip distance to the smallest value that does not clip the atmosphere.\n            // TODO adjust the clip plane distances based on the navigator's orientation - shorter distances when the\n            // TODO horizon is not in view\n            // TODO parameterize the object altitude for horizon distance\n            var farDistance = eyeHorizon + atmosphereHorizon;\n            if (farDistance < 1e3)\n                farDistance = 1e3;\n\n            // Compute the near clip distance in order to achieve a desired depth resolution at the far clip distance.\n            // This computed distance is limited such that it does not intersect the terrain when possible and is never\n            // less than a predetermined minimum (usually one). The computed near distance automatically scales with the\n            // resolution of the WebGL depth buffer.\n            var nearDistance = WWMath.perspectiveNearDistanceForFarDistance(farDistance, 10, this.depthBits);\n\n            // Prevent the near clip plane from intersecting the terrain.\n            var distanceToSurface = eyePos.altitude - globe.elevationAtLocation(eyePos.latitude, eyePos.longitude);\n            if (distanceToSurface > 0) {\n                var maxNearDistance = WWMath.perspectiveNearDistance(viewport.width, viewport.height, distanceToSurface);\n                if (nearDistance > maxNearDistance) {\n                    nearDistance = maxNearDistance;\n                }\n            }\n\n            if (nearDistance < 1) {\n                nearDistance = 1;\n            }\n\n            // Compute the current projection matrix based on this navigator's perspective properties and the current\n            // WebGL viewport.\n            projection.setToPerspectiveProjection(viewport.width, viewport.height, nearDistance, farDistance);\n        }\n    };\n\n    // Internal. Intentionally not documented.\n    computePixelMetrics(projection) {\n        var projectionInv = Matrix.fromIdentity();\n        projectionInv.invertMatrix(projection);\n\n        // Compute the eye coordinate rectangles carved out of the frustum by the near and far clipping planes, and\n        // the distance between those planes and the eye point along the -Z axis. The rectangles are determined by\n        // transforming the bottom-left and top-right points of the frustum from clip coordinates to eye\n        // coordinates.\n        var nbl = new Vec3(-1, -1, -1),\n            ntr = new Vec3(+1, +1, -1),\n            fbl = new Vec3(-1, -1, +1),\n            ftr = new Vec3(+1, +1, +1);\n        // Convert each frustum corner from clip coordinates to eye coordinates by multiplying by the inverse\n        // projection matrix.\n        nbl.multiplyByMatrix(projectionInv);\n        ntr.multiplyByMatrix(projectionInv);\n        fbl.multiplyByMatrix(projectionInv);\n        ftr.multiplyByMatrix(projectionInv);\n\n        var nrRectWidth = WWMath.fabs(ntr[0] - nbl[0]),\n            frRectWidth = WWMath.fabs(ftr[0] - fbl[0]),\n            nrDistance = -nbl[2],\n            frDistance = -fbl[2];\n\n        // Compute the scale and offset used to determine the width of a pixel on a rectangle carved out of the\n        // frustum at a distance along the -Z axis in eye coordinates. These values are found by computing the scale\n        // and offset of a frustum rectangle at a given distance, then dividing each by the viewport width.\n        var frustumWidthScale = (frRectWidth - nrRectWidth) / (frDistance - nrDistance),\n            frustumWidthOffset = nrRectWidth - frustumWidthScale * nrDistance;\n\n        return {\n            pixelSizeFactor: frustumWidthScale / this.viewport.width,\n            pixelSizeOffset: frustumWidthOffset / this.viewport.height\n        };\n    };\n\n    /**\n     * Computes the approximate size of a pixel at a specified distance from the eye point.\n     * <p>\n     * This method assumes rectangular pixels, where pixel coordinates denote\n     * infinitely thin spaces between pixels. The units of the returned size are in model coordinates per pixel\n     * (usually meters per pixel). This returns 0 if the specified distance is zero. The returned size is undefined\n     * if the distance is less than zero.\n     *\n     * @param {Number} distance The distance from the eye point at which to determine pixel size, in model\n     * coordinates.\n     * @returns {Number} The approximate pixel size at the specified distance from the eye point, in model\n     * coordinates per pixel.\n     */\n    pixelSizeAtDistance(distance) {\n        this.computeViewingTransform(this.scratchProjection, this.scratchModelview);\n        var pixelMetrics = this.computePixelMetrics(this.scratchProjection);\n        return pixelMetrics.pixelSizeFactor * distance + pixelMetrics.pixelSizeOffset;\n    };\n\n    // Internal. Intentionally not documented.\n    computeDrawContext() {\n        var dc = this.drawContext;\n\n        this.computeViewingTransform(dc.projection, dc.modelview);\n        dc.viewport = this.viewport;\n        dc.eyePoint = dc.modelview.extractEyePoint(new Vec3(0, 0, 0));\n\n        dc.modelviewProjection.setToIdentity();\n        dc.modelviewProjection.setToMultiply(dc.projection, dc.modelview);\n\n        var pixelMetrics = this.computePixelMetrics(dc.projection);\n        dc.pixelSizeFactor = pixelMetrics.pixelSizeFactor;\n        dc.pixelSizeOffset = pixelMetrics.pixelSizeOffset;\n\n        // Compute the inverse of the modelview, projection, and modelview-projection matrices. The inverse matrices\n        // are used to support operations on navigator state.\n        var modelviewInv = Matrix.fromIdentity();\n        modelviewInv.invertOrthonormalMatrix(dc.modelview);\n\n        dc.modelviewNormalTransform = Matrix.fromIdentity().setToTransposeOfMatrix(modelviewInv.upper3By3());\n\n        // Compute the frustum in model coordinates. Start by computing the frustum in eye coordinates from the\n        // projection matrix, then transform this frustum to model coordinates by multiplying its planes by the\n        // transpose of the modelview matrix. We use the transpose of the modelview matrix because planes are\n        // transformed by the inverse transpose of a matrix, and we want to transform from eye coordinates to model\n        // coordinates.\n        var modelviewTranspose = Matrix.fromIdentity();\n        modelviewTranspose.setToTransposeOfMatrix(dc.modelview);\n        dc.frustumInModelCoordinates = Frustum.fromProjectionMatrix(dc.projection);\n        dc.frustumInModelCoordinates.transformByMatrix(modelviewTranspose);\n        dc.frustumInModelCoordinates.normalize();\n    };\n\n    // Internal. Intentionally not documented.\n    resetDrawContext() {\n        this.globe.offset = 0;\n\n        var dc = this.drawContext;\n        dc.reset();\n        dc.globe = this.globe;\n        dc.navigator = this.navigator;\n        dc.layers = this.layers.slice();\n        dc.layers.push(dc.screenCreditController);\n        this.computeDrawContext();\n        dc.verticalExaggeration = this.verticalExaggeration;\n        dc.surfaceOpacity = this.surfaceOpacity;\n        dc.deepPicking = this.deepPicking;\n        dc.frameStatistics = this.frameStatistics;\n        dc.pixelScale = this.pixelScale;\n        dc.update();\n    };\n\n    /* useful stuff to debug WebGL */\n    /*\n        function logGLCall(functionName, args) {\n        console.log(\"gl.\" + functionName + \"(\" +\n        WebGLDebugUtils.glFunctionArgsToString(functionName, args) + \")\");\n        };\n    \n        function validateNoneOfTheArgsAreUndefined(functionName, args) {\n        for (var ii = 0; ii < args.length; ++ii) {\n        if (args[ii] === undefined) {\n        console.error(\"undefined passed to gl.\" + functionName + \"(\" +\n        WebGLDebugUtils.glFunctionArgsToString(functionName, args) + \")\");\n        }\n        }\n        };\n    \n        logAndValidate logAndValidate(functionName, args) {\n        logGLCall(functionName, args);\n        validateNoneOfTheArgsAreUndefined (functionName, args);\n        };\n    \n        throwOnGLError throwOnGLError(err, funcName, args) {\n        throw WebGLDebugUtils.glEnumToString(err) + \" was caused by call to: \" + funcName;\n        };\n        */\n\n    // Internal function. Intentionally not documented.\n    drawFrame() {\n        try {\n            this.drawContext.frameStatistics.beginFrame();\n            this.beginFrame();\n\n            if (this.drawContext.globe.is2D() && this.drawContext.globe.continuous) {\n                this.do2DContiguousRepaint();\n            } else {\n                this.doNormalRepaint();\n            }\n\n        } finally {\n            this.endFrame();\n            this.drawContext.frameStatistics.endFrame();\n            //console.log(this.drawContext.frameStatistics.frameTime);\n        }\n    };\n\n    doNormalRepaint() {\n        this.createTerrain();\n        this.clearFrame();\n        this.deferOrderedRendering = false;\n        if (this.drawContext.pickingMode) {\n            if (this.drawContext.makePickFrustum()) {\n                this.doPick();\n                this.resolvePick();\n            }\n        } else {\n            this.doDraw();\n            if (this.subsurfaceMode && this.hasStencilBuffer) {\n                this.redrawSurface();\n                this.drawScreenRenderables();\n            }\n        }\n    };\n\n    do2DContiguousRepaint() {\n        this.createTerrain2DContiguous();\n        this.clearFrame();\n        if (this.drawContext.pickingMode) {\n            if (this.drawContext.makePickFrustum()) {\n                this.pick2DContiguous();\n                this.resolvePick();\n            }\n        } else {\n            this.draw2DContiguous();\n        }\n    };\n\n    resolvePick() {\n        if (this.drawContext.pickTerrainOnly) {\n            this.resolveTerrainPick();\n        } else if (this.drawContext.regionPicking) {\n            this.resolveRegionPick();\n        } else {\n            this.resolveTopPick();\n        }\n    };\n\n    // Internal function. Intentionally not documented.\n    beginFrame() {\n        var gl = this.drawContext.currentGlContext;\n        gl.enable(gl.BLEND);\n        gl.enable(gl.CULL_FACE);\n        gl.enable(gl.DEPTH_TEST);\n        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        gl.depthFunc(gl.LEQUAL);\n\n        if (this.drawContext.pickingMode) {\n            this.drawContext.makePickFramebuffer();\n            this.drawContext.bindFramebuffer(this.drawContext.pickFramebuffer);\n        }\n    };\n\n    // Internal function. Intentionally not documented.\n    endFrame() {\n        var gl = this.drawContext.currentGlContext;\n        gl.disable(gl.BLEND);\n        gl.disable(gl.CULL_FACE);\n        gl.disable(gl.DEPTH_TEST);\n        gl.blendFunc(gl.ONE, gl.ZERO);\n        gl.depthFunc(gl.LESS);\n        gl.clearColor(0, 0, 0, 1);\n\n        this.drawContext.bindFramebuffer(null);\n        this.drawContext.bindProgram(null);\n    };\n\n    // Internal function. Intentionally not documented.\n    clearFrame() {\n        var dc = this.drawContext,\n            gl = dc.currentGlContext;\n\n        gl.clearColor(dc.clearColor.red, dc.clearColor.green, dc.clearColor.blue, dc.clearColor.alpha);\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n    };\n\n    // Internal function. Intentionally not documented.\n    doDraw() {\n        this.drawContext.renderShapes = true;\n\n        if (this.subsurfaceMode && this.hasStencilBuffer) {\n            // Draw the surface and collect the ordered renderables.\n            this.drawContext.currentGlContext.disable(this.drawContext.currentGlContext.STENCIL_TEST);\n            this.drawContext.surfaceShapeTileBuilder.clear();\n            this.drawLayers(true);\n            this.drawSurfaceRenderables();\n            this.drawContext.surfaceShapeTileBuilder.doRender(this.drawContext);\n\n            if (!this.deferOrderedRendering) {\n                // Clear the depth and stencil buffers prior to rendering the ordered renderables. This allows\n                // sub-surface renderables to be drawn beneath the terrain. Turn on stenciling to capture the\n                // fragments that ordered renderables draw. The terrain and surface shapes will be subsequently\n                // drawn again, and the stencil buffer will ensure that they are drawn only where they overlap\n                // the fragments drawn by the ordered renderables.\n                this.drawContext.currentGlContext.clear(\n                    this.drawContext.currentGlContext.DEPTH_BUFFER_BIT | this.drawContext.currentGlContext.STENCIL_BUFFER_BIT);\n                this.drawContext.currentGlContext.enable(this.drawContext.currentGlContext.STENCIL_TEST);\n                this.drawContext.currentGlContext.stencilFunc(this.drawContext.currentGlContext.ALWAYS, 1, 1);\n                this.drawContext.currentGlContext.stencilOp(\n                    this.drawContext.currentGlContext.REPLACE, this.drawContext.currentGlContext.REPLACE, this.drawContext.currentGlContext.REPLACE);\n                this.drawOrderedRenderables();\n            }\n        } else {\n            this.drawContext.surfaceShapeTileBuilder.clear();\n            this.drawLayers(true);\n            this.drawSurfaceRenderables();\n            this.drawContext.surfaceShapeTileBuilder.doRender(this.drawContext);\n\n            if (!this.deferOrderedRendering) {\n                this.drawOrderedRenderables();\n                this.drawScreenRenderables();\n            }\n        }\n    };\n\n    redrawSurface() {\n        // Draw the terrain and surface shapes but only where the current stencil buffer is non-zero.\n        // The non-zero fragments are from drawing the ordered renderables previously.\n        this.drawContext.currentGlContext.enable(this.drawContext.currentGlContext.STENCIL_TEST);\n        this.drawContext.currentGlContext.stencilFunc(this.drawContext.currentGlContext.EQUAL, 1, 1);\n        this.drawContext.currentGlContext.stencilOp(\n            this.drawContext.currentGlContext.KEEP, this.drawContext.currentGlContext.KEEP, this.drawContext.currentGlContext.KEEP);\n        this.drawContext.surfaceShapeTileBuilder.clear();\n        this.drawLayers(false);\n        this.drawSurfaceRenderables();\n        this.drawContext.surfaceShapeTileBuilder.doRender(this.drawContext);\n        this.drawContext.currentGlContext.disable(this.drawContext.currentGlContext.STENCIL_TEST);\n    };\n\n    // Internal function. Intentionally not documented.\n    doPick() {\n        if (this.drawContext.terrain) {\n            this.drawContext.terrain.pick(this.drawContext);\n        }\n\n        if (!this.drawContext.pickTerrainOnly) {\n            if (this.subsurfaceMode && this.hasStencilBuffer) {\n                // Draw the surface and collect the ordered renderables.\n                this.drawContext.currentGlContext.disable(this.drawContext.currentGlContext.STENCIL_TEST);\n                this.drawContext.surfaceShapeTileBuilder.clear();\n                this.drawLayers(true);\n                this.drawSurfaceRenderables();\n                this.drawContext.surfaceShapeTileBuilder.doRender(this.drawContext);\n\n                if (!this.deferOrderedRendering) {\n                    // Clear the depth and stencil buffers prior to rendering the ordered renderables. This allows\n                    // sub-surface renderables to be drawn beneath the terrain. Turn on stenciling to capture the\n                    // fragments that ordered renderables draw. The terrain and surface shapes will be subsequently\n                    // drawn again, and the stencil buffer will ensure that they are drawn only where they overlap\n                    // the fragments drawn by the ordered renderables.\n                    this.drawContext.currentGlContext.clear(\n                        this.drawContext.currentGlContext.DEPTH_BUFFER_BIT | this.drawContext.currentGlContext.STENCIL_BUFFER_BIT);\n                    this.drawContext.currentGlContext.enable(this.drawContext.currentGlContext.STENCIL_TEST);\n                    this.drawContext.currentGlContext.stencilFunc(this.drawContext.currentGlContext.ALWAYS, 1, 1);\n                    this.drawContext.currentGlContext.stencilOp(\n                        this.drawContext.currentGlContext.REPLACE, this.drawContext.currentGlContext.REPLACE, this.drawContext.currentGlContext.REPLACE);\n                    this.drawOrderedRenderables();\n                    this.drawContext.terrain.pick(this.drawContext);\n                    this.drawScreenRenderables();\n                }\n            } else {\n                this.drawContext.surfaceShapeTileBuilder.clear();\n\n                this.drawLayers(true);\n                this.drawSurfaceRenderables();\n\n                this.drawContext.surfaceShapeTileBuilder.doRender(this.drawContext);\n\n                if (!this.deferOrderedRendering) {\n                    this.drawOrderedRenderables();\n                    this.drawScreenRenderables();\n                }\n            }\n        }\n    };\n\n    // Internal function. Intentionally not documented.\n    createTerrain() {\n        var dc = this.drawContext;\n        dc.terrain = this.globe.tessellator.tessellate(dc);\n        dc.frameStatistics.setTerrainTileCount(dc.terrain ? dc.terrain.surfaceGeometry.length : 0);\n    };\n\n    makeCurrent(offset) {\n        var dc = this.drawContext;\n        dc.globe.offset = offset;\n        dc.globeStateKey = dc.globe.stateKey;\n\n        switch (offset) {\n            case -1:\n                dc.terrain = this.terrainLeft;\n                break;\n\n            case 0:\n                dc.terrain = this.terrainCenter;\n                break;\n\n            case 1:\n                dc.terrain = this.terrainRight;\n                break;\n        }\n    };\n\n    createTerrain2DContiguous() {\n        var dc = this.drawContext;\n\n        this.terrainCenter = null;\n        dc.globe.offset = 0;\n        dc.globeStateKey = dc.globe.stateKey;\n        if (dc.globe.intersectsFrustum(dc.frustumInModelCoordinates)) {\n            this.terrainCenter = dc.globe.tessellator.tessellate(dc);\n        }\n\n        this.terrainRight = null;\n        dc.globe.offset = 1;\n        dc.globeStateKey = dc.globe.stateKey;\n        if (dc.globe.intersectsFrustum(dc.frustumInModelCoordinates)) {\n            this.terrainRight = dc.globe.tessellator.tessellate(dc);\n        }\n\n        this.terrainLeft = null;\n        dc.globe.offset = -1;\n        dc.globeStateKey = dc.globe.stateKey;\n        if (dc.globe.intersectsFrustum(dc.frustumInModelCoordinates)) {\n            this.terrainLeft = dc.globe.tessellator.tessellate(dc);\n        }\n    };\n\n    draw2DContiguous() {\n        var drawing = \"\";\n\n        if (this.terrainCenter) {\n            drawing += \" 0 \";\n            this.makeCurrent(0);\n            this.deferOrderedRendering = this.terrainLeft || this.terrainRight;\n            this.doDraw();\n        }\n\n        if (this.terrainRight) {\n            drawing += \" 1 \";\n            this.makeCurrent(1);\n            this.deferOrderedRendering = this.terrainLeft || this.terrainLeft;\n            this.doDraw();\n        }\n\n        this.deferOrderedRendering = false;\n\n        if (this.terrainLeft) {\n            drawing += \" -1 \";\n            this.makeCurrent(-1);\n            this.doDraw();\n        }\n        //\n        //console.log(drawing);\n\n        if (this.subsurfaceMode && this.hasStencilBuffer) {\n            this.deferOrderedRendering = true;\n\n            if (this.terrainCenter) {\n                drawing += \" 0 \";\n                this.makeCurrent(0);\n                this.redrawSurface();\n            }\n\n            if (this.terrainRight) {\n                drawing += \" 1 \";\n                this.makeCurrent(1);\n                this.redrawSurface();\n            }\n\n            if (this.terrainLeft) {\n                drawing += \" -1 \";\n                this.makeCurrent(-1);\n                this.redrawSurface();\n            }\n        }\n\n        this.drawScreenRenderables();\n    };\n\n    pick2DContiguous() {\n        if (this.terrainCenter) {\n            this.makeCurrent(0);\n            this.deferOrderedRendering = this.terrainLeft || this.terrainRight;\n            this.doPick();\n        }\n\n        if (this.terrainRight) {\n            this.makeCurrent(1);\n            this.deferOrderedRendering = this.terrainLeft || this.terrainLeft;\n            this.doPick();\n        }\n\n        this.deferOrderedRendering = false;\n\n        if (this.terrainLeft) {\n            this.makeCurrent(-1);\n            this.doPick();\n        }\n    };\n\n    // Internal function. Intentionally not documented.\n    drawLayers(accumulateOrderedRenderables) {\n        // Draw all the layers attached to this WorldWindow.\n\n        var beginTime = Date.now(),\n            dc = this.drawContext,\n            layers = dc.layers,\n            layer;\n\n        dc.accumulateOrderedRenderables = accumulateOrderedRenderables;\n\n        for (var i = 0, len = layers.length; i < len; i++) {\n            layer = layers[i];\n            if (layer) {\n                dc.currentLayer = layer;\n                try {\n                    layer.render(dc);\n                } catch (e) {\n                    Logger.log(Logger.LEVEL_SEVERE, \"Error while rendering layer \" + layer.displayName + \".\\n\"\n                        + e.toString());\n                    // Keep going. Render the rest of the layers.\n                }\n            }\n        }\n        dc.currentLayer = null;\n        var now = Date.now();\n        dc.frameStatistics.layerRenderingTime = now - beginTime;\n    };\n\n    /**\n     * Adds a specified layer to the end of this WorldWindow.\n     * @param {Layer} layer The layer to add. May be null or undefined, in which case this WorldWindow is not\n     * modified.\n     */\n    addLayer(layer) {\n        if (layer) {\n            this.layers.push(layer);\n        }\n    };\n\n    /**\n     * Removes the first instance of a specified layer from this WorldWindow.\n     * @param {Layer} layer The layer to remove. May be null or undefined, in which case this WorldWindow is not\n     * modified. This WorldWindow is also not modified if the specified layer does not exist in this WorldWindow's\n     * layer list.\n     */\n    removeLayer(layer) {\n        var index = this.indexOfLayer(layer);\n        if (index >= 0) {\n            this.layers.splice(index, 1);\n        }\n    };\n\n    /**\n     * Inserts a specified layer at a specified position in this WorldWindow.\n     * @param {Number} index The index at which to insert the layer. May be negative to specify the position\n     * from the end of the array.\n     * @param {Layer} layer The layer to insert. May be null or undefined, in which case this WorldWindow is not\n     * modified.\n     */\n    insertLayer(index, layer) {\n        if (layer) {\n            this.layers.splice(index, 0, layer);\n        }\n    };\n\n    /**\n     * Returns the index of a specified layer in this WorldWindow.\n     * @param {Layer} layer The layer to search for.\n     * @returns {Number} The index of the specified layer or -1 if it doesn't exist in this WorldWindow.\n     */\n    indexOfLayer(layer) {\n        return this.layers.indexOf(layer);\n    };\n\n    // Internal function. Intentionally not documented.\n    drawSurfaceRenderables() {\n        var dc = this.drawContext,\n            sr;\n\n        dc.reverseSurfaceRenderables();\n\n        while (sr = dc.popSurfaceRenderable()) {\n            try {\n                sr.renderSurface(dc);\n            } catch (e) {\n                Logger.logMessage(Logger.LEVEL_WARNING, \"WorldWindow\", \"drawSurfaceRenderables\",\n                    \"Error while rendering a surface renderable.\\n\" + e.message);\n                // Keep going. Render the rest of the surface renderables.\n            }\n        }\n    };\n\n    // Internal function. Intentionally not documented.\n    drawOrderedRenderables() {\n        var beginTime = Date.now(),\n            dc = this.drawContext,\n            or;\n\n        dc.sortOrderedRenderables();\n\n        if (this._orderedRenderingFilters) {\n            for (var f = 0; f < this._orderedRenderingFilters.length; f++) {\n                this._orderedRenderingFilters[f](this.drawContext);\n            }\n        }\n\n        dc.orderedRenderingMode = true;\n\n        while (or = dc.popOrderedRenderable()) {\n            try {\n                or.renderOrdered(dc);\n            } catch (e) {\n                Logger.logMessage(Logger.LEVEL_WARNING, \"WorldWindow\", \"drawOrderedRenderables\",\n                    \"Error while rendering an ordered renderable.\\n\" + e.message);\n                // Keep going. Render the rest of the ordered renderables.\n            }\n        }\n\n        dc.orderedRenderingMode = false;\n        dc.frameStatistics.orderedRenderingTime = Date.now() - beginTime;\n    };\n\n    drawScreenRenderables() {\n        var dc = this.drawContext,\n            or;\n\n        while (or = dc.nextScreenRenderable()) {\n            try {\n                or.renderOrdered(dc);\n            } catch (e) {\n                Logger.logMessage(Logger.LEVEL_WARNING, \"WorldWindow\", \"drawOrderedRenderables\",\n                    \"Error while rendering a screen renderable.\\n\" + e.message);\n                // Keep going. Render the rest of the screen renderables.\n            }\n        }\n    };\n\n    // Internal function. Intentionally not documented.\n    resolveTopPick() {\n        if (this.drawContext.objectsAtPickPoint.objects.length == 0) {\n            return; // nothing picked; avoid calling readPickColor unnecessarily\n        }\n\n        // Make a last reading to determine what's on top.\n\n        var pickedObjects = this.drawContext.objectsAtPickPoint,\n            pickColor = this.drawContext.readPickColor(this.drawContext.pickPoint),\n            topObject = null,\n            terrainObject = null;\n\n        if (pickColor) {\n            // Find the picked object with the top color code and set its isOnTop flag.\n            for (var i = 0, len = pickedObjects.objects.length; i < len; i++) {\n                var po = pickedObjects.objects[i];\n\n                if (po.isTerrain) {\n                    terrainObject = po;\n                }\n\n                if (po.color.equals(pickColor)) {\n                    po.isOnTop = true;\n                    topObject = po;\n\n                    if (terrainObject) {\n                        break; // no need to search for more than the top object and the terrain object\n                    }\n                }\n            }\n\n            // In single-pick mode provide only the top-most object and the terrain object, if any.\n            if (!this.drawContext.deepPicking) {\n                pickedObjects.clear();\n                if (topObject) {\n                    pickedObjects.add(topObject);\n                }\n                if (terrainObject && terrainObject != topObject) {\n                    pickedObjects.add(terrainObject);\n                }\n            }\n        } else {\n            pickedObjects.clear(); // nothing drawn at the pick point\n        }\n    };\n\n    // Internal. Intentionally not documented.\n    resolveTerrainPick() {\n        var pickedObjects = this.drawContext.objectsAtPickPoint,\n            po;\n\n        // Mark the first picked terrain object as \"on top\". The picked object list should contain only one entry\n        // indicating the picked terrain object, but we iterate over the list contents anyway.\n        for (var i = 0, len = pickedObjects.objects.length; i < len; i++) {\n            po = pickedObjects.objects[i];\n            if (po.isTerrain) {\n                po.isOnTop = true;\n                break;\n            }\n        }\n    };\n\n    // Internal. Intentionally not documented.\n    resolveRegionPick() {\n        if (this.drawContext.objectsAtPickPoint.objects.length == 0) {\n            return; // nothing picked; avoid calling readPickColors unnecessarily\n        }\n\n        // Mark every picked object with a color in the pick buffer as \"on top\".\n\n        var pickedObjects = this.drawContext.objectsAtPickPoint,\n            uniquePickColors = this.drawContext.readPickColors(this.drawContext.pickRectangle),\n            po,\n            color;\n\n        for (var i = 0, len = pickedObjects.objects.length; i < len; i++) {\n            po = pickedObjects.objects[i];\n            if (!po) continue;\n            var poColor = po.color.toByteString();\n            color = uniquePickColors[poColor];\n            if (color) {\n                po.isOnTop = true;\n            } else if (po.userObject instanceof SurfaceShape) {\n                // SurfaceShapes ALWAYS get added to the pick list, since their rendering is deferred\n                // until the tile they are cached by is rendered. So a SurfaceShape may be in the pick list\n                // but is not seen in the pick rectangle.\n                //\n                // Remove the SurfaceShape that was not visible to the pick rectangle.\n                pickedObjects.objects.splice(i, 1);\n                i -= 1;\n            }\n        }\n    };\n\n    // Internal. Intentionally not documented.\n    callRedrawCallbacks(stage) {\n        for (var i = 0, len = this._redrawCallbacks.length; i < len; i++) {\n            try {\n                this._redrawCallbacks[i](this, stage);\n            } catch (e) {\n                Logger.log(Logger.LEVEL_SEVERE, \"Exception calling redraw callback.\\n\" + e.toString());\n                // Keep going. Execute the rest of the callbacks.\n            }\n        }\n    };\n\n    /**\n     * Moves this WorldWindow's navigator to a specified location or position.\n     * @param {Location | Position} position The location or position to move the navigator to. If this\n     * argument contains an \"altitude\" property, as {@link Position} does, the end point of the navigation is\n     * at the specified altitude. Otherwise the end point is at the current altitude of the navigator.\n     *\n     * This function uses this WorldWindow's {@link GoToAnimator} property to perform the move. That object's\n     * properties can be specified by the application to modify its behavior during calls to this function.\n     * It's cancel method can also be used to cancel the move initiated by this function.\n     * @param {Function} completionCallback If not null or undefined, specifies a function to call when the\n     * animation completes. The completion callback is called with a single argument, this animator.\n     * @throws {ArgumentError} If the specified location or position is null or undefined.\n     */\n    goTo(position, completionCallback) {\n        this.goToAnimator.goTo(position, completionCallback);\n    };\n\n    /**\n     * Declutters the current ordered renderables with a specified group ID. This function is not called by\n     * applications directly. It's meant to be invoked as an ordered rendering filter in this WorldWindow's\n     * [orderedRenderingFilters]{@link WorldWindow#orderedRenderingFilters} property.\n     * <p>\n     * The function operates by setting the target visibility of occluded shapes to 0 and unoccluded shapes to 1.\n     * @param {DrawContext} dc The current draw context.\n     * @param {Number} groupId The ID of the group to declutter. Must not be null, undefined or 0.\n     * @throws {ArgumentError} If the specified group ID is null, undefined or 0.\n     */\n    declutter(dc, groupId) {\n        if (!groupId) {\n            throw new ArgumentError(\n                Logger.logMessage(Logger.LEVEL_SEVERE, \"WorldWindow\", \"declutter\",\n                    \"Group ID is null, undefined or 0.\"));\n        }\n\n        // Collect all the declutterables in the specified group.\n        var declutterables = [];\n        for (var i = 0; i < dc.orderedRenderables.length; i++) {\n            var orderedRenderable = dc.orderedRenderables[i].orderedRenderable;\n            if (orderedRenderable.declutterGroup === groupId) {\n                declutterables.push(orderedRenderable);\n            }\n        }\n\n        // Filter the declutterables by determining which are partially occluded. Since the ordered renderable\n        // list was already sorted from front to back, the front-most will represent an entire occluded group.\n        var rects = [];\n        for (var j = 0; j < declutterables.length; j++) {\n            var declutterable = declutterables[j],\n                screenBounds = declutterable.screenBounds;\n\n            if (screenBounds && screenBounds.intersectsRectangles(rects)) {\n                declutterable.targetVisibility = 0;\n            } else {\n                declutterable.targetVisibility = 1;\n                if (screenBounds) {\n                    rects.push(screenBounds);\n                }\n            }\n        }\n    };\n\n    /**\n     * Computes a ray originating at the eyePoint and extending through the specified point in window\n     * coordinates.\n     * <p>\n     * The specified point is understood to be in the window coordinate system of the WorldWindow, with the origin\n     * in the top-left corner and axes that extend down and to the right from the origin point.\n     * <p>\n     * The results of this method are undefined if the specified point is outside of the WorldWindow's\n     * bounds.\n     *\n     * @param {Vec2} point The window coordinates point to compute a ray for.\n     * @returns {Line} A new Line initialized to the origin and direction of the computed ray, or null if the\n     * ray could not be computed.\n     */\n    rayThroughScreenPoint(point) {\n        if (!point) {\n            throw new ArgumentError(Logger.logMessage(Logger.LEVEL_SEVERE, \"WorldWindow\", \"rayThroughScreenPoint\",\n                \"missingPoint\"));\n        }\n\n        // Convert the point's xy coordinates from window coordinates to WebGL screen coordinates.\n        var screenPoint = new Vec3(point[0], this.viewport.height - point[1], 0),\n            nearPoint = new Vec3(0, 0, 0),\n            farPoint = new Vec3(0, 0, 0);\n\n        this.computeViewingTransform(this.scratchProjection, this.scratchModelview);\n        var modelviewProjection = Matrix.fromIdentity();\n        modelviewProjection.setToMultiply(this.scratchProjection, this.scratchModelview);\n        var modelviewProjectionInv = Matrix.fromIdentity();\n        modelviewProjectionInv.invertMatrix(modelviewProjection);\n\n        // Compute the model coordinate point on the near clip plane with the xy coordinates and depth 0.\n        if (!modelviewProjectionInv.unProject(screenPoint, this.viewport, nearPoint)) {\n            return null;\n        }\n\n        // Compute the model coordinate point on the far clip plane with the xy coordinates and depth 1.\n        screenPoint[2] = 1;\n        if (!modelviewProjectionInv.unProject(screenPoint, this.viewport, farPoint)) {\n            return null;\n        }\n\n        var eyePoint = this.scratchModelview.extractEyePoint(new Vec3(0, 0, 0));\n\n        // Compute a ray originating at the eye point and with direction pointing from the xy coordinate on the near\n        // plane to the same xy coordinate on the far plane.\n        var origin = new Vec3(eyePoint[0], eyePoint[1], eyePoint[2]),\n            direction = new Vec3(farPoint[0], farPoint[1], farPoint[2]);\n\n        direction.subtract(nearPoint);\n        direction.normalize();\n\n        return new Line(origin, direction);\n    };\n}\n\nexport default WorldWindow;","/*\n * Copyright 2015-2017 WorldWind Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport WorldWind from 'webworldwind-esa';\nconst {\n    Angle,\n    ArgumentError,\n    Logger\n} = WorldWind;\n\n/**\n * Provides utilities for determining the Sun geographic and celestial location.\n * @exports SunPosition\n */\nconst SunPosition = {\n\n    /**\n     * Computes the geographic location of the sun for a given date\n     * @param {Date} date\n     * @throws {ArgumentError} if the date is missing\n     * @return {{latitude: Number, longitude: Number}} the geographic location\n     */\n    getAsGeographicLocation: function (date) {\n        if (date instanceof Date === false) {\n            throw new ArgumentError(\n                Logger.logMessage(Logger.LEVEL_SEVERE, \"SunPosition\", \"getAsGeographicLocation\",\n                    \"missingDate\"));\n        }\n\n        let celestialLocation = this.getAsCelestialLocation(date);\n        return this.celestialToGeographic(celestialLocation, date);\n    },\n\n    /**\n     * Computes the celestial location of the sun for a given julianDate\n     * @param {Date} date\n     * @throws {ArgumentError} if the date is missing\n     * @return {{declination: Number, rightAscension: Number}} the celestial location\n     */\n    getAsCelestialLocation: function (date) {\n        if (date instanceof Date === false) {\n            throw new ArgumentError(\n                Logger.logMessage(Logger.LEVEL_SEVERE, \"SunPosition\", \"getAsCelestialLocation\",\n                    \"missingDate\"));\n        }\n\n        let julianDate = this.computeJulianDate(date);\n\n        //number of days (positive or negative) since Greenwich noon, Terrestrial Time, on 1 January 2000 (J2000.0)\n        let numDays = julianDate - 2451545;\n\n        let meanLongitude = this.normalizeAngle360(280.460 + 0.9856474 * numDays);\n\n        let meanAnomaly = this.normalizeAngle360(357.528 + 0.9856003 * numDays) * Angle.DEGREES_TO_RADIANS;\n\n        let eclipticLongitude = meanLongitude + 1.915 * Math.sin(meanAnomaly) + 0.02 * Math.sin(2 * meanAnomaly);\n        let eclipticLongitudeRad = eclipticLongitude * Angle.DEGREES_TO_RADIANS;\n\n        let obliquityOfTheEcliptic = (23.439 - 0.0000004 * numDays) * Angle.DEGREES_TO_RADIANS;\n\n        let declination = Math.asin(Math.sin(obliquityOfTheEcliptic) * Math.sin(eclipticLongitudeRad)) *\n            Angle.RADIANS_TO_DEGREES;\n\n        let rightAscension = Math.atan(Math.cos(obliquityOfTheEcliptic) * Math.tan(eclipticLongitudeRad)) *\n            Angle.RADIANS_TO_DEGREES;\n\n        //compensate for atan result\n        if (eclipticLongitude >= 90 && eclipticLongitude < 270) {\n            rightAscension += 180;\n        }\n        rightAscension = this.normalizeAngle360(rightAscension);\n\n        return {\n            declination: declination,\n            rightAscension: rightAscension\n        };\n    },\n\n    /**\n     * Converts from celestial coordinates (declination and right ascension) to geographic coordinates\n     * (latitude, longitude) for a given julian date\n     * @param {{declination: Number, rightAscension: Number}} celestialLocation\n     * @param {Date} date\n     * @throws {ArgumentError} if celestialLocation or julianDate are missing\n     * @return {{latitude: Number, longitude: Number}} the geographic location\n     */\n    celestialToGeographic: function (celestialLocation, date) {\n        if (!celestialLocation) {\n            throw new ArgumentError(\n                Logger.logMessage(Logger.LEVEL_SEVERE, \"SunPosition\", \"celestialToGeographic\",\n                    \"missingCelestialLocation\"));\n        }\n        if (date instanceof Date === false) {\n            throw new ArgumentError(\n                Logger.logMessage(Logger.LEVEL_SEVERE, \"SunPosition\", \"celestialToGeographic\", \"missingDate\"));\n        }\n\n        let julianDate = this.computeJulianDate(date);\n\n        //number of days (positive or negative) since Greenwich noon, Terrestrial Time, on 1 January 2000 (J2000.0)\n        let numDays = julianDate - 2451545;\n\n        //Greenwich Mean Sidereal Time\n        let GMST = this.normalizeAngle360(280.46061837 + 360.98564736629 * numDays);\n\n        //Greenwich Hour Angle\n        let GHA = this.normalizeAngle360(GMST - celestialLocation.rightAscension);\n\n        let longitude = Angle.normalizedDegreesLongitude(-GHA);\n\n        return {\n            latitude: celestialLocation.declination,\n            longitude: longitude\n        };\n    },\n\n    /**\n     * Computes the julian date from a javascript date object\n     * @param {Date} date\n     * @throws {ArgumentError} if the date is missing\n     * @return {Number} the julian date\n     */\n    computeJulianDate: function (date) {\n        if (date instanceof Date === false) {\n            throw new ArgumentError(\n                Logger.logMessage(Logger.LEVEL_SEVERE, \"SunPosition\", \"computeJulianDate\", \"missingDate\"));\n        }\n\n        let year = date.getUTCFullYear();\n        let month = date.getUTCMonth() + 1;\n        let day = date.getUTCDate();\n        let hour = date.getUTCHours();\n        let minute = date.getUTCMinutes();\n        let second = date.getUTCSeconds();\n\n        let dayFraction = (hour + minute / 60 + second / 3600) / 24;\n\n        if (month <= 2) {\n            year -= 1;\n            month += 12;\n        }\n\n        let A = Math.trunc(year / 100);\n        let B = 2 - A + Math.trunc(A / 4);\n        let JD0h = Math.trunc(365.25 * (year + 4716)) + Math.trunc(30.6001 * (month + 1)) + day + B - 1524.5;\n\n        return JD0h + dayFraction;\n    },\n\n    /**\n     * Restricts an angle to the range [0, 360] degrees, wrapping angles outside the range.\n     * Wrapping takes place as though traversing the edge of a unit circle;\n     * angles less than 0 wrap back to 360, while angles greater than 360 wrap back to 0.\n     *\n     * @param {Number} degrees the angle to wrap in degrees\n     *\n     * @return {Number} the specified angle wrapped to [0, 360] degrees\n     */\n    normalizeAngle360: function(degrees) {\n        let angle = degrees % 360;\n        return angle >= 0 ? angle : (angle < 0 ? 360 + angle : 360 - angle);\n    }\n\n};\n\nexport default SunPosition;","import WorldWind from 'webworldwind-esa';\nimport SunPosition from './SunPosition';\nconst {\n    Angle\n} = WorldWind;\n\nconst Celestial = {\n\n    SUN: 0,\n    MERCURY: 1,\n    VENUS: 2,\n    MARS: 4,\n    JUPITER: 5,\n    SATURN: 6,\n    URANUS: 7,\n    NEPTUNE: 8,\n\n    getCelestialLocation(id, date) {\n        let orbitalElements;\n        const julianDate = SunPosition.computeJulianDate(date);\n        let d = julianDate - 2451543.5;\n        //d = -3543.0;\n\n        switch (id) {\n            case this.SUN:\n                orbitalElements = this.computeSun(d);\n                break;\n\n            case this.MERCURY:\n                orbitalElements = this.computeMercury(d);\n                break;\n\n            case this.VENUS:\n                orbitalElements = this.computeVenus(d);\n                break;\n\n            case this.MARS:\n                orbitalElements = this.computeMars(d);\n                break;\n\n            case this.JUPITER:\n                orbitalElements = this.computeJupiter(d);\n                break;\n\n            case this.SATURN:\n                orbitalElements = this.computeSaturn(d);\n                break;\n\n            case this.URANUS:\n                orbitalElements = this.computeUranus(d);\n                break;\n\n            case this.NEPTUNE:\n                orbitalElements = this.computeNeptune(d);\n                break;\n        }\n\n        return this.computePosition(d, orbitalElements);\n    },\n\n    computeMercury(d) {\n        const N = 48.3313 + 3.24587E-5 * d;\n        const i = 7.0047 + 5.00E-8 * d;\n        const w = 29.1241 + 1.01444E-5 * d;\n        const a = 0.387098;  //(AU)\n        const e = 0.205635 + 5.59E-10 * d;\n        const M = 168.6562 + 4.0923344368 * d;\n\n        return {N, i, w, a, e, M};\n    },\n\n    computeVenus(d) {\n        const N = 76.6799 + 2.46590E-5 * d;\n        const i = 3.3946 + 2.75E-8 * d;\n        const w = 54.8910 + 1.38374E-5 * d;\n        const a = 0.723330;//  (AU)\n        const e = 0.006773 - 1.302E-9 * d;\n        const M = 48.0052 + 1.6021302244 * d;\n\n        return {N, i, w, a, e, M};\n    },\n\n    computeMars(d) {\n        const N = 49.5574 + 2.11081E-5 * d;\n        const i = 1.8497 - 1.78E-8 * d;\n        const w = 286.5016 + 2.92961E-5 * d;\n        const a = 1.523688;  //(AU)\n        const e = 0.093405 + 2.516E-9 * d;\n        const M = 18.6021 + 0.5240207766 * d;\n\n        return {N, i, w, a, e, M};\n    },\n\n    computeJupiter(d) {\n        const N = 100.4542 + 2.76854E-5 * d;\n        const i = 1.3030 - 1.557E-7 * d;\n        const w = 273.8777 + 1.64505E-5 * d;\n        const a = 5.20256;  //(AU)\n        const e = 0.048498 + 4.469E-9 * d;\n        const M = 19.8950 + 0.0830853001 * d;\n\n        return {N, i, w, a, e, M};\n    },\n\n    computeSaturn(d) {\n        const N = 113.6634 + 2.38980E-5 * d;\n        const i = 2.4886 - 1.081E-7 * d;\n        const w = 339.3939 + 2.97661E-5 * d;\n        const a = 9.55475;  //(AU)\n        const e = 0.055546 - 9.499E-9 * d;\n        const M = 316.9670 + 0.0334442282 * d;\n\n        return {N, i, w, a, e, M};\n    },\n\n    computeUranus(d) {\n        const N = 74.0005 + 1.3978E-5 * d;\n        const i = 0.7733 + 1.9E-8 * d;\n        const w = 96.6612 + 3.0565E-5 * d;\n        const a = 19.18171 - 1.55E-8 * d;//  (AU)\n        const e = 0.047318 + 7.45E-9 * d;\n        const M = 142.5905 + 0.011725806 * d;\n\n        return {N, i, w, a, e, M};\n    },\n\n    computeNeptune(d) {\n        const N = 131.7806 + 3.0173E-5 * d;\n        const i = 1.7700 - 2.55E-7 * d;\n        const w = 272.8461 - 6.027E-6 * d;\n        const a = 30.05826 + 3.313E-8 * d;//  (AU)\n        const e = 0.008606 + 2.15E-9 * d;\n        const M = 260.2471 + 0.005995147 * d;\n\n        return {N, i, w, a, e, M};\n    },\n\n    computeSun(d) {\n        const N = 0.0;\n        const i = 0.0;\n        const w = 282.9404 + 4.70935E-5 * d;\n        const a = 1.000000;  //(AU)\n        const e = 0.016709 - 1.151E-9 * d;\n        const M = 356.0470 + 0.9856002585 * d;\n\n        return {N, i, w, a, e, M};\n    },\n\n    computePosition(d, {N, i, w, a, e, M}) {\n        N = SunPosition.normalizeAngle360(N) * Angle.DEGREES_TO_RADIANS;\n        i = SunPosition.normalizeAngle360(i) * Angle.DEGREES_TO_RADIANS;\n        w = SunPosition.normalizeAngle360(w) * Angle.DEGREES_TO_RADIANS;\n        //e = SunPosition.normalizeAngle360(e) * Angle.DEGREES_TO_RADIANS;\n        M = SunPosition.normalizeAngle360(M) * Angle.DEGREES_TO_RADIANS;\n\n        let E = M + e * Math.sin(M) * (1.0 + e * Math.cos(M));\n\n        if (e >= 0.06) {\n            for (var aa = 0; aa < 10; aa++) {\n                var E1 = E - (E - e * Math.sin(E) - M) / (1 - e * Math.cos(E));\n                if (Math.abs(E1 - E) < 0.001) {\n                    E = E1;\n                    break;\n                }\n                E = E1;\n            }\n        }\n\n        const xv = a * (Math.cos(E) - e);\n        const yv = a * (Math.sqrt(1.0 - e * e) * Math.sin(E));\n\n        const v = Math.atan2(yv, xv);\n        const r = Math.sqrt(xv * xv + yv * yv);\n\n        let xh = r * (Math.cos(N) * Math.cos(v + w) - Math.sin(N) * Math.sin(v + w) * Math.cos(i));\n        let yh = r * (Math.sin(N) * Math.cos(v + w) + Math.cos(N) * Math.sin(v + w) * Math.cos(i));\n        let zh = r * (Math.sin(v + w) * Math.sin(i));\n\n        const Epoch = 2000.0;\n        const lon_corr = 3.82394E-5 * (365.2422 * (Epoch - 2000.0) - d) * Angle.DEGREES_TO_RADIANS;\n\n        const lonecl = Math.atan2(yh, xh) + lon_corr;\n        const latecl = Math.atan2(zh, Math.sqrt(xh * xh + yh * yh));\n\n\n        /*** perturbations ***/\n        /*** not implemented ***/\n\n\n        xh = r * Math.cos(lonecl) * Math.cos(latecl);\n        yh = r * Math.sin(lonecl) * Math.cos(latecl);\n        zh = r * Math.sin(latecl);\n\n        let {lonsun, rsun} = this.getLonSun(d, this.computeSun(d));\n        lonsun *= Angle.RADIANS_TO_DEGREES;\n        lonsun = SunPosition.normalizeAngle360(lonsun) * Angle.DEGREES_TO_RADIANS;\n\n        const xs = rsun * Math.cos(lonsun);\n        const ys = rsun * Math.sin(lonsun);\n\n        const xg = xh + xs;\n        const yg = yh + ys;\n        const zg = zh;\n\n        const ecl = SunPosition.normalizeAngle360(23.4393 - 3.563E-7 * d) * Angle.DEGREES_TO_RADIANS;\n\n        const xe = xg;\n        const ye = yg * Math.cos(ecl) - zg * Math.sin(ecl);\n        const ze = yg * Math.sin(ecl) + zg * Math.cos(ecl);\n\n        const ra = SunPosition.normalizeAngle360(Math.atan2(ye, xe) * Angle.RADIANS_TO_DEGREES);\n        const dec = Math.atan2(ze, Math.sqrt(xe * xe + ye * ye)) * Angle.RADIANS_TO_DEGREES;\n\n        return {ra, dec};\n    },\n\n    getLonSun(d, {w, e, M}) {\n        w = SunPosition.normalizeAngle360(w) * Angle.DEGREES_TO_RADIANS;\n        //e = SunPosition.normalizeAngle360(e) * Angle.DEGREES_TO_RADIANS;\n        M = SunPosition.normalizeAngle360(M) * Angle.DEGREES_TO_RADIANS;\n\n        const E = M + e * Math.sin(M) * (1.0 + e * Math.cos(M));\n\n        const xv = Math.cos(E) - e;\n        const yv = Math.sqrt(1.0 - e * e) * Math.sin(E);\n\n        const v = Math.atan2(yv, xv);\n        const rsun = Math.sqrt(xv * xv + yv * yv);\n\n        const lonsun = v + w;\n\n        return {lonsun, rsun};\n    },\n\n};\n\nexport default Celestial;","/**\n * @exports StarFieldProgram\n */\nimport WorldWind from 'webworldwind-esa';\n\nconst {\n    ArgumentError,\n    GpuProgram,\n    Logger,\n    Matrix,\n    Color\n} = WorldWind;\n\n/**\n * Constructs a new program.\n * Initializes, compiles and links this GLSL program with the source code for its vertex and fragment shaders.\n * <p>\n * This method creates WebGL shaders for the program's shader sources and attaches them to a new GLSL program.\n * This method then compiles the shaders and then links the program if compilation is successful.\n * Use the bind method to make the program current during rendering.\n *\n * @alias StarFieldProgram\n * @constructor\n * @augments GpuProgram\n * @classdesc StarFieldProgram is a GLSL program that draws points representing stars.\n * @param {WebGLRenderingContext} gl The current WebGL context.\n * @throws {ArgumentError} If the shaders cannot be compiled, or linking of the compiled shaders into a program\n * fails.\n */\nclass StarFieldProgram extends GpuProgram {\n    constructor(gl) {\n        super(gl, 'attribute vec4 vertexPoint;\\n' +\n\n            'uniform mat4 mvpMatrix;\\n' +\n            //number of days (positive or negative) since Greenwich noon, Terrestrial Time,\n            // on 1 January 2000 (J2000.0)\n            'uniform float numDays;\\n' +\n            'uniform vec2 magnitudeRange;\\n' +\n\n            'varying float magnitudeWeight;\\n' +\n\n            //normalizes an angle between 0.0 and 359.0\n            'float normalizeAngle(float angle) {\\n' +\n            '   float angleDivisions = angle / 360.0;\\n' +\n            '   return 360.0 * (angleDivisions - floor(angleDivisions));\\n' +\n            '}\\n' +\n\n            //transforms declination and right ascension in cartesian coordinates\n            'vec3 computePosition(float dec, float ra) {\\n' +\n            '   float GMST = normalizeAngle(280.46061837 + 360.98564736629 * numDays);\\n' +\n            '   float GHA = normalizeAngle(GMST - ra);\\n' +\n            '   float lon = -GHA + 360.0 * step(180.0, GHA);\\n' +\n            '   float latRad = radians(dec);\\n' +\n            '   float lonRad = radians(lon);\\n' +\n            '   float radCosLat = cos(latRad);\\n' +\n            '   return vec3(radCosLat * sin(lonRad), sin(latRad), radCosLat * cos(lonRad));\\n' +\n            '}\\n' +\n\n            //normalizes a value between 0.0 and 1.0\n            'float normalizeScalar(float value, float minValue, float maxValue){\\n' +\n            '   return (value - minValue) / (maxValue - minValue);\\n' +\n            '}\\n' +\n\n            'void main() {\\n' +\n            '   vec3 vertexPosition = computePosition(vertexPoint.x, vertexPoint.y);\\n' +\n            '   gl_Position = mvpMatrix * vec4(vertexPosition.xyz, 1.0);\\n' +\n            '   gl_Position.z = gl_Position.w - 0.00001;\\n' +\n            '   gl_PointSize = vertexPoint.z;\\n' +\n            '   magnitudeWeight = normalizeScalar(vertexPoint.w, magnitudeRange.x, magnitudeRange.y);\\n' +\n            '}', 'precision mediump float;\\n' +\n\n            'uniform sampler2D textureSampler;\\n' +\n            'uniform int fragMode;\\n' +\n            'uniform vec4 color;\\n' +\n\n            'varying float magnitudeWeight;\\n' +\n\n            'const vec4 white = vec4(1.0, 1.0, 1.0, 1.0);\\n' +\n            'const vec4 grey = vec4(0.5, 0.5, 0.5, 1.0);\\n' +\n\n            'void main() {\\n' +\n            '   if (fragMode == 1) {\\n' +\n            '       gl_FragColor = texture2D(textureSampler, gl_PointCoord);\\n' +\n            '   }\\n' +\n            '   else if (fragMode == 0) {\\n' +\n            //paint the starts in shades of grey, where the brightest star is white and the dimmest star is grey\n            '       gl_FragColor = mix(white, grey, magnitudeWeight);\\n' +\n            '   }\\n' +\n            '   else if (fragMode == 2) {\\n' +\n            '       gl_FragColor = color;\\n' +\n            '   }\\n' +\n            '}', [\"vertexPoint\"]);\n\n        this.FRAG_MODE_MIX_COLOR = 0;\n        this.FRAG_MODE_TEXTURE = 1;\n        this.FRAG_MODE_COLOR = 2;\n\n        /**\n         * The WebGL location for this program's 'vertexPoint' attribute.\n         * @type {Number}\n         * @readonly\n         */\n        this.vertexPointLocation = this.attributeLocation(gl, \"vertexPoint\");\n\n        /**\n         * The WebGL location for this program's 'mvpMatrix' uniform.\n         * @type {WebGLUniformLocation}\n         * @readonly\n         */\n        this.mvpMatrixLocation = this.uniformLocation(gl, \"mvpMatrix\");\n\n        /**\n         * The WebGL location for this program's 'numDays' uniform.\n         * @type {WebGLUniformLocation}\n         * @readonly\n         */\n        this.numDaysLocation = this.uniformLocation(gl, \"numDays\");\n\n        /**\n         * The WebGL location for this program's 'magnitudeRangeLocation' uniform.\n         * @type {WebGLUniformLocation}\n         * @readonly\n         */\n        this.magnitudeRangeLocation = this.uniformLocation(gl, \"magnitudeRange\");\n\n        /**\n         * The WebGL location for this program's 'textureSampler' uniform.\n         * @type {WebGLUniformLocation}\n         * @readonly\n         */\n        this.textureUnitLocation = this.uniformLocation(gl, \"textureSampler\");\n\n        /**\n         * The WebGL location for this program's 'textureEnabled' uniform.\n         * @type {WebGLUniformLocation}\n         * @readonly\n         */\n        this.fragModeLocation = this.uniformLocation(gl, \"fragMode\");\n\n        this.colorLocation = this.uniformLocation(gl, \"color\");\n\n        this.localState = {\n            mvpMatrix: null,\n            numDays: null,\n            magnitudeRange: null,\n            textureUnit: null,\n            fragMode: null,\n            color: null,\n        };\n    }\n\n    /**\n     * Loads the specified matrix as the value of this program's 'mvpMatrix' uniform variable.\n     *\n     * @param {WebGLRenderingContext} gl The current WebGL context.\n     * @param {Matrix} matrix The matrix to load.\n     * @throws {ArgumentError} If the specified matrix is null or undefined.\n     */\n    loadModelviewProjection(gl, matrix) {\n        if (!matrix) {\n            throw new ArgumentError(\n                Logger.logMessage(Logger.LEVEL_SEVERE, \"StarFieldProgram\", \"loadModelviewProjection\", \"missingMatrix\"));\n        }\n\n        let forceLoad = false;\n        if (this.localState.mvpMatrix === null) {\n            forceLoad = true;\n            this.localState.mvpMatrix = Matrix.fromIdentity();\n        }\n\n        if (forceLoad || !this.localState.mvpMatrix.equals(matrix)) {\n            this.loadUniformMatrix(gl, matrix, this.mvpMatrixLocation);\n            this.localState.mvpMatrix.copy(matrix);\n        }\n    }\n\n    /**\n     * Loads the specified number as the value of this program's 'numDays' uniform variable.\n     *\n     * @param {WebGLRenderingContext} gl The current WebGL context.\n     * @param {Number} numDays The number of days (positive or negative) since Greenwich noon, Terrestrial Time,\n     * on 1 January 2000 (J2000.0)\n     * @throws {ArgumentError} If the specified number is null or undefined.\n     */\n    loadNumDays(gl, numDays) {\n        if (numDays == null) {\n            throw new ArgumentError(\n                Logger.logMessage(Logger.LEVEL_SEVERE, \"StarFieldProgram\", \"loadNumDays\", \"missingNumDays\"));\n        }\n        if (this.localState.numDays !== numDays) {\n            gl.uniform1f(this.numDaysLocation, numDays);\n            this.localState.numDays = numDays;\n        }\n    }\n\n    /**\n     * Loads the specified numbers as the value of this program's 'magnitudeRange' uniform variable.\n     *\n     * @param {WebGLRenderingContext} gl The current WebGL context.\n     * @param {Number} minMag\n     * @param {Number} maxMag\n     * @throws {ArgumentError} If the specified numbers are null or undefined.\n     */\n    loadMagnitudeRange(gl, minMag, maxMag) {\n        if (minMag == null) {\n            throw new ArgumentError(\n                Logger.logMessage(Logger.LEVEL_SEVERE, \"StarFieldProgram\", \"loadMagRange\", \"missingMinMag\"));\n        }\n        if (maxMag == null) {\n            throw new ArgumentError(\n                Logger.logMessage(Logger.LEVEL_SEVERE, \"StarFieldProgram\", \"loadMagRange\", \"missingMaxMag\"));\n        }\n        let forceLoad = false;\n        if (this.localState.magnitudeRange === null) {\n            forceLoad = true;\n            this.localState.magnitudeRange = [minMag, maxMag];\n        }\n\n        if (forceLoad || this.localState.magnitudeRange[0] !== minMag || this.localState.magnitudeRange[1] !== maxMag) {\n            gl.uniform2f(this.magnitudeRangeLocation, minMag, maxMag);\n            this.localState.magnitudeRange[0] = minMag;\n            this.localState.magnitudeRange[1] = maxMag;\n        }\n    }\n\n    /**\n     * Loads the specified number as the value of this program's 'textureSampler' uniform variable.\n     * @param {WebGLRenderingContext} gl The current WebGL context.\n     * @param {Number} unit The texture unit.\n     */\n    loadTextureUnit(gl, unit) {\n        if (this.localState.textureUnit !== unit) {\n            gl.uniform1i(this.textureUnitLocation, unit - gl.TEXTURE0);\n            this.localState.textureUnit = unit;\n        }\n    }\n\n    loadFragMode(gl, mode) {\n        if (this.localState.fragMode !== mode) {\n            gl.uniform1i(this.fragModeLocation, mode);\n            this.localState.fragMode = mode;\n        }\n    }\n\n    loadColor(gl, color) {\n        let forceLoad = false;\n        if (this.localState.color === null) {\n            forceLoad = true;\n            this.localState.color = new Color(0, 0, 0, 0);\n        }\n\n        if (forceLoad || !this.localState.color.equals(color)) {\n            this.loadUniformColor(gl, color, this.colorLocation);\n            this.localState.color.copy(color);\n        }\n    }\n}\n\n/**\n * A string that uniquely identifies this program.\n * @type {string}\n * @readonly\n */\nStarFieldProgram.key = \"WorldWindGpuStarFieldFullProgram\";\n\nexport default StarFieldProgram;","/**\n * @exports StarFieldLayer\n */\nimport Celestial from './Celestial';\nimport StarFieldProgram from './StarFieldProgram';\nimport SunPosition from './SunPosition';\n\nimport WorldWind from 'webworldwind-esa';\nconst {\n    Color,\n    Layer,\n    Logger,\n    Matrix,\n    REDRAW_EVENT_TYPE\n} = WorldWind;\n\n\n/**\n * Constructs a layer showing stars and the Sun around the Earth.\n * If used together with the AtmosphereLayer, the StarFieldLayer must be inserted before the AtmosphereLayer.\n *\n * If you want to use your own star data, the file provided must be .json\n * and the fields 'ra', 'dec' and 'vmag' must be present in the metadata.\n * ra and dec must be expressed in degrees.\n *\n * This layer uses J2000.0 as the ref epoch.\n *\n * If the star data .json file is too big, consider enabling gzip compression on your web server.\n * For more info about enabling gzip compression consult the configuration for your web server.\n *\n *\n -- output format : json\n SELECT \"I/239/hip_main\".HIP,  \"I/239/hip_main\".Vmag as vmag, \"I/239/hip_main\".\"_RA.icrs\" as ra,  \"I/239/hip_main\".\"_DE.icrs\" as dec\n FROM \"I/239/hip_main\"\n WHERE \"I/239/hip_main\".Vmag <=6.5\n *\n * @alias StarFieldLayer\n * @constructor\n * @classdesc Provides a layer showing stars, and the Sun around the Earth\n * @param {URL} starDataSource optional url for the stars data\n * @augments Layer\n */\nclass StarFieldLayer extends Layer {\n    constructor(starDataSource) {\n        super('StarField');\n\n        // The StarField Layer is not pickable.\n        this.pickEnabled = false;\n\n        /**\n         * The size of the Sun in pixels.\n         * This can not exceed the maximum allowed pointSize of the GPU.\n         * A warning will be given if the size is too big and the allowed max size will be used.\n         * @type {Number}\n         * @default 128\n         */\n        this.sunSize = 128;\n\n        /**\n         * Indicates weather to show or hide the Sun\n         * @type {Boolean}\n         * @default true\n         */\n        this.showSun = true;\n\n        //Documented in defineProperties below.\n        this._starDataSource = starDataSource || WorldWind.configuration.baseUrl + 'data/stars.json';\n        this._sunImageSource = WorldWind.configuration.baseUrl + 'images/sunTexture.png';\n\n        //Internal use only.\n        //The MVP matrix of this layer.\n        this._matrix = Matrix.fromIdentity();\n\n        //Internal use only.\n        //gpu cache key for the stars vbo.\n        this._starsPositionsVboCacheKey = null;\n\n        //Internal use only.\n        this._numStars = 0;\n\n        //Internal use only.\n        this._starData = null;\n\n        //Internal use only.\n        this._minMagnitude = Number.MAX_VALUE;\n        this._maxMagnitude = Number.MIN_VALUE;\n\n        //Internal use only.\n        //A flag to indicate the star data is currently being retrieved.\n        this._loadStarted = false;\n\n        //Internal use only.\n        this._minScale = 30e6;\n        this._scale = Number.MAX_SAFE_INTEGER || Math.pow(2, 53) - 1;\n        //this._scale = 50e6;\n\n        //Internal use only.\n        this._sunPositionsCacheKey = '';\n        this._sunBufferView = new Float32Array(4);\n\n        //Internal use only.\n        this._MAX_GL_POINT_SIZE = 0;\n\n        this.showPlanets = true;\n\n        const jupiterSize = 32;\n\n        this.planets = [\n            {\n                id: Celestial.MERCURY,\n                url: 'images/Mercury64.png',\n                size: jupiterSize / 4,\n                ra: null,\n                dec: null,\n            },\n            {\n                id: Celestial.VENUS,\n                url: 'images/Venus64.png',\n                size: jupiterSize / 4,\n                ra: null,\n                dec: null,\n            },\n            {\n                id: Celestial.MARS,\n                url: 'images/Mars64.png',\n                size: jupiterSize / 4,\n                ra: null,\n                dec: null,\n            },\n            {\n                id: Celestial.JUPITER,\n                url: 'images/Jupiter64.png',\n                size: jupiterSize,\n                ra: null,\n                dec: null,\n            },\n            {\n                id: Celestial.SATURN,\n                url: 'images/Saturn64.png',\n                size: jupiterSize,\n                ra: null,\n                dec: null,\n            },\n            {\n                id: Celestial.URANUS,\n                url: 'images/Uranus64.png',\n                size: jupiterSize / 2,\n                ra: null,\n                dec: null,\n            },\n            {\n                id: Celestial.NEPTUNE,\n                url: 'images/Neptune64.png',\n                size: jupiterSize / 2,\n                ra: null,\n                dec: null,\n            },\n        ];\n\n        this._planetsBufferView = null;\n\n        this._cacheKeys = {\n            sunPosition: '',\n            planetPositions: '',\n            starPositions: ''\n        };\n    }\n\n    /**\n     * Url for the stars data.\n     * @memberof StarFieldLayer.prototype\n     * @type {URL}\n     */\n    get starDataSource() {\n        return this._starDataSource;\n    }\n    \n    set starDataSource(value) {\n        this._starDataSource = value;\n        this.invalidateStarData();\n    }\n\n    /**\n     * Url for the sun texture image.\n     * @memberof StarFieldLayer.prototype\n     * @type {URL}\n     */\n    get sunImageSource() {\n        return this._sunImageSource;\n    }\n    \n    set sunImageSource(value) {\n        this._sunImageSource = value;\n    }\n\n    // Documented in superclass.\n    doRender(dc) {\n        if (dc.globe.is2D()) {\n            return;\n        }\n\n        if (!this.haveResources(dc)) {\n            this.loadResources(dc);\n            return;\n        }\n\n        this.beginRendering(dc);\n        try {\n            this.doDraw(dc);\n        }\n        finally {\n            this.endRendering(dc);\n        }\n    }\n\n    // Internal. Intentionally not documented.\n    haveResources(dc) {\n        let sunTexture = dc.gpuResourceCache.resourceForKey(this._sunImageSource);\n        let planetTextures = this.planets.every(planet => {\n            const texture = dc.gpuResourceCache.resourceForKey(planet.url);\n            return !!texture;\n        });\n        return (\n            this._starData != null &&\n            sunTexture != null &&\n            planetTextures\n        );\n    }\n\n    // Internal. Intentionally not documented.\n    loadResources(dc) {\n        let gl = dc.currentGlContext;\n        let gpuResourceCache = dc.gpuResourceCache;\n\n        if (!this._starData) {\n            this.fetchStarData();\n        }\n\n        let sunTexture = gpuResourceCache.resourceForKey(this._sunImageSource);\n        if (!sunTexture) {\n            gpuResourceCache.retrieveTexture(gl, this._sunImageSource);\n        }\n\n        this.planets.forEach(planet => {\n            const texture = gpuResourceCache.resourceForKey(planet.url);\n            if (!texture) {\n                gpuResourceCache.retrieveTexture(gl, planet.url);\n            }\n        });\n    }\n\n    // Internal. Intentionally not documented.\n    beginRendering(dc) {\n        let gl = dc.currentGlContext;\n        dc.findAndBindProgram(StarFieldProgram);\n        gl.enableVertexAttribArray(0);\n        gl.depthMask(false);\n    }\n\n    // Internal. Intentionally not documented.\n    doDraw(dc) {\n        this.loadCommonUniforms(dc);\n\n        this.renderStars(dc);\n\n        if (this.showSun) {\n            this.renderSun(dc);\n        }\n\n        if (this.showPlanets) {\n            this.renderPlanets(dc);\n        }\n    }\n\n    // Internal. Intentionally not documented.\n    loadCommonUniforms(dc) {\n        let gl = dc.currentGlContext;\n        let program = dc.currentProgram;\n\n        let mvp = dc.modelviewProjection || dc.navigatorState.modelviewProjection;\n        this._matrix.copy(mvp);\n        this._matrix.multiplyByScale(this._scale, this._scale, this._scale);\n\n        program.loadModelviewProjection(gl, this._matrix);\n\n        //this subtraction does not work properly on the GPU, it must be done on the CPU\n        //possibly due to precision loss\n        //number of days (positive or negative) since Greenwich noon, Terrestrial Time, on 1 January 2000 (J2000.0)\n        let julianDate = SunPosition.computeJulianDate(this.time || new Date());\n        program.loadNumDays(gl, julianDate - 2451545.0);\n    }\n\n    // Internal. Intentionally not documented.\n    renderStars(dc) {\n        let gl = dc.currentGlContext;\n        let gpuResourceCache = dc.gpuResourceCache;\n        let program = dc.currentProgram;\n\n        if (!this._starsPositionsVboCacheKey) {\n            this._starsPositionsVboCacheKey = gpuResourceCache.generateCacheKey();\n        }\n        let vboId = gpuResourceCache.resourceForKey(this._starsPositionsVboCacheKey);\n        if (!vboId) {\n            vboId = gl.createBuffer();\n            let positions = this.createStarsGeometry();\n            gpuResourceCache.putResource(this._starsPositionsVboCacheKey, vboId, positions.length * 4);\n            gl.bindBuffer(gl.ARRAY_BUFFER, vboId);\n            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(positions), gl.STATIC_DRAW);\n        }\n        else {\n            gl.bindBuffer(gl.ARRAY_BUFFER, vboId);\n        }\n        dc.frameStatistics.incrementVboLoadCount(1);\n\n        gl.vertexAttribPointer(0, 4, gl.FLOAT, false, 0, 0);\n\n        program.loadMagnitudeRange(gl, this._minMagnitude, this._maxMagnitude);\n        program.loadFragMode(gl, program.FRAG_MODE_MIX_COLOR);\n\n        gl.drawArrays(gl.POINTS, 0, this._numStars);\n    }\n\n    // Internal. Intentionally not documented.\n    renderPlanets(dc) {\n        let gl = dc.currentGlContext;\n        let program = dc.currentProgram;\n        let gpuResourceCache = dc.gpuResourceCache;\n\n        if (!this._MAX_GL_POINT_SIZE) {\n            this._MAX_GL_POINT_SIZE = gl.getParameter(gl.ALIASED_POINT_SIZE_RANGE)[1];\n        }\n        if (this.sunSize > this._MAX_GL_POINT_SIZE) {\n            Logger.log(Logger.LEVEL_WARNING, 'StarFieldLayer - sunSize is to big, max size allowed is: ' +\n                this._MAX_GL_POINT_SIZE);\n        }\n\n        this.planets.forEach(planet => {\n            const {ra, dec} = Celestial.getCelestialLocation(planet.id, this.time || new Date());\n            planet.ra = ra;\n            planet.dec = dec;\n        }, this);\n\n        if (!this._planetsBufferView) {\n            this._planetsBufferView = new Float32Array(this.planets.length * 4);\n        }\n\n        for (let i = 0; i < this.planets.length; i++) {\n            let planet = this.planets[i];\n            this._planetsBufferView[i * 4 + 0] = planet.dec;\n            this._planetsBufferView[i * 4 + 1] = planet.ra;\n            this._planetsBufferView[i * 4 + 2] = Math.min(planet.size, this._MAX_GL_POINT_SIZE);\n            this._planetsBufferView[i * 4 + 3] = 1;\n        }\n\n        if (!this._planetsPositionsVboCacheKey) {\n            this._planetsPositionsVboCacheKey = gpuResourceCache.generateCacheKey();\n        }\n        let vboId = gpuResourceCache.resourceForKey(this._planetsPositionsVboCacheKey);\n        if (!vboId) {\n            vboId = gl.createBuffer();\n            gpuResourceCache.putResource(this._planetsPositionsVboCacheKey, vboId, this._planetsBufferView.length * 4);\n            gl.bindBuffer(gl.ARRAY_BUFFER, vboId);\n            gl.bufferData(gl.ARRAY_BUFFER, this._planetsBufferView, gl.DYNAMIC_DRAW);\n        }\n        else {\n            gl.bindBuffer(gl.ARRAY_BUFFER, vboId);\n            gl.bufferSubData(gl.ARRAY_BUFFER, 0, this._planetsBufferView);\n        }\n        dc.frameStatistics.incrementVboLoadCount(1);\n        gl.vertexAttribPointer(0, 4, gl.FLOAT, false, 0, 0);\n\n        program.loadFragMode(gl, program.FRAG_MODE_TEXTURE);\n\n        for (let i = 0; i < this.planets.length; i++) {\n            let textureSrc = this.planets[i].url;\n            let texture = dc.gpuResourceCache.resourceForKey(textureSrc);\n            texture.bind(dc);\n            gl.drawArrays(gl.POINTS, i, 1);\n        }\n    }\n\n    // Internal. Intentionally not documented.\n    renderSun(dc) {\n        let gl = dc.currentGlContext;\n        let program = dc.currentProgram;\n        let gpuResourceCache = dc.gpuResourceCache;\n\n        if (!this._MAX_GL_POINT_SIZE) {\n            this._MAX_GL_POINT_SIZE = gl.getParameter(gl.ALIASED_POINT_SIZE_RANGE)[1];\n        }\n        if (this.sunSize > this._MAX_GL_POINT_SIZE) {\n            Logger.log(Logger.LEVEL_WARNING, 'StarFieldLayer - sunSize is to big, max size allowed is: ' +\n                this._MAX_GL_POINT_SIZE);\n        }\n\n        let sunCelestialLocation = SunPosition.getAsCelestialLocation(this.time || new Date());\n\n        this._sunBufferView[0] = sunCelestialLocation.declination;\n        this._sunBufferView[1] = sunCelestialLocation.rightAscension;\n        this._sunBufferView[2] = Math.min(this.sunSize, this._MAX_GL_POINT_SIZE);\n        this._sunBufferView[3] = 1;\n\n        if (!this._sunPositionsCacheKey) {\n            this._sunPositionsCacheKey = gpuResourceCache.generateCacheKey();\n        }\n        let vboId = gpuResourceCache.resourceForKey(this._sunPositionsCacheKey);\n        if (!vboId) {\n            vboId = gl.createBuffer();\n            gpuResourceCache.putResource(this._sunPositionsCacheKey, vboId, this._sunBufferView.length * 4);\n            gl.bindBuffer(gl.ARRAY_BUFFER, vboId);\n            gl.bufferData(gl.ARRAY_BUFFER, this._sunBufferView, gl.DYNAMIC_DRAW);\n        }\n        else {\n            gl.bindBuffer(gl.ARRAY_BUFFER, vboId);\n            gl.bufferSubData(gl.ARRAY_BUFFER, 0, this._sunBufferView);\n        }\n        dc.frameStatistics.incrementVboLoadCount(1);\n        gl.vertexAttribPointer(0, 4, gl.FLOAT, false, 0, 0);\n\n        program.loadFragMode(gl, program.FRAG_MODE_TEXTURE);\n\n        let sunTexture = dc.gpuResourceCache.resourceForKey(this._sunImageSource);\n        sunTexture.bind(dc);\n\n        gl.drawArrays(gl.POINTS, 0, 1);\n    }\n\n    // Internal. Intentionally not documented.\n    endRendering(dc) {\n        let gl = dc.currentGlContext;\n        gl.depthMask(true);\n        gl.disableVertexAttribArray(0);\n    }\n\n    // Internal. Intentionally not documented.\n    fetchStarData() {\n        if (this._loadStarted) {\n            return;\n        }\n\n        this._loadStarted = true;\n        let self = this;\n        let xhr = new XMLHttpRequest();\n\n        xhr.onload = function () {\n            if (this.status >= 200 && this.status < 300) {\n                try {\n                    self._starData = JSON.parse(this.response);\n                    self.sendRedrawRequest();\n                }\n                catch (e) {\n                    Logger.log(Logger.LEVEL_SEVERE, 'StarFieldLayer unable to parse JSON for star data ' +\n                        e.toString());\n                }\n            }\n            else {\n                Logger.log(Logger.LEVEL_SEVERE, 'StarFieldLayer unable to fetch star data. Status: ' +\n                    this.status + ' ' + this.statusText);\n            }\n            self._loadStarted = false;\n        };\n\n        xhr.onerror = function () {\n            Logger.log(Logger.LEVEL_SEVERE, 'StarFieldLayer unable to fetch star data');\n            self._loadStarted = false;\n        };\n\n        xhr.ontimeout = function () {\n            Logger.log(Logger.LEVEL_SEVERE, 'StarFieldLayer fetch star data has timeout');\n            self._loadStarted = false;\n        };\n\n        xhr.open('GET', this._starDataSource, true);\n        xhr.send();\n    }\n\n    // Internal. Intentionally not documented.\n    createStarsGeometry() {\n        let indexes = this.parseStarsMetadata(this._starData.metadata);\n\n        if (indexes.raIndex === -1) {\n            throw new Error(\n                Logger.logMessage(Logger.LEVEL_SEVERE, 'StarFieldLayer', 'createStarsGeometry',\n                    'Missing ra field in star data.'));\n        }\n        if (indexes.decIndex === -1) {\n            throw new Error(\n                Logger.logMessage(Logger.LEVEL_SEVERE, 'StarFieldLayer', 'createStarsGeometry',\n                    'Missing dec field in star data.'));\n        }\n        if (indexes.magIndex === -1) {\n            throw new Error(\n                Logger.logMessage(Logger.LEVEL_SEVERE, 'StarFieldLayer', 'createStarsGeometry',\n                    'Missing vmag field in star data.'));\n        }\n\n        let data = this._starData.data;\n        let positions = [];\n\n        this._minMagnitude = Number.MAX_VALUE;\n        this._maxMagnitude = Number.MIN_VALUE;\n\n        for (let i = 0, len = data.length; i < len; i++) {\n            let starInfo = data[i];\n            let declination = starInfo[indexes.decIndex]; //for latitude\n            let rightAscension = starInfo[indexes.raIndex]; //for longitude\n            let magnitude = starInfo[indexes.magIndex];\n            let pointSize = magnitude < 2 ? 2 : 1;\n            positions.push(declination, rightAscension, pointSize, magnitude);\n\n            this._minMagnitude = Math.min(this._minMagnitude, magnitude);\n            this._maxMagnitude = Math.max(this._maxMagnitude, magnitude);\n        }\n        this._numStars = Math.floor(positions.length / 4);\n\n        return positions;\n    }\n\n    // Internal. Intentionally not documented.\n    parseStarsMetadata(metadata) {\n        let raIndex = -1,\n            decIndex = -1,\n            magIndex = -1;\n        for (let i = 0, len = metadata.length; i < len; i++) {\n            let starMetaInfo = metadata[i];\n            if (starMetaInfo.name === 'ra') {\n                raIndex = i;\n            }\n            if (starMetaInfo.name === 'dec') {\n                decIndex = i;\n            }\n            if (starMetaInfo.name === 'vmag') {\n                magIndex = i;\n            }\n        }\n        return {\n            raIndex: raIndex,\n            decIndex: decIndex,\n            magIndex: magIndex\n        };\n    }\n\n    // Internal. Intentionally not documented.\n    invalidateStarData() {\n        this._starData = null;\n        this._starsPositionsVboCacheKey = null;\n    }\n\n    // Internal. Intentionally not documented.\n    sendRedrawRequest() {\n        let e = document.createEvent('Event');\n        e.initEvent(REDRAW_EVENT_TYPE, true, true);\n        window.dispatchEvent(e);\n    }\n}\n\nexport default StarFieldLayer;\n","import WorldWind from 'webworldwind-esa';\nconst {\n    Color\n} = WorldWind;\n\nconst satConfig = [\n    {\n        key: 's1a',\n        name: 'SENTINEL-1A',\n        shortName: 'S-1A',\n        satIndex: 0,\n        swathTypes: ['black', 'red', 'green', 'white'],\n        swathColors: [\n            Color.colorFromKmlHex('ff000000'), //black\n            Color.colorFromKmlHex('ff0000ff'), //red\n            Color.colorFromKmlHex('ff00ff00'), //green\n            Color.colorFromKmlHex('ffffffff')  //white\n        ],\n        swatModes: ['IW', 'EW', 'SM'],\n        tleLineOne: '1 39634U 14016A   18124.03591006  .00000001  00000-0  10014-4 0  9998',\n        tleLineTwo: '2 39634  98.1819 132.0838 0001369  78.7198 281.4156 14.59198520217480',\n        hasModel: true,\n        filePath: './satellites/sentinel1/s1.json',\n        rotations: {\n            x: 0,\n            y: 0,\n            z: 0,\n            headingAxis: [0, 0, 1],\n            headingAdd: -90,\n            headingMultiply: 1\n        },\n        preRotations: {\n            x: 0,\n            y: 0,\n            z: 0\n        },\n        scale: 500000,\n        translations: {\n            x: -0.1,\n            y: -0.1,\n            z: 0\n        },\n        ignoreLocalTransforms: true,\n        launchDate: new Date('2014-04-03T21:02:00.000Z'),\n    },\n    {\n        key: 's2a',\n        name: 'SENTINEL-2A',\n        shortName: 'S-2A',\n        satIndex: 1,\n        swathTypes: ['red', 'purple', 'white', 'darkGrey', 'green', 'greener'],\n        swathColors: [\n            Color.colorFromKmlHex('ff0000ff'), //red\n            Color.colorFromKmlHex('ffff00ff'), //purple\n            Color.colorFromKmlHex('ffffffff'), //white\n            Color.colorFromKmlHex('ff7f7f7f'), //dark grey\n            Color.colorFromKmlHex('ff00ff00'),  //green\n            Color.colorFromKmlHex('ff00fff7')  //greener\n        ],\n        swatModes: ['NOBS'],\n        tleLineOne: '1 40697U 15028A   18124.08865983  .00000004  00000-0  17994-4 0  9993',\n        tleLineTwo: '2 40697  98.5686 199.4434 0001286  92.5669 267.5666 14.30817033149583',\n        hasModel: true,\n        filePath: './satellites/senti2version6/s2.json',\n        rotations: {\n            x: 0,\n            y: 0,\n            z: 0,\n            headingAxis: [0, 0, 1],\n            headingAdd: -90,\n            headingMultiply: 1\n        },\n        preRotations: {\n            x: 0,\n            y: 0,\n            z: 0\n        },\n        scale: 1000000,\n        translations: {\n            x: 0.1,\n            y: 0.385,\n            z: 0.02\n        },\n        ignoreLocalTransforms: true,\n        launchDate: new Date('2015-06-23T01:52:00.000Z'),\n    },\n    {\n        key: 's3a',\n        name: 'SENTINEL-3A',\n        shortName: 'S-3A',\n        satIndex: 2,\n        tleLineOne: '1 41335U 16011A   18124.14356592 -.00000000  00000-0  18017-4 0  9998',\n        tleLineTwo: '2 41335  98.6266 192.0005 0001035 100.1921 259.9376 14.26736754115121',\n        hasModel: true,\n        filePath: './satellites/Sentinel3/s3.json',\n        rotations: {\n            x: 0, //0\n            y: 0, //180\n            z: 0, //165\n            headingAxis: [0, 0, 1], //0,0,1\n            headingAdd: 180, //-20\n            headingMultiply: 1 //1\n        },\n        preRotations: {\n            x: 0,\n            y: 180,\n            z: 0\n        },\n        scale: 1000000,\n        translations: {\n            x: 0.01, //-0.01\n            y: 1.98, //1.9\n            z: 0.07 //-0.07\n        },\n        ignoreLocalTransforms: true,\n        launchDate: new Date('2016-02-16T17:57:00.000Z'),\n    },\n    {\n        key: 's1b',\n        name: 'SENTINEL-1B',\n        shortName: 'S-1B',\n        satIndex: 3,\n        swathTypes: ['black', 'red', 'green', 'white'],\n        swathColors: [\n            Color.colorFromKmlHex('ff000000'), //black\n            Color.colorFromKmlHex('ff0000ff'), //red\n            Color.colorFromKmlHex('ff00ff00'), //green\n            Color.colorFromKmlHex('ffffffff')  //white\n        ],\n        swatModes: ['IW', 'EW', 'SM'],\n        tleLineOne: '1 41456U 16025A   18124.13828432 -.00000022  00000-0  49756-5 0  9992',\n        tleLineTwo: '2 41456  98.1817 132.0102 0001487  82.9964 277.1419 14.59197806107664',\n        hasModel: true,\n        filePath: './satellites/sentinel1/s1.json',\n        rotations: {\n            x: 0,\n            y: 0,\n            z: 0,\n            headingAxis: [0, 0, 1],\n            headingAdd: -90,\n            headingMultiply: 1\n        },\n        preRotations: {\n            x: 0,\n            y: 0,\n            z: 0\n        },\n        scale: 500000,\n        translations: {\n            x: -0.1,\n            y: -0.1,\n            z: 0\n        },\n        ignoreLocalTransforms: true,\n        launchDate: new Date('2016-04-25T21:02:00.000Z'),\n    },\n    {\n        key: 's2b',\n        name: 'SENTINEL-2B',\n        shortName: 'S-2B',\n        satIndex: 4,\n        swathTypes: ['blue'],\n        swathColors: [\n            Color.colorFromKmlHex('ffffff00'),\n        ],\n        swatModes: ['NOBS'],\n        tleLineOne: '1 42063U 17013A   18124.12358125  .00000002  00000-0  17497-4 0  9994',\n        tleLineTwo: '2 42063  98.5687 199.4702 0001382  97.5073 262.6270 14.30817718 60503',\n        groundPosition: {latitude: 5.2079, longitude: -52.7724, altitude: 0},\n        hasModel: true,\n        filePath: './satellites/senti2version6/s2.json',\n        rotations: {\n            x: 0,\n            y: 0,\n            z: 0,\n            headingAxis: [0, 0, 1],\n            headingAdd: -90,\n            headingMultiply: 1\n        },\n        preRotations: {\n            x: 0,\n            y: 0,\n            z: 0\n        },\n        scale: 1000000,\n        translations: {\n            x: 0.1,\n            y: 0.385,\n            z: 0.02\n        },\n        ignoreLocalTransforms: true,\n        launchDate: new Date('2017-03-07T01:49:00.000Z'),\n    },\n    {\n        key: 's5p',\n        name: 'SENTINEL-5P',\n        shortName: 'S-5P',\n        satIndex: 5,\n        swathTypes: [],\n        swathColors: [],\n\n        tleLineOne: '1 42969U 17064A   18123.85141871 -.00000009  00000-0  16636-4 0  9994',\n        tleLineTwo: '2 42969  98.7352  64.1585 0001101  78.1817 281.9482 14.19565315 28712',\n\n        groundPosition: {latitude: 62.927860, longitude: 40.574830, altitude: 0},\n        hasModel: true,\n        filePath: './satellites/sentinel5p/s5p.json',\n        rotations: {\n            x: 0,\n            y: 0,\n            z: 0,\n            headingAxis: [0, 0, 1],\n            headingAdd: -90,\n            headingMultiply: 1\n        },\n        preRotations: {\n            x: 180 + 30,\n            y: 0,\n            z: 0\n        },\n        scale: 70000,\n        translations: {\n            x: 0.5,\n            y: 0.4,\n            z: -1.2\n        },\n        ignoreLocalTransforms: true,\n        launchDate: new Date('2017-10-13T09:27:00.000Z'),\n    },\n    {\n        key: 's3b',\n        name: 'SENTINEL-3B',\n        shortName: 'S-3B',\n        satIndex: 6,\n        tleLineOne: '1 43437U 18039A   18122.61596633  .00002473  00000-0  10753-2 0  9999',\n        tleLineTwo: '2 43437  98.6226 190.4610 0008811 292.4467  67.5830 14.24954518   977',\n        groundPosition: {\n            latitude: 62.925556,\n            longitude: 40.577778,\n            altitude: 0,\n        },\n        hasModel: true,\n        filePath: 'satellites/Sentinel3/s3.json',\n        rotations: {\n            x: 0, //0\n            y: 0, //180\n            z: 0, //165\n            headingAxis: [0, 0, 1], //0,0,1\n            headingAdd: 180, //-20\n            headingMultiply: 1 //1\n        },\n        preRotations: {\n            x: 0,\n            y: 180,\n            z: 0\n        },\n        scale: 1000000,\n        translations: {\n            x: 0.01, //-0.01\n            y: 1.98, //1.9\n            z: 0.07 //-0.07\n        },\n        ignoreLocalTransforms: true,\n        launchDate: new Date('2018-04-25T17:57:00.000Z'),\n    },\n];\n\nexport const getSatConfigByKey = (satKey) => {\n    return satConfig.find((s) => s.key === satKey);\n};\n\n\nexport default satConfig;","/*\n * Copyright 2003-2006, 2009, 2017, United States Government, as represented by the Administrator of the\n * National Aeronautics and Space Administration. All rights reserved.\n *\n * The NASAWorldWind/WebWorldWind platform is licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @exports ColladaScene\n */\nimport WorldWind from 'webworldwind-esa';\n\nconst {\n    ArgumentError,\n    BasicTextureProgram,\n    Color,\n    Logger,\n    Matrix,\n    Position,\n    PickedObject,\n    Renderable,\n    Vec3\n} = WorldWind;\n\n\n/**\n * Constructs a collada scene\n * @alias ColladaScene\n * @constructor\n * @augments Renderable\n * @classdesc Represents a scene. A scene is a collection of nodes with meshes, materials and textures.\n * @param {Position} position The scene's geographic position.\n * @param {Object} sceneData The scene's data containing the nodes, meshes, materials, textures and other\n * info needed to render the scene.\n */\nvar ColladaScene = function (position, sceneData) {\n    if (!position) {\n        throw new ArgumentError(\n            Logger.logMessage(Logger.LEVEL_SEVERE, \"ColladaScene\", \"constructor\", \"missingPosition\"));\n    }\n\n    Renderable.call(this);\n\n    // Documented in defineProperties below.\n    this._position = position;\n\n    // Documented in defineProperties below.\n    this._nodes = [];\n    this._meshes = {};\n    this._materials = {};\n    this._images = {};\n    this._upAxis = '';\n    this._dirPath = '';\n\n    // Documented in defineProperties below.\n    this._xRotation = 0;\n    this._yRotation = 0;\n    this._zRotation = 0;\n\n    this.preX = 0;\n    this.preY = 0;\n    this.preZ = 0;\n\n    // Documented in defineProperties below.\n    this._xTranslation = 0;\n    this._yTranslation = 0;\n    this._zTranslation = 0;\n\n    // Documented in defineProperties below.\n    this._scale = 1;\n\n    // Documented in defineProperties below.\n    this._altitudeMode = WorldWind.ABSOLUTE;\n\n    // Documented in defineProperties below.\n    this._localTransforms = true;\n\n    // Documented in defineProperties below.\n    this._useTexturePaths = true;\n\n    // Documented in defineProperties below.\n    this._nodesToHide = [];\n    this._hideNodes = false;\n\n    // Documented in defineProperties below.\n    this._placePoint = new Vec3(0, 0, 0);\n\n    // Documented in defineProperties below.\n    this._transformationMatrix = Matrix.fromIdentity();\n    this._mvpMatrix = Matrix.fromIdentity();\n\n    // Documented in defineProperties below.\n    this._normalTransformMatrix = Matrix.fromIdentity();\n    this._normalMatrix = Matrix.fromIdentity();\n    this._texCoordMatrix = Matrix.fromIdentity().setToUnitYFlip();\n\n    //Internal. Intentionally not documented.\n    this._entities = [];\n\n    //Internal. Intentionally not documented.\n    this._activeTexture = null;\n\n    //Internal. Intentionally not documented.\n    this._tmpVector = new Vec3(0, 0, 0);\n    this._tmpColor = new Color(1, 1, 1, 1);\n\n    //Internal. Intentionally not documented.\n    this._vboCacheKey = '';\n    this._iboCacheKey = '';\n\n    this.setSceneData(sceneData);\n};\n\nColladaScene.prototype = Object.create(Renderable.prototype);\nColladaScene.prototype.constructor = ColladaScene;\n\nObject.defineProperties(ColladaScene.prototype, {\n\n    /**\n     * The scene's geographic position.\n     * @memberof ColladaScene.prototype\n     * @type {Position}\n     */\n    position: {\n        get: function () {\n            return this._position;\n        },\n        set: function (value) {\n            this._position = value;\n        }\n    },\n\n    /**\n     * An array of nodes extracted from the collada file.\n     * @memberof ColladaScene.prototype\n     * @type {ColladaNode[]}\n     */\n    nodes: {\n        get: function () {\n            return this._nodes;\n        },\n        set: function (value) {\n            this._nodes = value;\n        }\n    },\n\n    /**\n     * An object with meshes extracted from the collada file.\n     * @memberof ColladaScene.prototype\n     * @type {{ColladaMesh}}\n     */\n    meshes: {\n        get: function () {\n            return this._meshes;\n        },\n        set: function (value) {\n            this._meshes = value;\n        }\n    },\n\n    /**\n     * An object with materials and their effects extracted from the collada file.\n     * @memberof ColladaScene.prototype\n     * @type {ColladaMaterial}\n     */\n    materials: {\n        get: function () {\n            return this._materials;\n        },\n        set: function (value) {\n            this._materials = value;\n        }\n    },\n\n    /**\n     * An object with images extracted from the collada file.\n     * @memberof ColladaScene.prototype\n     * @type {ColladaImage}\n     */\n    images: {\n        get: function () {\n            return this._images;\n        },\n        set: function (value) {\n            this._images = value;\n        }\n    },\n\n    /**\n     * The up axis of the collada model extracted from the collada file.\n     * @memberof ColladaScene.prototype\n     * @type {String}\n     */\n    upAxis: {\n        get: function () {\n            return this._upAxis;\n        },\n        set: function (value) {\n            this._upAxis = value;\n        }\n    },\n\n    /**\n     * The path to the directory of the collada file.\n     * @memberof ColladaScene.prototype\n     * @type {String}\n     */\n    dirPath: {\n        get: function () {\n            return this._dirPath;\n        },\n        set: function (value) {\n            this._dirPath = value;\n        }\n    },\n\n    /**\n     * The scene's rotation angle in degrees for the x axis.\n     * @memberof ColladaScene.prototype\n     * @type {Number}\n     */\n    xRotation: {\n        get: function () {\n            return this._xRotation;\n        },\n        set: function (value) {\n            this._xRotation = value;\n        }\n    },\n\n    /**\n     * The scene's rotation angle in degrees for the x axis.\n     * @memberof ColladaScene.prototype\n     * @type {Number}\n     */\n    yRotation: {\n        get: function () {\n            return this._yRotation;\n        },\n        set: function (value) {\n            this._yRotation = value;\n        }\n    },\n\n    /**\n     * The scene's rotation angle in degrees for the x axis.\n     * @memberof ColladaScene.prototype\n     * @type {Number}\n     */\n    zRotation: {\n        get: function () {\n            return this._zRotation;\n        },\n        set: function (value) {\n            this._zRotation = value;\n        }\n    },\n\n    /**\n     * The scene's translation for the x axis.\n     * @memberof ColladaScene.prototype\n     * @type {Number}\n     */\n    xTranslation: {\n        get: function () {\n            return this._xTranslation;\n        },\n        set: function (value) {\n            this._xTranslation = value;\n        }\n    },\n\n    /**\n     * The scene's translation for the y axis.\n     * @memberof ColladaScene.prototype\n     * @type {Number}\n     */\n    yTranslation: {\n        get: function () {\n            return this._yTranslation;\n        },\n        set: function (value) {\n            this._yTranslation = value;\n        }\n    },\n\n    /**\n     * The scene's translation for the z axis.\n     * @memberof ColladaScene.prototype\n     * @type {Number}\n     */\n    zTranslation: {\n        get: function () {\n            return this._zTranslation;\n        },\n        set: function (value) {\n            this._zTranslation = value;\n        }\n    },\n\n    /**\n     * The scene's scale.\n     * @memberof ColladaScene.prototype\n     * @type {Number}\n     */\n    scale: {\n        get: function () {\n            return this._scale;\n        },\n        set: function (value) {\n            this._scale = value;\n        }\n    },\n\n    /**\n     * The scene's Cartesian point on the globe for the specified position.\n     * @memberof ColladaScene.prototype\n     * @type {Vec3}\n     */\n    placePoint: {\n        get: function () {\n            return this._placePoint;\n        },\n        set: function (value) {\n            this._placePoint = value;\n        }\n    },\n\n    /**\n     * The scene's altitude mode. May be one of\n     * <ul>\n     *  <li>[WorldWind.ABSOLUTE]{@link WorldWind#ABSOLUTE}</li>\n     *  <li>[WorldWind.RELATIVE_TO_GROUND]{@link WorldWind#RELATIVE_TO_GROUND}</li>\n     *  <li>[WorldWind.CLAMP_TO_GROUND]{@link WorldWind#CLAMP_TO_GROUND}</li>\n     * </ul>\n     * @default WorldWind.ABSOLUTE\n     * @memberof ColladaScene.prototype\n     * @type {String}\n     */\n    altitudeMode: {\n        get: function () {\n            return this._altitudeMode;\n        },\n        set: function (value) {\n            this._altitudeMode = value;\n        }\n    },\n\n    /**\n     * The scene's transformation matrix containing the scale, rotations and translations\n     * @memberof ColladaScene.prototype\n     * @type {Matrix}\n     */\n    transformationMatrix: {\n        get: function () {\n            return this._transformationMatrix;\n        },\n        set: function (value) {\n            this._transformationMatrix = value;\n        }\n    },\n\n    /**\n     * The scene's normal matrix\n     * @memberof ColladaScene.prototype\n     * @type {Matrix}\n     */\n    normalMatrix: {\n        get: function () {\n            return this._normalMatrix;\n        },\n        set: function (value) {\n            this._normalMatrix = value;\n        }\n    },\n\n    /**\n     * Force the use of the nodes transformation info. Some 3d software may break the transformations when\n     * importing/exporting models to collada format. Set to false to ignore the the nodes transformation.\n     * Only use this option if the model does not render properly.\n     * @memberof ColladaScene.prototype\n     * @default true\n     * @type {Boolean}\n     */\n    localTransforms: {\n        get: function () {\n            return this._localTransforms;\n        },\n        set: function (value) {\n            this._localTransforms = value;\n        }\n    },\n\n    /**\n     * Force the use of the texture path specified in the collada file. Set to false to ignore the paths of the\n     * textures in the collada file and instead get the textures from the same dir as the collada file.\n     * @memberof ColladaScene.prototype\n     * @default true\n     * @type {Boolean}\n     */\n    useTexturePaths: {\n        get: function () {\n            return this._useTexturePaths;\n        },\n        set: function (value) {\n            this._useTexturePaths = value;\n        }\n    },\n\n    /**\n     * An array of node id's to not render.\n     * @memberof ColladaScene.prototype\n     * @type {String[]}\n     */\n    nodesToHide: {\n        get: function () {\n            return this._nodesToHide;\n        },\n        set: function (value) {\n            this._nodesToHide = value;\n        }\n    },\n\n    /**\n     * Set to true to force the renderer to not draw the nodes passed to the nodesToHide list.\n     * @memberof ColladaScene.prototype\n     * @default false\n     * @type {Boolean}\n     */\n    hideNodes: {\n        get: function () {\n            return this._hideNodes;\n        },\n        set: function (value) {\n            this._hideNodes = value;\n        }\n    }\n\n});\n\n// Internal. Intentionally not documented.\nColladaScene.prototype.setSceneData = function (sceneData) {\n    if (sceneData) {\n        this._nodes = sceneData.root.children;\n        this._meshes = sceneData.meshes;\n        this._materials = sceneData.materials;\n        this._images = sceneData.images;\n        this._upAxis = sceneData.metadata.up_axis;\n        this._dirPath = sceneData.dirPath;\n\n        this.flattenModel();\n    }\n};\n\n// Internal. Intentionally not documented.\nColladaScene.prototype.flattenModel = function () {\n    for (var i = 0, nodesLen = this._nodes.length; i < nodesLen; i++) {\n        this.flattenNode(this._nodes[i]);\n    }\n\n    this._entities.sort(function (a, b) {\n        var va = (a.imageKey === null) ? \"\" : \"\" + a,\n            vb = (b.imageKey === null) ? \"\" : \"\" + b;\n        return va > vb ? 1 : (va === vb ? 0 : -1);\n    });\n};\n\n// Internal. Intentionally not documented.\nColladaScene.prototype.flattenNode = function (node) {\n    if (node.mesh) {\n        var meshKey = node.mesh;\n        var buffers = this._meshes[meshKey].buffers;\n\n        for (var i = 0, bufLen = buffers.length; i < bufLen; i++) {\n            var materialBuf = buffers[i].material;\n\n            for (var j = 0; j < node.materials.length; j++) {\n                if (materialBuf === node.materials[j].symbol) {\n                    var materialKey = node.materials[j].id;\n                    break;\n                }\n            }\n\n            var material = this._materials[materialKey];\n            var imageKey = null;\n            var hasTexture = material && material.textures && buffers[i].uvs && buffers[i].uvs.length > 0;\n            if (hasTexture) {\n                if (material.textures.diffuse) {\n                    imageKey = material.textures.diffuse.mapId;\n                } else if (material.textures.reflective) {\n                    imageKey = material.textures.reflective.mapId;\n                }\n            }\n\n            this._entities.push({\n                mesh: buffers[i],\n                material: material,\n                node: node,\n                imageKey: imageKey\n            });\n        }\n    }\n\n    for (var k = 0; k < node.children.length; k++) {\n        this.flattenNode(node.children[k]);\n    }\n};\n\n// Internal. Intentionally not documented.\nColladaScene.prototype.render = function (dc) {\n    var orderedScene;\n    var frustum = dc.frustumInModelCoordinates;\n\n    if (!this.enabled) {\n        return;\n    }\n\n    if (this.lastFrameTime !== dc.timestamp) {\n        orderedScene = this.makeOrderedRenderable(dc);\n    }\n\n    if (!orderedScene) {\n        return;\n    }\n\n    if (!frustum.containsPoint(this._placePoint)) {\n        return;\n    }\n\n    orderedScene.layer = dc.currentLayer;\n\n    this.lastFrameTime = dc.timestamp;\n\n    dc.addOrderedRenderable(orderedScene);\n};\n\n// Internal. Intentionally not documented.\nColladaScene.prototype.makeOrderedRenderable = function (dc) {\n    dc.surfacePointForMode(this._position.latitude, this._position.longitude, this._position.altitude,\n        this._altitudeMode, this._placePoint);\n\n    this.eyeDistance = dc.eyePoint.distanceTo(this._placePoint);\n\n    return this;\n};\n\n// Internal. Intentionally not documented.\nColladaScene.prototype.renderOrdered = function (dc) {\n    this.drawOrderedScene(dc);\n\n    if (dc.pickingMode) {\n        var po = new PickedObject(this.pickColor.clone(), this, this._position, this.layer, false);\n        dc.resolvePick(po);\n    }\n};\n\n// Internal. Intentionally not documented.\nColladaScene.prototype.drawOrderedScene = function (dc) {\n    try {\n        this.beginDrawing(dc);\n    } finally {\n        this.endDrawing(dc);\n    }\n};\n\n// Internal. Intentionally not documented.\nColladaScene.prototype.beginDrawing = function (dc) {\n    var gl = dc.currentGlContext;\n    var gpuResourceCache = dc.gpuResourceCache;\n\n    var vboId = gpuResourceCache.resourceForKey(this._vboCacheKey);\n    var iboId = gpuResourceCache.resourceForKey(this._iboCacheKey);\n\n    if (!vboId) {\n        this.setupBuffers(dc);\n        vboId = gpuResourceCache.resourceForKey(this._vboCacheKey);\n        iboId = gpuResourceCache.resourceForKey(this._iboCacheKey);\n    }\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, vboId);\n    if (iboId) {\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, iboId);\n    }\n\n    dc.findAndBindProgram(BasicTextureProgram);\n    gl.enableVertexAttribArray(0);\n\n    if (dc.pickingMode) {\n        this.pickColor = dc.uniquePickColor();\n    }\n\n    this.computeTransformationMatrix(dc.globe);\n\n    for (var i = 0, len = this._entities.length; i < len; i++) {\n        var mustRenderNode = this.mustRenderNode(this._entities[i].node.id);\n        if (mustRenderNode) {\n            this.draw(dc, this._entities[i]);\n        }\n    }\n};\n\n// Internal. Intentionally not documented.\nColladaScene.prototype.setupBuffers = function (dc) {\n    var gl = dc.currentGlContext;\n    var sizeOfFloat32 = Float32Array.BYTES_PER_ELEMENT || 4;\n    var sizeOfUint16 = Uint16Array.BYTES_PER_ELEMENT || 2;\n    var sizeOfUint32 = Uint32Array.BYTES_PER_ELEMENT || 4;\n    var is32BitIndices = false;\n    var numIndices = 0;\n    var numVertices = 0;\n\n    for (var i = 0, len = this._entities.length; i < len; i++) {\n        var mesh = this._entities[i].mesh;\n        if (mesh.indexedRendering) {\n            numIndices += mesh.indices.length;\n            if (mesh.indices instanceof Uint32Array) {\n                is32BitIndices = true;\n            }\n        }\n        numVertices += mesh.vertices.length;\n        if (this._entities[i].imageKey) {\n            numVertices += mesh.uvs.length;\n        }\n        if (mesh.normals && mesh.normals.length) {\n            numVertices += mesh.normals.length;\n        }\n    }\n\n    var vbo = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, vbo);\n    gl.bufferData(gl.ARRAY_BUFFER, numVertices * sizeOfFloat32, gl.STATIC_DRAW);\n\n    var offset = 0;\n    for (i = 0, len = this._entities.length; i < len; i++) {\n        var data = this._entities[i].mesh.vertices;\n        this._entities[i].vertexOffset = offset;\n        gl.bufferSubData(gl.ARRAY_BUFFER, offset * sizeOfFloat32, data);\n        offset += data.length;\n    }\n\n    for (i = 0, len = this._entities.length; i < len; i++) {\n        if (this._entities[i].imageKey) {\n            data = this._entities[i].mesh.uvs;\n            this._entities[i].uvOffset = offset;\n            gl.bufferSubData(gl.ARRAY_BUFFER, offset * sizeOfFloat32, data);\n            offset += data.length;\n        }\n    }\n\n    for (i = 0, len = this._entities.length; i < len; i++) {\n        data = data = this._entities[i].mesh.normals;\n        if (data && data.length) {\n            this._entities[i].normalOffset = offset;\n            gl.bufferSubData(gl.ARRAY_BUFFER, offset * sizeOfFloat32, data);\n            offset += data.length;\n        }\n    }\n\n    var indexSize = sizeOfUint16;\n    var indexBufferSize = numIndices * indexSize;\n    var uIntExt;\n    if (is32BitIndices) {\n        uIntExt = dc.getExtension('OES_element_index_uint');\n\n        if (!uIntExt) {\n            Logger.log(Logger.LEVEL_SEVERE,\n                'The 3D model is too big and might not render properly. \\n' +\n                'Your browser does not support the \"OES_element_index_uint\" extension, ' +\n                'required to render large models.'\n            );\n        } else {\n            indexSize = sizeOfUint32;\n            indexBufferSize = numIndices * indexSize;\n        }\n    }\n\n    if (numIndices) {\n        var ibo = gl.createBuffer();\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, ibo);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, indexBufferSize, gl.STATIC_DRAW);\n\n        offset = 0;\n        for (i = 0, len = this._entities.length; i < len; i++) {\n            mesh = this._entities[i].mesh;\n            if (mesh.indexedRendering) {\n                data = mesh.indices;\n                if (data instanceof Uint32Array && !uIntExt) {\n                    data = new Uint16Array(data);\n                }\n                this._entities[i].indexOffset = offset;\n                this._entities[i].indexSize = indexSize;\n                gl.bufferSubData(gl.ELEMENT_ARRAY_BUFFER, offset * indexSize, data);\n                offset += data.length;\n            }\n        }\n    }\n\n    this._vboCacheKey = dc.gpuResourceCache.generateCacheKey();\n    dc.gpuResourceCache.putResource(this._vboCacheKey, vbo, numVertices * sizeOfFloat32);\n\n    if (numIndices) {\n        this._iboCacheKey = dc.gpuResourceCache.generateCacheKey();\n        dc.gpuResourceCache.putResource(this._iboCacheKey, ibo, indexBufferSize);\n    }\n};\n\n// Internal. Intentionally not documented.\nColladaScene.prototype.draw = function (dc, entity) {\n    var gl = dc.currentGlContext;\n    var program = dc.currentProgram;\n    var gpuResourceCache = dc.gpuResourceCache;\n\n    var buffers = entity.mesh;\n    var material = entity.material;\n\n    var nodeWorldMatrix = entity.node.worldMatrix;\n    var nodeNormalMatrix = entity.node.normalMatrix;\n\n    var hasLighting = buffers.normals && buffers.normals.length;\n\n    var imageKey = entity.imageKey;\n\n    this.applyColor(dc, material);\n\n    if (imageKey) {\n        var imagePath = this._useTexturePaths ? this._images[imageKey].path : this._images[imageKey].filename;\n        var textureCacheKey = this._dirPath + imagePath;\n        this._activeTexture = gpuResourceCache.resourceForKey(textureCacheKey);\n        if (!this._activeTexture) {\n            var wrapMode = buffers.isClamp ? gl.CLAMP_TO_EDGE : gl.REPEAT;\n            this._activeTexture = gpuResourceCache.retrieveTexture(gl, textureCacheKey, wrapMode);\n        }\n        var textureBound = this._activeTexture && this._activeTexture.bind(dc);\n        if (textureBound) {\n            program.loadTextureEnabled(gl, true);\n            gl.vertexAttribPointer(2, 2, gl.FLOAT, false, 8, entity.uvOffset * 4);\n            gl.enableVertexAttribArray(2);\n            program.loadModulateColor(gl, dc.pickingMode);\n        } else {\n            program.loadTextureEnabled(gl, false);\n            gl.disableVertexAttribArray(2);\n        }\n    } else {\n        program.loadTextureEnabled(gl, false);\n        gl.disableVertexAttribArray(2);\n    }\n\n    if (hasLighting && !dc.pickingMode) {\n        program.loadApplyLighting(gl, 1);\n        gl.vertexAttribPointer(1, 3, gl.FLOAT, false, 12, entity.normalOffset * 4);\n        gl.enableVertexAttribArray(1);\n    } else {\n        program.loadApplyLighting(gl, 0);\n        gl.disableVertexAttribArray(1);\n    }\n\n    this.applyMatrix(dc, hasLighting, textureCacheKey, nodeWorldMatrix, nodeNormalMatrix);\n\n    gl.vertexAttribPointer(0, 3, gl.FLOAT, false, 12, entity.vertexOffset * 4);\n\n    if (buffers.indexedRendering) {\n        var indexOffsetBytes = entity.indexOffset * entity.indexSize;\n        if (buffers.indices instanceof Uint32Array && dc.getExtension('OES_element_index_uint')) {\n            gl.drawElements(gl.TRIANGLES, buffers.indices.length, gl.UNSIGNED_INT, indexOffsetBytes);\n        } else {\n            gl.drawElements(gl.TRIANGLES, buffers.indices.length, gl.UNSIGNED_SHORT, indexOffsetBytes);\n        }\n    } else {\n        gl.drawArrays(gl.TRIANGLES, 0, Math.floor(buffers.vertices.length / 3));\n    }\n};\n\n// Internal. Intentionally not documented.\nColladaScene.prototype.applyColor = function (dc, material) {\n    var gl = dc.currentGlContext,\n        program = dc.currentProgram;\n\n    if (material) {\n        if (material.techniqueType === 'constant') {\n            var diffuse = material.reflective;\n        } else {\n            diffuse = material.diffuse;\n        }\n    }\n\n    var opacity;\n    var r = 1, g = 1, b = 1, a = 1;\n\n    if (diffuse) {\n        r = diffuse[0];\n        g = diffuse[1];\n        b = diffuse[2];\n        a = diffuse[3] != null ? diffuse[3] : 1;\n    }\n\n    this._tmpColor.set(r, g, b, a);\n    opacity = a * this.layer.opacity;\n    gl.depthMask(opacity >= 1 || dc.pickingMode);\n    program.loadColor(gl, dc.pickingMode ? this.pickColor : this._tmpColor);\n    program.loadOpacity(gl, dc.pickingMode ? (opacity > 0 ? 1 : 0) : opacity);\n};\n\n// Internal. Intentionally not documented.\nColladaScene.prototype.applyMatrix = function (dc, hasLighting, hasTexture, nodeWorldMatrix, nodeNormalMatrix) {\n    this._mvpMatrix.copy(dc.modelviewProjection);\n    this._mvpMatrix.multiplyMatrix(this._transformationMatrix);\n\n    if (nodeWorldMatrix && this._localTransforms) {\n        this._mvpMatrix.multiplyMatrix(nodeWorldMatrix);\n    }\n\n    if (hasLighting && !dc.pickingMode) {\n        this._normalMatrix.copy(dc.modelviewNormalTransform);\n        this._normalMatrix.multiplyMatrix(this._normalTransformMatrix);\n        if (nodeNormalMatrix && this._localTransforms) {\n            this._normalMatrix.multiplyMatrix(nodeNormalMatrix);\n        }\n\n        dc.currentProgram.loadModelviewInverse(dc.currentGlContext, this._normalMatrix);\n    }\n\n    if (hasTexture && this._activeTexture) {\n        dc.currentProgram.loadTextureMatrix(dc.currentGlContext, this._texCoordMatrix);\n        this._activeTexture = null;\n    }\n\n    dc.currentProgram.loadModelviewProjection(dc.currentGlContext, this._mvpMatrix);\n};\n\n// Internal. Intentionally not documented.\nColladaScene.prototype.endDrawing = function (dc) {\n    var gl = dc.currentGlContext;\n    var program = dc.currentProgram;\n\n    gl.disableVertexAttribArray(1);\n    gl.disableVertexAttribArray(2);\n    program.loadApplyLighting(gl, 0);\n    program.loadTextureEnabled(gl, false);\n};\n\n// Internal. Intentionally not documented.\nColladaScene.prototype.computeTransformationMatrix = function (globe) {\n    this._transformationMatrix.setToIdentity();\n\n    this._transformationMatrix.multiplyByLocalCoordinateTransform(this._placePoint, globe);\n\n    this._transformationMatrix.multiplyByRotation(1, 0, 0, this._xRotation);\n    this._transformationMatrix.multiplyByRotation(0, 1, 0, this._yRotation);\n    this._transformationMatrix.multiplyByRotation(0, 0, 1, this._zRotation);\n\n    this._transformationMatrix.multiplyByScale(this._scale, this._scale, this._scale);\n\n    this._transformationMatrix.multiplyByTranslation(this._xTranslation, this._yTranslation, this._zTranslation);\n\n    this._transformationMatrix.multiplyByRotation(1, 0, 0, this.preX);\n    this._transformationMatrix.multiplyByRotation(0, 1, 0, this.preY);\n    this._transformationMatrix.multiplyByRotation(0, 0, 1, this.preZ);\n\n    this.computeNormalMatrix();\n};\n\n// Internal. Intentionally not documented.\nColladaScene.prototype.computeNormalMatrix = function () {\n    this._transformationMatrix.extractRotationAngles(this._tmpVector);\n    this._normalTransformMatrix.setToIdentity();\n    this._normalTransformMatrix.multiplyByRotation(-1, 0, 0, this._tmpVector[0]);\n    this._normalTransformMatrix.multiplyByRotation(0, -1, 0, this._tmpVector[1]);\n    this._normalTransformMatrix.multiplyByRotation(0, 0, -1, this._tmpVector[2]);\n};\n\n// Internal. Intentionally not documented.\nColladaScene.prototype.mustRenderNode = function (nodeId) {\n    var draw = true;\n    if (this._hideNodes) {\n        var pos = this._nodesToHide.indexOf(nodeId);\n        draw = (pos === -1);\n    }\n    return draw;\n};\n\nexport default ColladaScene;","// import WorldWind from 'webworldwind-esa';\nimport wwx from 'webworldwind-x';\nimport satConfig from './satConfig'\n// import SatelliteModel from './wwwx/shapes/satellites/Model';\nimport SatelliteModelLayer from './wwwxx/layer/SatelliteModelLayer'\n// const Location = WorldWind.Location,\n//     Sector = WorldWind.Sector,\n//     WmsLayer = WorldWind.WmsLayer;\n\n// class modelsLayer extends Layer {\n//     constructor(){\n//         super({\n//             service: \"https://tiles.maps.eox.at/wms\",\n//             layerNames: \"s2cloudless-2018\",\n//             title: \"Sentinel Cloudless Layer\",\n//             sector: new Sector(-90, 90, -180, 180),\n//             levelZeroDelta: new Location(45, 45),\n//             numLevels: 19,\n//             format: \"image/jpg\",\n//             opacity: 1,\n//             size: 256,\n//             version: \"1.3.0\"\n//         });\n//     }\n// }\n// const options = {\n//     rotations: layerConfig.satData.rotations,\n//     preRotations: layerConfig.satData.preRotations,\n//     scale: layerConfig.satData.scale,\n//     translations: layerConfig.satData.translations,\n//     ignoreLocalTransforms: layerConfig.satData.ignoreLocalTransforms,\n// }\n// const layer = new SatelliteModelLayer({key: layerKey, time: time, onLayerChanged}, options);\n// layer.setRerender(() => wwd.redraw());\n// getModel(`${layerConfig.satData.filePath}${layerConfig.satData.fileName}`, layerKey).then(\n//     (model) => {\n//         const satrec = EoUtils.computeSatrec(layerConfig.satData.tleLineOne, layerConfig.satData.tleLineTwo);\n//         const position = EoUtils.getOrbitPosition(satrec, new Date(time));\n//         layer.setModel(model, options, position)\n//         layer.setTle([layerConfig.satData.tleLineOne, layerConfig.satData.tleLineTwo]);\n//     }\n// );\n\n// export default SentinelCloudlessLayer;\n// const {\n//     Position,\n// } = WorldWind;\nconst {\n    EoUtils,\n} = wwx;\n\nvar satelliteLayers = []\n\n    for(let i=0 ; i<satConfig.length ; i++) {\n        console.log(satConfig[i].name)\n\n        const options = {\n            rotations: satConfig[i].rotations,\n            preRotations: satConfig[i].preRotations,\n            scale: satConfig[i].scale,\n            translations: satConfig[i].translations,\n            ignoreLocalTransforms: satConfig[i].ignoreLocalTransforms\n        }\n        let satstart = satConfig[i].launchDate\n        let satend = new Date(satstart.getTime())\n        satend.setUTCFullYear( satend.getUTCFullYear()+20 )\n        let layer = new SatelliteModelLayer({key: satConfig[i].key, time: new Date() }, options)\n        layer.timeRange = [satstart, satend]\n\n        const satrec = EoUtils.computeSatrec(satConfig[i].tleLineOne, satConfig[i].tleLineTwo);\n        const position = EoUtils.getOrbitPosition(satrec, new Date());\n\n        fetch(satConfig[i].filePath).then(response => {\n            return response.json();\n        }).then(satelliteData => {\n            layer.setModel(satelliteData, {\n                rotations: satConfig[i].rotations,\n                preRotations: satConfig[i].preRotations,\n                scale: satConfig[i].scale,\n                translations: satConfig[i].translations,\n                ignoreLocalTransforms: satConfig[i].ignoreLocalTransforms\n            }, position );\n        });\n\n        // layer.setModel(model, options, position)\n        layer.setTle([satConfig[i].tleLineOne, satConfig[i].tleLineTwo]);\n\n\n        satelliteLayers.push(layer)\n    }\n\n\nexport default satelliteLayers","import WorldWind from 'webworldwind-esa';\r\nimport ColladaScene from \"../../collada/ColladaScene\";\r\n\r\nconst {\r\n    Matrix,\r\n    Renderable\r\n} = WorldWind;\r\n\r\n/**\r\n * @exports Model\r\n */\r\nclass Model extends Renderable {\r\n    /**\r\n     * Constructs model of the satellite on the given position.\r\n     * @param model {Object} Model information. Collada information.\r\n     * @param satellite {Object} The details about the satellite and the way it should be transformed and presented.\r\n     * @param position {Position} The exact position of the center of the satellite.\r\n     */\r\n    constructor(model, satellite, position) {\r\n        super();\r\n\r\n        this._satellite = satellite;\r\n        const satelliteModel = this.parse(model);\r\n        this.draw(position, satelliteModel);\r\n    }\r\n\r\n    /**\r\n     * Updates the position of the model.\r\n     * @param position {Position} Current position of the model.\r\n     */\r\n    position(position) {\r\n        this._model.position = position;\r\n    }\r\n\r\n    /**\r\n     * Draws the collada model into a Collada Scene.\r\n     * @param position {Position} Position of the satellite.\r\n     * @param modelData Collada Model Information.\r\n     */\r\n    draw(position, modelData) {\r\n        const nodesToHide = [\r\n            'PlatformCircleAndName', 'SolarWingsCircleAndName', 'C-SarCircleAndName',\r\n            'PlatformTextsAndArrows', 'SolarWingsTextsAndArrows', 'C-SarTextsAndArrows',\r\n\r\n            'SolarArrayGroup', 'WingsDetailsGroup', 'Group004', 'MsiGroup', 'SatelliteGroup',\r\n\r\n            'SatelliteDimensionsGroup', 'MWRGroup', 'SRALGroup', 'OLCIGroup', 'SLSTRGroup'\r\n        ];\r\n        const {\r\n            rotations,\r\n            translations,\r\n            preRotations,\r\n            scale,\r\n            shortName,\r\n            ignoreLocalTransforms\r\n        } = this._satellite;\r\n\r\n        const model = new ColladaScene(position, modelData);\r\n        model.type = this.type;\r\n        model.satShortName = shortName;\r\n\r\n        model.nodesToHide = nodesToHide;\r\n        model.hideNodes = true;\r\n        model.useTexturePaths = false;\r\n        model.localTransforms = ignoreLocalTransforms;\r\n        model.scale = scale;\r\n        model.xRotation = rotations.x;\r\n        model.yRotation = rotations.y;\r\n        model.zRotation = rotations.z;\r\n        model.xTranslation = translations.x;\r\n        model.yTranslation = translations.y;\r\n        model.zTranslation = translations.z;\r\n        model.preX = preRotations.x;\r\n        model.preY = preRotations.y;\r\n        model.preZ = preRotations.z;\r\n\r\n        this._model = model;\r\n        modelData = null;\r\n    }\r\n\r\n    /**\r\n     * Parses the collada model and update the information relevant to the satellites.\r\n     * @param {{ meshes:Object, root:Object, materials:{reflective:Array, diffuse:Array} }} jsonData\r\n     * @return {Object} Collada model.\r\n     */\r\n    parse(jsonData) {\r\n        const meshes = jsonData.meshes;\r\n        const nodes = jsonData.root.children;\r\n        const materials = jsonData.materials;\r\n\r\n        for (let key in meshes) {\r\n            if (meshes.hasOwnProperty(key)) {\r\n                const buffers = meshes[key].buffers;\r\n\r\n                for (let i = 0; i < buffers.length; i++) {\r\n                    const vertices = buffers[i].vertices || [];\r\n                    const normals = buffers[i].normals || [];\r\n                    const uvs = buffers[i].uvs || [];\r\n                    const indices = buffers[i].indices || [];\r\n\r\n                    const eVertices = new Float32Array(vertices);\r\n                    const eNormals = new Float32Array(normals);\r\n                    const eUvs = new Float32Array(uvs);\r\n                    const eIndices = new Uint16Array(indices);\r\n\r\n                    buffers[i].vertices = eVertices;\r\n                    buffers[i].normals = eNormals;\r\n                    buffers[i].uvs = eUvs;\r\n                    buffers[i].indices = eIndices;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < nodes.length; i++) {\r\n            const node = nodes[i];\r\n            if (node.mesh) {\r\n                const worldMatrix = node.worldMatrix.slice(0);\r\n                node.worldMatrix = Matrix.fromIdentity();\r\n                node.worldMatrix.copy(worldMatrix);\r\n\r\n                if (node.children.length) {\r\n                    console.info('node has children', node);\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let key in materials) {\r\n            if (materials.hasOwnProperty(key)) {\r\n                const material = materials[key];\r\n\r\n                if (material.id === '_3_-_Default-material') {\r\n                    if (material.reflective) {\r\n                        material.reflective[0] = 0.289219;\r\n                        material.reflective[1] = 0.713497;\r\n                        material.reflective[2] = 0.870753;\r\n                        material.reflective[3] = 1;\r\n                    }\r\n                } else if (material.id === '_1_-_Default_004-material') {\r\n                    material.diffuse[3] = 0;\r\n                } else if (material.id === '_1_-_Default-material') {\r\n                    material.diffuse[3] = 0;\r\n                } else if (material.id === 'Chrome-material') {\r\n                    material.textures = null;\r\n                    material.diffuse[0] = 0.3137;\r\n                    material.diffuse[1] = 0.3137;\r\n                    material.diffuse[2] = 0.3137;\r\n                } else if (material.id === 'Satellite_panel-material') {\r\n                    material.textures.reflective.mapId = 'image9';\r\n                } else if (material.id === '_3_-_Default') {\r\n                    material.textures.reflective.mapId = 'image4';\r\n                } else if (material.id === '_4_-_Default-material') {\r\n                    material.textures.reflective.mapId = 'image5';\r\n                } else if (material.id === '_5_-_Default_002-material') {\r\n                    material.textures.reflective.mapId = 'image6';\r\n                } else if (material.id === '_5_-_Default-material') {\r\n                    material.textures.reflective.mapId = 'image5';\r\n                }\r\n            }\r\n        }\r\n\r\n        return jsonData;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    render(dc) {\r\n        if(!this._model || !this.enabled) {\r\n            return;\r\n        }\r\n\r\n        this._model.render(dc);\r\n    }\r\n}\r\n\r\nexport default Model;","import WorldWind from 'webworldwind-esa';\nimport WorldWindX from 'webworldwind-x';\nimport Model from '../shapes/satellites/Model';\n\nconst {\n    RenderableLayer,\n    Position,\n} = WorldWind;\n\nconst {\n    EoUtils\n} = WorldWindX;\n\n\nconst DEFAULT_MODEL_OPTIONS = {\n    rotations: {\n        x: 0,\n        y: 0,\n        z: 0,\n        headingAxis: [0, 0, 1],\n        headingAdd: -90,\n        headingMultiply: 1\n    },\n    preRotations: {\n        x: 0,\n        y: 0,\n        z: 0\n    },\n    scale: 500000,\n    translations: {\n        x: -0.1,\n        y: -0.1,\n        z: 0\n    },\n    ignoreLocalTransforms: true\n}\n\n/**\n * Class extending WorldWind.RenderableLayer. Layer can render only one model of satellite. It`s possible to set position data of model.\n * @param options {Object}\n * @param options.key {String}\n * @param options.time {Date} Time of the satellite.\n * @param options.onLayerChanged {func}\n * @augments WorldWind.RenderableLayer\n * @constructor\n */\nclass SatelliteModelLayer extends RenderableLayer {\n\tconstructor(options, satelliteOptions) {\n        super(options);\n        this.type = 'SatelliteModelLayer';\n        this._satelliteOptions = satelliteOptions;\n        this._rerenderMap = null;\n        this.key = options.key;\n        this.model = null;\n        this.time = options.time;\n        this.Tle = null;\n        this.heading = null;\n        this.onLayerChanged = options.onLayerChanged || null;\n    };\n    \n    /**\n     * \n     * @param {Object} collada model \n     * @param {Object} options\n     * @param {Position} position\n     */\n    setModel(model, options = DEFAULT_MODEL_OPTIONS, position) {\n        if(model) {\n            this.model = new Model(model, options, position);\n\n            this.removeAllRenderables();\n            this.addRenderable(this.model);\n            this.doRerender();\n        }\n    }\n\n    /**\n     * @param position {Position} Position of the satellite.\n     */\n    setPosition(position) {\n        if(position && this.model) {\n            this.model.position(position);\n        }\n    }\n\n    \n    /**\n     * @param position {Array.<lte>} Lte.\n     */\n    setTle(Tle) {\n        if(Tle) {\n            this.Tle = Tle;\n            this.update();\n        }\n    }\n    \n    /**\n     * @param position {Array.<lte>} Lte.\n     */\n    update() {\n        if(this.Tle && this.time) {\n            const satrec = EoUtils.computeSatrec(...this.Tle);\n            const position = EoUtils.getOrbitPosition(satrec, new Date(this.time));\n            this.setPosition(new Position(position.latitude, position.longitude, position.altitude));\n            if(this.model) {\n                this.alignWithOrbit(this.time, position, EoUtils.computeSatrec(...this.Tle), this._satelliteOptions.rotations, this.model._model);\n            }\n            this.doRerender();\n        }\n    }\n\n    alignWithOrbit(date, currentPosition, satrec, rotations, model) {\n        const now = date.getTime();\n        const nextPosition = EoUtils.getOrbitPosition(satrec, new Date(now + 10000));\n        const headingRad = EoUtils.headingAngleRadians(currentPosition.latitude, currentPosition.longitude, nextPosition.latitude, nextPosition.longitude);\n        const heading = EoUtils.rad2deg(headingRad);\n        this.heading = heading;\n\n        if(typeof this.onLayerChanged === 'function') {\n            this.onLayerChanged({\n                satKey: this.satName,\n                layerKey: this.key,\n                type: this.type,\n            }, {update: {\n                heading: this.heading\n            }});\n        }\n\n        const angle = (heading + rotations.headingAdd) * rotations.headingMultiply;\n\n        if (heading !== 0) {\n            if (rotations.headingAxis[0] === 1) {\n                model.xRotation = angle;\n            }\n            else if (rotations.headingAxis[1] === 1) {\n                model.yRotation = angle;\n            }\n            else if (rotations.headingAxis[2] === 1) {\n                model.zRotation = angle;\n            }\n        }\n    }\n\n    /**\n     * @param time {Date} Time of the satellite.\n     */\n    setTime(time) {\n        if(time) {\n            this.time = time;\n            this.update();\n        }\n    }\n    \n\tsetRerender(rerenderer) {\n\t\tif(typeof rerenderer === 'function') {\n\t\t\tthis._rerenderMap = rerenderer;\n\t\t}\n\t}\n\n\tdoRerender() {\n\t\tif(typeof this._rerenderMap === 'function') {\n\t\t\tthis._rerenderMap();\n\t\t}\n\t}\n}\n\nexport default SatelliteModelLayer;\n\n","import WorldWind from \"webworldwind-esa\";\n\nexport const bgLayers = [\n    {\n        service: \"https://tiles.maps.eox.at/wms\",\n        layerNames: \"s2cloudless-2018\",\n        title: \"s2cloudless-2018\",\n        numLevels: 19,\n        format: \"image/png\",\n        size: 256,\n        sector: WorldWind.Sector.FULL_SPHERE,\n        levelZeroDelta: new WorldWind.Location(90, 90)\n    },\n    {\n        service: \"https://tiles.esa.maps.eox.at/wms\",\n        layerNames: \"s2cloudless-2018\",\n        title: \"s2cloudless-2018 esa\",\n        numLevels: 19,\n        format: \"image/png\",\n        size: 256,\n        sector: WorldWind.Sector.FULL_SPHERE,\n        levelZeroDelta: new WorldWind.Location(90, 90)\n    },\n    {\n        service: \"https://tiles.esa.maps.eox.at/wms\",\n        layerNames: \"osm\",\n        title: \"osm\",\n        numLevels: 19,\n        format: \"image/png\",\n        size: 256,\n        sector: WorldWind.Sector.FULL_SPHERE,\n        levelZeroDelta: new WorldWind.Location(90, 90)\n    },\n    {\n        service: \"https://tiles.esa.maps.eox.at/wms\",\n        layerNames: \"terrain-light\",\n        title: \"terrain-light\",\n        numLevels: 19,\n        format: \"image/png\",\n        size: 256,\n        sector: WorldWind.Sector.FULL_SPHERE,\n        levelZeroDelta: new WorldWind.Location(90, 90)\n    },\n    {\n        service: \"https://tiles.maps.eox.at/wms\",\n        layerNames: \"terrain\",\n        title: \"terrain\",\n        numLevels: 19,\n        format: \"image/png\",\n        size: 256,\n        sector: WorldWind.Sector.FULL_SPHERE,\n        levelZeroDelta: new WorldWind.Location(90, 90)\n    }\n]\nexport const ovLayers = [\n\n    {\n        service: \"https://tiles.maps.eox.at/wms\",\n        layerNames: \"hydrography\",\n        title: \"hydrography\",\n        numLevels: 19,\n        format: \"image/png\",\n        size: 256,\n        sector: WorldWind.Sector.FULL_SPHERE,\n        levelZeroDelta: new WorldWind.Location(90, 90)\n    },\n    {\n        service: \"https://tiles.maps.eox.at/wms\",\n        layerNames: \"overlay_bright\",\n        title: \"overlay_bright\",\n        numLevels: 19,\n        format: \"image/png\",\n        size: 256,\n        sector: WorldWind.Sector.FULL_SPHERE,\n        levelZeroDelta: new WorldWind.Location(90, 90)\n    }\n]\n\n\n","import WorldWind from \"webworldwind-esa\";\nimport './wwwxx/www-overrides/DrawContext';\nimport './wwwxx/www-overrides/SurfaceShapeTileBuilder';\nimport './wwwxx/www-overrides/SurfaceShapeTile';\nimport './wwwxx/www-overrides/TiledImageLayer';\nimport './wwwxx/www-overrides/GeoJSONParser';\nimport  WorldWindow  from './wwwxx/WorldWindow';\nimport  { useState, useEffect, useRef } from \"react\";\nimport StarFieldLayer from \"./wwwxx/layer/starfield/StarFieldLayer\" // import a custom one as the base url is not set when using wwwx\nimport TexturedSurfacePolygon from './wwwxx/textured/TexturedSurfacePolygon'\n// import wwwx from \"webworldwind-x\";\n\n// import modelsLayer from './satelliteLayer';\nimport satelliteLayers from './satelliteLayers';\n\nimport {bgLayers, ovLayers} from './layerConfig';\n\nexport function useEww({ id }) {\n    \n    const TRAIL_PRODUCT = 1000 * 60 * 60 * 24 //1 day\n    const TRAIL_QUICKLOOK = 1000 * 60 * 60  //1 hour\n    const TRAIL_QUICKLOOKWMS = 1000 * 60 * 24 //1 day\n\n  \n    const eww = useRef(null)\n   \n    // const [aoi, setAoi] = useState({type: null, value: null})\n    const [aoi, setAoi] = useState('')\n    const [ewwstate, setEwwState] = useState({})\n    const bg = useRef(1)\n    const ov = useRef(0)\n    const sat = useRef(false)\n    const atm = useRef(false)\n    const star = useRef(false)\n    const na = useRef(false)\n    const ge = useRef(false)\n    const qu = useRef(false)\n    const qw = useRef(false)\n    const dem = useRef(false)\n    const proj = useRef(0)\n\n    const s2lut = useRef([])\n\n    const lastepoch = useRef(new Date())\n    const lastmovetolat = useRef(0)\n    const lastmovetolon = useRef(0)\n    // Initialise mapsettings\n    function initMap({ clon, clat, alt, atmosphere, starfield, satellites, background, names, dem, projection}) {\n        toggleAtmosphere(atmosphere)\n        toggleStarfield(starfield)\n        toggleModel(satellites)\n        toggleBg(background)\n        toggleNames(names)\n        toggleDem(dem)\n        toggleProjection(projection)\n        moveTo(clat, clon, alt)\n    }\n\n    // Turn the globe up north\n    function northUp() {\n        const wwd = eww.current\n        let headingIncrement = wwd.navigator.heading / -20;\n        let runOperation = () => {\n            if (Math.abs(wwd.navigator.heading) > Math.abs(headingIncrement)) {\n                wwd.navigator.heading += headingIncrement;\n                setTimeout(runOperation, 10);\n            } else {\n                wwd.navigator.heading = 0;\n            }\n            wwd.redraw();\n        };\n        setTimeout(runOperation, 10);\n    }\n\n    //toggle atmosphere\n    function toggleAtmosphere(bool) {\n        console.log('toggleAtmosphere: '+bool)\n        let la = getLayerByName('Atmosphere')\n        atm.current = (bool!== null)?bool:!atm.current\n        la.enabled = atm.current\n        eww.current.redraw();\n    }\n\n    //toggle model\n    function toggleModel(bool) {\n        console.log('toggleModel: '+bool)\n        sat.current = (bool!= null)?bool:!sat.current\n\n        enableSatelliteLayers(lastepoch.current,sat.current)\n        eww.current.redraw();\n    }\n\n    //toggle starField\n    function toggleStarfield(bool) {\n        console.log('toggleStarfield: '+bool)\n        let ls = getLayerByName('StarField')\n        star.current = (bool!= null)?bool:!star.current\n        ls.enabled = star.current\n        eww.current.redraw();\n    }\n\n    //toggle name overlay\n    function toggleNames(bool) {\n        console.log('toggleNames: '+bool)\n        let lo = getLayerByName('overlay_bright')\n        na.current = (bool !== null)?bool:!na.current\n        lo.enabled = na.current\n        eww.current.redraw()\n    }\n\n    //toggle products and quicklooks layers\n    function toggleGeojson(bool) {\n        console.log('toggleGeojson: '+bool)\n        let lp = getLayerByName('Products')\n        ge.current = (bool !== null)?bool:!ge.current\n        lp.enabled = ge.current\n        eww.current.redraw()\n    }\n\n    function toggleQuicklooks(bool) {\n        console.log('toggleQuicklooks: '+bool)\n        let ql = getLayerByName('Quicklooks')\n        qu.current = (bool !== null)?bool:!qu.current\n        ql.enabled = qu.current\n        eww.current.redraw()\n    }\n\n    function toggleBg(background) {\n        // console.log(bg.current)\n        eww.current.layers[bg.current].enabled=false\n        bg.current = (background === null)? (bg.current + 1)%bgLayers.length : (background)%bgLayers.length\n        // console.log('new bg: '+bg.current)\n        eww.current.layers[bg.current].enabled=true\n        eww.current.redraw();\n    }\n\n    function toggleOv(overlay) {\n        // console.log(overlay)\n        eww.current.layers[ov.current+bgLayers.length].enabled=false\n        // ov.current = (ov.current + 1)%ovLayers.length\n        ov.current = (overlay === null)? (ov.current + 1)%ovLayers.length : (overlay)%ovLayers.length\n        // console.log(ov.current)\n        // console.log(\"Overlay Layer: \"+eww.current.layers[ov.current+bgLayers.length].displayName)\n        // console.log(\"Overlay Layer [\"+(ov.current+bgLayers.length+1)+\"/\"+ovLayers.length+\"]: \"+eww.current.layers[ov.current+bgLayers.length].displayName)\n\n        eww.current.layers[ov.current+bgLayers.length].enabled=true\n        eww.current.redraw()\n    }\n    \n    //toggle DEM \n    function toggleDem(bool) {\n        console.log('toogleDem: '+bool)\n        dem.current = (bool !== null)?bool:!dem.current\n        var elevationModel\n        if(dem.current) {\n            console.log('Switching to Copernicus Dem')\n            elevationModel = new WorldWind.ElevationModel();\n            elevationModel.addCoverage(new WorldWind.TiledElevationCoverage({\n                coverageSector: WorldWind.Sector.FULL_SPHERE,\n                resolution: 0.008333333333333,\n                retrievalImageFormat: \"image/tiff\",\n                minElevation: -11000,\n                maxElevation: 8850,\n                urlBuilder: new WorldWind.WcsTileUrlBuilder(\"https://dem.esa.maps.eox.at/elevation\", \"copdem\", \"2.0.1\")\n                }));    \n            \n        } else {\n            console.log('Switching to NASA Dem')\n            elevationModel = new WorldWind.EarthElevationModel()\n        }\n        eww.current.globe.elevationModel = elevationModel\n        eww.current.redraw();\n    }\n\n    function toggleProjection(projection) {\n\n        let supportedProjections = [ \"3D\", \"Equirectangular\", \"Mercator\",\"North Polar\",\"South Polar\"]\n        let nbproj = supportedProjections.length\n        proj.current = (projection === null) ? (proj.current + 1)%nbproj : projection%nbproj\n\n        switch (supportedProjections[proj.current]) {\n            case \"3D\":\n                eww.current.globe.projection = new WorldWind.ProjectionWgs84();\n                break;\n            case \"Equirectangular\":\n                eww.current.globe.projection = new WorldWind.ProjectionEquirectangular();\n                break;\n            case \"Mercator\":\n                eww.current.globe.projection = new WorldWind.ProjectionMercator();\n                break;\n            case \"North Polar\":\n                eww.current.globe.projection = new WorldWind.ProjectionPolarEquidistant(\"North\");\n                break;\n            case \"South Polar\":\n                eww.current.globe.projection = new WorldWind.ProjectionPolarEquidistant(\"South\");\n                break;\n            default:\n            eww.current.globe.projection = new WorldWind.ProjectionWgs84();\n        }\n        eww.current.redraw() \n    }\n\n \n    function  getViewPolygon () {\n        let view = eww.current.viewport\n        let area = {}\n        let polygon = ''\n        // console.log('view: ' + view.x + '/' + view.y + '/' + view.width + '/' + view.height);\n\n        let bl ;\n        try { \n            bl =  eww.current.pickTerrain(eww.current.canvasCoordinates(view.x, view.y + view.height)).terrainObject().position\n            bl.latitude = Math.round(bl.latitude * 10000)/10000\n            bl.longitude = Math.round(bl.longitude * 10000)/10000\n        }\n        catch(err) {bl = null;}\n\n\n        let tr ;\n        try { \n            tr = eww.current.pickTerrain(eww.current.canvasCoordinates(view.x + view.width, view.y)).terrainObject().position\n            tr.latitude = Math.round(tr.latitude * 10000)/10000\n            tr.longitude = Math.round(tr.longitude * 10000)/10000\n        }\n        catch(err) {tr = null;}\n\n        //console.log(bl.longitude+'/'+bl.latitude+'/'+tr.longitude+'/'+tr.latitude);\n        if(bl == null || tr == null )  {\n            //   area = {type:\"bbox\", value:\"-180,-90,180,90\"};\n              polygon = ''\n        } else {\n              area = {\n                    type: \"bbox\",\n                    value:\n                           bl.longitude +','\n                          + bl.latitude +','\n                          +tr.longitude +','\n                          +tr.latitude\n              };\n\n              polygon = 'POLYGON((' \n                + bl.longitude + ' ' + bl.latitude + ',' \n                + tr.longitude + ' ' + bl.latitude + ',' \n                + tr.longitude + ' ' + tr.latitude + ',' \n                + bl.longitude + ' ' + tr.latitude + ',' \n                + bl.longitude + ' ' + bl.latitude + '))' \n        }\n        return polygon\n\n    }\n    \n    const addGeojson = (url,epoch) => {\n\n        console.log('adding geo: ')\n\n        function shapeConfigurationCallback(geometry, properties) {\n            let configuration = {};\n            configuration.userProperties = properties\n    \n            let placemarkAttributes = new WorldWind.PlacemarkAttributes(null);\n            placemarkAttributes.imageScale = 10;\n            placemarkAttributes.imageColor = new WorldWind.Color(0, 1, 1, 0.2);\n            placemarkAttributes.labelAttributes.offset = new WorldWind.Offset(\n                WorldWind.OFFSET_FRACTION, 5,\n                WorldWind.OFFSET_FRACTION, 5);\n            //placemarkAttributes.imageSource = whiteDot;\n    \n    \n            if (geometry.isPointType() || geometry.isMultiPointType()) {\n                configuration.attributes = new WorldWind.PlacemarkAttributes(placemarkAttributes);\n                \n            } else if (geometry.isLineStringType() || geometry.isMultiLineStringType()) {\n                configuration.attributes.drawOutline = true;\n                configuration.attributes.outlineColor = new WorldWind.Color(\n                    0.1 * configuration.attributes.interiorColor.red,\n                    0.3 * configuration.attributes.interiorColor.green,\n                    0.7 * configuration.attributes.interiorColor.blue,\n                    1\n                );\n                configuration.attributes.outlineWidth = 1;\n            } else if (geometry.isPolygonType() || geometry.isMultiPolygonType()) {\n                configuration.attributes = new WorldWind.ShapeAttributes(null);\n                configuration.attributes.interiorColor = new WorldWind.Color(1, 0, 0, 0.2);\n                configuration.attributes.outlineColor = new WorldWind.Color(1, 0, 0, 0.3);\n\n                configuration.highlightAttributes = new WorldWind.ShapeAttributes(configuration.attributes);\n                configuration.highlightAttributes.outlineColor = new WorldWind.Color(1, 0, 0, 0.4);\n                configuration.highlightAttributes.interiorColor = new WorldWind.Color(1, 0, 0, 0);\n                // configuration.attributes.outlineWidth = 0.3;\n\n                // configuration.attributes.applyLighting = true;\n                // configuration.attributes.imageSource = properties.quicklookUrl\n\n            }\n    \n            //console.log(configuration.attributes);\n            return configuration;\n        }\n\n        function setProductTimeRange(productlayer) {\n            for(let i=0; i<productlayer.renderables.length; i++) {\n                let visibilityEnd = productlayer.renderables[i].userProperties.earthObservation.acquisitionInformation[0].acquisitionParameter.acquisitionStartTime\n                let visibilityStart = new Date(visibilityEnd.getTime() - TRAIL_PRODUCT)\n                productlayer.renderables[i].timeRange = [visibilityStart, visibilityEnd]\n            }\n        }\n        \n        function loadCompleteCallback() {\n            // console.log(renderableLayer)\n            setProductTimeRange(productlayer)\n            enableRenderables(productlayer, epoch, TRAIL_PRODUCT)\n            // console.log(productlayer)\n\n            eww.current.redraw();\n        }\n    \n        let productlayer = getLayerByName('Products')\n        // we use a custom version of GeoJson Parser which only creates TexturedSurfacePolygon renderables extending our custom SurfaceShape\n        // !!! Only Polygon and multi-Polygon geometries are supported. Other types will cause the worldwind engine to crash in endless loops...\n        let geoJson = new WorldWind.GeoJSONParser(url);\n        geoJson.load(loadCompleteCallback, shapeConfigurationCallback, productlayer);\n    }\n\n    function removeGeojson() {\n\n        getLayerByName('Products').removeAllRenderables()\n        eww.current.redraw();\n      }\n\n    function addWMS() {\n    }\n\n    async function addQuicklookWMS(renderable) {\n        // console.log(renderable)\n        // console.log(renderable.computeSectors(eww.current.drawContext))\n        // console.log(WorldWind.Sector.FULL_SPHERE)\n\n        // for S2:  \n        // https://view.onda-dias.eu/instance00/ows?&service=WMS&request=GetMap&layers=S2L1C_TRUE_COLOR&styles=&format=image/png&transparent=true&version=1.1.1&width=1500&height=1000&srs=EPSG:4326&bbox=12.357903,41.800495,12.625694,41.984760\n\n        // for S1:  \n        // https://view.onda-dias.eu/instance00/ows?&service=WMS&request=GetMap&layers=S1B_IW_GRDH_1SDV_20190520T050758_20190520T050823_016323_01EB81_6EB6&styles=&format=image%2Fpng&transparent=true&version=1.1.1&width=256&height=256&srs=EPSG%3A3857&bbox=2035059.441064533,7044436.526761846,2191602.4749925737,7200979.560689885\n        let layername = null\n        if(renderable.userProperties.title.indexOf('MSIL1C') >= 0) layername = 'S2L1C_TRUE_COLOR'\n        if(renderable.userProperties.title.indexOf('MSIL2A') >= 0) layername = 'S2L2A_TRUE_COLOR'\n        if(renderable.userProperties.title.indexOf('GRD') >= 0) layername = 'S1_IW_GRDH_FullResolution'\n\n        if (layername === null) return\n\n        let wmsConfigQL = {\n            service: \"https://view.onda-dias.eu/instance00/ows\",\n            // layerNames: renderable.userProperties.title,\n            layerNames: layername,\n            // layerNames: 'S1_IW_GRDH_FullResolution',\n            \n            // title: renderable.userProperties.title,\n            title: 'QuicklookWMS',\n            numLevels: 19,\n            format: \"image/png\",\n            size: 256,\n            sector: renderable.sector,\n            // sector: renderable.sector,\n            // sector: WorldWind.Sector.FULL_SPHERE,\n            levelZeroDelta: new WorldWind.Location(90, 90)\n        }\n\n        // eww.current.removeLayer(getLayerByName('quicklookWMS') )\n        removeQuicklookWMS()\n        let qllayer =  new WorldWind.WmsLayer(wmsConfigQL, renderable.timeRange[1].toJSON())\n        let timerange = []\n        timerange[1] = renderable.timeRange[1]\n        timerange[0] = new Date(timerange[1].getTime() - TRAIL_QUICKLOOKWMS)\n        qllayer.timeRange = timerange\n        qllayer.zIndex=800\n        eww.current.addLayer(qllayer)\n        eww.current.redraw()\n        console.log(eww.current.layers)\n    }\n\n    function removeQuicklookWMS() {\n        eww.current.removeLayer(getLayerByName('QuicklookWMS'))\n        eww.current.redraw()\n    }\n\n\n    function toggleQuicklookWMS(bool) {\n        console.log('QuicklookWMS: '+bool)\n        let ql = getLayerByName('QuicklookWMS')\n        if (!ql) return\n        qw.current = (bool !== null)?bool:!qw.current\n        ql.enabled = qw.current\n        eww.current.redraw()\n    }\n\n\n    function getLayerByName(name) {\n        for (let i = 0; i < eww.current.layers.length; i++) {\n            // console.log('display name: '+eww.current.layers[i].displayName)\n            if (eww.current.layers[i].displayName === name) return eww.current.layers[i]\n        }\n        return null\n    }\n\n    function enableSatelliteLayers(epoch,bool) {\n        for(let l=0 ; l<satelliteLayers.length ; l++) {\n            if(satelliteLayers[l].timeRange[0].getTime() > epoch || satelliteLayers[l].timeRange[1].getTime() < epoch) {\n                satelliteLayers[l].enabled = false\n                // console.log('satstart: '+satelliteLayers[l].timeRange[0]+'  /  '+(new Date(epoch)))\n            } else {\n                satelliteLayers[l].setTime(new Date(epoch))\n                satelliteLayers[l].enabled = (bool === null)?sat.current:bool\n            }\n        }\n    }\n\n    function enableLayer(layer, epoch, trailduration) {\n        return\n        if(layer === null) return\n        if(epoch !== 0) {\n            let visibilityend = layer.timeRange[1].getTime()\n            layer.enabled = (epoch-trailduration < visibilityend && visibilityend <= epoch) ? true : false   \n        } else {\n            layer.enabled = false\n        }         \n}\n\n\n    function enableRenderables(layer, time, trailduration) {\n        if(layer.renderables.length === 0) {\n            return null\n        }\n        let closestrenderableindex = -1\n        let oldestrenderableindex = -1\n        let youngestrenderableindex = -1\n        let youngestrenderableepoch= 0\n        let oldestrenderableepoch = (new Date(2100,0)).getTime()\n        let closestrenderableepoch = 0\n        for (let j = 0; j < layer.renderables.length; j++) {\n            let renderable = layer.renderables[j]\n            if (time !== 0) {\n\n                let visibilityend = renderable.timeRange[1].getTime()\n\n                // find closest\n                if( visibilityend > closestrenderableepoch && visibilityend <= time) {\n                    closestrenderableindex = j\n                    closestrenderableepoch = visibilityend\n                } \n                if( visibilityend <= oldestrenderableepoch) {\n                    oldestrenderableindex = j\n                    oldestrenderableepoch = visibilityend\n                }\n\n                if( visibilityend >= youngestrenderableepoch) {\n                    youngestrenderableindex = j\n                    youngestrenderableepoch = visibilityend\n                }\n\n\n                renderable.enabled = (time-trailduration < visibilityend && visibilityend <= time) ? true : false   \n            } else {\n                renderable.enabled = false\n            }         \n        }\n        // make the closest one always visible \n        if(closestrenderableindex !== -1) {\n            layer.renderables[closestrenderableindex].enabled = true\n        }\n        // make the youngest one visible if closest not found\n        if(time <= oldestrenderableepoch && closestrenderableindex === -1) {\n            layer.renderables[oldestrenderableindex].enabled = true\n            closestrenderableindex = oldestrenderableindex\n        } \n        return (layer.renderables[closestrenderableindex])\n    }\n\n\n\n\n    const controller = useRef(null)\n\n    const flipImage = (srcBase64, callback) => {\n        const img = new Image();\n    \n        // https://stackoverflow.com/questions/20600800/js-client-side-exif-orientation-rotate-and-mirror-jpeg-images\n        // https://stackoverflow.com/questions/7584794/accessing-jpeg-exif-rotation-data-in-javascript-on-the-client-side/32490603#32490603\n        const srcOrientation = 4;\n        img.onload = function() {\n            var width = img.width,\n                height = img.height,\n                canvas = document.createElement('canvas'),\n                ctx = canvas.getContext(\"2d\");\n        \n            // set proper canvas dimensions before transform & export\n            if (4 < srcOrientation && srcOrientation < 9) {\n              canvas.width = height;\n              canvas.height = width;\n            } else {\n              canvas.width = width;\n              canvas.height = height;\n            }\n            // transform context before drawing image\n            switch (srcOrientation) {\n              case 2: ctx.transform(-1, 0, 0, 1, width, 0); break;\n              case 3: ctx.transform(-1, 0, 0, -1, width, height); break;\n              case 4: ctx.transform(1, 0, 0, -1, 0, height); break;\n            //   case 4: ctx.scale(1,-1); break;\n              case 5: ctx.transform(0, 1, 1, 0, 0, 0); break;\n              case 6: ctx.transform(0, 1, -1, 0, height, 0); break;\n              case 7: ctx.transform(0, -1, -1, 0, height, width); break;\n              case 8: ctx.transform(0, -1, 1, 0, 0, width); break;\n              default: break;\n            }\n        \n            // draw image\n            ctx.drawImage(img, 0, 0);\n        \n            // export base64\n            callback(canvas.toDataURL());\n\n          };\n    \n          img.src = srcBase64;\n        //   return(img)\n          \n    }\n\n\n    const getS2LUT = async (url) => {\n        try {\n            \n            let response = await fetch (url, {cache: \"force-cache\"})\n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n            let text = await response.text()\n\n            let templut= text.split('\\n')\n            let lut = []\n            let extract = []\n            for( let i= 0; i< templut.length; i++) {\n                extract = templut[i].split(':')\n                lut[i] = {tile:extract[0], footprint: extract[1]}\n\n            }\n            // console.log(s2lut)\n            s2lut.current = lut\n        }\n        catch (err) {\n            console.log('error getting LUT')\n        }\n    }\n\n    const getPolygonbyS2tile = (tile) => {\n        let i= 0\n        while(s2lut.current[i].tile !== tile) {\n            i++\n        }\n        let coordstring = s2lut.current[i].footprint.slice(15,s2lut.current[i].footprint.length-3)\n        let coordlist = coordstring.split(',')\n        let boundaries = []\n        for(let j = 0; j < coordlist.length; j++) {\n            let coord = coordlist[j].split(' ')\n            let lat = coord[1]\n            let lon = coord[0]\n            boundaries.push({latitude: lat, longitude: lon})\n        }\n        let multiboundaries = []\n        multiboundaries[0] = boundaries\n        return multiboundaries\n    }\n\n    const createQL = async (url, footprint, timerange, attributes, quicklookLayer) => {\n\n        async function createImage(url) {\n            return new Promise((resolve, reject) => {\n                flipImage(url, (base64src) => {\n                    const imageOfQuickLook = new Image();\n                    imageOfQuickLook.addEventListener('load', () => {\n                        resolve(imageOfQuickLook);\n                    }, false);\n                    imageOfQuickLook.src = base64src;\n                });\n            });\n        }\n    \n\n\n        controller.current = new AbortController()\n\n        // if quicklook is already there, do nothing\n        for(let i = 0; i < quicklookLayer.renderables.length; i++) {\n            if(quicklookLayer.renderables[i].displayName === timerange[1].toUTCString()) return\n        }\n\n        try {\n            \n            let response = await fetch (url, {mode: 'cors', credentials: 'include', signal: controller.current.signal, cache: \"force-cache\"})\n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n            \n            let blob = await response.blob()\n            let objectURL = URL.createObjectURL(blob)\n            let image = await createImage(objectURL)\n            \n            let quicklook =  new TexturedSurfacePolygon(footprint,attributes)\n            // quicklook.maxImageWidth = 64\n            // quicklook.maxImageHeight = 64\n            quicklook.maximumNumEdgeIntervals = 2;\n            quicklook.polarThrottle = 1;\n            quicklook.timeRange = timerange\n            quicklook.displayName = timerange[1].toUTCString()\n    \n            \n            quicklook.image = image\n\n            // setEwwState((ewwstate) => { return {...ewwstate, image: image}})\n            quicklookLayer.addRenderable(quicklook)\n            URL.revokeObjectURL(objectURL)\n\n            eww.current.redraw()\n            \n        } catch(err) {\n            console.log(\"Error contacting server...\")\n            console.log(err)\n        }\n    }\n\n\n    const addQuicklook = async (renderable) => {\n        if(renderable) {\n\n            let url = renderable.userProperties.quicklookUrl\n            // console.log(renderable)\n            let footprint \n            // console.log(renderable.boundaries[0])\n            if(renderable.userProperties.earthObservation.productInformation.tile) {\n                footprint = getPolygonbyS2tile(renderable.userProperties.earthObservation.productInformation.tile)\n            } else {\n                footprint = renderable.boundaries[0]\n            }\n            \n            let highestlat = 0\n            for(let i = 0 ; i < footprint.length ; i++) {\n                if(Math.abs(footprint[i].latitude) > highestlat) highestlat = footprint[i].latitude\n            }\n            // try to filter the quicklook that crashes the shape\n            if(highestlat > 84) {\n                console.log('I refuse')\n                console.log(renderable.boundaries[0])\n                return\n            }\n\n            let timerange =[]\n            timerange[1] = renderable.timeRange[1]\n            timerange[0] = new Date(timerange[1].getTime() - TRAIL_QUICKLOOK)\n            let attributes = renderable.attributes\n            let quicklookLayer = getLayerByName('Quicklooks')\n\n            createQL(url, footprint, timerange, attributes, quicklookLayer)\n            decacheQuicklooks()\n        }\n    }\n\n    function decacheQuicklooks() {\n        // getLayerByName('Quicklooks').removeAllRenderables()\n        let qlarray = getLayerByName('Quicklooks').renderables\n        while (qlarray.length > 50) {\n            qlarray.shift()\n        }\n\n        eww.current.redraw()\n    }\n\n    function removeQuicklooks() {\n        getLayerByName('Quicklooks').removeAllRenderables()\n        eww.current.redraw()\n    }\n\n    async function setTime(epoch) {\n        epoch = (epoch)?epoch:lastepoch.current\n        // console.log(epoch)\n\n        if(star.current) {\n            getLayerByName('StarField').time = new Date(epoch)\n        }\n        if(atm.current) {\n            getLayerByName('Atmosphere').time = new Date(epoch)\n        }\n        if(qu.current) {\n            enableRenderables(getLayerByName('Quicklooks'), epoch, TRAIL_QUICKLOOK)\n        }\n\n        let closestrenderable = null\n        closestrenderable = enableRenderables(getLayerByName('Products'), epoch, TRAIL_PRODUCT)\n        \n        if(qw.current) {\n            enableLayer(getLayerByName('QuicklookWMS'), epoch, TRAIL_QUICKLOOKWMS)\n        }\n\n        if(sat.current) {\n            enableSatelliteLayers(epoch,null)\n        }\n\n        eww.current.redraw();\n        lastepoch.current = epoch\n        setEwwState((ewwstate) => { return {...ewwstate, closestRenderable: closestrenderable}})\n\n        // return closestrenderable\n     }\n\n    async function moveTo(lat, lon, alt) {\n        // setTimeout(() => {\n            // console.log('move to: '+lat)\n            if(lat === ewwstate.latitude && lon === ewwstate.longitude) {\n                console.log('already moved there...')\n                return\n            }\n            eww.current.goToAnimator.travelTime = 1300;\n            try { // check if lat/lon is same as last time.\n                eww.current.goTo(new WorldWind.Position(lat, lon));\n            } catch(e) {console.log(e)}\n            lastmovetolat.current = lat\n            lastmovetolon.current = lon\n            eww.current.navigator.range = alt;\n            eww.current.navigator.camera.applyLimits()\n            eww.current.redraw();\n            // }, 1000)\n        }\n\n\n    function getRenderables(x,y) {\n        let pickList = eww.current.pick(eww.current.canvasCoordinates(x, y))\n        let pickedItems = []\n        for (let i = 0; i < pickList.objects.length; i++) {\n            if (pickList.objects[i].userObject instanceof TexturedSurfacePolygon && pickList.objects[i].parentLayer.displayName==='Products') {\n                pickedItems.push(pickList.objects[i].userObject) \n            }\n        }\n        return pickedItems\n    }\n\n    // callback from eww   \n    const setGlobeStates = () => {\n        \n        let lo = eww.current.navigator.lookAtLocation.longitude\n        let la = eww.current.navigator.lookAtLocation.latitude\n        let al = eww.current.navigator.range\n        let vp = (al < 2000000?getViewPolygon():'')\n        let vpp = 'POINT('+lo.toFixed(4)+' '+la.toFixed(4)+')' \n        \n\n        setEwwState((ewwstate) => { return {...ewwstate, longitude:lo, latitude: la, altitude: al, viewpolygon: vp, viewpoint:vpp}}) \n\n    }\n\n    // handler for tap/click\n\n    const handleClick  = (recognizer) => {\n        // console.log('click')\n        let x = recognizer.clientX\n        let y = recognizer.clientY\n        // Perform the pick. Must first convert from window coordinates to canvas coordinates, which are\n        // relative to the upper left corner of the canvas rather than the upper left corner of the page.\n        let pickList = eww.current.pick(eww.current.canvasCoordinates(x, y));\n        // console.log(pickList)\n        if (pickList.terrainObject()) {\n            // position = pickList.terrainObject().position;\n            // store list of selected footprints in a string for later comparison\n            eww.current.removeLayer(getLayerByName('quicklook') )\n            // de-highlight all rendereables\n            for (let i = 0; i < eww.current.layers.length; i++) {\n                if (eww.current.layers[i].displayName.includes('Products:')) {                    \n                    for (let j = 0; j < eww.current.layers[i].renderables.length; j++) {\n                        let renderable = eww.current.layers[i].renderables[j]\n                        renderable.highlighted = false\n                    }\n                }\n            }\n    \n            // ... and now highlight all picked rendereables\n            let pickedItems = []\n            for (let i = 0; i < pickList.objects.length; i++) {\n                if (pickList.objects[i].userObject instanceof WorldWind.SurfaceShape) {\n                    pickedItems.push(pickList.objects[i].userObject) \n                    pickList.objects[i].userObject.highlighted = !pickList.objects[i].userObject.highlighted\n                    \n                    addQuicklookWMS(pickList.objects[i].userObject)\n                }\n            }\n            // console.log(pickedItems)\n            setEwwState((ewwstate) => { return {...ewwstate, pickedItems: pickedItems}})\n            eww.current.redraw()\n        } else {\n            console.log('No position !');\n            return;\n        }\n\n\n    }\n    const handleDoubleClick  = (recognizer) => {\n        console.log('double click')\n    }\n\n    const handleDoubleClick2  = (recognizer) => {\n        console.log('double click')\n        let x = recognizer.clientX\n        let y = recognizer.clientY\n        let pickList = eww.current.pick(eww.current.canvasCoordinates(x, y));\n\n        let position;\n  \n  \n        // Get coordinates of clicked point and list of selected footprints. Do nothing if click done outside the globe.\n        if (pickList.terrainObject()) {\n            position = pickList.terrainObject().position;\n            // eww.current.goTo(new WorldWind.Location(position.latitude, position.longitude));\n\n            let point = \"POINT(\"+position.longitude+' '+position.latitude+\")\"\n            \n            setEwwState((ewwstate) => { return {...ewwstate, aoi: point}}) \n    \n        } else {\n              console.log('No position !');\n              setEwwState((ewwstate) => { return {...ewwstate, aoi: ''}})\n        }\n    }\n\n\n    // didMount effect\n    useEffect(() => {\n        console.log(\"Creating the world...\")\n\n        // to use DEM from Eox ESA Map server\n        var elevationModel = new WorldWind.ElevationModel();\n        elevationModel.removeAllCoverages()\n        elevationModel.addCoverage(new WorldWind.TiledElevationCoverage({\n            coverageSector: WorldWind.Sector.FULL_SPHERE,\n            resolution: 0.008333333333333,\n            retrievalImageFormat: \"image/tiff\",\n            minElevation: -11000,\n            maxElevation: 8850,\n            urlBuilder: new WorldWind.WcsTileUrlBuilder(\"https://dem.esa.maps.eox.at/elevation\", \"copdem\", \"2.0.1\")\n            }));\n        // eww.current = new WorldWind.WorldWindow(id, elevationModel);\n\n\n        eww.current = new WorldWindow(id);\n\n        \n\n        // eww.current.worldWindowController = null;\n        eww.current.redrawCallbacks().push(setGlobeStates)\n        eww.current.redrawCallbacks().push( (wwd, stage) => {\n            if (stage === WorldWind.BEFORE_REDRAW) {\n                wwd.layers.sort(function (a, b) {\n                    return a.zIndex - b.zIndex;\n                });\n            }\n        })\n        \n        WorldWind.configuration.baseUrl = window.location.href\n\n        let starFieldLayer = new StarFieldLayer();\n\n        let atmosphereLayer = new WorldWind.AtmosphereLayer('images/BlackMarble_2016_01deg.jpg');\n        // let atmosphereLayer = new WorldWind.AtmosphereLayer('images/BlackMarble_2016_3km.jpg');\n        //atmosphereLayer.minActiveAltitude = 5000000\n\n        let quicklookLayer = new WorldWind.RenderableLayer('Quicklooks')\n        quicklookLayer.pickEnabled = false\n\n        let productLayer =  new WorldWind.RenderableLayer('Products')\n\n    \n        let layers = [\n            // { layer: new WorldWind.WmsLayer(wmsConfigBg_s2, \"\"), enabled: true },\n            // { layer: new WorldWind.WmsLayer(wmsConfigBg_terrain, \"\"), enabled: false },\n            // { layer: new WorldWind.WmsLayer(wmsConfigNames, \"\"), enabled: names },\n            { layer: starFieldLayer, enabled: false, zIndex: 100 },\n            { layer: atmosphereLayer, enabled: false, zIndex: 100 },\n            { layer: productLayer, enabled: true, zIndex: 600 },\n            { layer: quicklookLayer, enabled: true, zIndex: 700 },\n        ];\n    \n        for (let l = 0; l < bgLayers.length; l++) {\n            let layer = new WorldWind.WmsLayer(bgLayers[l], \"\")\n            layer.enabled = false\n            layer.zIndex= 500+l\n            eww.current.addLayer(layer, \"\")\n        }\n        for (let l = 0; l < ovLayers.length; l++) {\n            let layer = new WorldWind.WmsLayer(ovLayers[l], \"\")\n            layer.enabled = false\n            layer.zIndex= 800+l\n            eww.current.addLayer(layer, \"\")\n        }\n\n        for (let l = 0; l < layers.length; l++) {\n            layers[l].layer.enabled = layers[l].enabled;\n            layers[l].layer.zIndex = layers[l].zIndex;\n            eww.current.addLayer(layers[l].layer);\n        }\n        for (let l = 0; l < satelliteLayers.length; l++) {\n            satelliteLayers[l].enabled = sat.current\n            satelliteLayers[l].zIndex= 10+l\n            eww.current.addLayer(satelliteLayers[l]);\n        }\n\n\n        console.log(eww.current.layers)\n        //let date = new Date();\n        // starFieldLayer.time = new Date();\n        // atmosphereLayer.time = new Date();\n    \n        eww.current.redraw();\n        getS2LUT('./data/s2lut.txt')\n        // eww.current.deepPicking = true;\n        // eww.current.orderedRenderingFilters.push(declutterByTime)\n    }, []); // effect runs only once\n        \n  return { \n      eww, \n      ewwstate, \n      initMap, \n      moveTo, \n      removeGeojson, \n      addGeojson,\n      toggleGeojson,\n      getRenderables, \n      addQuicklookWMS, \n      removeQuicklookWMS,\n      toggleQuicklookWMS,\n      removeQuicklooks, \n      addQuicklook, \n      toggleQuicklooks,\n      toggleStarfield, \n      toggleAtmosphere, \n      setTime, \n      toggleProjection, \n      toggleNames, \n      toggleModel, \n      toggleBg, \n      toggleOv, \n      toggleDem, \n      northUp \n    }\n}\n","import React, {useState, useRef, useEffect} from \"react\";\nimport {useSpring, animated} from 'react-spring'\nimport { useDrag } from 'react-use-gesture'\nimport \"./LogPanel.css\"\n\n\n\n// import MissionSelector from \"./missionselector\";\n\n\n\n\n\nfunction LogPanel({items}) {\n\n    const debug = useRef()\n    const [debugtext,setdebugtext] = useState([])\n\n    const [{ x, y }, api] = useSpring(() => ({ x: 0, y: 0 }))\n    const bind2 = useDrag(({ offset: [x, y] }) => api.start({ x, y }))\n\n\n    const logdebug = (items) => {\n        let dd = []\n        debug.current = {...debug.current,...items}\n        // debugtext.current = []\n        for (let [key, value] of Object.entries(debug.current)) {\n            // console.log(`${key}: ${value}`);\n            dd.push([key,value])\n          }\n          setdebugtext( dd.map( (item) => <div key={item[0]}>{item[0]}: {item[1]}</div> ))\n    }   \n    \n    useEffect(() => {\n        logdebug(items)\n        console.log(items)\n    },[items])\n\n\n\n    return   (\n\n        <animated.div {...bind2()} style={{ x, y }}  className='Debug'>\n        {debugtext}\n    </animated.div>\n\n\n    )\n    \n}\n\nexport default LogPanel\n","import React, {useState, useEffect, useRef, memo} from 'react'\nimport WorldWind from 'webworldwind-esa';\nimport { useGesture, useDrag } from 'react-use-gesture'\nimport {useSpring, config, animated} from 'react-spring'\nimport { add, sub, scale } from 'vec-la'\nimport './Earth.css'\nimport LogPanel from '../logpanel';\n\n\n// todo:\n//      set limits to the navigator.camera\n\n\nexport const FluidWorldWindowController = memo( ({world, onSimpleClick}) => {\n\n    const controllerRef = useRef()\n    const MAX_ALT = 100000000\n    const EYE_ALT = 2\n    // to detect double taps\n    const lastTap = useRef()\n    const doubleTap = useRef()\n    const button = useRef()\n    const clicktimeout = useRef()\n    const tilttimeout = useRef()\n    const dragtimeout = useRef()\n\n    //\n    const gesturestartposition = useRef()\n    // const [dragenabled, setdragenabled] = useState(true)\n    const dragenabled = useRef(true)\n    const rotationmode = useRef(false)\n    const pinchmode = useRef('undefined')\n    // const [logitems,setlogitems] = useState({})\n\n    // debug snippet\n    // add {debughtml} in returned dom\n    // use with: logdebug({key:value,...})\n    const debug = useRef()\n    const [debugtext,setdebugtext] = useState([])\n    const [{ x, y }, api] = useSpring(() => ({ x: 0, y: 0 }))\n    const bind2 = useDrag(({ offset: [x, y] }) => api.start({ x, y }))\n    const debughtml =     (      <animated.div {...bind2()} style={{ x, y }}  className='Debug'>{debugtext}</animated.div>)\n    const logdebug = (items) => {\n        let dd = []\n        debug.current = {...debug.current,...items}\n        // debugtext.current = []\n        for (let [key, value] of Object.entries(debug.current)) {\n            // console.log(`${key}: ${value}`);\n            dd.push([key,value])\n          }\n          setdebugtext( dd.map( (item) => <div key={item[0]}>{item[0]}: {item[1]}</div> ))\n    }    \n    // end debug snippet  \n    \n    const detectDoubleTap = (e) => {\n        button.current = e.button\n        if (lastTap.current && (e.timeStamp - lastTap.current) < 300) {\n            doubleTap.current = true\n        } else {\n            lastTap.current = e.timeStamp\n            doubleTap.current = false\n        }\n    }\n\n\n    const bind = useGesture({\n        onDrag: ({  event, xy, vxvy, previous, first, down, initial, delta, movement, offset, velocity, direction, tap, scrolling, touches, pinching, origin}) => {\n\n            if(first) {\n                gesturestartposition.current = positionAtPickPoint(xy[0],xy[1])\n                if(!gesturestartposition.current) {\n                    gesturestartposition.current = positionAtPickPoint(world.current.canvas.clientWidth/2,world.current.canvas.clientHeight/2)\n                }\n\n                detectDoubleTap(event)\n                if(doubleTap.current) clearTimeout(clicktimeout.current)\n                // console.log('double:'+doubleTap.current+' tap: '+tap)\n            }\n\n            switch (true) {\n\n                // case (touches === 2):\n                //     // 2 finger tap: tilt\n                //     handletilt(down, delta, false, first, vxvy)\n                //     // tilttimeout.current = setTimeout(() => {\n                //     //     handletilt(down, delta, false, first)\n                //     // }, 300);                \n                //     break\n\n\n                case (!doubleTap.current && tap):  \n                    // simple click or tap\n                    clicktimeout.current = setTimeout(() => {\n                        console.log(\"simple click\")\n                        handleSimpleClick(event)\n                    }, 300);\n                    break\n                case (doubleTap.current && tap): {\n                    clearTimeout(clicktimeout.current)\n\n                    // double click or tap\n                    console.log(\"double click\")\n                    northUp()\n                    break\n                }\n                case ((!doubleTap.current && !tap) && button.current != 2 && touches !=2  ):\n                    // Pan\n                    // console.log('pan')\n                    if(!dragenabled.current) return\n                    zoomspring.stop()\n                    pinchzoomspring.stop()\n                    pinchrotatespring.stop()\n                    pinchtiltspring.stop()\n                    if (world.current.globe.is2D()) {\n                        handlepan2d(event,initial,down,delta,offset,movement,velocity, direction, xy, previous,first,scrolling)\n                    } else {\n                        handlepan3d(event,initial,down,delta,offset,vxvy,velocity, direction, xy, previous,first,scrolling,touches,pinching)\n                    }\n                    break\n                case (doubleTap.current && !tap):\n                    // zoom\n                    zoomspring.stop()\n                    handlezoom(event,initial,down,delta,offset,movement,velocity, direction, xy, previous,first,scrolling)\n                    break\n\n                case (!doubleTap.current && !tap && button.current == 2):\n                    // right click button: tilt and rotate\n                    handletilt(down, delta, true)\n                    break\n    \n        \n                default:\n                // console.log(\"default \")\n\n            }\n\n        },\n        onDragend: () => {\n            console.log('drag end')\n        },\n        onWheel: ({event, xy, previous, first, down, initial, delta, movement, offset, velocity, direction, tap, wheeling}) => {\n            if(first) {\n                gesturestartposition.current = positionAtPickPoint(event.clientX,event.clientY)\n            }\n            // delta[1] *= 0.1         \n            // delta[0] *= 0.1         \n            handlezoom(event,initial,down,delta,offset,movement,velocity, direction, xy, previous,first,wheeling)\n        },\n        onPinchStart: (origin)=>{\n            dragenabled.current = false\n            panspring.stop()\n            zoomspring.stop()\n            pinchzoomspring.stop()\n            pinchrotatespring.stop()\n            pinchzoomrotatespring.stop()\n            pinchtiltspring.stop()\n            // memo.lastY = origin[1]\n            // gesturestartposition.current = positionAtPickPoint(origin[0],origin[1])\n            pinchmode.current = 'undefined'\n\n            // tilttimeout.current = setTimeout(() => {\n            //     pinchmode.current = 'tilt'\n            //     }, 300);        \n                \n        },\n        onPinch: ({event, da, vdva, origin, pinching, delta, first, initial, direction, previous, elapsedTime, memo = {lastY:0} }) => {\n            handlepinch(event, da, vdva, origin, pinching, delta, first, initial, direction, previous, memo, elapsedTime)\n            memo.lastY = origin[1]\n            return memo\n        },\n        onPinchEnd: () => { \n            clearTimeout(dragtimeout.current)\n            dragtimeout.current = setTimeout(() => {\n                dragenabled.current = true\n                // logdebug({drag: (dragenabled.current)?'true':'false'})\n                }, 300);\n            pinchmode.current = 'undefined'\n            \n            //    console.log('pinch end')\n        }\n    },\n    // {reset: false, drag: {useTouch: true}, filterTaps: true }\n    {\n        domTarget: controllerRef,\n        drag: {useTouch: true},\n        pinch: {useTouch: true},\n        eventOptions: {passive: false}\n    }\n    )\n\n    const normalize = (val,min,max)=> {\n        var delta = max - min;\n        return (val - min) / delta\n    }\n\n    function handleSimpleClick(event) {\n        onSimpleClick(event)\n    }\n    // north up\n    // todo: spring ?\n    function northUp() {\n        let headingIncrement = world.current.navigator.heading / -20;\n        let runOperation = () => {\n            if (Math.abs(world.current.navigator.heading) > Math.abs(headingIncrement)) {\n                world.current.navigator.heading += headingIncrement;\n                setTimeout(runOperation, 10);\n            } else {\n                world.current.navigator.heading = 0;\n                rotationmode.current = false\n            }\n            world.current.redraw();\n        };\n        setTimeout(runOperation, 10);\n    }\n\n    // pinching\n    const handlepinch = (event, da, vdva, origin, pinching, delta, first, initial, direction, previous, memo, elapsedTime) => {\n        // if(first) console.log(event)\n        // console.log(elapsedTime)\n        if(pinchmode.current === 'undefined' && elapsedTime >= 100) {\n            // console.log(initial)\n            // pinchmode.current = (Math.abs(direction[0]) > Math.abs(direction[1]*1.2))?'zoom':'rotation'\n            if(Math.abs(origin[1]-memo.lastY) > 4) {\n                pinchmode.current = 'tilt' \n            } else pinchmode.current = 'zoomrotate' \n            // console.log(origin)\n            // if(da[1]>3) pinchmode.current = 'rotation'\n            // else if(da[0]>10) pinchmode.current = 'zoom'\n        } \n        // if(pinchmode.current === 'undefined' && !first) {\n        //     pinchmode.current = (Math.abs(direction[0]) > Math.abs(direction[1]*1.2))?'zoom':'rotation'\n        //     clearTimeout(tilttimeout.current)    \n        // }\n\n        switch (pinchmode.current) {\n\n            case 'tilt':\n                handlepinchtilt(pinching, delta, origin, initial, memo)\n                break\n\n            // case 'zoom':\n            //     // handlezoomrotate(pinching,delta)\n            //     handlepinchzoom(pinching,delta,vdva)\n            //     break\n\n            // case 'rotation':\n            //     handlepinchrotate(pinching, delta, vdva)\n            //     break\n\n            case 'zoomrotate':\n                handlezoomrotate(pinching, delta, origin, vdva)\n                break\n\n            default:\n\n            break\n        }\n\n    }\n\n    const [{ pinchtiltvalue }, pinchtiltspring] = useSpring(() => ({ pinchtiltvalue: [0,0] }))\n    const handlepinchtilt = (pinching, delta, origin, initial, memo ) => {\n        pinchtiltspring.start({\n            // pinchtiltvalue: delta,\n            pinchtiltvalue: sub(origin,[0,memo.lastY]),\n            immediate: pinching,\n            // config: config.stiff,\n            config: { mass: 1, tension: 100, friction: 40 },\n            onChange: ()=>{\n                let enabler = 1\n                if(!pinching) pinchmode.current = 'undefined'\n                // if (!pinching) enabler = (pinchtiltvalue.get()[1] < 0.2)?0:1\n                let tiltfactor = (pinching)?0.5:0.2 \n                world.current.navigator.tilt -= pinchtiltvalue.get()[1] * tiltfactor * enabler\n                applyLimits()\n                world.current.redraw()\n\n            }\n        })\n    }\n\n\n\n    const [{ pinchzoomrotatevalue }, pinchzoomrotatespring] = useSpring(() => ({ pinchzoomrotatevalue: [0,0] }))\n    const handlezoomrotate = (pinching,delta,origin, vdva) => {\n        let zenabler = 1\n        let tenabler = 1\n        if (!pinching) {\n            zenabler = (Math.abs(vdva[0]) < 0.2)?0:1\n            tenabler = (Math.abs(vdva[1]) < 0.2)?0:1\n        }\n        pinchzoomrotatespring.start({\n            pinchzoomrotatevalue: delta,\n            immediate: pinching,\n            config: config.molasses,\n            // config: {...config.molasses},\n            // config: { mass: 1, tension: 100, friction: 40, duration: 200 },\n            onChange: ()=>{\n                let rangefactor = 1-pinchzoomrotatevalue.get()[0]/300 * zenabler\n                moveZoom(gesturestartposition.current,rangefactor )\n                world.current.navigator.range *= rangefactor \n                // logdebug({angle: pinchzoomrotatevalue.get()[1]})\n                // logdebug({dist: pinchzoomrotatevalue.get()[0]})\n                \n                world.current.navigator.heading -= pinchzoomrotatevalue.get()[1] * tenabler\n                if(world.current.navigator.heading !== 0) rotationmode.current = true\n\n                // world.current.navigator.heading -= hpinchval.get()  \n                applyLimits()\n\n                world.current.redraw()\n\n            }\n        })        \n    }\n\n    const [{ pinchzoomvalue }, pinchzoomspring] = useSpring(() => ({ pinchzoomvalue: 0 }))\n    const handlepinchzoom = (pinching,delta,vdva) => {\n        let enabler = 1\n        if (!pinching) enabler = (Math.abs(vdva[0]) < 0.2)?0:1\n        pinchzoomspring.start({\n            pinchzoomvalue: delta[0],\n            immediate: pinching,\n            // config: config.stiff,\n            // config: {...config.molasses},\n            config: { mass: 1, tension: 100, friction: 40 },\n            onChange: ()=>{\n                if(!pinching) pinchmode.current = 'undefined'\n                let rangefactor = 1-pinchzoomvalue.get()/300 * enabler\n                moveZoom(gesturestartposition.current,rangefactor)\n                world.current.navigator.range *= rangefactor\n                // world.current.navigator.heading -= hpinchval.get()  \n                applyLimits()\n\n                world.current.redraw()\n\n            }\n        })        \n    }\n\n\n    const [{ pinchrotatevalue }, pinchrotatespring] = useSpring(() => ({ pinchrotatevalue: 0 }))\n    const handlepinchrotate = (pinching,delta,vdva) => {\n        let enabler = 1\n        if (!pinching) enabler = (Math.abs(vdva[1]) < 0.2)?0:1\n        pinchrotatespring.start({\n            pinchrotatevalue: delta[1],\n            immediate: pinching,\n            // config: config.stiff,\n            config: { mass: 1, tension: 100, friction: 40 },\n            // config: { mass: 1, tension: 100, friction: 40, duration: 200 },\n            onChange: ()=>{\n                    world.current.navigator.heading -= pinchrotatevalue.get() * enabler \n                    if(world.current.navigator.heading !== 0) rotationmode.current = true\n                    applyLimits()\n\n                    world.current.redraw()\n\n            }\n        })\n    \n    }\n\n\n     // tilting\n    const [{ tiltvalue }, tiltspring] = useSpring(() => ({ tiltvalue: [0,0] }))\n\n    const handletilt = (down, delta, dorotation ) => {\n        // let enabler = 1\n        // if (!pinching) enabler = (Math.abs(vdva[1]) < 0.2)?0:1\n        tiltspring.start({\n            to: {tiltvalue: delta},\n            immediate: down,\n            // config: config.stiff,\n            config: { mass: 1, tension: 100, friction: 40 },\n            onChange: ()=>{\n                let tiltoffset = -90 * tiltvalue.get()[1]*2 / world.current.canvas.clientHeight\n                let headingoffset = -90 * tiltvalue.get()[0]*2 / world.current.canvas.clientWidth\n                // world.current.navigator.tilt += tiltvalue.get()[1]/8\n                world.current.navigator.tilt -= tiltoffset \n                if(dorotation) {\n                    world.current.navigator.heading -= headingoffset\n                    if(world.current.navigator.heading !== 0) rotationmode.current = true\n                }\n                applyLimits()\n                world.current.redraw()\n\n            }\n        })\n    }\n\n    // panning\n    const [{ panvalue }, panspring] = useSpring(() => ({ panvalue: [0,0] }))\n\n    const handlepan2d = (event,initial,down,delta,offset,movement,velocity, direction, xy, previous,first,wheeling) => {\n        let enabler = 1\n        if (!down) enabler = (velocity < 0.2)?0:1\n        let correction = (event.type === 'touchmove')?1:2.5\n        // logdebug({pinching: pinching})\n\n        panspring.start({\n            panvalue: delta,\n            // to: {panvalue: (down)?movement:add(movement,scale(movement,velocity))},\n            // to: {panvalue: (down)?movement:movement[1]+movement[1]*velocity*5},\n            immediate: down,\n            // config: config.stiff,\n            config: { mass: 1, tension: 150, friction: 80 },\n            onChange: ()=>{\n                let lookatxy = [world.current.canvas.clientWidth/2, world.current.canvas.clientHeight/2]\n                let nextlookatxy = sub(lookatxy,scale(panvalue.get(),correction*enabler))\n                let currentposition = positionAtPickPoint(lookatxy[0],lookatxy[1])\n                if(!currentposition) console.log('no currentpos !')\n                let nextposition = positionAtPickPoint(nextlookatxy[0],nextlookatxy[1])\n                if(!nextposition) console.log('no nextposition !')\n\n                let currentpoint = new WorldWind.Vec3(0,0,0)\n                let nextpoint = new WorldWind.Vec3(0,0,0)\n                if(!world.current.globe.computePointFromPosition(currentposition.latitude, currentposition.longitude, currentposition.altitude, currentpoint)) return\n                if(!world.current.globe.computePointFromPosition(nextposition.latitude, nextposition.longitude, nextposition.altitude, nextpoint)) return\n\n                let viewMatrix = WorldWind.Matrix.fromIdentity();\n                world.current.computeViewingTransform(null, viewMatrix)\n                viewMatrix.multiplyByTranslation(currentpoint[0] - nextpoint[0], currentpoint[1] - nextpoint[1], currentpoint[2] - nextpoint[2])\n\n                // Compute the globe point at the screen center from the perspective of the transformed navigator state.\n                var ray = world.current.rayThroughScreenPoint(world.current.canvasCoordinates(xy[0], xy[1]))\n\n                viewMatrix.extractEyePoint(ray.origin);\n                viewMatrix.extractForwardVector(ray.direction);\n\n                let origin = new WorldWind.Vec3(0, 0, 0);\n\n                if (!world.current.globe.intersectsLine(ray, origin)) {\n                    return;\n                }\n\n                // Convert the transformed modelview matrix to a set of navigator properties, then apply those\n                // properties to this navigator.\n                let params = viewMatrix.extractViewingParameters(origin, world.current.navigator.roll, world.current.globe, {});\n                world.current.navigator.lookAtLocation.copy(params.origin);\n                world.current.navigator.range = params.range;\n                world.current.navigator.heading = params.heading;\n                world.current.navigator.tilt = params.tilt;\n                world.current.navigator.roll = params.roll;\n                applyLimits();\n                world.current.redraw();\n\n\n            },\n            onRest: () => {\n                // logdebug({status: 'finsished: '})\n            }\n        })\n    }\n       \n\n    const handlepan3d = (event,initial,down,delta,offset,vxvy,velocity, direction, xy, previous,first,wheeling, touches,pinching) => {\n        try {\n            if(first){\n                // can crash the drag:\n                // if(Math.abs(gesturestartposition.current.latitude) > 85 || world.current.navigator.heading > 2 ) {\n                if(Math.abs(gesturestartposition.current.latitude) > 80 || world.current.navigator.heading > 2 ) {\n                    rotationmode.current = true\n                }\n            }\n        } catch {\n            console.log('Position at start not detected')\n        }\n\n\n        let enabler = 1\n        if (!down) enabler = (velocity < 0.2)?0:1\n        let correction = (event.type === 'touchmove')?1:2.5\n        if(!down) correction *= 0.5\n\n        panspring.start({\n            panvalue: delta,\n            // to: {panvalue: (down)?movement:add(movement,scale(movement,velocity))},\n            // to: {panvalue: (down)?movement:movement[1]+movement[1]*velocity*5},\n            immediate: down,\n            // config: config.stiff,\n            // config: { mass: 1, tension: 150, friction: 80 },\n            config: { mass: 1, tension: 100, friction: 40 },\n            onChange: ()=>{\n                try{\n                    let lookatxy = [world.current.canvas.clientWidth/2, world.current.canvas.clientHeight/2]\n                    let nextlookatxy = sub(lookatxy,scale(panvalue.get(),correction*enabler))\n                    let currentposition = positionAtPickPoint2(lookatxy[0],lookatxy[1])\n                    if(!currentposition) console.log('no currentpos !')\n                    let nextposition = positionAtPickPoint2(nextlookatxy[0],nextlookatxy[1])\n                    if(!nextposition) console.log('no nextposition !')\n\n                    let currentpoint = new WorldWind.Vec3(0,0,0)\n                    let nextpoint = new WorldWind.Vec3(0,0,0)\n                    if(!world.current.globe.computePointFromPosition(currentposition.latitude, currentposition.longitude, currentposition.altitude, currentpoint)) return\n                    if(!world.current.globe.computePointFromPosition(nextposition.latitude, nextposition.longitude, nextposition.altitude, nextpoint)) return\n\n                    let rotationVector = new WorldWind.Vec3(0, 0, 0)\n                    let rotationAngle = computeRotationVectorAndAngle( nextpoint,currentpoint, rotationVector);\n                    // logdebug({delta: panvalue.get()[1]})\n\n                    if(nextposition && (nextposition.latitude > 80 || nextposition.latitude < -80) && rotationmode.current === false) {\n                        console.log('out')\n                        panspring.stop()\n                        return\n                    }\n                    // nextposition.latitude = WorldWind.WWMath.clamp(nextposition.latitude,-80,80)\n\n\n                    rotateShpere(rotationVector, rotationAngle, nextpoint, nextposition)\n                    if(rotationmode.current === false) world.current.navigator.heading = 0\n                    world.current.redraw()\n                }\n                catch {\n                    console.log('probl !')\n                }\n            },\n            onRest: () => {\n                // logdebug({status: 'finsished: '})\n            }\n        })\n    }\n\n\n    // zooming\n    const [{ range }, zoomspring] = useSpring(() => ({ range: [0,0] }))\n    const handlezoom = (event,initial,down,delta,offset,movement,velocity, direction, xy, previous,first,wheeling) => {\n\n        let enabler = 1\n        if (!down) enabler = (velocity < 0.2)?0:0.5\n\n        zoomspring.start({\n            // to: {range: [1-delta[1]/200,0]},\n            range: delta,\n            immediate: (down||wheeling),\n            // immediate: (down),\n            // config: config.stiff,\n            config: { mass: 1, tension: 100, friction: 40 },\n            onChange: ()=>{\n                    // logdebug({rangefactor: spring.value.range})\n                    // let rangefactor = (enabler === 0)?1:range.get()[0]\n                    let rangefactor = (enabler === 0)?1:1-range.get()[1]/(wheeling?700:300)\n                    moveZoom(gesturestartposition.current,rangefactor)\n                    world.current.navigator.range *= rangefactor\n                    applyLimits()\n\n                    world.current.redraw()\n\n            },\n            onRest: () => {\n                // logdebug({status: 'finsished: '+world.current.navigator.range})\n            }\n        })\n\n    }\n\n    const moveZoom = function (refposition, amount) {\n        if (!refposition || amount >= 1) return\n        let lookAtLocation = world.current.navigator.lookAtLocation;\n        let lookatAltitude = world.current.globe.elevationAtLocation(lookAtLocation.latitude, lookAtLocation.longitude)\n        let lookAtPosition = new WorldWind.Position(lookAtLocation.latitude, lookAtLocation.longitude, lookatAltitude)\n        let position\n        if(amount <1) {\n            position = WorldWind.Position.interpolateGreatCircle(\n                amount, \n                refposition,\n                lookAtPosition, \n                new WorldWind.Position(0, 0, 0)\n                )\n    \n        } \n        else { // may be better to do nothing...\n            return\n            let intermediatePosition = WorldWind.Position.interpolateGreatCircle(\n                1/amount, \n                refposition,\n                lookAtPosition, \n                new WorldWind.Location(0, 0)\n            )\n            let distanceRadians = WorldWind.Location.greatCircleDistance(lookAtPosition, intermediatePosition)\n            let greatCircleAzimuthDegrees = WorldWind.Location.greatCircleAzimuth(lookAtPosition, intermediatePosition)\n            let location =  WorldWind.Location.greatCircleLocation(lookAtPosition, greatCircleAzimuthDegrees ,\n                    distanceRadians, new WorldWind.Location(0, 0));\n            position = new WorldWind.Position(location.latitude, location.longitude, intermediatePosition.altitude)\n        }\n\n        lookAtLocation.latitude = position.latitude;\n        lookAtLocation.longitude = position.longitude;\n        lookAtLocation.altitude = position.altitude;\n    }\n\n\n    const locationAtPickPoint = (x, y) => {\n        var coordinates = world.current.canvasCoordinates(x, y)\n        var pickList = world.current.pickTerrain(coordinates);\n\n        for (var i = 0; i < pickList.objects.length; i++) {\n            var pickedObject = pickList.objects[i];\n            if (pickedObject.isTerrain) {\n                var pickedPosition = pickedObject.position;\n                if (pickedPosition) {\n                    return new WorldWind.Location(pickedPosition.latitude, pickedPosition.longitude);\n                }\n            }\n        }\n    };\n\n    \n    const positionAtPickPoint2 = (x, y) => {\n\n        // another way to do it (but no altitude):\n        let ray = world.current.rayThroughScreenPoint(world.current.canvasCoordinates(x, y))\n        let position = new WorldWind.Position(0,0,0)\n        let intersectpoint = [0,0,0]\n        if (world.current.globe.intersectsLine(ray, intersectpoint)) {\n            world.current.globe.computePositionFromPoint(intersectpoint[0], intersectpoint[1], intersectpoint[2], position)\n            return(position)\n        }\n        return null\n    }\n\n    const positionAtPickPoint = (x, y) => {\n\n        let coordinates = world.current.canvasCoordinates(x, y)\n        let pickList = world.current.pickTerrain(coordinates);\n\n        for (let i = 0; i < pickList.objects.length; i++) {\n            let pickedObject = pickList.objects[i];\n            if (pickedObject.isTerrain) {\n                let pickedPosition = pickedObject.position;\n                if (pickedPosition) {\n                    return new WorldWind.Position(pickedPosition.latitude, pickedPosition.longitude, pickedPosition.altitude);\n                }\n            }\n        }\n\n    };\n\n    const computeRotationVectorAndAngle = function (vec1, vec2, rotationVector) {\n        var angleRad = WorldWind.MeasurerUtils.angleBetweenVectors(vec1, vec2);\n        var angle = angleRad * WorldWind.Angle.RADIANS_TO_DEGREES;\n        rotationVector.copy(vec1);\n        rotationVector.cross(vec2);\n        rotationVector.normalize();\n        return angle;\n    };\n\n    const rotateShpere = function (rotationVector, angle, nextpoint, nextposition) {\n        if (!isFinite(angle) || !isFinite(rotationVector[0]) || !isFinite(rotationVector[1]) || !isFinite(rotationVector[2])) {\n            return false;\n        }\n\n        var wwd = world.current;\n        var navigator = wwd.navigator;\n        var viewMatrix = WorldWind.Matrix.fromIdentity();\n        var altitude = navigator.lookAtLocation.altitude;\n        var tilt = navigator.tilt;\n        var scratchRay = new WorldWind.Line(new WorldWind.Vec3(0, 0, 0), new WorldWind.Vec3(0, 0, 0));\n        \n        navigator.tilt = 0;\n        wwd.computeViewingTransform(null, viewMatrix);\n        viewMatrix.multiplyByRotation(rotationVector[0], rotationVector[1], rotationVector[2], angle);\n\n        viewMatrix.extractEyePoint(scratchRay.origin);\n        viewMatrix.extractForwardVector(scratchRay.direction);\n        if (!wwd.globe.intersectsLine(scratchRay, nextpoint)) {\n            navigator.tilt = tilt;\n            return false;\n        }\n\n        var params = viewMatrix.extractViewingParameters(nextpoint, navigator.roll, wwd.globe, {});\n        // if (Math.abs(navigator.heading) < 5 && Math.abs(navigator.lookAtLocation.latitude < 70) && Math.abs(nextposition.latitude) < 70) {\n        //     navigator.heading = Math.round(params.heading);\n        //     console.log('rounding')\n        // }\n        // else {\n        //     navigator.heading = params.heading;\n        // }\n\n        navigator.heading = params.heading;\n\n        navigator.lookAtLocation.copy(params.origin);\n        navigator.lookAtLocation.altitude = altitude;\n        navigator.tilt = tilt;\n\n        return true;\n    }\n\n\n    const applyLimits = () => {\n        let nav = world.current.navigator\n        nav.camera.applyLimits() // not sure if not done by default by www\n        nav.range = WorldWind.WWMath.clamp(\n            nav.range, \n            world.current.globe.elevationAtLocation(nav.lookAtLocation.latitude, nav.lookAtLocation.longitude) + EYE_ALT, \n            MAX_ALT \n        )\n        nav.tilt = WorldWind.WWMath.clamp(nav.tilt,0,60)\n        // logdebug({\n        //     range: nav.range, \n        //     lookAtlat: nav.lookAtLocation.latitude, \n        //     lookAtlon: nav.lookAtLocation.longitude, \n        //     lookAtalt: nav.lookAtLocation.altitude, \n        //     clookAtalt: world.current.globe.elevationAtLocation(nav.lookAtLocation.latitude, nav.lookAtLocation.longitude),\n        //     // initlat: gesturestartposition.current.latitude,\n        //     // initlon: gesturestartposition.current.longitude,\n        // })\n    \n    }\n\n    useEffect(() => {\n        // this prevents the browser from intercepting the right click\n        window.addEventListener(\"contextmenu\", e => e.preventDefault());\n    },[])\n\n\n    return (\n        <div>\n            <div className={'EarthController'} ref={controllerRef}></div>\n            {/* <div  className='Debug'>\n                {debugtext.current}\n            </div> */}\n            {/* <animated.div {...bind2()} style={{ x, y }}  className='Debug'>\n                {debugtext}\n            </animated.div> */}\n            {/* {debughtml} */}\n            {/* <LogPanel items={logitems}/> */}\n        </div>\n    )\n\n    \n})","import React, {useState, useRef, useEffect} from \"react\";\nimport {useSpring, animated} from 'react-spring'\nimport { useDrag } from 'react-use-gesture'\nimport \"./InfoPanel.css\"\n\n\n\n// import MissionSelector from \"./missionselector\";\n\n\n\n\n\nfunction InfoPanel(props) {\n\n    const [{ x, y }, api] = useSpring(() => ({ x: 0, y: 0 }))\n    const bind2 = useDrag(({ offset: [x, y] }) => api.start({ x, y }))\n\n\n    return   (\n\n        <animated.div {...bind2()} style={{ x, y }}  className='Infopanel'>\n        {props.children}\n    </animated.div>\n\n\n    )\n    \n}\n\nexport default InfoPanel\n","import React, {  useGlobal } from 'reactn';\nimport './LookAtWidget.css' \n// npm install --save-dev @iconify/react @iconify-icons/ic\nimport { Icon, InlineIcon } from '@iconify/react';\n// import baselineFlare from '@iconify-icons/ic/baseline-flare';\nimport focusIcon from '@iconify-icons/et/focus';\n\n\n\n\n\nfunction LookAtWidget({active}) {\n\n    return (\n        <div className='LookAtWidget' style={{display:active?'flex':'none'}}>\n            <div className='Mire'>\n                <Icon icon={focusIcon} width='30px' height='40px'/>\n            </div>\n            \n        </div>\n     )\n}\n\nexport default LookAtWidget;\n","import React, {  useGlobal, useRef, useEffect } from 'reactn'\nimport { Icon, InlineIcon } from '@iconify/react';\n\nimport outlineRemoveRedEye from '@iconify-icons/ic/outline-remove-red-eye';\n\nimport './ViewProductControl.css' \n\nfunction ViewProductControl({active}) {\n    const [ selectedProduct, setselectedProduct] = useGlobal('selectedProduct')\n    const [ closestItem, setclosestItem] = useGlobal('closestItem')\n    const [ resetStartDateTrigger, setresetStartDateTrigger] = useGlobal('resetStartDateTrigger')\n    \n    const [ moveToClosestItemTrigger, setmoveToClosestItemTrigger ] = useGlobal('moveToClosestItemTrigger')\n    // const closestitem = useRef(closestItem)\n\n    const handleClick = (event) => {\n        event.stopPropagation()\n        let selection = []\n        if(closestItem) {\n            console.log('selected a product')\n            selection[0] = closestItem\n            setselectedProduct(selection[0])\n            setmoveToClosestItemTrigger(Math.random())\n            setresetStartDateTrigger(Math.random())\n        }\n    }\n\n    // useEffect(() => {\n    //     closestitem.current=closestItem\n    //  }, [closestItem]);\n \n\n    return (\n        <div className='ViewProductControl' style={{display:closestItem !== null?'flex':'none'}}>\n            <Icon icon={outlineRemoveRedEye} width='40px' onClick={handleClick}/>            \n        </div>\n     )\n}\n\nexport default ViewProductControl\n","import React, {useEffect, useState, useGlobal, useRef, useMemo } from 'reactn';\nimport './Earth.css'\nimport { useEww } from \"./useEww\"\nimport { useHotkeys } from 'react-hotkeys-hook'\nimport { useDebounce } from '../../hooks/useDebounce';\nimport {FluidWorldWindowController} from './FluidWorldWindowController'\nimport InfoPanel from \"../infopanel\"\nimport LookAtWidget from './LookAtWidget'\nimport ViewProductControl from './ViewProductControl'\nimport { useKey } from 'rooks'\n\nconst Earth = ({ id, alt }) => {\n\n\n    const [mapSettings, setMapSettings] = useGlobal('mapSettings')\n    const [ position, setPosition] = useGlobal('position')\n    const [ altitude, setAltitude] = useGlobal('altitude')\n    const [ viewDate, setViewDate] = useGlobal('viewDate')\n    const [ geojson, setgeojson] = useGlobal('geojson')\n    const [ clearResultsTrigger, ] = useGlobal('clearResultsTrigger')\n    const [ addQuicklookWMSTrigger, setaddQuicklookWMSTrigger] = useGlobal('addQuicklookWMSTrigger')\n    const [ searchPoint, setSearchPoint] = useGlobal('searchPoint')\n    const [ closestItem, setclosestItem] = useGlobal('closestItem')\n    const [ pointSearchMaxAltitude, ] = useGlobal('pointSearchMaxAltitude')\n    const [ selectedProduct, setselectedProduct] = useGlobal('selectedProduct')\n    const [ moveToClosestItemTrigger, setmoveToClosestItemTrigger ] = useGlobal('moveToClosestItemTrigger')\n    const [ resetStartDateTrigger, setresetStartDateTrigger] = useGlobal('resetStartDateTrigger')\n    \n\n    const [ goToDate, setgoToDate ] = useGlobal('goToDate')\n    // const [atm, setAtm] = useGlobal('mapSettings.atmosphere')\n\n\n    const [productOn, setproductOn] = useState(true)\n    const [lookwidget, setlookwidget] = useState(false)\n\n    const debouncedclosestItem = useDebounce(closestItem, 200)\n\n    const handleSimpleClick = (e) => {\n        let selection = getRenderables(e.pageX,e.pageY)\n        if(selectedProduct === selection[0]) {\n            setaddQuicklookWMSTrigger(Math.random())\n        }\n        setselectedProduct( selection[0] )\n    }\n\n    const {\n        eww,\n        ewwstate,\n        initMap,\n        moveTo,\n        addGeojson,\n        removeGeojson,\n        toggleGeojson,\n        toggleQuicklooks,\n        addQuicklook,\n        removeQuicklooks,\n        getRenderables,\n        addQuicklookWMS,\n        removeQuicklookWMS,\n        toggleQuicklookWMS,\n        toggleProjection,\n        toggleAtmosphere,\n        toggleStarfield,\n        toggleBg,\n        toggleNames,\n        toggleOv,\n        toggleModel,\n        setTime,\n        toggleDem,\n        northUp\n    } = useEww({\n        id: id,\n    })\n\n    useKey(['p'],() => setMapSettings({...mapSettings, projection:mapSettings.projection+1})) \n    useKey(['c'],removeGeojson)\n    useKey(['u'],northUp)\n    useKey(['w'],()=>toggleQuicklookWMS())\n    useKey(['b'],() => setMapSettings({...mapSettings, background:mapSettings.background+1})) \n    useKey(['m'],() => setMapSettings({...mapSettings, satellites:!mapSettings.satellites}))\n    useKey(['d'],() => setMapSettings({...mapSettings, dem:!mapSettings.dem}))\n    useKey(['o'],() => setMapSettings({...mapSettings, overlay:mapSettings.overlay+1}))\n    // useHotkeys(\"a\",() => setMapSettings((mapSettings)=>({...mapSettings, atmosphere:!mapSettings.atmosphere})))  \n    useKey(['a'],() =>  setMapSettings({...mapSettings, atmosphere:!mapSettings.atmosphere}))\n    useKey(['s'],() => setMapSettings({...mapSettings, starfield:!mapSettings.starfield}))\n    useKey(['n'],() => setMapSettings({...mapSettings, names:!mapSettings.names}))\n\n    // useHotkeys(\"a\",(mapSettings) => setMapSettings({...mapSettings, atmosphere:!mapSettings.atmosphere}))\n\n    // const toggleAtmosphere = () => setMapSettings((mapSettings)=>({...mapSettings, atmosphere:!mapSettings.atmosphere}))\n    // const toggleStarfield = () => setMapSettings((mapSettings)=>({...mapSettings, starfield:!mapSettings.starfield}))\n    // const toggleNames = () => setMapSettings((mapSettings)=>({...mapSettings, names:!mapSettings.names}))\n    // const toggleBg = () => setMapSettings((mapSettings)=>({...mapSettings, background:Math.random()}))\n\n    // const [QLimage,setQLimage] = useState(ewwstate.image)\n\n    useEffect(() => {\n        setAltitude(ewwstate.altitude)\n        if(ewwstate.altitude > 3000000) setproductOn(true)\n    },[ewwstate.altitude])\n\n    useEffect(() => {\n        setSearchPoint(ewwstate.viewpoint)\n    },[ewwstate.viewpoint])\n\n    // useEffect(() => {\n    //     setQLimage(ewwstate.image)\n    //     // qlzone.current.src = ewwstate.image\n    // },[ewwstate.image])\n    useEffect(() => {\n        setclosestItem(ewwstate.closestRenderable)\n    },[ewwstate.closestRenderable])\n\n\n\n    useEffect(() => {\n        setTime(viewDate.getTime())\n        setproductOn(true)\n    },[viewDate])\n\n    useEffect(() => {\n        toggleGeojson(productOn)\n        toggleQuicklooks(productOn)\n        toggleQuicklookWMS(!productOn)\n    },[productOn])\n\n    useEffect(() => {\n        // console.log(geojson)\n        if(geojson !== null) {\n            // removeGeojson()\n            addGeojson(geojson,viewDate.getTime())\n        } \n    },[geojson])\n\n    useEffect(() => {\n        removeGeojson()\n        removeQuicklooks()\n        removeQuicklookWMS()\n        setselectedProduct(null)\n        setclosestItem(null)\n        setgoToDate(null)\n  \n    }, [clearResultsTrigger]);\n\n    useEffect(() => {\n        toggleAtmosphere(mapSettings.atmosphere)\n    }, [mapSettings.atmosphere]);\n\n    useEffect(() => {\n        toggleModel(mapSettings.satellites)\n    }, [mapSettings.satellites]);\n\n    useEffect(() => {\n        toggleStarfield(mapSettings.starfield)\n    }, [mapSettings.starfield]);\n\n    useEffect(() => {\n        toggleNames(mapSettings.names)\n    }, [mapSettings.names]);\n\n    useEffect(() => {\n        toggleProjection(mapSettings.projection)\n    }, [mapSettings.projection]);\n\n    useEffect(() => {\n        console.log(mapSettings.background)\n        toggleBg(mapSettings.background)\n    }, [mapSettings.background]);\n\n    useEffect(() => {\n        console.log(mapSettings.overlay)\n        toggleOv(mapSettings.overlay)\n    }, [mapSettings.overlay]);\n\n    useEffect(() => {\n        toggleDem(mapSettings.dem)\n    }, [mapSettings.dem]);\n\n    useEffect(() => {\n        console.log('edclosestItem')\n        if(mapSettings.quicklooks)\n            addQuicklook(debouncedclosestItem)\n    }, [debouncedclosestItem]);\n\n    useEffect(() => {\n        setlookwidget(()=>(altitude<pointSearchMaxAltitude))\n     }, [pointSearchMaxAltitude,altitude]);\n \n     useEffect(() => {\n        console.log(selectedProduct)\n        if(selectedProduct !== null) {\n            let p = selectedProduct\n            let lat = selectedProduct._sector.minLatitude\n            let lon = selectedProduct._sector.minLongitude\n            console.log('selected product lat/lon: '+lat+' / '+lon)\n            setgoToDate(selectedProduct.timeRange[1])\n            setresetStartDateTrigger(Math.random())\n            // setTime(selectedProduct[0].timeRange[1])\n            // setViewDate(selectedProduct[0].timeRange[1])\n        }\n    }, [selectedProduct]);\n\n    useEffect(() => {\n        if(closestItem !== null) {\n            let lat = closestItem._sector.minLatitude\n            let lon = closestItem._sector.minLongitude\n            moveTo(lat,lon)\n            setgoToDate(closestItem.timeRange[1])\n            setresetStartDateTrigger(Math.random())\n        }\n    }, [moveToClosestItemTrigger]);\n \n    useEffect(() => {\n        if(addQuicklookWMSTrigger !== null) {\n            setproductOn(false)\n            addQuicklookWMS(selectedProduct)\n        }\n    }, [addQuicklookWMSTrigger]);\n \n \n    \n    useEffect(() => {\n        console.log(\"world created\"+' / '+position.clat+' / '+position.clon+' / '+altitude)\n        setTimeout(() => {\n            initMap({\n                clat: position.clat,\n                clon: position.clon,\n                alt: altitude,\n                starfield: mapSettings.starfield,\n                atmosphere: mapSettings.atmosphere,\n                background: mapSettings.background,\n                overlay: mapSettings.overlay,\n                satellites: mapSettings.satellites,\n                names: mapSettings.names,\n                projection: mapSettings.projection,\n                dem: mapSettings.dem\n            })\n    \n            moveTo(position.clat, position.clon, altitude) \n        }, 1000)\n\n    }, []);\n    \n\n\n    let globeStyle = {\n        background: 'black',\n        position: \"fixed\",\n        left: 0,\n        top: 10,\n        width: '100%',\n        height: '100%'\n    };\n\n    let globeControllerStyle = {\n        background: 'red',\n        position: \"fixed\",\n        left: '100px',\n        bottom:'100px',\n        width: '100%',\n        height: '200px',\n    };\n\n        \n    return (\n        <div>\n            {useMemo(\n                () => { return(<canvas className={'Earth'} id={id} />)},\n                [id]\n            )}\n            {/* <canvas id={id} style={globeStyle} /> */}\n            <FluidWorldWindowController world={eww} onSimpleClick={handleSimpleClick}/>\n            <LookAtWidget active={lookwidget}/>\n            <ViewProductControl active='true'/>\n            {/* <InfoPanel top= '100px' left= '5px'>\n                <div className='Quiklook'><img src={QLimage?QLimage.src:''}  alt='' width='150px'/></div>\n            </InfoPanel> */}\n        </div>\n    );\n}\n\nexport default Earth\n","import { useState, useEffect } from \"react\";\nfunction useDebounce(value, delay) {\n  // State and setters for debounced value\n  const [debouncedValue, setDebouncedValue] = useState(value);\n  useEffect(\n    () => {\n      // Update debounced value after delay\n      const handler = setTimeout(() => {\n        setDebouncedValue(value);\n      }, delay);\n      // Cancel the timeout if value changes (also on delay change or unmount)\n      // This is how we prevent debounced value from updating if value is changed ...\n      // .. within the delay period. Timeout gets cleared and restarted.\n      return () => {\n        clearTimeout(handler);\n      };\n    },\n    [value, delay] // Only re-call effect if value or delay changes\n  );\n  return debouncedValue;\n}\nexport {useDebounce}  ","import React, {useState, useEffect} from \"react\";\nimport {useSpring, animated} from 'react-spring'\nimport { useGesture } from 'react-use-gesture'\nimport \"./controlpanel.css\"\n// npm install --save-dev @iconify/react @iconify-icons/ic\nimport { Icon } from '@iconify/react';\n// import baselineExplore from '@iconify-icons/ic/baseline-explore';\nimport baselinePalette from '@iconify-icons/ic/baseline-palette';\n\n\n\n// import MissionSelector from \"./missionselector\";\n\n\n\n\n\nfunction ControlPanel(props) {\n\n    const [open, setOpen] = useState(false)\n    const [mask, setMask] = useState(false)\n    const panelcontrol = React.useRef(null)\n\n    const [{ mr },set] = useSpring(() =>({ mr:  -300 }))\n    const bind = useGesture( {\n        onDragStart: ()=>setMask(true),\n        onDrag: ({ down, delta, vxvy, movement }) => {\n            // if(vxvy[1]>1 ) {\n            //     openPanel()\n            //     // set.start({\n            //     //     mr: -300,\n            //     //     immediate: false,\n            //     //     onRest: ()=>{setTimeout(()=>setOpen( true),2000)} \n            //     // })\n                \n            // } else {\n                set.start({\n                    mr: down?-movement[1]:(movement[1]>100)?-300:open?-300:0,\n                    immediate: false,\n                    onChange: ()=>{ \n                        setOpen( (mr.get() === 0)?true:false)\n                    },\n                    onRest: ()=> {\n                        if(!down) {\n                            setOpen( (mr.get() === 0)?true:false)\n                        }\n                    }\n                })\n            // }\n        },\n        onDragEnd: () => {\n            setTimeout( ()=>setMask(false), 600)\n        },\n    },\n    {\n        domTarget: panelcontrol,\n        drag: {useTouch: true},\n        pinch: {useTouch: true},\n    })\n\n\n    return   (\n\n        <animated.div  style={{ bottom: mr, left:0 }} className='ControlPanel'>\n            <div ref={panelcontrol} className='PanelControl shadow' >\n                {/* <img id='logo'className='Logo' src='./images/EOi_logo.png' alt='' onClick={()=>!open?set({mr:-300}):set({mr:0})} /> */}\n                {/* <div className='PanelControl' alt='' onClick={()=>!open?set({mr:-300}):set({mr:0})}></div> */}\n                <Icon icon={baselinePalette} width='100%'/>\n            </div>\n            <div className='ControlPanelMask' style={{display: !mask?'none':'block'}}/>\n            <div className='ControlPanelBlend'>\n                {props.children}\n                </div>\n        \n        </animated.div>\n\n\n    )\n    \n}\n\nexport default ControlPanel\n","import React, { useState, useEffect } from \"react\";\n\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport './MissionSelector.css'\n\n\n// should use a prop\n\nfunction MissionSelector({initialmission, onMissionChange}) {\n\n\n    const [mission, setMission] = useState(initialmission)\n    const [collection, setcollection] = useState(initialmission)\n    \n    useHotkeys(\"1\",()=>{setMission('S1')}) \n    useHotkeys(\"2\",()=>{setMission('S2')}) \n    useHotkeys(\"3\",()=>{setMission('S3/SLSTR')}) \n    useHotkeys(\"5\",()=>{setMission('S5P')}) \n    useHotkeys(\"6\",()=>{setMission('ENVISAT')})\n\n    useEffect(() => {\n        onMissionChange(mission)\n    }, [mission]);\n    \n    return (\n        <div className='MissionSelectorContainer'>\n            <div className='MissionSelector'>\n                <div className={(mission == 'S1')?'CircleButtonSelected':'CircleButton'}><img className='MissionIcon' src='./images/s1_black.png' alt='' onClick={() => setMission('S1')} /></div>\n                <div className={(mission == 'S1A')?'CircleButtonSelected':'CircleButton'}><img className='MissionIcon' src='./images/s1_black.png' alt='' onClick={() => setMission('S1A')} /></div>\n                <div className={(mission == 'S1B')?'CircleButtonSelected':'CircleButton'}><img className='MissionIcon' src='./images/s1_black.png' alt='' onClick={() => setMission('S1B')} /></div>\n                <div className={(mission == 'S2')?'CircleButtonSelected':'CircleButton'}><img className='MissionIcon' src='./images/s2_black.png' alt='' onClick={() => setMission('S2')} /></div>\n                <div className={(mission == 'S2A')?'CircleButtonSelected':'CircleButton'}><img className='MissionIcon' src='./images/s2_black.png' alt='' onClick={() => setMission('S2A')} /></div>\n                <div className={(mission == 'S2B')?'CircleButtonSelected':'CircleButton'}><img className='MissionIcon' src='./images/s2_black.png' alt='' onClick={() => setMission('S2B')} /></div>\n                <div className={(mission == 'S3')?'CircleButtonSelected':'CircleButton'}><img className='MissionIcon' src='./images/s3_black.png' alt='' onClick={() => setMission('S3')} /></div>\n                <div className={(mission == 'S3/SLSTR')?'CircleButtonSelected':'CircleButton'}><img className='MissionIcon' src='./images/s3_black.png' alt='' onClick={() => setMission('S3/SLSTR')} /></div>\n                <div className={(mission == 'S3A/OLCI/LFR')?'CircleButtonSelected':'CircleButton'}><img className='MissionIcon' src='./images/s3_black.png' alt='' onClick={() => setMission('S3A/OLCI/LFR')} /></div>\n                <div className={(mission == 'S3B/OLCI/LFR')?'CircleButtonSelected':'CircleButton'}><img className='MissionIcon' src='./images/s3_black.png' alt='' onClick={() => setMission('S3B/OLCI/LFR')} /></div>\n                <div className={(mission == 'S3/SRAL')?'CircleButtonSelected':'CircleButton'}><img className='MissionIcon' src='./images/s3_black.png' alt='' onClick={() => setMission('S3/SRAL')} /></div>\n                <div className={(mission == 'S5P')?'CircleButtonSelected':'CircleButton'}><img className='MissionIcon' src='./images/s5p_black.png' alt='' onClick={() => setMission('S5P')} /></div>\n                <div className={(mission == 'ENVISAT')?'CircleButtonSelected':'CircleButton'}><img className='MissionIcon' src='./images/s5p_black.png' alt='' onClick={() => setMission('ENVISAT')} /></div>\n            </div>   \n        </div>\n    )\n}\n\nexport default MissionSelector;\n","import React, {  useGlobal } from 'reactn';\n\nimport MissionSelector from \"../components/missionselector\"\n\nfunction MissionSelectorContainer() {\n\n    const [mission, setMission] = useGlobal('mission')\n\n    return (\n        <MissionSelector initialmission={mission} onMissionChange={setMission}></MissionSelector> \n     )\n}\n\nexport default MissionSelectorContainer;\n","import React, { useState, useEffect } from \"react\";\n\nimport './MapSelector.css'\n\n\n// should use a prop\n\nfunction MapSelector({mapSettings, onMapSettingsChange}) {\n\n\n    const [mapSet, setMapSet] = useState(mapSettings)\n\n    const toggleAtmosphere = () => setMapSet((mapSet)=>({...mapSet, atmosphere:!mapSet.atmosphere}))\n    const toggleStarfield = () => setMapSet((mapSet)=>({...mapSet, starfield:!mapSet.starfield}))\n    const toggleNames = () => setMapSet((mapSet)=>({...mapSet, names:!mapSet.names}))\n    const toggleBg = () => setMapSet((mapSet)=>({...mapSet, background:mapSet.background+1}))\n\n\n    useEffect(() => {\n        onMapSettingsChange(mapSet)\n    }, [mapSet]);\n\n    useEffect(() => {\n        setMapSet(mapSettings)\n    }, [mapSettings]);\n\n\n    \n    //console.log('mission rendering')\n    return (\n        <div className='MapSelectorContainer'>\n            <div className='MapSelector'>\n                <div className={(mapSettings.atmosphere)?'CircleButtonSelected':'CircleButton'}><img className='MapIcon' draggable=\"false\" src='./images/atmosphere.png' alt='' onClick={toggleAtmosphere} /></div>\n                <div className={(mapSettings.starfield)?'CircleButtonSelected':'CircleButton'}><img className='MapIcon' draggable=\"false\" src='./images/starfield.png' alt='' onClick={toggleStarfield} /></div>\n                <div className={(mapSettings.names)?'CircleButtonSelected':'CircleButton'}><img className='MapIcon' draggable=\"false\" src='./images/names.png' alt='' onClick={toggleNames} /></div>\n                <div className='CircleButton'><img className='MapIcon' draggable=\"false\" src='./images/names.png' alt='' onClick={toggleBg} /></div>\n            </div>\n        </div>\n    )\n}\n\nexport default MapSelector;\n","import React, {  useGlobal } from 'reactn';\n\nimport MapSelector from \"../components/mapselector\"\n\nfunction MapSelectorContainer() {\n\n    // const [starfield, setStarfield] = useGlobal('starfield')\n    // const [atmosphere, setAtmosphere] = useGlobal('atmosphere')\n    // const [names, setNames] = useGlobal('names')\n\n    const [mapSettings, setMapSettings] = useGlobal('mapSettings')\n\n    return (\n        <MapSelector mapSettings={mapSettings} onMapSettingsChange={setMapSettings}></MapSelector> \n     )\n}\n\nexport default MapSelectorContainer;\n","\nimport React, { useEffect } from \"react\";\nimport { useGlobal } from 'reactn';\n\n// import { HuePicker } from 'react-color';\nimport './ColorSelector.css'\nimport { HexColorPicker } from \"react-colorful\";\n// import \"react-colorful/dist/index.css\";\n\n\nfunction ColorSelectorContainer() {\n\n\n    const [ appcolor, setAppcolor ] = useGlobal('appColor');\n\n    useEffect(() => {\n        document.documentElement.style.setProperty('--color', appcolor);\n        document.documentElement.style.setProperty('--colort', appcolor+'66');\n    }, [appcolor]);\n    \n    const handleChangeComplete = (color) => {\n        if(color === null) return\n        document.documentElement.style.setProperty('--color', color);\n         \n        document.documentElement.style.setProperty('--colort', color+'66');\n        setAppcolor(color );\n        console.log(appcolor)\n\n      };\n    \n    //console.log('mission rendering')\n    return (\n        <div className='ColorSelector'>\n            <HexColorPicker color={appcolor} onChange={handleChangeComplete} style={{height:'150px', width:'140px'}}/>\n        </div>\n    )\n    // <AlphaPicker />  \n}\n\nexport default ColorSelectorContainer;\n\n\n\n","\nimport React, { useEffect } from \"react\";\nimport { useGlobal } from 'reactn';\n\n// import { HuePicker } from 'react-color';\nimport './DemSelector.css'\nimport Switch from \"react-switch\";\n// import \"react-colorful/dist/index.css\";\n\n\nfunction DemSelectorContainer() {\n\n\n    const [ mapset, setmapset ] = useGlobal('mapSettings');\n\n    \n    const handleDemChange = (checked) => {\n        setmapset({...mapset, dem:checked})\n      };\n      const handleSatChange = (checked) => {\n        setmapset({...mapset, satellites:checked})\n      };\n      const handleStarfieldChange = (checked) => {\n        setmapset({...mapset, starfield:checked})\n      };\n      const handleAtmosphereChange = (checked) => {\n        setmapset({...mapset, atmosphere:checked})\n      };\n      const handleQuicklooksChange = (checked) => {\n        setmapset({...mapset, quicklooks:checked})\n      };\n    \n    //console.log('mission rendering')\n    return (\n        <div className='DemSelectorContainer'>\n          <div className='verticalContainer DemSelector' >\n            <div className='Selector horizontalContainer'>\n                <Switch id='satellites' onChange={handleSatChange} checked={mapset.satellites} />\n                <span className='Label'>Satellites</span>\n            </div>\n            <div className='Selector horizontalContainer'>\n              <Switch id='dem' onChange={handleDemChange} checked={mapset.dem} />\n                <span className='Label'>Copernicus DEM</span>\n            </div>\n            <div className='Selector horizontalContainer'>\n              <Switch id='starfield' onChange={handleStarfieldChange} checked={mapset.starfield} />\n                <span className='Label'>Stars and Planets</span>\n            </div>\n            <div className='Selector horizontalContainer'>\n              <Switch id='atmosphere' onChange={handleAtmosphereChange} checked={mapset.atmosphere} />\n                <span className='Label'>Sun and Atmosphere</span>\n            </div>\n            <div className='Selector horizontalContainer'>\n              <Switch id='quicklooks' onChange={handleQuicklooksChange} checked={mapset.quicklooks} />\n                <span className='Label'>Quicklooks</span>\n            </div>\n            <div height='200px' flexgrow='2'>&nbsp;</div>\n          </div>\n        </div>\n    )\n    // <AlphaPicker />  \n}\n\nexport default DemSelectorContainer;\n\n\n\n","import React, {  useGlobal } from 'reactn';\nimport './GenericLabel.css' \n\nfunction AltitudeLabelContainer() {\n\n    const [altitude, ] = useGlobal('altitude')\n\n    const formatLat = (lat) => {\n        return (altitude >= 10000)?Math.floor(altitude / 1000)+ ' Km' : Math.floor(altitude)+ ' m'\n    }\n\n    return (\n        <div className='GenericLabel'>{formatLat({altitude})}</div>\n     )\n}\n\nexport default AltitudeLabelContainer;\n","import React, {  useGlobal } from 'reactn';\nimport './GenericLabel.css' \n\nfunction SearchLabelContainer() {\n\n    const [resultDesc, ] = useGlobal('resultDesc')\n\n\n    return (\n        <div className='GenericLabel'>{resultDesc.totalLoaded === 0?'':resultDesc.totalLoaded+'/'+resultDesc.totalResults}</div>\n     )\n}\n\nexport default SearchLabelContainer;\n","import React from 'react';\nimport dateFormat from \"dateformat\"\nimport './DateLabelCard.css';\n\nfunction DateLabel({date, highlight, animated}) {\n\n    return (\n        <div className='LabelContainer' >\n            <span className={highlight ==='year'?'Highlighted':''}>{date.getUTCFullYear()}</span>-\n            <span className={highlight ==='month'?'Highlighted':''}>{dateFormat(date,'UTC:mmm').toUpperCase()}</span>-\n            <span className={highlight ==='day'?'Highlighted':''}>{dateFormat(date,'UTC:dd')}</span><span>&nbsp;{animated?'🥵':'🙂'}&nbsp;</span>\n            <span className={highlight ==='hour'?'Highlighted':''}>{dateFormat(date,'UTC:HH')}</span>:\n            <span className={highlight ==='minute'?'Highlighted':''}>{dateFormat(date,'UTC:MM')}</span>:\n            <span className={highlight ==='second'?'Highlighted':''}>{dateFormat(date,'UTC:ss')}</span>  \n        </div>\n    )\n}\nexport default DateLabel\n","\n    import { useState, useRef } from \"react\"\n    \n    export default function useHandleDoubleTap(tapCallback,doubleTapCallback) {\n\n        const [lastTap, setLasttap] = useState()\n        const clicktimeout = useRef()\n    \n        const handleTap = (event) => {\n            // console.log(event)\n            event.stopPropagation()\n            const now = Date.now();\n            if (lastTap && (now - lastTap) < 300) {\n                clearTimeout(clicktimeout.current)   \n                doubleTapCallback();\n            } else {\n                setLasttap(now)    \n                clicktimeout.current = setTimeout(() => {\n                    tapCallback()\n                }, 300);\n            }\n\n        }\n\n        return {handleTap}\n\n\n    }\n    \n","import React, {useEffect, useState, useRef} from 'react';\nimport { useClock } from \"./useClock\"\nimport { useHotkeys } from 'react-hotkeys-hook'\nimport { Icon } from '@iconify/react'\n\n// npm install --save-dev @iconify/react @iconify-icons/ic\nimport roundFastForward from '@iconify-icons/ic/round-fast-forward';\nimport roundFastRewind from '@iconify-icons/ic/round-fast-rewind';\n\nimport roundPlayArrow from '@iconify-icons/ic/round-play-arrow';\n\nimport useHandleDoubleTap from '../../../../hooks/useHandleDoubleTap'\n\n\n\n\nimport './DateController.css';\n\nfunction DateController({startdate, onDateChange, onStateChange, animated}) {\n\n    // useClock must be redone to support real time increments\n    const {\n        date,\n        speed,\n        togglePause,\n        start,\n        stop,\n        reset,\n        increaseSpeed,\n        decreaseSpeed,\n        forceDate\n    } = useClock({\n        initdate: startdate\n    })\n\n    const [playing, setplaying ] = useState(animated) \n\n    useHotkeys(\"t\",()=>{setplaying((state)=>!state) })\n    useHotkeys(\"r\",()=>{reset() })\n    useHotkeys(\".\",()=>{increaseSpeed() })\n    useHotkeys(\",\",()=>{decreaseSpeed() })\n\n    \n    useEffect(() => {\n        onStateChange(playing)\n        if(playing === true) {\n            start()\n         } else stop()\n    },[playing]);\n\n    // useEffect(() => {\n    //     console.log('weird')\n    // },[togglePause]);\n\n    useEffect(() => {\n        // console.log(\"date from useclock :\"+date)\n        onDateChange(date)\n        //forceDate(date)\n        //setAppdate({appdate: new Date(date)})\n    },[date, onDateChange]);\n\n    // useEffect(() => {\n    //     console.log(\" force date: \"+startdate)\n    //     // forceDate(startdate)\n    //     //forceDate(date)\n    //     //setAppdate({appdate: new Date(date)})\n    // },[startdate]);\n\n    const {handleTap} = useHandleDoubleTap(()=>{setplaying((state)=>!state)}, reset)\n\n//     <div className='buttoncontainer'>\n//     <Icon icon={roundFastRewind} onClick={decreaseSpeed} className='smallcontrolbutton shadow' style={{display:playing?'block':'none'}}/>\n// </div>\n// <div className='buttoncontainer'>\n//     <Icon icon={roundPlayArrow} onClick={handleTap} className='controlbutton shadow'/>\n// </div>\n// <div className='buttoncontainer'>\n//     <Icon icon={roundFastForward} onClick={increaseSpeed} className='smallcontrolbutton shadow' style={{display:playing?'block':'none'}}/>\n// </div>\n\n\n    return (\n        <div className='DateController ' >\n                <Icon icon={roundFastRewind} onClick={decreaseSpeed} className='smallcontrolbutton shadow' style={{display:playing?'block':'none'}}/>\n                <div className={speed>0?'':'flipped'}>\n                    <Icon icon={roundPlayArrow} onClick={handleTap} className='controlbutton shadow'/>\n                </div>\n                <span className='Speed' style={{display:playing?'block':'none'}}>x{Math.abs(speed)}</span>\n                <Icon icon={roundFastForward} onClick={increaseSpeed} className='smallcontrolbutton shadow' style={{display:playing?'block':'none'}}/>\n        </div>\n    )\n}\nexport default DateController\n\n\n","import { useState, useEffect, useRef } from \"react\";\n\n\nexport function useClock({  initdate }) {\n    // console.log('useClock renders')\n    //const { autoStart, duration } = settings || {};\n  \n    // let initDate = startdate\n    const [date, setDate] = useState(initdate)\n    const [speed, setSpeed] = useState(1)\n    const [playing, setplaying] = useState(false)\n    // const [stepstate, setStepstate] = useState(1000*60*60)\n    // const [refreshrate, setrefreshrate] = useState(200)\n    // const playing = useRef()\n    const step = useRef() \n    const refreshrate = useRef() \n    refreshrate.current = 200\n    // step.current = refreshrate.current\n    \n    const ldate = useRef()\n\n      // Control functions\n    const intervalRef = useRef()\n    const timeoutRef = useRef()\n    \n\n    function increaseSpeed() {\n        // stop()\n        step.current = (step.current > 0)? step.current *= 2:step.current /= 2\n        if(Math.abs(step.current) < refreshrate.current) step.current = refreshrate.current\n        console.log('step: '+step.current)\n        setSpeed(step.current/200)\n        // setStepstate((st)=>st*2)\n        // start()\n    }\n    function decreaseSpeed() {\n        step.current = (step.current > 0)? step.current /= 2:step.current *= 2\n        if(Math.abs(step.current) < refreshrate.current) step.current = -1 * refreshrate.current\n        console.log('step: '+step.current)\n        setSpeed(step.current/200)\n        // setStepstate((st)=>st/2)\n    }\n\n    function togglePause() {\n        if (playing) {\n            stop()\n        } else {\n            start()\n        }\n    }\n    \n    function start() {\n        console.log('start clock')\n        if(!step.current) step.current = refreshrate.current\n        if (!playing) {\n            intervalRef.current = setInterval( ()=>{\n                ldate.current += step.current\n                setDate(new Date(ldate.current))\n            },refreshrate.current)\n        }\n        setplaying(true)\n    }\n    \n    function stop() {\n        console.log('stop clock')\n        if(timeoutRef.current) clearTimeout(timeoutRef.current)\n        if (intervalRef.current) clearInterval(intervalRef.current)\n        setplaying(false)\n    }\n    \n\n    function reset() {\n        ldate.current = new Date().getTime()\n        setDate(new Date(ldate.current))\n\n    }\n\n     \n    function forceDate(newdate) {\n        // console.log('forcedate useclock: '+newdate.toJSON())\n        ldate.current = newdate.getTime()\n        setDate(new Date(ldate.current))\n    }\n\n    useEffect(() => {\n        // console.log('init start useclock '+initdate.toJSON())\n        ldate.current = initdate.getTime()\n        setDate(new Date(ldate.current))\n    }, [initdate])\n\n\n\n  \n  return { date, speed, playing, togglePause, start, stop, reset, increaseSpeed, decreaseSpeed, forceDate };\n}\n","import React, {useState, useEffect,useLayoutEffect, useRef} from 'react';\nimport './DateSelector.css';\n\nfunction DateSelectorScale({date, zoomfactor, resulttics}) {\n\n    const scale = useRef(0)\n    const canvas = useRef(null)\n    const [timescale, setTimescale] = useState('')   \n    // const [resultepochs, ] = useState(resulttics)   \n    \n    // saves the current zoom and date to handle the widow resize\n    const izoom = useRef(zoomfactor)    \n    const idate = useRef(date)    \n\n\n        \n    const scaleText = (_start, _zoom, _resulttics) => {\n        // console.log('_start: '+_start.toJSON()+'  zoom: '+_zoom)\n        // if(!scale.current) return\n\n        let ctx = canvas.current.getContext(\"2d\");\n        ctx.font = \"14px Arial\"\n        ctx.shadowColor = \"rgba(0,0,0,0.8\"\n        ctx.shadowOffsetX = 1\n        ctx.shadowOffsetY = 1\n        ctx.shadowBlur = 2\n        ctx.fillStyle = \"red\";\n        ctx.clearRect(0, 0, window.innerWidth, window.innerHeight)\n\n            \n        const monthcode = ['JAN','FEB','MAR','APR','MAY','JUN','JUL','AUG','SEP','OCT','NOV','DEC']\n        const YEAR_LEVEL = 1000*60*60*24*30*3\n        const MONTH4_LEVEL = 1000*60*60*24*4\n        const MONTH_LEVEL = 1000*60*60*24*2\n        const DAY5_LEVEL = 1000*60*60*8\n        const DAY_LEVEL = 1000*60*70\n        const DAY_HOUR_LEVEL = 1000*60*30\n        const HOUR6_LEVEL = 1000*60*20\n        const HOUR3_LEVEL = 1000*60*7\n        const HOUR_LEVEL = 1000*60*3\n        const MIN20_LEVEL = 1000*60\n        const MIN10_LEVEL = 1000*30\n        const MIN2_LEVEL = 1000*5\n        const MIN_LEVEL = 1000*3\n\n        function pad(number, length) {  \n            var str = '' + number;\n            while (str.length < length) {\n                str = '0' + str;\n            }           \n            return str;        \n        }\n\n\n        let day, month, hour, year, minute = 0\n        let lastday =0\n        let lastmonth = 0\n        let lastyear = 0\n        let lasthour = 0\n        let lastminute = 0\n        let tics = []\n        let lastticslength = 0   \n        let labeloffset = 0\n\n        let skip = parseInt(scale.current.style.fontSize)\n        let iteration = 0\n        for ( let i=0 ; i < scale.current.offsetHeight ; i+=1 ) {\n            let refdate = new Date( (i- scale.current.offsetHeight/2) * _zoom + _start.getTime()  )\n            day = refdate.getUTCDate()\n            month = refdate.getUTCMonth()\n            hour = refdate.getUTCHours()\n            year = refdate.getUTCFullYear()\n            minute = refdate.getUTCMinutes()\n            \n\n            switch (true) {\n                case _zoom < MIN_LEVEL:\n                    labeloffset = 60000\n                    if(minute !== lastminute && i!==0) {\n                        if (minute !== 0 || hour !== 0) {\n                            tics.push({class:'HourTic', pos: i, label: pad(hour,2)+':'+pad(minute,2)})\n                            // ctx.fillText(pad(hour,2)+':'+pad(minute,2), 2, i);\n                        } else {\n                            if (minute === 0 && hour === 0) {\n                                tics.push({class:'DayTic_h', pos: i, label: pad(day,2)})\n                                tics.push({class:'MonthTic_h2', pos: i, label: monthcode[month]})\n                                //tics.push({class:'YearTic_h', pos: i, label: year})\n\n                            }     \n                        }\n                    }\n                break\n\n                case _zoom < MIN2_LEVEL:\n                    labeloffset = 60000*2\n                    if(minute !== lastminute  && i!==0) {\n                        if( (minute !== 0 || hour !==0) && minute % 2 === 0) {\n                            tics.push({class:'HourTic', pos: i, label: pad(hour,2)+':'+pad(minute,2)})\n                        } else {\n                            if (minute === 0 && hour === 0) {\n                                tics.push({class:'DayTic_h', pos: i, label: pad(day,2)})\n                                tics.push({class:'MonthTic_h2', pos: i, label: monthcode[month]})\n                                //tics.push({class:'YearTic_h', pos: i, label: year})\n                            }     \n                        }\n                    }\n                break\n\n\n                case _zoom < MIN10_LEVEL:\n                    labeloffset = 60000*10\n                    if(minute !== lastminute  && i!==0) {\n                        if( (minute !== 0 || hour !==0) && minute % 10 === 0) {\n                            tics.push({class:'HourTic', pos: i, label: pad(hour,2)+':'+pad(minute,2)})\n                        } else {\n                            if (minute === 0 && hour === 0) {\n                                tics.push({class:'DayTic_h', pos: i, label: pad(day,2)})\n                                tics.push({class:'MonthTic_h2', pos: i, label: monthcode[month]})\n                                //tics.push({class:'YearTic_h', pos: i, label: year})\n                            }     \n                        }\n                    }\n                break\n\n                case _zoom < MIN20_LEVEL:\n                    labeloffset = 60000*20\n                    if(minute !== lastminute && i!==0) {\n                        if( (minute !== 0 || hour !==0) && minute % 20 === 0) {\n                            tics.push({class:'HourTic', pos: i, label: pad(hour,2)+':'+pad(minute,2)})\n                        } else {\n                            if (minute === 0 && hour === 0) {\n                                tics.push({class:'DayTic_h', pos: i, label: pad(day,2)})\n                                tics.push({class:'MonthTic_h2', pos: i, label: monthcode[month]})\n                                //tics.push({class:'YearTic_h', pos: i, label: year})\n                            }     \n                        }\n                    }\n                break\n\n                case _zoom < HOUR_LEVEL:\n                    labeloffset = 60000*60\n                    if(hour !== lasthour && i!==0) {\n                        if (hour !== 0) {\n                            tics.push({class:'HourTic', pos: i, label: pad(hour,2)+':00'})\n                        \n                        } else  {\n                            tics.push({class:'DayTic_h', pos: i, label: pad(day,2)})\n                            tics.push({class:'MonthTic_h2', pos: i, label: monthcode[month]})\n                            // tics.push({class:'YearTic_h', pos: i, label: year})            \n                        }\n                    }\n                break\n\n                case _zoom < HOUR3_LEVEL:\n                    labeloffset = 60000*60*3\n                    if(hour !== lasthour && i!==0) {\n                        if (hour !== 0 &&  (hour % 3 === 0 )) {\n                            tics.push({class:'HourTic', pos: i, label: pad(hour,2)+':00'})\n                        } else  {\n                            if (hour === 0) {\n                                tics.push({class:'DayTic_h', pos: i, label: pad(day,2)})\n                                tics.push({class:'MonthTic_h2', pos: i, label: monthcode[month]})\n                                // tics.push({class:'YearTic_h', pos: i, label: year})            \n                            }\n                        }\n                    }    \n                break\n\n                case _zoom < HOUR6_LEVEL:\n                    labeloffset = 60000*60*6\n                    if(hour !== lasthour && i!==0) {\n                        if (hour !== 0 &&  (hour % 6 === 0 )) {\n                            tics.push({class:'HourTic', pos: i, label: pad(hour,2)+':00'})\n                        } else  {\n                            if (hour === 0) {\n                                tics.push({class:'DayTic_h', pos: i, label: pad(day,2)})\n                                tics.push({class:'MonthTic_h2', pos: i, label: monthcode[month]})\n                                // tics.push({class:'YearTic_h', pos: i, label: year})            \n                            }\n                        }\n                    }    \n                break\n\n\n\n                case _zoom < DAY_HOUR_LEVEL:\n                    labeloffset = 60000*60*24\n                    if(day !== lastday && i!==0) {\n                        tics.push({class:'DayTic_h', pos: i, label: pad(day,2)})\n                        tics.push({class:'MonthTic_h2', pos: i, label: monthcode[month]})\n\n                    }    \n                break\n\n\n                case _zoom < DAY_LEVEL:\n                    labeloffset = 60000*60*24\n                    if(day !== lastday && i!==0) {\n                        if ( day !== 1 ) {\n                            tics.push({class:'DayTic', pos: i, label: day})\n                        } else {\n                            tics.push({class:'MonthTic_h', pos: i, label: monthcode[month]})\n                            if (month === 0) tics.push({class:'YearTic_h2', pos: i, label: year})\n                            // tics.push({class:'YearTic_h2', pos: i, label: year})\n                         }\n                        \n                    }    \n                break\n\n                case _zoom < DAY5_LEVEL:\n                    labeloffset = 60000*60*24*5\n                    if(day !== lastday && i!==0) {\n                        if ( day !== 1 && day !== 30 && day % 5 === 0 ) {\n                            tics.push({class:'DayTic', pos: i, label: day})\n                        } else {\n                            if (day === 1) {\n                                // tics.push({class:'DayTic', pos: i, label: day})\n                                tics.push({class:'MonthTic_h', pos: i, label: monthcode[month]})\n                                if (month === 0) tics.push({class:'YearTic_h2', pos: i, label: year})\n                                // tics.push({class:'YearTic_h2', pos: i, label: year})\n                            }\n                         }\n                        \n                    }    \n\n                break\n\n                case _zoom < MONTH_LEVEL:\n                    labeloffset = 60000*60*24*28\n                    if( month !== lastmonth  && i!==0) {\n                        if (month !== 0) {\n                            tics.push({class:'MonthTic', pos: i, label: monthcode[month]})\n                        } else {\n                            tics.push({class:'MonthTic_h', pos: i, label: monthcode[month]})\n                            tics.push({class:'YearTic_h2', pos: i, label: year})\n                        }\n                    }\n    \n                break\n\n                case _zoom < MONTH4_LEVEL:\n                    labeloffset = 60000*60*24*28*3\n                    if( month !== lastmonth  && i!==0) {\n                        if (month !== 0 && month !== 11 && (month) % 3 === 0 ) {\n                            tics.push({class:'MonthTic', pos: i, label: monthcode[month]})\n                        } else {\n                            if (month === 0) {\n                                tics.push({class:'MonthTic_h', pos: i, label: monthcode[month]})\n                                tics.push({class:'YearTic_h2', pos: i, label: year})\n                            }\n                        }\n                    }\n    \n                break\n\n                case _zoom < YEAR_LEVEL:\n                    labeloffset = 60000*60*24*30*12\n                    if(year !== lastyear  && i!==0) {\n                        if (month !== 0) {\n                            tics.push({class:'MonthTic', pos: i, label: monthcode[month]})\n                        } else {\n                            // tics.push({class:'MonthTic', pos: i, label: month})\n                            tics.push({class:'YearTic', pos: i, label: year})\n                        }\n                    }\n    \n                break\n\n                default:\n                break\n            }\n            lastday = day\n            lastyear = year\n            lastmonth = month\n            lasthour = hour\n            lastminute = minute\n            // optimisation to skip a fontsize number of pixels\n            if (tics.length != lastticslength) {\n                // console.log('off: '+labeloffset/_zoom+'   labeloffset: '+labeloffset)\n                i+=labeloffset/_zoom - 4\n            }\n            lastticslength = tics.length\n            // iteration +=1\n        }\n        if(_resulttics) {\n            for ( let i=_resulttics.length ; i >= 0  ; i-=1 ) {\n            // for ( let i=0 ; i < _resulttics.length  ; i+=1 ) {\n            \n                let ticpos = (_resulttics[i] - _start.getTime() ) / _zoom + scale.current.offsetHeight/2\n                if(ticpos > 0 && ticpos < scale.current.offsetHeight) {\n                    // tics.push({class:'ResultTic', pos: ticpos, label: ''})\n                    // ctx.shadowColor = null\n                    // ctx.shadowOffsetX = null\n                    // ctx.shadowOffsetY = null\n                    // ctx.shadowBlur = null\n                    ctx.font = \"30px Arial\"\n\n            \n                    ctx.fillText('.', scale.current.offsetWidth -8, ticpos +5);\n\n                }\n            }\n        \n        }\n\n    //   console.log('iterations: '+iteration)\n        return tics.map(item => ( <div className={item.class} key={item.class+item.pos} style={{top:item.pos,opacity:1}}>{item.label}</div>))\n    }\n\n    const handleResize = () => {\n        // console.log(scale.current.style.fontSize)\n        setTimescale(scaleText(idate.current,izoom.current))\n    }\n\n    useEffect(() => {\n        // console.log('zoomfactor / date: '+zoomfactor + '/ ' + date)\n        izoom.current = zoomfactor\n        idate.current = date\n        setTimescale(scaleText(date,zoomfactor,resulttics))\n    },[ zoomfactor,date,resulttics])\n\n    // useEffect(() => {\n    //     console.log(resulttics)\n    // },[resulttics])\n\n    useEffect(() => {\n        window.addEventListener('resize', handleResize)\n        return ()=>{window.removeEventListener('resize', handleResize)}\n    },[])\n\n\n    return (\n        <div>\n            <canvas ref={canvas} className='DateSelectorCanvas' width='{window.innerWidth}' height={window.innerHeight}></canvas>\n            <div ref={scale} className='DateSelectorScale' id='DateSelectorScale' style={{fontSize:'14px'}}>\n                {timescale}\n            </div>\n        </div>\n    )\n}\nexport default DateSelectorScale\n","import React, {useState, useEffect, useRef} from 'react'\nimport {useSpring} from 'react-spring'\nimport { useGesture } from 'react-use-gesture'\n// import { add, scale } from 'vec-la'\nimport DateSelectorScale from './DateSelectorScale'\n// import useLog from '../../../../hooks/useLog.js';\n\n\n\nimport './DateSelector.css';\n// import { start } from 'repl';\n\nfunction DateSelector({startdate, resetToStartDateTrigger, tics, onDateChange, onFinalDateChange, onStepChange}) {\n\n\n    // const [ setlog, renderlog] = useLog()\n    // const [ setlog2, renderlog2] = useLog()\n\n    // zoomfactor of the date scale: ms/pixel\n    const MAXZOOM = 1000*60*60*24*15\n    const MINZOOM = 1000\n    const DEFZOOM = 1000*60*60\n    const ZOOMDIR = -1\n    const lastZoom = useRef(DEFZOOM)\n    const [zoomfactor, setZoomfactor ] = useState(DEFZOOM)\n\n    const selector = useRef()\n\n    const [scaledate, setScaledate ] = useState(startdate)\n    // const debouncedScaledate = useDebounce(scaledate, 10);\n\n    // const [lastStartdate, setlLastStartdate ] = useState(startdate)\n    \n    const [Selector_is_active, setSelector_is_active ] = useState(false)\n    const [step, setStep ] = useState([60000])\n    const [stepLabel, setStepLabel ] = useState('hour')\n\n    // to detect double taps\n    const lastTap = useRef()\n    const lastTapdate = useRef(new Date(0))\n    const doubleTap = useRef()\n    const dragging = useRef(false)\n    const draggingTimeout = useRef()\n    const button = useRef()\n\n    const startingdate = useRef(startdate)\n    const discreetdate = useRef(startdate)\n\n    const detectDoubleTap = (e) => {\n        const now = Date.now();\n        button.current = e.button\n        // console.log(lastTapdate.current.getTime()-discreetdate.current.getTime())\n        // if (lastTap.current && (now - lastTap.current) < 300  && Math.abs(lastTapdate.current.getTime()-scaledate.getTime()) < 1 ) {\n        if (lastTap.current && (now - lastTap.current) < 300 ) {\n            doubleTap.current = true\n        } else {\n            lastTap.current = now\n            lastTapdate.current = scaledate\n            doubleTap.current = false\n        }\n    }\n\n\n    const [{ posy_wheel }, setyOnWheel] = useSpring(() => ({posy_wheel: 0 }))\n    const [{ zoom }, springzoom] = useSpring(() => ({ zoom: 0 }))\n\n    const [{ test }, springtest] = useSpring(() => ({ test: 0 }))\n    \n    const bind = useGesture({\n\n        // onWheelEnd: () => { \n        //     setSelector_is_active(false)\n        //     onFinalDateChange(discreetdate.current)\n        //     console.log('finaldate')\n        //         // lastZoom.current = zoomfactor\n        // },\n\n        onWheel: ( {active, delta, first, down, direction, velocity, xy, movement, wheeling, ctrlKey, shiftKey } ) => {\n            // console.log(down)\n            // console.log(first)\n            \n            if (first) {\n                springtest.stop()\n            //   setSelector_is_active(true)\n              discreetdate.current = scaledate\n            }\n\n            if (ctrlKey || shiftKey) {\n\n                springzoom.start({\n                    zoom: delta[1],\n                    immediate: true,\n                    config: { mass: 1, tension: 100, friction: 25, precision: 0.1 },\n                    onChange: () => {\n                        let newzoom = lastZoom.current + lastZoom.current / 300 * zoom.get() * ZOOMDIR\n                        // let newzoom = lastZoom.current + zoom.get() * ZOOMDIR *5000\n                        if (newzoom < MINZOOM) newzoom = MINZOOM\n                        if (newzoom > MAXZOOM) newzoom = MAXZOOM\n                        setZoomfactor(newzoom)\n                        lastZoom.current = newzoom\n        \n                    }\n                })\n                return\n            }\n\n            setyOnWheel.start({                 \n                posy_wheel: delta[1], \n                immediate: true, \n                config: { mass: 1, tension: 100, friction: 40},\n                onChange: ()=>{\n                    setSelector_is_active(true)\n                    let newdate\n                    const rounder = (posy_wheel.get() < 0)?Math.ceil:Math.floor\n                    let nbstep = rounder(posy_wheel.get() * zoomfactor  / step[0])\n                    if(nbstep === 0) {\n                        // onFinalDateChange(discreetdate.current)\n                        // setSelector_is_active(false)\n                        setyOnWheel.stop()\n                        // return\n                    }\n                    if(stepLabel==='month') {\n                        \n                        // setlog({olddate:discreetdate.current.toJSON()})\n                        newdate = new Date(discreetdate.current.getTime())\n                        newdate.setUTCMonth( newdate.getUTCMonth()-nbstep )\n                        // setlog({newdate:discreetdate.current.toJSON()})\n                    } else { \n                        newdate = new Date(discreetdate.current.getTime() - nbstep * step[0]) \n                    }\n                    discreetdate.current = newdate\n                    setScaledate(newdate)\n                    onDateChange(newdate)\n                },\n                onRest: ()=>{\n                    if (!wheeling) {\n                        onFinalDateChange(discreetdate.current)\n                        setSelector_is_active(false)\n                    }\n                }\n            })\n        },\n        onDragStart: ()=>{\n            setSelector_is_active(true)\n        },\n\n        onDrag: ({  event, active, first, down, touches, offset, delta, initial, distance, velocity, direction, shiftKey, ctrlKey, xy, movement,vxvy, wheeling}) => {\n            if (first) {\n                setyOnWheel.stop()\n                detectDoubleTap(event)\n                startingdate.current = discreetdate.current\n                // setlog2({ startingdate: startingdate.current.toJSON()  })\n\n   \n            }\n\n            // setlog2({velocity1: velocity})\n            velocity = (velocity < 0.2)?0:velocity\n\n            if ((doubleTap.current || shiftKey || ctrlKey || button.current === 2) ) {\n                // let zoom = lastZoom.current + lastZoom.current / 50 *  delta[1] * ZOOMDIR\n                // if (zoom < MINZOOM) zoom = MINZOOM\n                // if (zoom > MAXZOOM) zoom = MAXZOOM\n                // setZoomfactor(zoom)\n                // lastZoom.current = zoom\n\n\n                handleZoom(delta,down,velocity,false)\n                // handleZoom2(delta,down,velocity,offset,wheeling,movement,vxvy)\n                \n                // \n                return\n                // if(!down) setActive(false)\n            }\n\n \n\n            // Working !!\n            springtest.start({  \n                // test: scale(delta,[0,zoomfactor]),\n                // test: delta[1]*zoomfactor,\n                test: (down)?movement[1]:movement[1]+movement[1]*velocity*5,\n                immediate: down,\n                config: { mass: 1, tension: 100, friction: 25, precision: 0.1 },\n                onChange: () => {\n                    setSelector_is_active(true)\n                    \n\n                    // if(Math.floor(Math.abs(test.get()*zoomfactor   / step[0]))==0) test.stop()\n\n                    // let even = (test.get()<0 ? Math.ceil:Math.floor)\n                        // setlog({anim:test.get(), velocity: velocity*5})\n\n                        // this avoids the double tap to be detected while touch dragging fast\n                        if(Math.abs(movement[1]) > 5) lastTap.current = new Date(0)\n\n\n                        if(stepLabel==='month') {\n                            let nbstep = Math.ceil(test.get() * zoomfactor  / step[0])\n                            // setlog({olddate:discreetdate.current.toJSON()})\n                            let adate = new Date(startingdate.current.getTime())\n                            adate.setUTCMonth( adate.getUTCMonth()-nbstep )\n                            discreetdate.current = adate\n                            // setlog({newdate:discreetdate.current.toJSON()})\n                        } else {\n                            discreetdate.current = new Date(startingdate.current.getTime() - Math.ceil(test.get()*zoomfactor   / step[0]) * step[0])\n                        }\n                        \n                    \n                    setScaledate(discreetdate.current)\n                    onDateChange(discreetdate.current)\n                    // lastTapdate.current = new Date(0)\n                },\n                onRest: () => {\n                    if (!down) {\n                        // console.log('rest')\n                        onFinalDateChange(discreetdate.current)\n                        setSelector_is_active(false)\n                    }\n                },\n                // stop: (spring)=>{\n                //     let even = (test.get()<0 ? Math.ceil:Math.floor)\n                //     return (even(test.get()*zoomfactor   / step[0])<=0)\n                // }\n            }) \n\n\n        },\n        onDragEnd: (down) => { \n            // setSelector_is_active(false)\n            onFinalDateChange(discreetdate.current)\n            setSelector_is_active(false)\n\n\n                // lastZoom.current = zoomfactor\n        }\n    },\n    // {initial: ()=> [0,test.get()],drag: {useTouch: true} }\n    {drag: {useTouch: true} }\n    )\n\n    const handleZoom = (delta,down,velocity,wheeling) => {\n        let enabler = 1\n        if (!down) enabler = (velocity < 0.2)?0:0.5\n\n        springzoom.start({\n            zoom: delta[1],\n            immediate: down,\n            config: { mass: 1, tension: 100, friction: 25, precision: 0.1 },\n            onChange: () => {\n                let newzoom = lastZoom.current + lastZoom.current / 50 *  zoom.get() * ZOOMDIR * enabler\n                if (newzoom < MINZOOM) newzoom = MINZOOM\n                if (newzoom > MAXZOOM) newzoom = MAXZOOM\n                setZoomfactor(newzoom)\n                lastZoom.current = newzoom\n\n            }\n        })\n    }\n\n    // new approach where spring value is the actual zoom value\n    const [ {zoom2} , springzoom2] = useSpring(() => ( {zoom2: 0} ))\n    const handleZoom2 = (delta,down,velocity,offset,wheeling,movement,vxvy) => {\n        // console.log('delta / vy: '+delta[1]+ ' / '+vxvy[1])\n        let deltadest = down?delta[1]:vxvy[1]*1000\n        let newzoom = zoomfactor - deltadest * zoomfactor/100\n        let zoomdest = Math.max(newzoom,MINZOOM)\n        zoomdest = Math.min(zoomdest,MAXZOOM)\n        springzoom2.start({\n            zoom2: zoomdest,\n            immediate: down,\n            config: { mass: 1, tension: 170, friction: 25},\n            onChange: () => {\n                setZoomfactor(zoom2.get())\n                // console.log(zoom.get())\n            },\n            onProps: ()=> {\n\n            }\n        })\n        \n    }\n\n    const [{ xy2 }, sety2] = useSpring(() => ({ xy2: [0,0] }))\n    const moveToDate = (newdate) => {\n        // console.log('go from: '+discreetdate.current.toJSON()+' to: '+newdate.toJSON())\n        let fromtime = discreetdate.current.getTime()\n        // sety2.stop()\n        // if (!Selector_is_active) {\n            let deltaoffset = [0,(fromtime - newdate.getTime())  ]\n\n            sety2.start({ \n                from: {xy2: [0,0]},\n                to: {xy2: deltaoffset},\n                immediate: false, \n                config: {reset: true, duration: 300 },\n                // config: { mass: 1, tension: 100, friction: 25, precision: 0.1 },\n                onChange: ()=>{\n                    // setlog(({animgoto: xy2.get()[1]}))\n                    // setSelector_is_active(true)\n\n                    let adate = new Date(fromtime - xy2.get()[1] )\n                    // console.log('adate: '+adate.toJSON() )\n                    discreetdate.current = adate\n                    setScaledate(adate)\n                    onDateChange(adate)\n                },\n                // onRest: ()=>{\n                //     // setSelector_is_active(false)\n                // console.log(\"rest move\")\n                //     onFinalDateChange(discreetdate.current)\n                // }\n            })\n        // }\n\n    }\n\n    useEffect(() => {\n        console.log('startdate trigger')\n        console.log(startdate)\n        console.log(resetToStartDateTrigger)\n        \n        if(!Selector_is_active) {\n            // console.log(startdate.toJSON())\n            moveToDate(startdate)\n        }\n    },[startdate, resetToStartDateTrigger])\n\n    // useEffect(() => {\n    //     console.log('laststartdate changed: '+lastStartdate.toJSON())\n    // },[lastStartdate])\n\n    // useEffect(() => {\n    //     console.log('Selector active: '+Selector_is_active)\n    // },[Selector_is_active])\n\n\n    useEffect(() => {\n        onStepChange(stepLabel)\n    },[stepLabel,onStepChange])\n\n    \n    useEffect(() => {\n        switch (true) {\n            case zoomfactor > 120426316:\n                setStep([\n                    1000*60*60*24*31,\n                    1000*60*60*24*28,\n                    1000*60*60*24*31,\n                    1000*60*60*24*30,\n                    1000*60*60*24*31,\n                    1000*60*60*24*30,\n                    1000*60*60*24*31,\n                    1000*60*60*24*31,\n                    1000*60*60*24*30,\n                    1000*60*60*24*31,\n                    1000*60*60*24*30,\n                    1000*60*60*24*31,\n                    ])\n                setStepLabel('month')\n                break\n            case zoomfactor > 94544702:\n                setStep([1000*60*60*24*12])\n                setStepLabel('cycle')\n                break\n            case zoomfactor > 14544702:\n                setStep([1000*60*60*24])\n                setStepLabel('day')\n                break\n            case zoomfactor > 735259:\n                setStep([1000*60*60])\n                setStepLabel('hour')\n                break\n            case zoomfactor > 32274:\n                setStep([1000*60])\n                setStepLabel('minute')\n                break\n            default:\n                setStep([1000])\n                setStepLabel('second')\n        }\n    },[zoomfactor])\n\n    \n\n\n    return (\n        <div>\n            <div className='DateSelector' ref={selector} >\n            <div {...bind()} className=\"touchMask\"> </div>\n            <div className=\"Mask\"  >\n\n                    <DateSelectorScale className='scale' date={scaledate} zoomfactor={zoomfactor} resulttics={tics}></DateSelectorScale>\n                    \n                    <div className=\"TriangleContainer\" >\n                        <svg height=\"40\" width=\"20\" className=\"Triangle\">\n                            <polygon points=\"20,5 20,35 12,20\" />   \n                        </svg> \n                    </div>        \n                </div>\n            </div>\n            {/* {renderlog()}\n            {renderlog2()} */}\n        </div>\n                                   )\n}\nexport default DateSelector\n","import React, {useState, useCallback, useEffect} from 'react';\nimport DateLabel from './components/datelabel'\nimport DateController from './components/datecontroller'\nimport DateSelector from './components/dateselector'\n\n\nfunction DateManager({ onDateChange, onFinalDateChange, onStateChange, animated, startdate, resetstartdatetrigger, tics}) {\n\n    // if(!startdate) startdate = new Date()\n    const [selectorStartdate, setselectorStartdate] = useState(startdate)\n    const [controllerStartdate, setcontrollerStartdate] = useState(startdate)\n    const [labeldate, setLabelDate] = useState(startdate)\n    const [dateLabelHighlight,setDateLabelHighlight] = useState(1)\n\n    const handleSelectorDateChange = useCallback( (date) => {\n        // console.log('handleSelectorDateChange:' + date.toJSON())\n        setLabelDate(date)\n        onDateChange(date)\n        // setscontrollerStartdate(date)\n    }, [])\n\n    const handleSelectorFinalDateChange = useCallback( (date) => {\n        // console.log('handleSelectorFinalDateChange:' + date.toJSON())\n        setcontrollerStartdate(date)\n        onFinalDateChange(date)\n    }, [])\n    \n    const handleControllerDateChange = useCallback( (date) => {\n        // console.log('handleControllerDateChange' + date.toJSON())\n        setselectorStartdate(date)\n        // onFinalDateChange(date)\n    }, [])\n\n    const handleSelectorStepChange = (step) => {\n        // console.log('handleSelectorStepChange' + step)\n        setDateLabelHighlight(step)\n    }\n\n    useEffect(() => {\n        // console.log('startdate changed '+startdate)\n        if(startdate !== null) setcontrollerStartdate(startdate)\n    }, [startdate]);\n\n\n    return (\n        <div >\n          <DateController startdate={controllerStartdate}  onDateChange={handleControllerDateChange} onStateChange={onStateChange} animated={animated}/>\n          <DateLabel date={labeldate} animated={animated} highlight={dateLabelHighlight}/>\n          <DateSelector startdate={selectorStartdate} resetToStartDateTrigger={resetstartdatetrigger} tics={tics}\n                onDateChange={handleSelectorDateChange} \n                onFinalDateChange={handleSelectorFinalDateChange} \n                onStepChange={handleSelectorStepChange}/>\n        </div>\n    ) \n}\nexport default DateManager","import React, {  useEffect, useGlobal, useState } from 'reactn';\n\nimport DateManager from \"../components/datemanager\"\n\nfunction DateManagerContainer() {\n\n    const [, setViewDate] = useGlobal('viewDate')\n    const [SearchDate, setSearchDate] = useGlobal('searchDate')\n    const [animated, setanimated] = useGlobal('animated')\n    const [ GoToDate, setGoToDate ] = useGlobal('goToDate')\n    const [ geojson, setgeojson] = useGlobal('geojson')\n    const [ clearResultsTrigger, ] = useGlobal('clearResultsTrigger')\n    const [ resetStartDateTrigger, ] = useGlobal('resetStartDateTrigger')\n    const [tics, settics] = useState([])\n\n    useEffect(() => {\n        let newtics = []\n        if(!geojson) return\n        newtics = geojson.features.map( (item) => {\n            return item.properties.earthObservation.acquisitionInformation[0].acquisitionParameter.acquisitionStartTime.getTime()\n        })\n        // newtics.push(tics)\n        settics([...tics,...newtics])\n    }, [geojson]);\n\n    useEffect(() => {\n        settics([])\n    }, [clearResultsTrigger]);\n\n    // // could bypass...\n    // useEffect(() => {\n    //     setGoToDate(null)\n    // }, [SearchDate]);\n\n\n\n    return (\n        <DateManager onDateChange={setViewDate} onFinalDateChange={setSearchDate} startdate={GoToDate} resetstartdatetrigger={resetStartDateTrigger} tics={tics} onStateChange={setanimated} animated={animated}/> \n     )\n}\n\nexport default DateManagerContainer;\n","import wellknown from 'wellknown';\n\nexport default function dhusToGeojson(response) {\n\n    function gmlToWkt(gmlfootprint) {\n        let coord = gmlfootprint.slice(gmlfootprint.indexOf('<gml:coordinates>')+17,gmlfootprint.indexOf('</gml:coordinates>'))\n        let coordlist = coord.replaceAll(',',' ')\n        let coordarray = coordlist.split(' ')\n        let wkt = 'MULTIPOLYGON((('\n        for(let i=0; i< coordarray.length; i+=2) {\n            wkt = wkt + coordarray[i+1] + ' ' + coordarray[i] + ','\n        }\n        wkt = wkt.slice(0,-1)\n        wkt = wkt+')))'\n        return wkt\n    }\n    \n    function mapFromHubOpenSearch(item) {    \n        function reshuffle(array) {\n            let json = {};\n            for(let i=0; i < array.length; i++) {\n                json[array[i].name] =  array[i].content;\n            }\n            return json;\n        }\n\n        try {\n            let hubItem = {};\n            if(item.date) Object.assign(hubItem,reshuffle(item.date));\n            if(item.int) Object.assign(hubItem,reshuffle(item.int));\n            if(item.double) Object.assign(hubItem,reshuffle(item.double));\n            if(item.str) Object.assign(hubItem,reshuffle(item.str));\n\n\n            var sizeArray = hubItem.size.split(\" \");\n            var sizeInBytes;\n            switch (sizeArray[1]) {\n                case \"B\":\n                    sizeInBytes = Math.round(parseFloat(sizeArray[0]));\n                    break;\n                case \"MB\":\n                    sizeInBytes = Math.round(parseFloat(sizeArray[0])*1024);\n                    break;\n                case \"GB\":\n                    sizeInBytes = Math.round(parseFloat(sizeArray[0])*1024*1024);\n                    break;\n                case \"TB\":\n                    sizeInBytes = Math.round(parseFloat(sizeArray[0])*1024*1024*1024);\n                    break;\n                default: \n                    sizeInBytes = Math.round(parseFloat(sizeArray[0]));\n                    break;\n\n            }\n            \n            // console.log(gmlToWkt(hubItem.gmlfootprint))\n\n            var newItem = {\n                id: item.title,\n                geometry: wellknown(gmlToWkt(hubItem.gmlfootprint)),\n                type: \"Feature\",\n                properties: {\n                    updated: new Date(hubItem.ingestiondate),\n                    title: item.title,\n                    name: item.title,\n                    uuid: item.id,\n                    date: hubItem.beginposition  +'/'+  hubItem.endposition,\n                    downloadUrl: item.link[0].href,\n                    quicklookUrl: (item.link.length >= 2) ? item.link[2].href: null,\n                    // links: {\n                    //     data: [{\n                    //         href: item.link[0].href,\n                    //     }]\n                    // },\n                    earthObservation: {\n                        parentIdentifier: \"\",\n                        status: \"ARCHIVED\",\n                        acquisitionInformation: [{\n                            platform: {\n                                platformShortName: hubItem.platformname,\n                                platformSerialIdentifier: hubItem.platformserialidentifier\n                            },\n                            sensor: {\n                                instrument: hubItem.instrumentshortname,\n                                operationalMode: hubItem.sensoroperationalmode\n                            },\n                            acquisitionParameter: {\n                                acquisitionStartTime: new Date(hubItem.beginposition),\n                                acquisitionStopTime: new Date(hubItem.endposition),\n                                relativePassNumber: parseInt(hubItem.relativeorbitnumber),\n                                orbitNumber: parseInt(hubItem.orbitnumber),\n                                startTimeFromAscendingNode: null,\n                                stopTimeFromAscendingNode: null,\n                                orbitDirection: hubItem.orbitdirection\n\n                            }\n                        }],\n                        productInformation: {\n                            productType: hubItem.producttype,\n                            //timeliness: indexes[\"product\"][\"Timeliness Category\"],\n                            tile: hubItem.tileid,\n                            size: sizeInBytes\n                        }\n                    }\n                }\n            }\n        \n            return newItem;\n        } catch (err) {\n            console.log(\"error parsing item from dhus: \"+err.message);\n            return {};\n        }\n    }\n\n    let features = [];\n    try {\n        if( response.feed.entry ) {\n            if(Array.isArray(response.feed.entry)) {\n                // console.log('entry is an  array')\n                features = response.feed.entry.map( item =>  mapFromHubOpenSearch(item)).filter(item => item !== {});\n            } else {\n                features = [mapFromHubOpenSearch(response.feed.entry)]\n            }\n                \n        } else {\n            features = []\n        }\n        \n    } catch (err) {\n        console.log(response);\n        console.log(\"Error: \");\n        console.log(err);\n        features = []\n    }\n    //console.log(JSON.stringify(features));\n    let geojson = {   \n            type: \"FeatureCollection\",\n            id: \"search\",\n            properties: {\n                totalResults: response.feed[\"opensearch:totalResults\"],\n                startIndex: (response.feed[\"opensearch:startIndex\"])?response.feed[\"opensearch:startIndex\"]:1,\n                itemsPerPage: response.feed[\"opensearch:itemsPerPage\"],\n                title: \"DHuS search response\",\n                updated: new Date()\n            },\n            features: features\n        };\n\n    return geojson\n\n}\n","import wellknown from 'wellknown';\n\nexport default function eocatToGeojson(response) {\n\n    \n    function mapFromHubOpenSearch(item) {    \n\n        try {\n            var downloadurl = null\n            var quicklookurl = null\n            for (let i = 0; i < item.properties.link.length; i++) {\n                if (item.properties.link[i]['@']['title'] == 'Download') downloadurl = item.properties.link[i]['@']['href']\n                if (item.properties.link[i]['@']['title'] == 'Quicklook') quicklookurl = item.properties.link[i]['@']['href']\n            }\n            \n\n            var newItem = {\n                id: item.id,\n                geometry: item.geometry,\n                type: \"Feature\",\n                properties: {\n                    updated: item.properties.updated,\n                    title: item.properties.title,\n                    name: item.title,\n                    uuid: item.properties.identifier,\n                    date: item.properties.date,\n                    downloadUrl: downloadurl,\n                    quicklookUrl: quicklookurl,\n                    // links: {\n                    //     data: [{\n                    //         href: item.link[0].href,\n                    //     }]\n                    // },\n                    earthObservation: {\n                        parentIdentifier: item.properties.EarthObservation.metaDataProperty.EarthObservationMetaData.parentIdentifier,\n                        status: \"ARCHIVED\",\n                        acquisitionInformation: [{\n                            platform: {\n                                platformShortName: item.properties.EarthObservation.procedure.EarthObservationEquipment.platform.Platform.shortName,\n                                platformSerialIdentifier: null\n                            },\n                            sensor: {\n                                instrument: item.properties.EarthObservation.procedure.EarthObservationEquipment.instrument.Instrument.shortName,\n                                operationalMode: item.properties.EarthObservation.procedure.EarthObservationEquipment.sensor.Sensor.operationalMode\n                            },\n                            acquisitionParameter: {\n                                acquisitionStartTime: new Date(item.properties.EarthObservation.phenomenonTime.TimePeriod.beginPosition),\n                                acquisitionStopTime: new Date(item.properties.EarthObservation.phenomenonTime.TimePeriod.endPosition),\n                                relativePassNumber: null,\n                                orbitNumber: item.properties.EarthObservation.procedure.EarthObservationEquipment.acquisitionParameters.Acquisition.orbitNumber,\n                                startTimeFromAscendingNode: null,\n                                stopTimeFromAscendingNode: null,\n                                orbitDirection: item.properties.EarthObservation.procedure.EarthObservationEquipment.acquisitionParameters.Acquisition.orbitDirection\n\n                            }\n                        }],\n                        productInformation: {\n                            productType: item.properties.EarthObservation.metaDataProperty.EarthObservationMetaData.productType,\n                            //timeliness: indexes[\"product\"][\"Timeliness Category\"],\n                            downloadUrl: downloadurl,\n                            quicklookUrl: quicklookurl,\n        \n                            size: null\n                        }\n                    }\n                }\n            }\n        \n            return newItem;\n        } catch (err) {\n            console.log(\"error parsing item from dhus: \"+err.message);\n            return {};\n        }\n    }\n\n    let features = [];\n    try {\n        if( response.features ) {\n            if(Array.isArray(response.features)) {\n                console.log('features is an  array')\n                features = response.features.map( item =>  mapFromHubOpenSearch(item)).filter(item => item !== {});\n            } \n                \n        } else {\n            features = []\n        }\n        \n    } catch (err) {\n        console.log(response);\n        console.log(\"Error: \");\n        console.log(err);\n        features = []\n    }\n    //console.log(JSON.stringify(features));\n    let geojson = {   \n            type: \"FeatureCollection\",\n            id: \"search\",\n            properties: {\n                totalResults: response.properties.totalResults,\n                startIndex: response.properties.startIndex,\n                itemsPerPage: response.properties.itemsPerPage,\n                title: response.properties.title,\n                updated: response.properties.updated\n            },\n            features: features\n        };\n\n    return geojson\n\n}\n","import { useState, useEffect, useRef } from \"react\";\nimport dhusToGeojson from \"./dhusToGeojson\";\nimport eocatToGeojson from \"./eocatToGeojson\"\n\n\n// export default function useDatahub({searchdate, mission, searchpoint})  {\nexport default function useDatahub()  {\n\n    const searchparam = useRef({})\n    const controller = useRef(null)\n\n    const MAX_ITEMS = 1000\n\n    const [geojsonResults, setGeojsonResults] = useState(null)\n    const [loading, setLoading] = useState(false)\n\n\n    // const [ collections, setCollections ] = useState([])\n    const collections = useRef([\n        {\n            code: 'S1',\n            //templateUrl: 'https://131.176.236.55/dhus/search?q=( footprint:\"Intersects({polygon})\" AND beginposition:[{start} TO {end}] AND platformname:Sentinel-1 AND producttype:GRD)&start={startindex}&rows=100&sortedby=beginposition&order=desc&format=json',\n            templateUrl: 'https://scihub.copernicus.eu/dhus/search?q=( footprint:\"Intersects({polygon})\" AND beginposition:[{start} TO {end}] AND platformname:Sentinel-1 AND producttype:GRD)&start={startindex}&rows=100&orderby=beginposition desc&format=json',\n            name: 'Sentinel-1 GRD' ,\n            startIndexOrigin: 0,\n            dateOff: ' beginposition:[{start} TO {end}] AND',\n            areaOff:  ' footprint:\"Intersects({polygon})\" AND',\n            windowSize: 1000 * 60 * 60 * 18 \n        },\n        {\n            code: 'S1A',\n            //templateUrl: 'https://131.176.236.55/dhus/search?q=( footprint:\"Intersects({polygon})\" AND beginposition:[{start} TO {end}] AND platformname:Sentinel-1 AND producttype:GRD)&start={startindex}&rows=100&sortedby=beginposition&order=desc&format=json',\n            templateUrl: 'https://scihub.copernicus.eu/dhus/search?q=( footprint:\"Intersects({polygon})\" AND beginposition:[{start} TO {end}] AND platformname:Sentinel-1 AND filename:S1A* AND producttype:GRD)&start={startindex}&rows=100&orderby=beginposition desc&format=json',\n            name: 'Sentinel-1A GRD' ,\n            startIndexOrigin: 0,\n            dateOff: ' beginposition:[{start} TO {end}] AND',\n            areaOff:  ' footprint:\"Intersects({polygon})\" AND',\n            windowSize: 1000 * 60 * 60 * 18 \n        },\n        {\n            code: 'S1B',\n            //templateUrl: 'https://131.176.236.55/dhus/search?q=( footprint:\"Intersects({polygon})\" AND beginposition:[{start} TO {end}] AND platformname:Sentinel-1 AND producttype:GRD)&start={startindex}&rows=100&sortedby=beginposition&order=desc&format=json',\n            templateUrl: 'https://scihub.copernicus.eu/dhus/search?q=( footprint:\"Intersects({polygon})\" AND beginposition:[{start} TO {end}] AND platformname:Sentinel-1 AND filename:S1B* AND producttype:GRD)&start={startindex}&rows=100&orderby=beginposition desc&format=json',\n            name: 'Sentinel-1B GRD' ,\n            startIndexOrigin: 0,\n            dateOff: ' beginposition:[{start} TO {end}] AND',\n            areaOff:  ' footprint:\"Intersects({polygon})\" AND',\n            windowSize: 1000 * 60 * 60 * 18 \n        },\n        {\n            code: 'S2',\n            templateUrl: 'https://scihub.copernicus.eu/dhus/search?q=( footprint:\"Intersects({polygon})\" AND beginposition:[{start} TO {end}] AND platformname:Sentinel-2 AND filename:*MSIL1C*)&start={startindex}&rows=100&orderby=beginposition desc&format=json',\n            name: 'Sentinel-2 A/B Level 1C',\n            startIndexOrigin: 0,\n            dateOff: ' beginposition:[{start} TO {end}] AND',\n            areaOff:  ' footprint:\"Intersects({polygon})\" AND',\n            windowSize: 1000 * 60 * 60 *3\n        },\n        {\n            code: 'S2A',\n            templateUrl: 'https://scihub.copernicus.eu/dhus/search?q=( footprint:\"Intersects({polygon})\" AND beginposition:[{start} TO {end}] AND platformname:Sentinel-2 AND filename:S2A_MSIL1C*)&start={startindex}&rows=100&orderby=beginposition desc&format=json',\n            name: 'Sentinel-2 A/B Level 1C',\n            startIndexOrigin: 0,\n            dateOff: ' beginposition:[{start} TO {end}] AND',\n            areaOff:  ' footprint:\"Intersects({polygon})\" AND',\n            windowSize: 1000 * 60 * 60 * 3\n        },\n        {\n            code: 'S2B',\n            templateUrl: 'https://scihub.copernicus.eu/dhus/search?q=( footprint:\"Intersects({polygon})\" AND beginposition:[{start} TO {end}] AND platformname:Sentinel-2 AND filename:S2B_MSIL1C*)&start={startindex}&rows=100&orderby=beginposition desc&format=json',\n            name: 'Sentinel-2 A/B Level 1C',\n            startIndexOrigin: 0,\n            dateOff: ' beginposition:[{start} TO {end}] AND',\n            areaOff:  ' footprint:\"Intersects({polygon})\" AND',\n            windowSize: 1000 * 60 * 60 * 3\n        },\n        {\n            code: 'S3',\n            templateUrl: 'https://scihub.copernicus.eu/dhus/search?q=( footprint:\"Intersects({polygon})\" AND beginposition:[{start} TO {end}] AND platformname:Sentinel-3 AND (producttype:OL_1_ERR___ OR producttype:SL_1_RBT___ OR producttype:SR_1_SRA___))&start={startindex}&rows=100&orderby=beginposition desc&format=json',\n            name: 'Sentinel-3 A/B, OLCI/SLSTR/SRAL' ,\n            startIndexOrigin: 0,\n            dateOff: ' beginposition:[{start} TO {end}] AND',\n            areaOff:  ' footprint:\"Intersects({polygon})\" AND',\n            windowSize: 1000 * 60 * 60 * 24\n        },\n        {\n            code: 'S3A/OLCI/LFR',\n            templateUrl: 'https://scihub.copernicus.eu/dhus/search?q=( footprint:\"Intersects({polygon})\" AND beginposition:[{start} TO {end}] AND platformname:Sentinel-3 AND filename:S3A_*  AND (producttype:OL_2_LFR___))&start={startindex}&rows=100&orderby=beginposition desc&format=json',\n            name: 'Sentinel-3 A/B, OLCI' ,\n            startIndexOrigin: 0,\n            dateOff: ' beginposition:[{start} TO {end}] AND',\n            areaOff:  ' footprint:\"Intersects({polygon})\" AND',\n            windowSize: 1000 * 60 * 60 * 24\n        },\n        {\n            code: 'S3B/OLCI/LFR',\n            templateUrl: 'https://scihub.copernicus.eu/dhus/search?q=( footprint:\"Intersects({polygon})\" AND beginposition:[{start} TO {end}] AND platformname:Sentinel-3 AND filename:S3B_* AND (producttype:OL_2_LFR___))&start={startindex}&rows=100&orderby=beginposition desc&format=json',\n            name: 'Sentinel-3 A/B, OLCI' ,\n            startIndexOrigin: 0,\n            dateOff: ' beginposition:[{start} TO {end}] AND',\n            areaOff:  ' footprint:\"Intersects({polygon})\" AND',\n            windowSize: 1000 * 60 * 60 * 24\n        },\n        {\n            code: 'S3/SLSTR',\n            templateUrl: 'https://scihub.copernicus.eu/dhus/search?q=( footprint:\"Intersects({polygon})\" AND beginposition:[{start} TO {end}] AND platformname:Sentinel-3 AND (producttype:SL_1_RBT___))&start={startindex}&rows=100&orderby=beginposition desc&format=json',\n            name: 'Sentinel-3 A/B, SLSTR' ,\n            startIndexOrigin: 0,\n            dateOff: ' beginposition:[{start} TO {end}] AND',\n            areaOff:  ' footprint:\"Intersects({polygon})\" AND',\n            windowSize: 1000 * 60 * 60 * 24\n        },\n        {\n            code: 'S3/SRAL',\n            templateUrl: 'https://scihub.copernicus.eu/dhus/search?q=( footprint:\"Intersects({polygon})\" AND beginposition:[{start} TO {end}] AND platformname:Sentinel-3 AND (producttype:SR_1_SRA___))&start={startindex}&rows=100&orderby=beginposition desc&format=json',\n            name: 'Sentinel-3 A/B, SRAL' ,\n            startIndexOrigin: 0,\n            dateOff: ' beginposition:[{start} TO {end}] AND',\n            areaOff:  ' footprint:\"Intersects({polygon})\" AND',\n            windowSize: 1000 * 60 * 60 * 24\n        },\n        {\n            code: 'S5P',\n            templateUrl: 'https://scihub.copernicus.eu/dhus/search?q=( footprint:\"Intersects({polygon})\" AND beginposition:[{start} TO {end}] AND platformname:Sentinel-5 precursor AND (producttype:L1B_RA_BD1 OR (producttype:L2__NO2___ AND processingmode:Near real time)))&start={startindex}&rows=100&orderby=beginposition desc&format=json',\n            name: 'Sentinel-1 A/B',\n            startIndexOrigin: 0,\n            dateOff: ' beginposition:[{start} TO {end}] AND',\n            areaOff:  ' footprint:\"Intersects({polygon})\" AND',\n            windowSize: 1000 * 60 * 60 * 24 \n        },\n        {\n            code: 'ENVISAT',\n            templateUrl: 'https://eocat.esa.int/api/catalogue/EOCAT-ENVISAT.ASA.IMP_1P/search?start={start}&stop={end}&geom={polygon}&format=json&count=50&startIndex={startindex}',\n            startIndexOrigin: 1,\n            name: 'Envisat',\n            dateOff: 'start={start}&stop={end}&',\n            areaOff:  '&geom={polygon}',\n            windowSize: 1000 * 60 * 60 * 24 * 3\n        }\n\n    ])\n\n    const getcollection = (code) => {\n        for(let i=0; i < collections.current.length; i++) {\n            if(collections.current[i].code == code) {\n                return collections.current[i]\n            }\n        }\n        return null\n    }\n\n    const buildUrl = ({code, polygon, start, end, startindex}) => {\n\n        let target = getcollection(code)\n        if(!target) return null\n        let newurl = target.templateUrl\n\n        if(polygon != null) {\n            newurl = newurl.replace(\"{polygon}\", polygon)\n        } else {\n            newurl = newurl.replace(target.areaOff, '')\n        }\n\n        if (start != null  && end != null) {\n            newurl = newurl.replace(\"{start}\", start)\n            newurl = newurl.replace(\"{end}\", end)\n        } else {\n            newurl = newurl.replace(target.dateOff, '')\n        }\n        \n        // startindex = startindex == 0 ? startindex : startindex + target.startIndexOrigin\n        // newurl = newurl.replace(\"{startindex}\",target.startIndexOrigin)\n\n\n        return newurl\n    }\n\n    const fetchURL = async (url,index) => {\n        setLoading(true)\n        controller.current = new AbortController()\n        let newurl = url\n        newurl = newurl.replace(\"{startindex}\",index)\n        // console.log('Search: '+newurl)\n        let paging = {totalresults:0, startindex:0, itemsperpage:0}\n        try {\n            \n            const response = await fetch(newurl, {mode: 'cors', credentials: 'include', signal: controller.current.signal})\n            // console.log( response.text())\n            try {\n                const json = await response.json()\n                const geoJson = (searchparam.current.mission === 'ENVISAT')? eocatToGeojson(json) : dhusToGeojson(json)\n                // console.log('totalResults: ' + geoJson.properties.totalResults)\n                paging = {\n                    totalresults: geoJson.properties.totalResults == null ? 0 : Number(geoJson.properties.totalResults) ,\n                    startindex:  Number(geoJson.properties.startIndex), \n                    itemsperpage:  Number(geoJson.properties.itemsPerPage)\n                }\n                // console.log(paging)\n\n                // setPagination(paging)\n                if(paging.totalresults>0) setGeojsonResults(geoJson) \n\n                if (paging.startindex + paging.itemsperpage < Math.min(paging.totalresults,MAX_ITEMS) ) {\n                    // console.log(\"There's More...\")  \n                    // uncomment to get other pages\n                    fetchURL(url,(paging.startindex + paging.itemsperpage))\n                } else {\n                    setLoading(false)  \n                }\n\n            } catch (err) {\n                console.log(\"Didn't receive a json !\")\n                console.log(err)\n                setLoading(false);\n            }\n        } catch(err) {\n            console.log(\"Error contacting server...\")\n            console.log(err)\n            setLoading(false)   \n        }\n    }\n\n    const abort = () => {\n        if(controller) {\n            controller.current.abort()\n        }\n    }\n\n    const search = ({searchdate, mission, searchpoint}) => {\n        let startdate, enddate = ''\n        let target = getcollection(mission)\n        if(!target) return null\n\n        if(loading) controller.current.abort()\n        if(searchdate) {\n            let julianstart = Math.floor(searchdate.getTime()/target.windowSize) * target.windowSize\n            startdate = (new Date(julianstart)).toJSON()\n            enddate = (new Date(julianstart + target.windowSize - 1000)).toJSON()\n            // startdate = (new Date(searchdate.getTime() - offset)).toJSON()\n            // // console.log('start date: '+startdate)\n            \n            // enddate = (new Date(searchdate.getTime() + offset - 1000)).toJSON()\n        }\n        let url = buildUrl({\n            code: mission,\n            polygon: searchpoint, \n            start: startdate,\n            end: enddate\n        })\n        searchparam.current.searchdate = searchdate\n        searchparam.current.mission = mission\n        searchparam.current.searchpoint = searchpoint\n\n        let startindex = getcollection(mission).startIndexOrigin\n        fetchURL(url,startindex)\n        \n    }\n    \n\n\n    return {geojsonResults, loading, search, abort}\n}\n","import React, { useState, useEffect, useRef } from \"react\";\n\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport './SearchManager.css'\nimport useDatahub from \"./useDatahub\"\nimport useHandleDoubleTap from '../../hooks/useHandleDoubleTap'\n\n \n// npm install --save-dev @iconify/react @iconify-icons/ic\nimport { Icon, InlineIcon } from '@iconify/react';\nimport outlineRefresh from '@iconify-icons/ic/outline-refresh';\n\n\n\nfunction SearchManager({searchdate, searchpoint, mission, altitude, onSearchStart, onPageSearch, onSearchComplete}) {\n\n\n    // const [results, setresults] = useState([])\n    const [ searching, setsearching ] = useState(false);\n    const [ searchmode, setsearchmode ] = useState('backward');\n    const [ searchtrigger, setsearchtrigger ] = useState(0);\n    const searchtimeout = useRef()\n    const firstresultdate = useRef(new Date(0))\n    const lastresultdate = useRef(new Date())\n    const totalresults = useRef(0)\n    const totalloaded = useRef(0)\n\n\n    const [param, setparam] = useState({})\n\n\n\n    const { geojsonResults, loading, search, abort } = useDatahub({});\n    \n    const {handleTap} = useHandleDoubleTap( ()=>{setsearchtrigger(Math.random())}, onSearchStart )\n\n\n    const handleTap2 = () => { setsearchtrigger(Math.random()) }\n\n    useHotkeys(\"x\",()=>setsearchtrigger(Math.random())) \n\n    // useEffect(() => {\n    //     // console.log('will search: '+searchdate)\n    //     search()\n    // }, [searchdate, mission, searchpoint, searchtrigger]);\n\n    // useEffect(() => {\n    //     console.log(geojsonResults)\n    //     setresults(geojsonResults)\n    //     setsearching(false)\n    // }, [geojsonResults]);\n\n    useEffect(() => {\n        if(geojsonResults) {\n            // saves first and last item dates\n            let firstitemdate = (new Date(geojsonResults.features[0].properties.earthObservation.acquisitionInformation[0].acquisitionParameter.acquisitionStartTime))\n            if(firstresultdate.current.getTime() < firstitemdate.getTime() || firstresultdate.current === null) {\n                firstresultdate.current = firstitemdate\n            }\n            let lastitemdate = (new Date(geojsonResults.features[geojsonResults.features.length-1].properties.earthObservation.acquisitionInformation[0].acquisitionParameter.acquisitionStartTime))\n            if(lastresultdate.current.getTime() > lastitemdate.getTime() || lastitemdate.current === null) {\n                lastresultdate.current = lastitemdate\n            }\n            totalloaded.current += geojsonResults.features.length\n            let resultdesc = {\n                totalResults: Number(geojsonResults.properties.totalResults), \n                totalLoaded: totalloaded.current\n            }\n            onPageSearch(geojsonResults, resultdesc)\n\n        }\n    }, [geojsonResults]);\n\n    useEffect(() => {\n        setsearching(loading)\n        if(loading === false && firstresultdate.current.getTime() !== 0 ) {\n            onSearchComplete({\n                firstResultDate: firstresultdate.current, \n                lastResultDate: lastresultdate.current,\n                totalResults: totalresults.current,\n                totalLoaded: totalloaded.current\n            })\n        }\n    }, [loading]);\n\n    useEffect(() => {\n        if(loading) {\n            abort()\n        } else {\n            firstresultdate.current = new Date(0)\n            lastresultdate.current = new Date()\n            totalloaded.current = 0\n            totalresults.current = 0\n\n            onSearchStart()\n            search(param)    \n        }\n\n    }, [searchtrigger]);\n\n\n    useEffect(() => {\n        let sd = searchdate\n        let sp = searchpoint\n        if(altitude > 3000000) {\n            sp = null\n        } else {\n            sd = null\n        }\n        setparam((param)=>{ return {...param, searchdate: sd, mission: mission, searchpoint: sp }})\n    }, [searchdate, mission, searchpoint, altitude]);\n\n    //console.log('mission rendering')\n    return (\n        <div>\n            <div className={searching === true?'SearchController Active':'SearchController'} onClick={handleTap}>\n                {/* {searching === true?<Icon icon={outlineSync} width='50px'/>:<span/>} */}\n                <Icon icon={outlineRefresh} width='50px'/>\n            </div>\n        </div>\n    )\n}\n\nexport default SearchManager;\n","\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { useGlobal } from 'reactn';\nimport SearchManager from \"../components/searchmanager\"\n\n\nconst SearchManagerContainer = () => {\n\n  const [ searchDate,  ] = useGlobal('viewDate');\n  const [ goToDate, setgoToDate ] = useGlobal('goToDate');\n  const [ , setclearResultsTrigger ] = useGlobal('clearResultsTrigger')\n  const [ searchPoint,  ] = useGlobal('searchPoint');\n  const [ animated,  ] = useGlobal('animated');\n  const [ mission,  ] = useGlobal('mission');\n  const [ altitude,  ] = useGlobal('altitude');\n  const [ pointSearchMaxAltitude,  ] = useGlobal('pointSearchMaxAltitude');\n  const [ geojson, setgeojson ] = useGlobal('geojson');\n  const [ resultDesc, setresultDesc ] = useGlobal('resultDesc');\n  const [ selectedProduct, setselectedProduct] = useGlobal('selectedProduct')\n  const [ closestItem, setclosestItem] = useGlobal('closestItem')\n\n\n  const [anim, setanim] = useState(animated)\n\n    const handlePageSearch = useCallback ( (results, resultdesc) => {\n      setgeojson(results)\n      // console.log(resultdesc)\n      // setresultDesc((desc)=>{return  {\n      //   ...desc,...resultdesc\n      // }})\n      setresultDesc(resultdesc)\n    }, [])\n    \n    const handleSearchStart = useCallback ( () => {\n      // console.log('set clear trigger')\n      setclearResultsTrigger(Math.random())\n      setresultDesc({totalResults:0, totalLoaded:0 })\n      }, [])\n    \n      const handleSearchComplete =  (searchDesc) => {\n        if(altitude > pointSearchMaxAltitude) {\n          setgoToDate(!animated?searchDesc.firstResultDate:searchDesc.lastResultDate)\n        } else {\n          if(animated) setgoToDate(searchDesc.lastResultDate)\n        }\n        // setresultDesc(()=>{return {...resultDesc, ...searchDesc}})\n    }\n\n  //   useEffect(() => {\n  //     setanim(animated)\n  // }, [animated]);\n\n\n    return (\n        <SearchManager \n          searchdate={searchDate} \n          searchpoint={searchPoint} \n          mission={mission} \n          altitude={altitude} \n          onSearchStart={handleSearchStart}\n          onPageSearch={handlePageSearch}\n          onSearchComplete={handleSearchComplete}\n        />\n    )\n}\n\nexport default SearchManagerContainer;\n\n\n\n","import React, {  useGlobal } from 'reactn';\nimport './GenericLabel.css' \n\nfunction ProductInfolContainer() {\n\n    const [closestItem, ] = useGlobal('closestItem')\n\n\n    return (\n        <div className='GenericLabel Small'>{closestItem?closestItem.userProperties.title:''}</div>\n     )\n}\n\nexport default ProductInfolContainer;\n","//todo: replace hotkeys by rook useKey\n\nimport React, {useRef} from 'react'\nimport { useGlobal } from 'reactn'\n\nimport './App.css'\nimport Earth from '../earth'\nimport { useHotkeys } from 'react-hotkeys-hook'\nimport ControlPanel from \"../controlpanel\"\nimport InfoPanel from \"../infopanel\"\nimport MissionSelectorContainer from \"../../containers/MissionSelectorContainer\"\nimport MapSelectorContainer from \"../../containers/MapSelectorContainer\"\nimport ColorSelectorContainer from \"../../containers/ColorSelectorContainer\"\nimport DemSelectorContainer from \"../../containers/DemSelectorContainer\"\nimport AltitudeLabelContainer from \"../../containers/AltitudeLabelContainer\"\nimport SearchLabelContainer from \"../../containers/SearchLabelContainer\"\n\nimport DateManagerContainer from '../../containers/DateManagerContainer'\nimport SearchManagerContainer from '../../containers/SearchManagerContainer'\nimport { useFullscreen } from 'rooks';\nimport ProductInfolContainer from '../../containers/ProductInfolContainer'\n\nfunction App() {\n    \n    \n\n    const [ mission,  ] = useGlobal('mission');\n    // const [ mapSettings, ] = useGlobal('mapSettings')\n\n    const container = useRef();\n    const {\n        // isEnabled,\n        toggle\n        // onChange,\n        // onError,\n        // request,\n        // exit,\n        // isFullscreen,\n        // element\n    } = useFullscreen();\n\n    useHotkeys(\"f\", ()=>{toggle(container.current)} )  \n\n    return (\n        <div className=\"App\" ref={container} id=\"container\">\n             {/* <FullScreen handle={fshandle}> */}\n                <Earth id=\"globe\" />\n                {/* <DateManager startdate={startdate} onDateChange={changeDate} onFinalDateChange={finalChangeDate} animated={searching}/> */}\n                <DateManagerContainer/>\n                <SearchManagerContainer/>\n                <ControlPanel active=\"false\" >\n                    {/* <div class='logo'><img  src='./images/ESA_logo_2020_White.png' height=\"40\" ></img></div> */}\n                    {/* <div className='logo'><img alt='' src='./images/EOi_logo.png' height=\"100\" ></img></div> */}\n                    <div className='horizontalContainer'>\n                        <MissionSelectorContainer></MissionSelectorContainer>\n                        <MapSelectorContainer ></MapSelectorContainer>\n                        <div className='horizontalContainer'>\n                            <ColorSelectorContainer></ColorSelectorContainer>\n                            <DemSelectorContainer></DemSelectorContainer>\n                        </div>\n                    </div>\n                </ControlPanel>\n                <InfoPanel>\n                    <div className='MissionLabel'>{mission}</div>\n                    <AltitudeLabelContainer/>\n                    <SearchLabelContainer/>\n                    <ProductInfolContainer/>\n\n                </InfoPanel>\n\n            {/* </FullScreen> */}\n        </div>\n    )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { setGlobal } from 'reactn';\n\n\nexport  function initGlobalStates() {\n    console.log(\"init global: \"+(new Date()))\n\n    // Set current time as global state\n    // setGlobal({appdate: ((new Date()).getTime())})\n    // setGlobal({searchepoch: ((new Date()).getTime())})\n    // setGlobal({mission: 'S1'})\n    // setGlobal({searching: false})\n    // setGlobal({apppolygon: ''})\n    // setGlobal({replace: true})\n    // setGlobal({startend: {start:0, end:0}})\n    // setGlobal({setApppickeditems: []})\n\n\n    setGlobal({\n        mission: 'S1',\n        altitude: '5000000',\n        appColor: '#e0963a',\n        position: {\n            clon:'0.5',\n            clat:'45' \n        },\n        viewDate: new Date(),\n        goToDate: new Date(),\n        searchDate: new Date(),\n        resetStartDateTrigger: null,\n        pointSearchMaxAltitude: 3000000,\n        selectedProduct: null,\n        searchPoint: 'POINT(40 40)',\n        geojson: null,\n        closestItem: null,\n        addQuicklookWMSTrigger: null,\n        moveToClosestItemTrigger: null,\n        resultDesc: {\n            firstItemDate: null,\n            lastItemDate: null,\n            totalResults: 0,\n            totalLoaded: 0\n        },\n        animated: false,\n        clearResultsTrigger: null,\n        mapSettings: {\n            atmosphere: true,\n            starfield: true,\n            names: false,\n            background: 0,\n            overlay:1,\n            dem: false,\n            satellites: true,\n            quicklooks: true,\n            projection: 0\n        }\n    })\n    \n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app';\nimport reportWebVitals from './reportWebVitals';\nimport {initGlobalStates} from \"./initGlobalStates\"\n\ninitGlobalStates()\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}