{"version":3,"sources":["components/earth/satelliteLayer.js","components/earth/layerConfig.js","components/earth/useEww.js","components/earth/Earth.js","components/datemanager/components/datelabel2/DateLabel.js","components/datemanager/components/datecontroller/useClock.js","components/datemanager/components/datecontroller/DateController.js","components/datemanager/components/dateselector/DateSelectorScale.js","components/datemanager/components/dateselector/DateSelector.js","components/datemanager/DateManager.js","components/controlpanel/ControlPanel.js","components/missionselector/MissionSelector.js","containers/MissionSelectorContainer.js","components/mapselector/MapSelector.js","containers/MapSelectorContainer.js","containers/HuePickerContainer.js","containers/DateManagerContainer.js","components/app/App.js","reportWebVitals.js","initGlobalStates.js","index.js"],"names":["Position","WorldWind","modelsLayer","RenderableLayer","fetch","then","response","json","satelliteData","addRenderable","wwx","Model","rotations","x","y","z","headingAxis","headingAdd","headingMultiply","preRotations","scale","translations","ignoreLocalTransforms","bgLayers","service","layerNames","title","numLevels","format","size","sector","Sector","FULL_SPHERE","levelZeroDelta","Location","ovLayers","useEww","id","clon","clat","alt","starfield","atmosphere","background","overlay","names","satellites","dem","eww","useRef","useState","setProjection","geojsonlayers","setGeojsonlayers","latitude","longitude","altitude","aoi","pickedItems","ewwstate","setEwwState","copDemOn","bgIndex","ovIndex","northUp","wwd","current","headingIncrement","navigator","heading","setTimeout","runOperation","Math","abs","redraw","toggleAtmosphere","bool","console","log","getLayerByName","enabled","toggleModel","toggleStarfield","toggleNames","toggleBg","layers","length","displayName","toggleOv","toggleDem","elevationModel","EarthElevationModel","ElevationModel","addCoverage","TiledElevationCoverage","coverageSector","resolution","retrievalImageFormat","minElevation","maxElevation","urlBuilder","WcsTileUrlBuilder","globe","name","i","enableRenderables","time","a","includes","j","renderables","renderable","renderableStartDate","Date","userProperties","earthObservation","acquisitionInformation","acquisitionParameter","acquisitionStartTime","getTime","renderableStopDate","acquisitionStopTime","timeOffset","moveTo","goToAnimator","travelTime","goTo","setGlobeStates","lo","lookAtLocation","la","al","range","vp","bl","tr","view","viewport","polygon","pickTerrain","canvasCoordinates","height","terrainObject","position","round","err","width","getViewPolygon","viewpolygon","handleDoubleClick","recognizer","useEffect","removeAllCoverages","WorldWindow","redrawCallbacks","push","BasicWorldWindowController","prototype","applyLimits","WWMath","clamp","appDoubleClickRecognizer","ClickRecognizer","numberOfClicks","maxClickInterval","worldWindowController","clickDownRecognizer","recognizeSimultaneouslyWith","appDoubleTapRecognizer","TapRecognizer","numberOfTaps","tapDownRecognizer","configuration","baseUr","baseUrl","slice","starFieldLayer","wwwx","StarFieldLayer","atmosphereLayer","AtmosphereLayer","quicklookLayer","layer","l","WmsLayer","addLayer","deepPicking","removeGeojson","removeLayer","addGeojson","url","epoch","renderableLayer","properties","updated","ceil","random","GeoJSONParser","load","geometry","placemarkAttributes","PlacemarkAttributes","imageScale","imageColor","Color","labelAttributes","offset","Offset","OFFSET_FRACTION","isPointType","isMultiPointType","attributes","isLineStringType","isMultiLineStringType","drawOutline","outlineColor","interiorColor","red","green","blue","outlineWidth","isPolygonType","isMultiPolygonType","ShapeAttributes","highlightAttributes","addWMS","setTime","toggleProjection","prevProj","supportedProjections","newProj","indexOf","projection","ProjectionWgs84","ProjectionEquirectangular","ProjectionMercator","ProjectionPolarEquidistant","Earth","useGlobal","mapSettings","setMapSettings","viewDate","setSatellites","mapSet","setMapSet","sat","setSat","useHotkeys","style","left","DateLabel","date","highlight","animated","className","getUTCFullYear","dateFormat","toUpperCase","useClock","autoStart","initdate","setDate","playing","step","refreshrate","ldate","intervalRef","timeoutRef","start","setInterval","toJSON","togglePause","clearTimeout","clearInterval","stop","reset","increaseSpeed","decreaseSpeed","forceDate","newdate","DateController","startdate","onDateChange","lastTap","setLasttap","onClick","now","DateSelectorScale","zoomfactor","opacity","timescale","setTimescale","useLayoutEffect","_start","_zoom","day","month","hour","year","monthcode","minute","lastday","lastmonth","lastyear","lasthour","lastminute","tics","offsetHeight","refdate","getUTCDate","getUTCMonth","getUTCHours","getUTCMinutes","class","pos","label","pad","map","item","div","top","number","str","scaleText","ref","DateSelector","onFinalDateChange","onStepChange","MAXZOOM","DEFZOOM","selector","lastZoom","lastPos","scaledate","setScaledate","lastStartdate","setlLastStartdate","active","setActive","setStep","stepLabel","setStepLabel","setZoomfactor","doubleTap","handleDoubleTap","useSpring","posxy_drag","setyOnDrag","xy2","sety2","posy_wheel","setyOnWheel","bind","useGesture","onDragEnd","onWheel","delta","first","down","movement","direction","velocity","xy","memo","getValue","immediate","config","onFrame","onRest","onDrag","event","zoom","touches","shiftKey","temp","lastzoom","lastdelta","currentzoom","decay","drag","useTouch","deltaoffset","duration","setValue","moveToDate","points","DateManager","selectorStartdate","setselectorStartdate","controllerStartdate","setcontrollerStartdate","labeldate","setLabelDate","dateLabelHighlight","setDateLabelHighlight","ControlPanel","props","open","setOpen","mr","set","vxvy","max","right","icon","baselineExplore","children","MissionSelector","initialmission","onMissionChange","mission","setMission","src","C_MissionSelector","MapSelector","onMapSettingsChange","draggable","C_MapSelector","HuePickerContainer","appcolor","color","onChangeComplete","document","documentElement","setProperty","hex","C_DateManager","setViewDate","App","handle","useFullScreenHandle","fullScreen","enter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","setGlobal","appColor","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.eebcd1ff.chunk.js","sourcesContent":["import WorldWind from 'webworldwind-esa';\nimport wwx from 'webworldwind-x';\n\n// import SatelliteModel from './wwwx/shapes/satellites/Model';\n\n// const Location = WorldWind.Location,\n//     Sector = WorldWind.Sector,\n//     WmsLayer = WorldWind.WmsLayer;\n\n// class modelsLayer extends Layer {\n//     constructor(){\n//         super({\n//             service: \"https://tiles.maps.eox.at/wms\",\n//             layerNames: \"s2cloudless-2018\",\n//             title: \"Sentinel Cloudless Layer\",\n//             sector: new Sector(-90, 90, -180, 180),\n//             levelZeroDelta: new Location(45, 45),\n//             numLevels: 19,\n//             format: \"image/jpg\",\n//             opacity: 1,\n//             size: 256,\n//             version: \"1.3.0\"\n//         });\n//     }\n// }\n\n// export default SentinelCloudlessLayer;\nconst {\n    Position,\n    RenderableLayer\n} = WorldWind;\n\nconst modelsLayer = new RenderableLayer('Model');\nfetch('./data/sentinel1/s1.json').then(response => {\n    return response.json();\n}).then(satelliteData => {\n    modelsLayer.addRenderable(new wwx.Model(satelliteData, {\n        rotations: {\n            x: 0,\n            y: 0,\n            z: 0,\n            headingAxis: [0, 0, 1],\n            headingAdd: -90,\n            headingMultiply: 1\n        },\n        preRotations: {\n            x: 0,\n            y: 0,\n            z: 0\n        },\n        scale: 500000,\n        translations: {\n            x: -0.1,\n            y: -0.1,\n            z: 0\n        },\n        ignoreLocalTransforms: true\n    }, new Position(51, 14, 100000)));\n});\nexport default modelsLayer","import WorldWind from \"webworldwind-esa\";\n\nexport const bgLayers = [\n    {\n        service: \"https://tiles.maps.eox.at/wms\",\n        layerNames: \"s2cloudless-2018\",\n        title: \"s2cloudless-2018\",\n        numLevels: 19,\n        format: \"image/png\",\n        size: 256,\n        sector: WorldWind.Sector.FULL_SPHERE,\n        levelZeroDelta: new WorldWind.Location(90, 90)\n    },\n    {\n        service: \"https://tiles.esa.maps.eox.at/wms\",\n        layerNames: \"s2cloudless-2018\",\n        title: \"s2cloudless-2018 esa\",\n        numLevels: 19,\n        format: \"image/png\",\n        size: 256,\n        sector: WorldWind.Sector.FULL_SPHERE,\n        levelZeroDelta: new WorldWind.Location(90, 90)\n    },\n    {\n        service: \"https://tiles.esa.maps.eox.at/wms\",\n        layerNames: \"osm\",\n        title: \"osm\",\n        numLevels: 19,\n        format: \"image/png\",\n        size: 256,\n        sector: WorldWind.Sector.FULL_SPHERE,\n        levelZeroDelta: new WorldWind.Location(90, 90)\n    },\n    {\n        service: \"https://tiles.esa.maps.eox.at/wms\",\n        layerNames: \"terrain-light\",\n        title: \"terrain-light\",\n        numLevels: 19,\n        format: \"image/png\",\n        size: 256,\n        sector: WorldWind.Sector.FULL_SPHERE,\n        levelZeroDelta: new WorldWind.Location(90, 90)\n    },\n    {\n        service: \"https://tiles.maps.eox.at/wms\",\n        layerNames: \"terrain\",\n        title: \"terrain\",\n        numLevels: 19,\n        format: \"image/png\",\n        size: 256,\n        sector: WorldWind.Sector.FULL_SPHERE,\n        levelZeroDelta: new WorldWind.Location(90, 90)\n    }\n]\nexport const ovLayers = [\n\n    {\n        service: \"https://tiles.maps.eox.at/wms\",\n        layerNames: \"hydrography\",\n        title: \"hydrography\",\n        numLevels: 19,\n        format: \"image/png\",\n        size: 256,\n        sector: WorldWind.Sector.FULL_SPHERE,\n        levelZeroDelta: new WorldWind.Location(90, 90)\n    },\n    {\n        service: \"https://tiles.maps.eox.at/wms\",\n        layerNames: \"overlay_bright\",\n        title: \"overlay_bright\",\n        numLevels: 19,\n        format: \"image/png\",\n        size: 256,\n        sector: WorldWind.Sector.FULL_SPHERE,\n        levelZeroDelta: new WorldWind.Location(90, 90)\n    }\n]\n\n\n","import  { useState, useEffect, useRef } from \"react\";\nimport WorldWind from \"webworldwind-esa\";\n// import StarFieldLayer from \"./wwwx/layer/starfield/StarFieldLayer\"\n// import TexturedSurfacePolygon from './wwwx/shapes/TexturedSurfacePolygon'\nimport wwwx from \"webworldwind-x\";\nimport modelsLayer from './satelliteLayer';\nimport {bgLayers, ovLayers} from './layerConfig';\n\n\n// BasicWorldWindowController.prototype.applyLimits = function () {\n//     var navigator = this.wwd.navigator;\n\n//     // Clamp latitude to between -90 and +90, and normalize longitude to between -180 and +180.\n//     navigator.lookAtLocation.latitude = WWMath.clamp(navigator.lookAtLocation.latitude, -90, 90);\n//     navigator.lookAtLocation.longitude = Angle.normalizedDegreesLongitude(navigator.lookAtLocation.longitude);\n\n//     // Clamp range to values greater than 1 in order to prevent degenerating to a first-person navigator when\n//     // range is zero.\n//     navigator.range = WWMath.clamp(navigator.range, 1, Number.MAX_VALUE);\n\n//     // Normalize heading to between -180 and +180.\n//     navigator.heading = Angle.normalizedDegrees(navigator.heading);\n\n//     // Clamp tilt to between 0 and +90 to prevent the viewer from going upside down.\n//     navigator.tilt = WWMath.clamp(navigator.tilt, 0, 90);\n\n//     // Normalize heading to between -180 and +180.\n//     navigator.roll = Angle.normalizedDegrees(navigator.roll);\n\n//     // Apply 2D limits when the globe is 2D.\n//     if (this.wwd.globe.is2D() && navigator.enable2DLimits) {\n//         // Clamp range to prevent more than 360 degrees of visible longitude. Assumes a 45 degree horizontal\n//         // field of view.\n//         var maxRange = 2  Math.PI  this.wwd.globe.equatorialRadius;\n//         navigator.range = WWMath.clamp(navigator.range, 1, maxRange);\n\n//         // Force tilt to 0 when in 2D mode to keep the viewer looking straight down.\n//         navigator.tilt = 0;\n//     }\n// };\n\nexport function useEww({ id, clon, clat, alt, starfield, atmosphere, background, overlay, names, satellites, dem }) {\n    // console.log('useEww renders')\n    \n  \n    const eww = useRef(null)\n    const [projection, setProjection] = useState(\"3D\")\n    // const [aoi, setAoi] = useState({type: null, value: null})\n    const [aoi, setAoi] = useState('')\n    const [geojsonlayers, setGeojsonlayers] = useState([])\n    const [quicklooklayers, setQuicklooklayers] = useState([])\n    const [ewwstate, setEwwState] = useState({latitude: clat, longitude: clon, altitude: alt, aoi:'', pickedItems: []})\n    const copDemOn = useRef(dem)\n    const bgIndex = useRef(0)\n    const ovIndex = useRef(0)\n    const copdemlayer = useRef(0)\n    const nasademlayer = useRef(0)\n\n\n    // Turn the globe up north\n    function northUp() {\n        const wwd = eww.current\n        let headingIncrement = wwd.navigator.heading / -20;\n        let runOperation = () => {\n            if (Math.abs(wwd.navigator.heading) > Math.abs(headingIncrement)) {\n                wwd.navigator.heading += headingIncrement;\n                setTimeout(runOperation, 10);\n            } else {\n                wwd.navigator.heading = 0;\n            }\n            wwd.redraw();\n        };\n        setTimeout(runOperation, 10);\n    }\n\n    //toggle atmosphere\n    function toggleAtmosphere(bool) {\n        console.log('toggleAtmosphere: '+bool)\n        getLayerByName('Atmosphere').enabled = (bool!= null)?bool:!getLayerByName('Atmosphere').enabled\n        // getLayerByName('Atmosphere').enabled = bool\n        // console.log(eww.current.layers)\n        eww.current.redraw();\n    }\n    //toggle model\n    function toggleModel(bool) {\n        console.log('toggleModel: '+bool)\n        getLayerByName('Model').enabled = (bool!= null)?bool:!getLayerByName('Model').enabled\n        eww.current.redraw();\n    }\n\n    //toggle starField\n    function toggleStarfield(bool) {\n        console.log('toggleStarfield: '+bool)\n        getLayerByName('StarField').enabled = (bool!= null)?bool:!getLayerByName('StarField').enabled\n        eww.current.redraw();\n    }\n\n    //toggle name overlay\n    function toggleNames(bool) {\n        console.log('toggleNames: '+bool)\n        getLayerByName('overlay_bright').enabled = (bool!= null)?bool:!getLayerByName('overlay_bright').enabled\n        eww.current.redraw();\n    }\n    //toggle background overlay\n    function setBg(background) {\n        getLayerByName(background).enabled = true\n        eww.current.layers[bgIndex.current].enabled=false\n        eww.current.redraw();\n    }\n    function toggleBg(background) {\n        // console.log(\"toggleBg: \"+background+\"/\"+bgLayers.length)\n        eww.current.layers[bgIndex.current].enabled=false\n        bgIndex.current = (background === null)?(bgIndex.current + 1):(background-1)%bgLayers.length\n        console.log(\"Background Layer [\"+(bgIndex.current+1)+\"/\"+bgLayers.length+\"]: \"+eww.current.layers[bgIndex.current].displayName)\n        eww.current.layers[bgIndex.current].enabled=true\n        eww.current.redraw();\n        // setEwwState((ewwstate) => { return {...ewwstate, background: bgIndex.current}})\n    }\n    function toggleOv(overlay) {\n        console.log(overlay)\n        eww.current.layers[ovIndex.current+bgLayers.length].enabled=false\n        // ovIndex.current = (ovIndex.current + 1)%ovLayers.length\n        ovIndex.current = (overlay === null)?(ovIndex.current + 1):(overlay-1)%ovLayers.length\n        console.log(ovIndex.current)\n        // console.log(\"Overlay Layer: \"+eww.current.layers[ovIndex.current+bgLayers.length].displayName)\n        // console.log(\"Overlay Layer [\"+(ovIndex.current+bgLayers.length+1)+\"/\"+ovLayers.length+\"]: \"+eww.current.layers[ovIndex.current+bgLayers.length].displayName)\n\n        eww.current.layers[ovIndex.current+bgLayers.length].enabled=true\n        eww.current.redraw()\n    }\n    \n    //toggle DEM \n    function toggleDem(dem) {\n        console.log(\"Copernicus Dem: \" + dem)\n        var elevationModel\n        if(!copDemOn.current) {\n            console.log('Switching to Copernicus Dem')\n            elevationModel = new WorldWind.ElevationModel();\n            elevationModel.addCoverage(new WorldWind.TiledElevationCoverage({\n                coverageSector: WorldWind.Sector.FULL_SPHERE,\n                resolution: 0.008333333333333,\n                retrievalImageFormat: \"image/tiff\",\n                minElevation: -11000,\n                maxElevation: 8850,\n                urlBuilder: new WorldWind.WcsTileUrlBuilder(\"https://dem.esa.maps.eox.at/elevation\", \"copdem\", \"2.0.1\")\n                }));    \n            \n        } else {\n            console.log('Switching to NASA Dem')\n            elevationModel = new WorldWind.EarthElevationModel()\n        }\n        eww.current.globe.elevationModel = elevationModel\n        eww.current.redraw();\n        copDemOn.current = !copDemOn.current\n        // setDemOn(copDemOn.current)\n    }\n\n \n    function  getViewPolygon () {\n        let view = eww.current.viewport\n        let area = {}\n        let polygon = ''\n        // console.log('view: ' + view.x + '/' + view.y + '/' + view.width + '/' + view.height);\n\n        let bl ;\n        try { \n            bl =  eww.current.pickTerrain(eww.current.canvasCoordinates(view.x, view.y + view.height)).terrainObject().position\n            bl.latitude = Math.round(bl.latitude * 10000)/10000\n            bl.longitude = Math.round(bl.longitude * 10000)/10000\n        }\n        catch(err) {bl = null;}\n\n\n        let tr ;\n        try { \n            tr = eww.current.pickTerrain(eww.current.canvasCoordinates(view.x + view.width, view.y)).terrainObject().position\n            tr.latitude = Math.round(tr.latitude * 10000)/10000\n            tr.longitude = Math.round(tr.longitude * 10000)/10000\n        }\n        catch(err) {tr = null;}\n\n        //console.log(bl.longitude+'/'+bl.latitude+'/'+tr.longitude+'/'+tr.latitude);\n        if(bl == null || tr == null )  {\n            //   area = {type:\"bbox\", value:\"-180,-90,180,90\"};\n              polygon = ''\n        } else {\n              area = {\n                    type: \"bbox\",\n                    value:\n                           bl.longitude +','\n                          + bl.latitude +','\n                          +tr.longitude +','\n                          +tr.latitude\n              };\n\n              polygon = 'POLYGON((' \n                + bl.longitude + ' ' + bl.latitude + ',' \n                + tr.longitude + ' ' + bl.latitude + ',' \n                + tr.longitude + ' ' + tr.latitude + ',' \n                + bl.longitude + ' ' + tr.latitude + ',' \n                + bl.longitude + ' ' + bl.latitude + '))' \n        }\n        return polygon\n\n    }\n    \n    const addGeojson = (url,epoch) => {\n\n        // console.log('replace: '+replace)\n\n        function shapeConfigurationCallback(geometry, properties) {\n            let configuration = {};\n            configuration.userProperties = properties\n    \n            let placemarkAttributes = new WorldWind.PlacemarkAttributes(null);\n            placemarkAttributes.imageScale = 10;\n            placemarkAttributes.imageColor = new WorldWind.Color(0, 1, 1, 0.2);\n            placemarkAttributes.labelAttributes.offset = new WorldWind.Offset(\n                WorldWind.OFFSET_FRACTION, 5,\n                WorldWind.OFFSET_FRACTION, 5);\n            //placemarkAttributes.imageSource = whiteDot;\n    \n    \n            if (geometry.isPointType() || geometry.isMultiPointType()) {\n                configuration.attributes = new WorldWind.PlacemarkAttributes(placemarkAttributes);\n                \n            } else if (geometry.isLineStringType() || geometry.isMultiLineStringType()) {\n                configuration.attributes.drawOutline = true;\n                configuration.attributes.outlineColor = new WorldWind.Color(\n                    0.1 * configuration.attributes.interiorColor.red,\n                    0.3 * configuration.attributes.interiorColor.green,\n                    0.7 * configuration.attributes.interiorColor.blue,\n                    1\n                );\n                configuration.attributes.outlineWidth = 1;\n            } else if (geometry.isPolygonType() || geometry.isMultiPolygonType()) {\n                configuration.attributes = new WorldWind.ShapeAttributes(null);\n                configuration.attributes.interiorColor = new WorldWind.Color(1, 0, 0, 0.2);\n                configuration.attributes.outlineColor = new WorldWind.Color(1, 0, 0, 0.3);\n\n                configuration.highlightAttributes = new WorldWind.ShapeAttributes(configuration.attributes);\n                configuration.highlightAttributes.outlineColor = new WorldWind.Color(1, 0, 0, 0.4);\n                configuration.highlightAttributes.interiorColor = new WorldWind.Color(1, 0, 0, 0);\n                // configuration.attributes.outlineWidth = 0.3;\n\n                // configuration.attributes.applyLighting = true;\n                // configuration.attributes.imageSource = properties.quicklookUrl\n\n            }\n    \n            //console.log(configuration.attributes);\n            return configuration;\n        }\n\n        \n        function loadCompleteCallback() {\n            console.log(renderableLayer)\n            setGeojsonlayers((geojsonlayers)=>[...geojsonlayers,renderableLayer])\n            enableRenderables(epoch) // uncomment to disable renderables\n            eww.current.redraw();\n        }\n    \n        // if (replace) removeGeojson()\n        let renderableLayer = new WorldWind.RenderableLayer('Products: '+url.properties.updated+Math.ceil(Math.random() * 10000))\n        \n        eww.current.addLayer(renderableLayer);\n        // setGeojsonlayers((geojsonlayers)=>[...geojsonlayers,renderableLayer])\n        // setGeojsonlayers((geojsonlayers)=>[...geojsonlayers,renderableLayer])\n        // setGeojsonlayers(eww.current.layers)\n        let geoJson = new WorldWind.GeoJSONParser(url);\n        geoJson.load(loadCompleteCallback, shapeConfigurationCallback, renderableLayer);\n        // setGeojsonlayers((geojsonlayers)=>[...geojsonlayers,renderableLayer])        \n    }\n\n    function removeGeojson() {\n        for(let i=0;i<geojsonlayers.length;i++) {\n          eww.current.removeLayer(geojsonlayers[i])\n        //   console.log('removing json layers: ')\n        //   console.log(geojsonlayers[i])\n        }\n        setGeojsonlayers((geojsonlayers)=>[])\n        // console.log(geojsonlayers)\n        eww.current.redraw();\n      }\n\n    function addWMS() {\n    }\n\n    function addQuicklookWMS(renderable) {\n\n        console.log(renderable.computeSectors(eww.current.drawContext))\n        console.log(WorldWind.Sector.FULL_SPHERE)\n\n        // for S2:  \n        // https://view.onda-dias.eu/instance00/ows?&service=WMS&request=GetMap&layers=S2L1C_TRUE_COLOR&styles=&format=image/png&transparent=true&version=1.1.1&width=1500&height=1000&srs=EPSG:4326&bbox=12.357903,41.800495,12.625694,41.984760\n\n        \n        // https://view.onda-dias.eu/instance00/ows?&service=WMS&request=GetMap&layers=S1B_IW_GRDH_1SDV_20190520T050758_20190520T050823_016323_01EB81_6EB6&styles=&format=image%2Fpng&transparent=true&version=1.1.1&width=256&height=256&srs=EPSG%3A3857&bbox=2035059.441064533,7044436.526761846,2191602.4749925737,7200979.560689885\n        let wmsConfigQL = {\n            service: \"https://view.onda-dias.eu/instance00/ows\",\n            // layerNames: renderable.userProperties.title,\n            // layerNames: 'S2L1C_TRUE_COLOR',\n            layerNames: 'S1_IW_GRDH_FullResolution',\n            \n            // title: renderable.userProperties.title,\n            title: 'quicklook',\n            numLevels: 19,\n            format: \"image/png\",\n            size: 256,\n            sector: renderable.computeSectors(eww.current.drawContext)[0],\n            // sector: renderable.sector,\n            // sector: WorldWind.Sector.FULL_SPHERE,\n            levelZeroDelta: new WorldWind.Location(90, 90)\n        }\n\n        // let wmsConfigQL = {\n        //     service: \"https://tiles.maps.eox.at/wms\",\n        //     layerNames: \"overlay_bright\",\n        //     title: \"overlay_bright\",\n        //     numLevels: 19,\n        //     format: \"image/png\",\n        //     size: 256,\n        //     sector: WorldWind.Sector.FULL_SPHERE,\n        //     levelZeroDelta: new WorldWind.Location(90, 90)\n        // }\n        // eww.current.removeLayer(getLayerByName('quicklook') )\n        let qllayer =  new WorldWind.WmsLayer(wmsConfigQL, renderable.userProperties.date)\n        eww.current.addLayer(qllayer)\n        eww.current.redraw()\n        console.log(eww.current.layers)\n    }\n\n    function getLayerByName(name) {\n        for (let i = 0; i < eww.current.layers.length; i++) {\n            // console.log('display name: '+eww.current.layers[i].displayName)\n            if (eww.current.layers[i].displayName === name) return eww.current.layers[i]\n        }\n        return null\n    }\n\n    async function enableRenderables(time) {\n        let timeOffset = 1000 * 60 * 60 * 3 // 3 hours\n        for (let i = 0; i < eww.current.layers.length; i++) {\n            if (eww.current.layers[i].displayName.includes('Products:')) {\n                \n                for (let j = 0; j < eww.current.layers[i].renderables.length; j++) {\n                    let renderable = eww.current.layers[i].renderables[j]\n                    if (time != 0) {\n                        let renderableStartDate = (new Date(renderable.userProperties.earthObservation.acquisitionInformation[0].acquisitionParameter.acquisitionStartTime)).getTime()\n                        let renderableStopDate = (new Date(renderable.userProperties.earthObservation.acquisitionInformation[0].acquisitionParameter.acquisitionStopTime)).getTime()\n                        renderable.enabled = (renderableStartDate <= time+timeOffset/2 && renderableStopDate >= time-timeOffset/2) ? true : false   \n                    } else {\n                        renderable.enabled = false\n                    }         \n                }\n            }\n            if (eww.current.layers[i].displayName === 'quicklook') {\n                // eww.current.layers[i].enabled = \n            }\n        }\n\n    }\n\n    function addQuicklook(renderable) {\n\n        function imageLoader(url, useCredentials) {\n            return new Promise((resolve, reject) => {\n                const img = new Image();\n        \n                img.onload = function() {\n                    resolve(img);\n                };\n        \n                img.onerror = function(e){\n                    reject(e);\n                };\n        \n                img.crossOrigin = useCredentials ? 'Use-Credentials' : 'Anonymous';\n                img.src = url;\n                console.log(' adding QL')\n            });\n        }\n\n\n        // console.log(' adding QL')\n        //  console.log(renderable.attributes)\n        // let quicklook =  new TexturedSurfacePolygon(renderable.sector)\n        // let quicklookLayer = new WorldWind.RenderableLayer('Quicklooks')\n        // // quicklookLayer.addRenderable(quicklook)\n        // // setQuicklooklayers((quicklooklayers)=>[...quicklooklayers,quicklookLayer])\n        // // eww.current.addLayer(quicklookLayer)\n        // let ql = new Image()\n        // ql.src = renderable.userProperties.quicklookUrl\n        // quicklook.image = ql\n        \n        imageLoader(renderable.userProperties.quicklookUrl,true).then(image => {\n            let quicklookLayer = getLayerByName('Quicklooks')\n            removeQuicklooks()\n            let footprint = [\n                renderable.boundaries[0][0],\n                renderable.boundaries[0][3],\n                renderable.boundaries[0][2],\n                renderable.boundaries[0][1]\n            ]\n            // footprint[0].pop()\n            console.log(footprint)\n            let quicklook =  new wwwx.TexturedSurfacePolygon(footprint,renderable.attributes)\n            quicklook.maxImageWidth = 64\n            quicklook.maxImageHeight = 64\n            \n            quicklook.image = image\n            quicklookLayer.addRenderable(quicklook)\n            eww.current.addLayer(quicklookLayer)\n            eww.current.redraw()\n        })\n    }\n\n    function removeQuicklooks() {\n        getLayerByName('Quicklooks').removeAllRenderables()\n        eww.current.redraw()\n    }\n\n    function setTime(epoch) {\n        getLayerByName('StarField').time = getLayerByName('Atmosphere').time = new Date(epoch)\n        enableRenderables(epoch)\n        eww.current.redraw();\n     }\n\n     function moveTo(clat, clon, alt) {\n        setTimeout(() => {\n            eww.current.goToAnimator.travelTime = 1000;\n            eww.current.goTo(new WorldWind.Position(clat, clon, alt));\n            eww.current.redraw();\n            }, 2000)\n        }\n\n\n    function toggleProjection() {\n        setProjection( prevProj => {\n          console.log(\"prevProjection: \"+prevProj)\n          let supportedProjections = [ \"3D\", \"Equirectangular\", \"Mercator\"];\n          let newProj = (supportedProjections.indexOf(prevProj) + 1)%supportedProjections.length\n          console.log(\"newProjection: \"+supportedProjections[newProj])\n          switch (supportedProjections[newProj]) {\n            case \"3D\":\n                eww.current.globe.projection = new WorldWind.ProjectionWgs84();\n                break;\n            case \"Equirectangular\":\n                eww.current.globe.projection = new WorldWind.ProjectionEquirectangular();\n                break;\n            case \"Mercator\":\n                eww.current.globe.projection = new WorldWind.ProjectionMercator();\n                break;\n            case \"North Polar\":\n                eww.current.globe.projection = new WorldWind.ProjectionPolarEquidistant(\"North\");\n                break;\n            case \"South Polar\":\n                eww.current.globe.projection = new WorldWind.ProjectionPolarEquidistant(\"South\");\n                break;\n            default:\n            eww.current.globe.projection = new WorldWind.ProjectionWgs84();\n            }\n          eww.current.redraw();\n          return supportedProjections[newProj]\n          })      \n      }\n\n    // callback from eww   \n    const setGlobeStates = () => {\n        \n        let lo = eww.current.navigator.lookAtLocation.longitude\n        let la = eww.current.navigator.lookAtLocation.latitude\n        let al = eww.current.navigator.range\n        let vp = (al < 2000000?getViewPolygon():'')\n\n        setEwwState((ewwstate) => { return {...ewwstate, longitude:lo, latitude: la, altitude: al, viewpolygon: vp}}) \n\n    }\n\n    // handler for tap/click\n\n    const handleClick  = (recognizer) => {\n        console.log('click')\n        let x = recognizer.clientX\n        let y = recognizer.clientY\n        // Perform the pick. Must first convert from window coordinates to canvas coordinates, which are\n        // relative to the upper left corner of the canvas rather than the upper left corner of the page.\n        let pickList = eww.current.pick(eww.current.canvasCoordinates(x, y));\n        // console.log(pickList)\n        if (pickList.terrainObject()) {\n            // position = pickList.terrainObject().position;\n            // store list of selected footprints in a string for later comparison\n            eww.current.removeLayer(getLayerByName('quicklook') )\n            // de-highlight all rendereables\n            for (let i = 0; i < eww.current.layers.length; i++) {\n                if (eww.current.layers[i].displayName.includes('Products:')) {                    \n                    for (let j = 0; j < eww.current.layers[i].renderables.length; j++) {\n                        let renderable = eww.current.layers[i].renderables[j]\n                        renderable.highlighted = false\n                    }\n                }\n            }\n    \n            // ... and now highlight all picked rendereables\n            let pickedItems = []\n            for (let i = 0; i < pickList.objects.length; i++) {\n                if (pickList.objects[i].userObject instanceof WorldWind.SurfaceShape) {\n                    pickedItems.push(pickList.objects[i].userObject) \n                    pickList.objects[i].userObject.highlighted = !pickList.objects[i].userObject.highlighted\n                    \n                    addQuicklookWMS(pickList.objects[i].userObject)\n                }\n            }\n            // console.log(pickedItems)\n            setEwwState((ewwstate) => { return {...ewwstate, pickedItems: pickedItems}})\n            eww.current.redraw()\n        } else {\n            console.log('No position !');\n            return;\n        }\n\n\n    }\n    const handleDoubleClick  = (recognizer) => {\n        console.log('double click')\n        northUp()\n    }\n\n    const handleDoubleClick2  = (recognizer) => {\n        console.log('double click')\n        let x = recognizer.clientX\n        let y = recognizer.clientY\n        let pickList = eww.current.pick(eww.current.canvasCoordinates(x, y));\n\n        let position;\n  \n  \n        // Get coordinates of clicked point and list of selected footprints. Do nothing if click done outside the globe.\n        if (pickList.terrainObject()) {\n            position = pickList.terrainObject().position;\n            // eww.current.goTo(new WorldWind.Location(position.latitude, position.longitude));\n\n            let point = \"POINT(\"+position.longitude+' '+position.latitude+\")\"\n            \n            setEwwState((ewwstate) => { return {...ewwstate, aoi: point}}) \n    \n        } else {\n              console.log('No position !');\n              setEwwState((ewwstate) => { return {...ewwstate, aoi: ''}})\n        }\n    }\n\n\n    // didMount effect\n    useEffect(() => {\n        console.log(\"Creating the world...\")\n\n        // to use DEM from Eox ESA Map server\n        var elevationModel = new WorldWind.ElevationModel();\n        elevationModel.removeAllCoverages()\n        elevationModel.addCoverage(new WorldWind.TiledElevationCoverage({\n            coverageSector: WorldWind.Sector.FULL_SPHERE,\n            resolution: 0.008333333333333,\n            retrievalImageFormat: \"image/tiff\",\n            minElevation: -11000,\n            maxElevation: 8850,\n            urlBuilder: new WorldWind.WcsTileUrlBuilder(\"https://dem.esa.maps.eox.at/elevation\", \"copdem\", \"2.0.1\")\n            }));\n        // eww.current = new WorldWind.WorldWindow(id, elevationModel);\n\n\n        eww.current = new WorldWind.WorldWindow(id);\n        eww.current.redrawCallbacks.push(setGlobeStates)\n\n        // Define a min/max altitude limit\n        WorldWind.BasicWorldWindowController.prototype.applyLimits = function () {\n            eww.current.navigator.range = WorldWind.WWMath.clamp(eww.current.navigator.range, 2000, 300000000);\n        }\n\n        // define click/tap recognisers\n\n        let appDoubleClickRecognizer = new WorldWind.ClickRecognizer(eww.current, handleDoubleClick);\n        appDoubleClickRecognizer.numberOfClicks = 2;\n        appDoubleClickRecognizer.maxClickInterval = 200;\n        eww.current.worldWindowController.clickDownRecognizer.recognizeSimultaneouslyWith(appDoubleClickRecognizer);\n        \n        // turning this block on will cause double drag to not be recognized anymore....\n        // let appClickRecognizer = new WorldWind.ClickRecognizer(eww.current, handleClick);\n        // appClickRecognizer.numberOfClicks = 1;\n        // eww.current.worldWindowController.clickDownRecognizer.recognizeSimultaneouslyWith(appClickRecognizer);\n        // appDoubleClickRecognizer.recognizeSimultaneouslyWith(appClickRecognizer);\n        // appClickRecognizer.requireRecognizerToFail(appDoubleClickRecognizer)\n\n\n        let appDoubleTapRecognizer = new WorldWind.TapRecognizer(eww.current, handleDoubleClick);\n        appDoubleTapRecognizer.numberOfTaps = 2;\n        appDoubleTapRecognizer.name = 'double tap';\n        eww.current.worldWindowController.tapDownRecognizer.recognizeSimultaneouslyWith(appDoubleTapRecognizer);\n\n        // // next 2 lines: marche pas...\n        // eww.current.worldWindowController.panRecognizer.recognizeSimultaneouslyWith(appDoubleTapRecognizer);\n        // eww.current.worldWindowController.doublePanRecognizer.recognizeSimultaneouslyWith(appDoubleTapRecognizer);\n \n        // tapRecognizer.recognizeSimultaneouslyWith(doubleTapRecognizer);\n        // doubleTapRecognizer.requireRecognizerToFail(tapRecognizer)\nconsole.log(\"base url:\"+WorldWind.configuration.baseUr)\n        WorldWind.configuration.baseUrl = WorldWind.configuration.baseUrl.slice(0,-3)\n\n        //let starFieldLayer = new WorldWindX.StarFieldLayer();\n        // let starFieldLayer = new WorldWind.StarFieldLayer();\n        let starFieldLayer = new wwwx.StarFieldLayer('data/stars.json');\n        let atmosphereLayer = new WorldWind.AtmosphereLayer('images/BlackMarble_2016_01deg.jpg');\n        // let atmosphereLayer = new WorldWind.AtmosphereLayer('images/BlackMarble_2016_3km.jpg');\n        \n        //atmosphereLayer.minActiveAltitude = 5000000\n\n        let quicklookLayer = new WorldWind.RenderableLayer('Quicklooks')\n    \n        let layers = [\n            // { layer: new WorldWind.WmsLayer(wmsConfigBg_s2, \"\"), enabled: true },\n            // { layer: new WorldWind.WmsLayer(wmsConfigBg_terrain, \"\"), enabled: false },\n            // { layer: new WorldWind.WmsLayer(wmsConfigNames, \"\"), enabled: names },\n            { layer: starFieldLayer, enabled: starfield },\n            { layer: atmosphereLayer, enabled: atmosphere },\n            { layer: quicklookLayer, enabled: true },\n            { layer: modelsLayer, enabled: satellites }\n        ];\n    \n        for (let l = 0; l < bgLayers.length; l++) {\n            let layer = new WorldWind.WmsLayer(bgLayers[l], \"\")\n            layer.enabled = false\n            eww.current.addLayer(layer, \"\")\n        }\n        for (let l = 0; l < ovLayers.length; l++) {\n            let layer = new WorldWind.WmsLayer(ovLayers[l], \"\")\n            layer.enabled = false\n            eww.current.addLayer(layer, \"\")\n        }\n\n        for (let l = 0; l < layers.length; l++) {\n            layers[l].layer.enabled = layers[l].enabled;\n            eww.current.addLayer(layers[l].layer);\n        }\n        console.log(eww.current.layers)\n        //let date = new Date();\n        starFieldLayer.time = new Date();\n        atmosphereLayer.time = new Date();\n        moveTo(clat, clon, alt) \n        // setTimeout(() => {\n        //     eww.current.goToAnimator.travelTime = 1000;\n        //     eww.current.goTo(new WorldWind.Position(clat, clon, alt));\n        //     eww.current.redraw();\n        //     }, 2000)\n    \n        eww.current.redraw();\n        eww.current.deepPicking = true;\n        // eww.current.orderedRenderingFilters.push(declutterByTime)\n    }, []); // effect runs only once\n        \n      // useEffect(() => {\n    //     console.log(\"useEffect aoi: \" + aoi)\n    //     let newewwstate = {...ewwstate, aoi: aoi}\n    //     setEwwState(newewwstate)\n    // }, [aoi]); \n    useEffect(() => {\n        // console.log('background changed effect: '+background)\n\n        toggleBg(background)\n    }, [background]);\n\n    useEffect(() => {\n        // console.log('overlay changed effect: '+overlay)\n\n        toggleOv(overlay)\n    }, [overlay]);\n\n    useEffect(() => {\n        // console.log('names changed effect: '+names)\n        toggleNames(names)\n    }, [names]);\n\n    useEffect(() => {\n        // console.log('atmosphere changed effect: '+satellites)\n\n        toggleAtmosphere(atmosphere)\n    }, [atmosphere]);\n\n    useEffect(() => {\n        // console.log('starfield changed effect: '+starfield)\n        toggleStarfield(starfield)\n    }, [starfield]);\n\n    useEffect(() => {\n        // console.log('sat changed effect: '+satellites)\n\n        toggleModel(satellites)\n    }, [satellites]);\n\n    useEffect(() => {\n        toggleDem(dem)\n    }, [dem]); \n\n  return { ewwstate, moveTo, removeGeojson, addGeojson, addWMS, toggleStarfield, toggleAtmosphere, setTime, toggleProjection, toggleNames, toggleModel, toggleBg, toggleOv, toggleDem, northUp };\n}\n","import React, {useEffect, useState, useGlobal } from 'reactn';\nimport './Earth.css'\nimport { useEww } from \"./useEww\"\nimport { useHotkeys } from 'react-hotkeys-hook'\n\n\n\n\n\n\nfunction Earth({ id, alt }) {\n\n    const [mapSettings, setMapSettings] = useGlobal('mapSettings')\n    const [ position, setPosition] = useGlobal('position')\n    const [ viewDate, setViewDate] = useGlobal('viewDate')\n    const [ satellites, setSatellites ] = useGlobal('satellites')\n\n    const [mapSet, setMapSet] = useState(mapSettings)\n    const [sat, setSat] = useState(satellites)\n\n\n    const {\n        ewwstate,\n        moveTo,\n        addGeojson,\n        removeGeojson,\n        addWMS,\n        toggleProjection,\n        toggleOv,\n        toggleModel,\n        setTime,\n        toggleDem,\n        northUp\n    } = useEww({\n        id: id,\n        clat: position.clat,\n        clon: position.clon,\n        alt: alt,\n        starfield: mapSettings.starfield,\n        atmosphere: mapSettings.atmosphere,\n        background: mapSettings.background,\n        overlay: mapSettings.overlay,\n        satellites: satellites,\n        names: mapSettings.names,\n        dem: mapSettings.dem\n    })\n\n    useHotkeys(\"p\",toggleProjection)  \n    useHotkeys(\"c\",removeGeojson)\n    useHotkeys(\"u\",northUp)\n    useHotkeys(\"b\",() => setMapSet((mapSet)=>({...mapSet, background:mapSet.background+1})))  \n    useHotkeys(\"m\",() => setSat((sat)=>(!sat)))  \n    // useHotkeys(\"m\",() => setSatellites((satellites)=>(!satellites)))  \n    useHotkeys(\"d\",() => setMapSet((mapSet)=>({...mapSet, dem:!mapSet.dem})))  \n    useHotkeys(\"o\",() => setMapSet((mapSet)=>({...mapSet, overlay:mapSet.overlay+1})))  \n    useHotkeys(\"a\",() => setMapSet((mapSet)=>({...mapSet, atmosphere:!mapSet.atmosphere})))  \n    useHotkeys(\"s\",() => setMapSet((mapSet)=>({...mapSet, starfield:!mapSet.starfield})))  \n    useHotkeys(\"n\",() => setMapSet((mapSet)=>({...mapSet, names:!mapSet.names})))  \n\n    // useHotkeys(\"a\",(mapSettings) => setMapSettings({...mapSettings, atmosphere:!mapSettings.atmosphere}))\n\n    // const toggleAtmosphere = () => setMapSettings((mapSettings)=>({...mapSettings, atmosphere:!mapSettings.atmosphere}))\n    // const toggleStarfield = () => setMapSettings((mapSettings)=>({...mapSettings, starfield:!mapSettings.starfield}))\n    // const toggleNames = () => setMapSettings((mapSettings)=>({...mapSettings, names:!mapSettings.names}))\n    // const toggleBg = () => setMapSettings((mapSettings)=>({...mapSettings, background:Math.random()}))\n\n\n\n    useEffect(() => {\n        setTime(viewDate.getTime())\n    },[viewDate])\n\n    useEffect(() => {\n        setMapSettings(mapSet)\n    }, [mapSet]);\n\n    useEffect(() => {\n        // console.log(mapSettings)\n        setMapSet(mapSettings)\n    }, [mapSettings]);\n\n    useEffect(() => {\n        setSatellites(sat)\n    }, [sat]);\n\n    useEffect(() => {\n        setSat(satellites)\n    }, [satellites]);\n    \n\n\n    let globeStyle = {\n        background: 'black',\n        position: \"fixed\",\n        left: 0,\n        width: '100%',\n        height: '100%'\n    };\n        \n    return (\n            <canvas id={id} style={globeStyle} />\n    );\n}\n\nexport default Earth\n","import React from 'react';\nimport dateFormat from \"dateformat\"\nimport './DateLabelCard.css';\n\nfunction DateLabel({date, highlight, animated}) {\n\n    return (\n        <div className='LabelContainer' >\n            <hi className={highlight ==='year'?'Highlighted':''}>{date.getUTCFullYear()}</hi>-\n            <hi className={highlight ==='month'?'Highlighted':''}>{dateFormat(date,'UTC:mmm').toUpperCase()}</hi>-\n            <hi className={highlight ==='day'?'Highlighted':''}>{dateFormat(date,'UTC:dd')}</hi>&nbsp;/&nbsp;\n            <hi className={highlight ==='hour'?'Highlighted':''}>{dateFormat(date,'UTC:HH')}</hi>:\n            <hi className={highlight ==='minute'?'Highlighted':''}>{dateFormat(date,'UTC:MM')}</hi>:\n            <hi className={highlight ==='second'?'Highlighted':''}>{dateFormat(date,'UTC:ss')}</hi>  \n        </div>\n    )\n}\nexport default DateLabel\n","import { useState, useEffect, useRef } from \"react\";\n\n\nexport function useClock({ autoStart, initdate }) {\n    // console.log('useClock renders')\n    //const { autoStart, duration } = settings || {};\n  \n    // let initDate = startdate\n    const [date, setDate] = useState(initdate)\n    // const [playing, setPlaying] = useState(false)\n    // const [stepstate, setStepstate] = useState(1000*60*60)\n    // const [refreshrate, setrefreshrate] = useState(200)\n    const playing = useRef()\n    const step = useRef() \n    const refreshrate = useRef() \n    refreshrate.current = 200\n    // step.current = refreshrate.current\n    \n    const ldate = useRef()\n\n      // Control functions\n    const intervalRef = useRef()\n    const timeoutRef = useRef()\n    \n\n    // function increaseSpeed() {\n    //     setStep ( () => {\n    //         let newstate = (step > 0)? step * 2:step / 2\n    //         if(Math.abs(newstate) < refreshrate) newstate = refreshrate\n    //         return newstate\n    //     })\n    // }\n    // function decreaseSpeed() {\n    //     setStep (() => {\n    //         let newstate = (step > 0)? step / 2:step * 2\n    //         if(Math.abs(newstate) < refreshrate) newstate = refreshrate\n    //         return newstate\n    //     })\n    // }\n    function increaseSpeed() {\n        // stop()\n        step.current = (step.current > 0)? step.current *= 2:step.current /= 2\n        if(Math.abs(step.current) < refreshrate.current) step.current = refreshrate.current\n        console.log('step: '+step.current)\n        // setStepstate((st)=>st*2)\n        // start()\n    }\n    function decreaseSpeed() {\n        step.current = (step.current > 0)? step.current /= 2:step.current *= 2\n        if(Math.abs(step.current) < refreshrate.current) step.current = -1 * refreshrate.current\n        console.log('step: '+step.current)\n        // setStepstate((st)=>st/2)\n    }\n\n    function togglePause() {\n        if (playing.current) {\n            stop()\n        } else {\n            start()\n        }\n    }\n    \n    function start() {\n        console.log('start clock')\n        if(!step.current) step.current = refreshrate.current\n        if (!playing.current) {\n            intervalRef.current = setInterval( ()=>{\n                ldate.current += step.current\n                setDate(new Date(ldate.current))\n            },refreshrate.current)\n        }\n        playing.current = true\n    }\n    \n    function stop() {\n        console.log('stop clock')\n        if(timeoutRef.current) clearTimeout(timeoutRef.current)\n        if (intervalRef.current) clearInterval(intervalRef.current)\n        playing.current = false\n    }\n    \n\n    function reset() {\n        ldate.current = new Date().getTime()\n        setDate(new Date(ldate.current))\n\n    }\n\n     \n    function forceDate(newdate) {\n        console.log('forcedate useclock: '+newdate.toJSON())\n        ldate.current = newdate.getTime()\n    }\n\n    useEffect(() => {\n        console.log('init start useclock '+initdate.toJSON())\n        ldate.current = initdate.getTime()\n    }, [initdate])\n\n\n\n    // didMount effect\n    useEffect(() => {\n        console.log('render useclock')\n        // setDate((new Date()).getTime())\n        ldate.current = new Date().getTime()\n        if (autoStart) {\n            start();\n        }\n        //return reset;\n    }, [autoStart]);\n\n  \n  return { date, playing, togglePause, reset, increaseSpeed, decreaseSpeed, forceDate };\n}\n","import React, {useEffect, useState} from 'react';\nimport { useClock } from \"./useClock\"\nimport { useHotkeys } from 'react-hotkeys-hook'\n\n\nimport './DateController.css';\n\nfunction DateController({startdate, onDateChange}) {\n\n    // useClock must be redone to support real time increments\n    const {\n        date,\n        // playing,\n        togglePause,\n        reset,\n        increaseSpeed,\n        decreaseSpeed,\n        // forceDate\n    } = useClock({\n        autoStart: false,\n        initdate: startdate\n    })\n\n\n\n    useHotkeys(\"t\",togglePause)\n    useHotkeys(\"r\",()=>{reset() })\n    useHotkeys(\".\",increaseSpeed)\n    useHotkeys(\",\",decreaseSpeed)\n\n    \n\n\n    useEffect(() => {\n        // console.log(\"date from useClock: \"+new Date(date).toJSON())\n        onDateChange(date)\n        //forceDate(date)\n        //setAppdate({appdate: new Date(date)})\n    },[date]);\n\n    // useEffect(() => {\n    //     // console.log(\"date from datemanager: \"+new Date(date).toJSON())\n    //     // forceDate(startdate)\n    //     //forceDate(date)\n    //     //setAppdate({appdate: new Date(date)})\n    // },[startdate]);\n\n    const [lastTap, setLasttap] = useState()\n    const handleDoubleTap = () => {\n        const now = Date.now();\n        if (lastTap && (now - lastTap) < 400) {\n          reset();\n        } else {\n            setLasttap(now)\n            togglePause()\n        }\n      }\n\n\n    return (\n        <div className='DateController' onClick={handleDoubleTap}/>\n    )\n}\nexport default DateController\n","import React, {useState, useEffect,useLayoutEffect, useRef} from 'react';\nimport {useSpring, animated} from 'react-spring'\nimport './DateSelector.css';\n\nfunction DateSelectorScale({date, zoomfactor,  step}) {\n\n    const scale = useRef()\n    const [opacity, setOpacity] = useState(1)    \n    const [active, setActive] = useState(false)    \n    const [timescale, setTimescale] = useState('')    \n    // const [zoom, setZoom] = useState(zoomfactor)    \n\n\n    useEffect(() => {  \n        return () => {}          \n    })\n        \n    const scaleText = (_start, _zoom) => {\n        // console.log('_start: '+_start.toJSON()+'  zoom: '+_zoom)\n        if(!scale.current) return\n            \n        const monthcode = ['JAN','FEB','MAR','APR','MAY','JUN','JUL','AUG','SEP','OCT','NOV','DEC']\n        const YEAR_LEVEL = 1000*60*60*24*30*3\n        const MONTH4_LEVEL = 1000*60*60*24*4\n        const MONTH_LEVEL = 1000*60*60*24*2\n        const DAY5_LEVEL = 1000*60*60*8\n        const DAY_LEVEL = 1000*60*70\n        const HOUR3_LEVEL = 1000*60*7\n        const HOUR_LEVEL = 1000*60*3\n        const MIN10_LEVEL = 1000*40\n        const MIN_LEVEL = 1000*2\n\n        function pad(number, length) {  \n            var str = '' + number;\n            while (str.length < length) {\n                str = '0' + str;\n            }           \n            return str;        \n        }\n\n\n        let day, month, hour, year, minute = 0\n        let lastday =0\n        let lastmonth = 0\n        let lastyear = 0\n        let lasthour = 0\n        let lastminute = 0\n        let tics = []    \n\n        for ( let i=0 ; i < scale.current.offsetHeight ; i+=1 ) {\n            let refdate = new Date( (i- scale.current.offsetHeight/2) * _zoom + _start.getTime()  )\n            day = refdate.getUTCDate()\n            month = refdate.getUTCMonth()\n            hour = refdate.getUTCHours()\n            year = refdate.getUTCFullYear()\n            minute = refdate.getUTCMinutes()\n\n            switch (true) {\n                case _zoom < MIN_LEVEL:\n                    if(minute !== lastminute) {\n                        if (minute !== 0 || hour !== 0) {\n                            tics.push({class:'HourTic', pos: i, label: pad(hour,2)+':'+pad(minute,2)})\n                        } else {\n                            if (minute === 0 && hour === 0) {\n                                tics.push({class:'DayTic_h', pos: i, label: pad(day,2)})\n                                tics.push({class:'MonthTic_h2', pos: i, label: monthcode[month]})\n                                //tics.push({class:'YearTic_h', pos: i, label: year})\n                            }     \n                        }\n                    }\n                break\n\n                case _zoom < MIN10_LEVEL:\n                    if(minute !== lastminute) {\n                        if( (minute !== 0 || hour !=0) && minute % 10 === 0) {\n                            tics.push({class:'HourTic', pos: i, label: pad(hour,2)+':'+pad(minute,2)})\n                        } else {\n                            if (minute === 0 && hour === 0) {\n                                tics.push({class:'DayTic_h', pos: i, label: pad(day,2)})\n                                tics.push({class:'MonthTic_h2', pos: i, label: monthcode[month]})\n                                //tics.push({class:'YearTic_h', pos: i, label: year})\n                            }     \n                        }\n                    }\n                break\n\n                case _zoom < HOUR_LEVEL:\n                    if(hour !== lasthour) {\n                        if (hour !== 0) {\n                            tics.push({class:'HourTic', pos: i, label: pad(hour,2)+':00'})\n                        \n                        } else  {\n                            tics.push({class:'DayTic_h', pos: i, label: pad(day,2)})\n                            tics.push({class:'MonthTic_h2', pos: i, label: monthcode[month]})\n                            // tics.push({class:'YearTic_h', pos: i, label: year})            \n                        }\n                    }\n                break\n\n                case _zoom < HOUR3_LEVEL:\n                    if(hour !== lasthour) {\n                        if (hour !== 0 &&  (hour % 3 === 0 )) {\n                            tics.push({class:'HourTic', pos: i, label: pad(hour,2)+':00'})\n                        } else  {\n                            if (hour === 0) {\n                                tics.push({class:'DayTic_h', pos: i, label: pad(day,2)})\n                                tics.push({class:'MonthTic_h2', pos: i, label: monthcode[month]})\n                                // tics.push({class:'YearTic_h', pos: i, label: year})            \n                            }\n                        }\n                    }    \n                break\n\n                case _zoom < DAY_LEVEL:\n                    if(day !== lastday) {\n                        if ( day !== 1 ) {\n                            tics.push({class:'DayTic', pos: i, label: day})\n                        } else {\n                            tics.push({class:'MonthTic_h', pos: i, label: monthcode[month]})\n                            if (month === 0) tics.push({class:'YearTic_h2', pos: i, label: year})\n                            // tics.push({class:'YearTic_h2', pos: i, label: year})\n                         }\n                        \n                    }    \n                break\n\n                case _zoom < DAY5_LEVEL:\n                    if(day !== lastday) {\n                        if ( day !== 1 && day !== 30 && day % 5 === 0 ) {\n                            tics.push({class:'DayTic', pos: i, label: day})\n                        } else {\n                            if (day == 1) {\n                                // tics.push({class:'DayTic', pos: i, label: day})\n                                tics.push({class:'MonthTic_h', pos: i, label: monthcode[month]})\n                                if (month === 0) tics.push({class:'YearTic_h2', pos: i, label: year})\n                                // tics.push({class:'YearTic_h2', pos: i, label: year})\n                            }\n                         }\n                        \n                    }    \n\n                break\n\n                case _zoom < MONTH_LEVEL:\n                    if( month !== lastmonth ) {\n                        if (month !== 0) {\n                            tics.push({class:'MonthTic', pos: i, label: monthcode[month]})\n                        } else {\n                            tics.push({class:'MonthTic_h', pos: i, label: monthcode[month]})\n                            tics.push({class:'YearTic_h2', pos: i, label: year})\n                        }\n                    }\n    \n                break\n\n                case _zoom < MONTH4_LEVEL:\n                    if( month !== lastmonth ) {\n                        if (month !== 0 && month !== 11 && (month) % 3 === 0 ) {\n                            tics.push({class:'MonthTic', pos: i, label: monthcode[month]})\n                        } else {\n                            if (month == 0) {\n                                tics.push({class:'MonthTic_h', pos: i, label: monthcode[month]})\n                                tics.push({class:'YearTic_h2', pos: i, label: year})\n                            }\n                        }\n                    }\n    \n                break\n\n                case _zoom < YEAR_LEVEL:\n                    if(year !== lastyear ) {\n                        if (month !== 0) {\n                            tics.push({class:'MonthTic', pos: i, label: monthcode[month]})\n                        } else {\n                            // tics.push({class:'MonthTic', pos: i, label: month})\n                            tics.push({class:'YearTic', pos: i, label: year})\n                        }\n                    }\n    \n                break\n\n                default:\n                break\n            }\n            lastday = day\n            lastyear = year\n            lastmonth = month\n            lasthour = hour\n            lastminute = minute\n        }\n      \n        return tics.map(item => ( <animated.div className={item.class} key={item.class+item.pos} style={{top:item.pos,opacity:opacity}}>{item.label}</animated.div>))\n    }\n\n\n    // useLayoutEffect(() => {\n    //     setTimescale(scaleText(date,zoomfactor))\n    // },[date,zoomfactor])\n\n\n    useLayoutEffect(() => {\n        // console.log('zoomfactor / date: '+zoomfactor + '/ ' + date)\n        setTimescale(scaleText(date,zoomfactor))\n    },[ zoomfactor,date])\n\n    // const [{ opaciter }, setOpaciter] = useSpring( () => ({ opaciter: 0}) )\n    useEffect(() => {\n\n        console.log('step changed to: '+step)\n        // //if (Math.abs(zoomfactor-1000*60*60*24)< 1000*60*60*24) zoom = 1000*60*60*24\n        // setOpaciter({ \n        //     to: {\n        //         opaciter: 1\n        //     },\n        //     config: {  duration: 1000, resolution: 0.01,decay: true},\n        //     immediate: false,\n        //     onFrame: ()=>{\n        //         console.log('opacity:'+opaciter.value)\n        //         // setTimescale(scaleText(new Date(dater.value),zoomer.value))\n        //         setOpacity(opaciter.value)\n        //     }\n        // })\n\n    },[step])\n\n\n\n    return (\n        <animated.div ref={scale} className='DateSelectorScale' >\n            {timescale}\n        </animated.div>\n    )\n}\nexport default DateSelectorScale\n","import React, {useState, useEffect, useRef} from 'react'\nimport {useSpring, animated} from 'react-spring'\nimport { useGesture } from 'react-use-gesture'\nimport { scale } from 'vec-la'\nimport DateSelectorScale from './DateSelectorScale'\n\nimport './DateSelector.css';\n// import { start } from 'repl';\n\nfunction DateSelector({startdate, onDateChange, onFinalDateChange, onStepChange}) {\n\n    const MAXZOOM = 1000*60*60*24*15\n    const MINZOOM = 1000\n    const DEFZOOM = 1000*60*60\n    const ZOOMDIR = -1\n    \n    const selector = useRef()\n    const lastZoom = useRef()\n    const lastPos = useRef()\n    if(!lastZoom.current) lastZoom.current = DEFZOOM\n    if(!lastPos.current) lastPos.current = 0\n\n    \n    const [scaledate, setScaledate ] = useState(startdate)\n    // const debouncedScaledate = useDebounce(scaledate, 10);\n\n    const [lastStartdate, setlLastStartdate ] = useState(startdate)\n    \n    const [active, setActive ] = useState(false)\n    const [step, setStep ] = useState(60000)\n    const [stepLabel, setStepLabel ] = useState('hour')\n\n    // zoomfactor: how long is a pixel in ms\n    const [zoomfactor, setZoomfactor ] = useState(DEFZOOM)\n    if (!lastZoom.current) lastZoom.current = DEFZOOM\n\n    // to detect double taps\n    const lastTap = useRef()\n    const doubleTap = useRef()\n\n\n    const handleDoubleTap = () => {\n        const now = Date.now();\n        if (lastTap.current && (now - lastTap.current) < 300  && !active) {\n            doubleTap.current = true\n        } else {\n            lastTap.current = now\n            doubleTap.current = false\n        }\n    }\n\n\n    const [{ posxy_drag}, setyOnDrag] = useSpring(() => ({ posxy_drag: [0,0]  }))\n    const [{ xy2 }, sety2] = useSpring(() => ({ xy2: [0,0] }))\n    const [{ posy_wheel }, setyOnWheel] = useSpring(() => ({posy_wheel: 0 }))\n    // const [{ zoom }, setz] = useSpring(() => ({ zoom: DEFZOOM }))\n\n\n    \n    const bind = useGesture({\n\n        onDragEnd: () => {\n                lastZoom.current = zoomfactor\n        },\n\n        onWheel: ( {delta, first, down, direction, velocity, xy, movement, memo = posy_wheel.getValue() } ) => {\n            // console.log(down)\n            // console.log(first)\n            setyOnWheel({                 \n                posy_wheel: movement[1] + lastPos.current, \n                immediate: false, \n                config: { },\n                onFrame: ()=>{\n                    // console.log('y / posy / movement / memo:  '+xy[1]+'/ '+posy_wheel.getValue()+'/ '+movement[1]+'/ '+lastPos.current)\n                    if (!first) {\n                        // let newdate = new Date(lastStartdate.getTime() + Math.ceil(posy_wheel.getValue() * zoomfactor  / step) * step)\n                        let newdate = new Date(lastStartdate.getTime() + Math.ceil(movement[1] * zoomfactor  / step) * step) \n                        setScaledate(newdate)\n                        onDateChange(newdate)\n                        }\n                        lastPos.current = posy_wheel.getValue()\n\n                    // setlLastStartdate(newdate)\n                },\n                onRest: ()=>{\n                    if (!down) {\n                        setActive(false)\n                        let newdate = new Date(lastStartdate.getTime() + Math.ceil(posy_wheel.getValue() * zoomfactor  / step) * step) \n                        onFinalDateChange(newdate)\n                        setlLastStartdate(newdate)\n                        lastPos.current=0\n                    }\n                }\n            })\n        return memo\n        },\n\n        onDrag: ({  event, active, first, down, touches, delta, velocity, direction, shiftKey, xy, movement, temp = {\n            lastzoom: zoomfactor,\n            lastdelta: [0,0],\n            currentzoom: zoomfactor\n            }\n        }) => {\n            //event.preventDefault()\n            let zoom\n            if (first) {\n                setActive(true)\n                handleDoubleTap()\n                setlLastStartdate(scaledate)\n                lastPos.current = 0\n                \n            }\n\n            if (doubleTap.current || shiftKey) {\n                zoom = temp.currentzoom + temp.currentzoom / 50 *  delta[1] * ZOOMDIR\n                if (zoom < MINZOOM) zoom = MINZOOM\n                if (zoom > MAXZOOM) zoom = MAXZOOM\n                setZoomfactor(zoom)\n                // temp.xy = [0,0]\n                temp.currentzoom = zoom\n                temp.lastdelta = delta\n                if(!down) setActive(false)\n                return temp\n            }\n            velocity = (Math.abs(velocity)<.2)?0:velocity  \n\n            setyOnDrag({                 \n                posxy_drag:  movement,\n                immediate: (active), \n                config: { velocity: scale(direction, velocity), decay: true},\n                onFrame: ()=>{\n                    // console.log('y / movement / delta:  '+xy[1]+'/ '+movement[1]+'/ '+delta[1])\n                    if (!first) {\n                        let newdate = new Date(lastStartdate.getTime() - Math.ceil(posxy_drag.getValue()[1] * zoomfactor  / step) * step) \n                        setScaledate(newdate)\n                        onDateChange(newdate)\n                        }\n\n                    // setlLastStartdate(newdate)\n                },\n                onRest: ()=>{\n                    if (!down) {\n                        setActive(false)\n                        let newdate = new Date(lastStartdate.getTime() - Math.ceil(posxy_drag.getValue()[1] * zoomfactor  / step) * step) \n                        onFinalDateChange(newdate)\n                        setlLastStartdate(newdate)\n                    }\n                }\n            })\n            return temp\n        }\n    },\n    {reset: true,drag: {useTouch: true} }\n    )\n\n\n    const moveToDate = (startdate) => {\n        if (!active) {\n            let deltaoffset = [0,(lastStartdate.getTime() - startdate.getTime())  / zoomfactor]\n            \n            sety2({ \n                xy2: deltaoffset,\n                immediate: false, \n                config: {reset: true, config: {duration: 200} },\n                onFrame: ()=>{\n                    let newdate = new Date(lastStartdate.getTime() - xy2.getValue()[1] * zoomfactor)\n                    setScaledate(newdate)\n                    onDateChange(newdate)\n                },\n                onRest: ()=>{\n                    // setActive(false)\n                    let newdate = new Date(lastStartdate.getTime() - xy2.getValue()[1] * zoomfactor)\n                    xy2.setValue([0,0])\n                    setScaledate(newdate)\n                    setlLastStartdate(newdate)\n                }\n            })\n        }\n\n    }\n\n    useEffect(() => {\n        // console.log('startdate changed')\n        if(!active) {\n            moveToDate(startdate)\n        }\n    },[startdate])\n\n    // useEffect(() => {\n    //     console.log('laststartdate changed: '+lastStartdate.toJSON())\n    // },[lastStartdate])\n\n    useEffect(() => {\n        console.log('Selector active: '+active)\n    },[active])\n\n\n    useEffect(() => {\n        onStepChange(stepLabel)\n    },[stepLabel])\n\n    useEffect(() => {\n        switch (true) {\n            case zoomfactor > 120426316:\n                setStep(1000*60*60*24*30)\n                setStepLabel('month')\n                break\n            case zoomfactor > 14544702:\n                setStep(1000*60*60*24)\n                setStepLabel('day')\n                break\n            case zoomfactor > 735259:\n                setStep(1000*60*60)\n                setStepLabel('hour')\n                break\n            case zoomfactor > 32274:\n                setStep(1000*60)\n                setStepLabel('minute')\n                break\n            default:\n                setStep(1000)\n                setStepLabel('second')\n        }\n    },[zoomfactor])\n\n    \n\n\n    return (\n        <animated.div className='DateSelector' ref={selector} >\n            <div className=\"Mask\"  >\n                <div {...bind()} className=\"touchMask\"> </div>\n\n                <DateSelectorScale className='scale' date={scaledate} zoomfactor={zoomfactor} step={step}></DateSelectorScale>\n                \n                <div className=\"TriangleContainer\" >\n                    <svg height=\"40\" width=\"20\" className=\"Triangle\">\n                        <polygon points=\"20,5 20,35 12,20\" />   \n                    </svg> \n                </div>        \n            </div>\n\n        </animated.div>\n                                  )\n}\nexport default DateSelector\n","import React, {useState, useEffect} from 'react';\nimport DateLabel from './components/datelabel2'\nimport DateController from './components/datecontroller'\nimport DateSelector from './components/dateselector'\n\n\nfunction DateManager({ onDateChange, onFinalDateChange, animated}) {\n\n    let startdate = new Date()\n    const [selectorStartdate, setselectorStartdate] = useState(startdate)\n    const [controllerStartdate, setcontrollerStartdate] = useState(startdate)\n    const [labeldate, setLabelDate] = useState(startdate)\n    const [dateLabelHighlight,setDateLabelHighlight] = useState(1)\n\n    const handleSelectorDateChange = (date) => {\n        // console.log('handleSelectorDateChange:' + date.toJSON())\n        setLabelDate(date)\n        onDateChange(date)\n        // setscontrollerStartdate(date)\n    }\n\n    const handleSelectorFinalDateChange = (date) => {\n        // console.log('handleSelectorFinalDateChange:' + date.toJSON())\n        setcontrollerStartdate(date)\n        onFinalDateChange(date)\n    }\n    \n    const handleControllerDateChange = (date) => {\n        // console.log('handleControllerDateChange' + date.toJSON())\n        setselectorStartdate(date)\n        // onFinalDateChange(date)\n    }\n\n    const handleSelectorStepChange = (step) => {\n        console.log('handleSelectorStepChange' + step)\n        setDateLabelHighlight(step)\n    }\n\n    // useEffect(() => {\n    //     // console.log('startdate in date manager: '+startdate.toJSON())\n    //     setselectorStartdate(startdate)\n    // },[startdate])\n\n\n\n    return (\n        <div >\n          <DateController startdate={controllerStartdate} onDateChange={handleControllerDateChange}/>\n          <DateLabel date={labeldate} animated={animated} highlight={dateLabelHighlight}/>\n          <DateSelector startdate={selectorStartdate} \n                onDateChange={handleSelectorDateChange} \n                onFinalDateChange={handleSelectorFinalDateChange} \n                onStepChange={handleSelectorStepChange}/>\n        </div>\n    ) \n}\nexport default DateManager","import React, {useState} from \"react\";\nimport {useSpring, animated} from 'react-spring'\nimport { useGesture } from 'react-use-gesture'\nimport \"./controlpanel.css\"\n// npm install --save-dev @iconify/react @iconify-icons/ic\nimport { Icon, InlineIcon } from '@iconify/react';\nimport baselineExplore from '@iconify-icons/ic/baseline-explore';\n\n\n\n// import MissionSelector from \"./missionselector\";\n\n\n\n\n\nfunction ControlPanel(props) {\n\n    const [open, setOpen] = useState(false)\n\n    const [{ mr },set] = useSpring(() =>({ mr:  -300 }))\n    const bind = useGesture( {\n        onDrag: ({ down, delta, vxvy }) => {\n            if(vxvy[0]>1 || (!down && delta[0] > 100)) {\n                set({\n                    mr: -300\n                })\n                setOpen( true)\n            } else {\n                set({\n                    mr: down?-Math.max(delta[0],0):0\n                })\n                setOpen( false)\n            }\n        },\n    })\n\n\n    return   (\n\n        <animated.div {...bind()} style={{ right: mr, top:0 }} className='ControlPanel'>\n            <div className='PanelControl shadow' onClick={()=>!open?set({mr:-300}):set({mr:0})} >\n                {/* <img id='logo'className='Logo' src='./images/EOi_logo.png' alt='' onClick={()=>!open?set({mr:-300}):set({mr:0})} /> */}\n                {/* <div className='PanelControl' alt='' onClick={()=>!open?set({mr:-300}):set({mr:0})}></div> */}\n                <Icon icon={baselineExplore} width='100%'/>\n            </div>\n            \n            {props.children}\n        \n        </animated.div>\n\n\n    )\n    \n}\n\nexport default ControlPanel\n","import React, { useState, useEffect } from \"react\";\n\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport './MissionSelector.css'\n\n\n// should use a prop\n\nfunction MissionSelector({initialmission, onMissionChange}) {\n\n\n    const [mission, setMission] = useState(initialmission)\n    \n    useHotkeys(\"1\",()=>{setMission('S1')}) \n    useHotkeys(\"2\",()=>{setMission('S2')}) \n    useHotkeys(\"3\",()=>{setMission('S3')}) \n    useHotkeys(\"5\",()=>{setMission('S5P')}) \n    useHotkeys(\"6\",()=>{setMission('ENVISAT')})\n\n    useEffect(() => {\n        console.log('Mission changed to: '+ mission)\n        onMissionChange(mission)\n    }, [mission]);\n    \n    \n    //console.log('mission rendering')\n    return (\n        <div className='MissionSelector'>\n            <div className={(mission == 'S1')?'CircleButtonSelected':'CircleButton'}><img className='MissionIcon' src='./images/s1_black.png' alt='' onClick={() => setMission('S1')} /></div>\n            <div className={(mission == 'S2')?'CircleButtonSelected':'CircleButton'}><img className='MissionIcon' src='./images/s2_black.png' alt='' onClick={() => setMission('S2')} /></div>\n            <div className={(mission == 'S3')?'CircleButtonSelected':'CircleButton'}><img className='MissionIcon' src='./images/s3_black.png' alt='' onClick={() => setMission('S3')} /></div>\n            <div className={(mission == 'S5P')?'CircleButtonSelected':'CircleButton'}><img className='MissionIcon' src='./images/s5p_black.png' alt='' onClick={() => setMission('S5P')} /></div>\n           \n            \n        </div>\n    )\n}\n\nexport default MissionSelector;\n","import React, {  useGlobal } from 'reactn';\n\nimport MissionSelector from \"../components/missionselector\"\n\nfunction C_MissionSelector() {\n\n    const [mission, setMission] = useGlobal('mission')\n\n    return (\n        <MissionSelector initialmission={mission} onMissionChange={setMission}></MissionSelector> \n     )\n}\n\nexport default C_MissionSelector;\n","import React, { useState, useEffect } from \"react\";\n\nimport './MapSelector.css'\n\n\n// should use a prop\n\nfunction MapSelector({mapSettings, onMapSettingsChange}) {\n\n\n    const [mapSet, setMapSet] = useState(mapSettings)\n\n    const toggleAtmosphere = () => setMapSet((mapSet)=>({...mapSet, atmosphere:!mapSet.atmosphere}))\n    const toggleStarfield = () => setMapSet((mapSet)=>({...mapSet, starfield:!mapSet.starfield}))\n    const toggleNames = () => setMapSet((mapSet)=>({...mapSet, names:!mapSet.names}))\n    const toggleBg = () => setMapSet((mapSet)=>({...mapSet, background:mapSet.background+1}))\n\n\n    useEffect(() => {\n        onMapSettingsChange(mapSet)\n    }, [mapSet]);\n\n    useEffect(() => {\n        setMapSet(mapSettings)\n    }, [mapSettings]);\n\n\n    \n    //console.log('mission rendering')\n    return (\n        <div className='MapSelector'>\n            <div className={(mapSettings.atmosphere)?'CircleButtonSelected':'CircleButton'}><img className='MapIcon' draggable=\"false\" src='./images/atmosphere.png' alt='' onClick={toggleAtmosphere} /></div>\n            <div className={(mapSettings.starfield)?'CircleButtonSelected':'CircleButton'}><img className='MapIcon' draggable=\"false\" src='./images/starfield.png' alt='' onClick={toggleStarfield} /></div>\n            <div className={(mapSettings.names)?'CircleButtonSelected':'CircleButton'}><img className='MapIcon' draggable=\"false\" src='./images/names.png' alt='' onClick={toggleNames} /></div>\n            <div className='CircleButton'><img className='MapIcon' draggable=\"false\" src='./images/names.png' alt='' onClick={toggleBg} /></div>\n           \n        </div>\n    )\n}\n\nexport default MapSelector;\n","import React, {  useGlobal } from 'reactn';\n\nimport MapSelector from \"../components/mapselector\"\n\nfunction C_MapSelector() {\n\n    // const [starfield, setStarfield] = useGlobal('starfield')\n    // const [atmosphere, setAtmosphere] = useGlobal('atmosphere')\n    // const [names, setNames] = useGlobal('names')\n\n    const [mapSettings, setMapSettings] = useGlobal('mapSettings')\n\n    return (\n        <MapSelector mapSettings={mapSettings} onMapSettingsChange={setMapSettings}></MapSelector> \n     )\n}\n\nexport default C_MapSelector;\n","\nimport React, { useEffect } from \"react\";\nimport { useGlobal } from 'reactn';\n\nimport { HuePicker, AlphaPicker } from 'react-color';\nimport './ColorPicker.css'\n\n\nfunction HuePickerContainer() {\n\n\n    const [ appcolor, setAppcolor ] = useGlobal('appColor');\n\n    // useEffect(() => {\n    //     console.log('Mission changed to: '+ mission)\n    // }, [mission]);\n    \n    const handleChangeComplete = (color) => {\n        document.documentElement.style.setProperty('--color', color.hex);\n        //setAppcolor(color.hex );\n      };\n    \n    //console.log('mission rendering')\n    return (\n        <div className='ColorSelector'>\n            <HuePicker color={appcolor} onChangeComplete={handleChangeComplete }/>\n        </div>\n    )\n    // <AlphaPicker />  \n}\n\nexport default HuePickerContainer;\n\n\n\n","import React, {  useGlobal } from 'reactn';\n\nimport DateManager from \"../components/datemanager\"\n\nfunction C_DateManager() {\n\n    const [viewDate, setViewDate] = useGlobal('viewDate')\n\n    return (\n        <DateManager onDateChange={setViewDate} onFinalDateChange={setViewDate} /> \n     )\n}\n\nexport default C_DateManager;\n","import React, {useState, useEffect, useCallback} from 'react'\nimport { useGlobal } from 'reactn'\n\nimport './App.css'\nimport Earth from '../earth'\nimport DateManager from '../datemanager'\nimport { useHotkeys } from 'react-hotkeys-hook'\nimport ControlPanel from \"../controlpanel\"\nimport C_MissionSelector from \"../../containers/MissionSelectorContainer\"\nimport C_MapSelector from \"../../containers/MapSelectorContainer\"\nimport HuePickerContainer from \"../../containers/HuePickerContainer\"\n\n// import useToggle from 'react-use/lib/useToggle'\nimport { FullScreen, useFullScreenHandle } from \"react-full-screen\"\nimport C_DateManager from '../../containers/DateManagerContainer'\n// import { useFullscreen } from '@straw-hat/react-fullscreen'\n\n\nfunction App() {\n    \n    const handle = useFullScreenHandle();\n\n    const [ mission,  ] = useGlobal('mission');\n    const [ mapSettings, ] = useGlobal('mapSettings')\n    const [ appColor, ] = useGlobal('appColor')\n\n    // manage full screen\n    // const fullScreen = useRef()\n    // fullScreen.current = false\n    const toggleFullScreen = () => {\n        if(!fullScreen.current) {\n            fullScreen.current = true\n            handle.enter()\n            console.log(\"will enter: \")\n        } else {\n            fullScreen.current = false\n            // handle.exit()\n            console.log(\"will exit: \")\n\n        }\n    }\n    const [fullScreen, setfullScreen] = useState(false);\n    // useHotkeys(\"f\",() => setfullScreen(isFull => !isFull)) \n    useHotkeys(\"f\",handle.enter) \n\n    useEffect(() => {\n        console.log('fullScreen changed to: '+fullScreen)\n        // if(fullScreen == false) handle.enter()\n    },[fullScreen])\n\n\n    useEffect(() => {\n        console.log('time to init earth')\n        console.log(mapSettings)\n        // if(fullScreen == false) handle.enter()\n    },[])\n\n    // useEffect(() => {\n    //     console.log('mapSettings effect')\n    //     console.log(mapSettings)\n    //     // if(fullScreen == false) handle.enter()\n    // },[mapSettings])\n\n\n    return (\n        <div className=\"App\" >\n             <FullScreen handle={handle}>\n                <div className=\"Earth\">\n                    <Earth id=\"globe\" \n                        // viewdate={viewdate} \n                    />\n                </div>\n                {/* <DateManager startdate={startdate} onDateChange={changeDate} onFinalDateChange={finalChangeDate} animated={searching}/> */}\n                <C_DateManager></C_DateManager>\n                <ControlPanel active=\"true\">\n                <div class='logo'><img  src='./images/ESA_logo_2020_White.png' height=\"40\" ></img></div>\n                    <div ><img  src='./images/EOi_logo.png' height=\"150\" ></img></div>\n                \n                    <C_MissionSelector></C_MissionSelector>\n                    <C_MapSelector ></C_MapSelector>\n                    <HuePickerContainer></HuePickerContainer>\n                </ControlPanel>\n                <div className='MissionLabel'>{mission}</div>\n            </FullScreen>\n        </div>\n    )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { setGlobal } from 'reactn';\n\n\nexport  function initGlobalStates() {\n    console.log(\"init global: \"+(new Date()).getTime())\n\n    // Set current time as global state\n    // setGlobal({appdate: ((new Date()).getTime())})\n    // setGlobal({searchepoch: ((new Date()).getTime())})\n    // setGlobal({mission: 'S1'})\n    // setGlobal({searching: false})\n    // setGlobal({apppolygon: ''})\n    // setGlobal({replace: true})\n    // setGlobal({startend: {start:0, end:0}})\n    // setGlobal({setApppickeditems: []})\n\n\n    setGlobal({\n        mission: 'S1',\n        satellites: false,\n        appColor: '#222222',\n        position: {\n            clon:'0.5',\n            clat:'40' \n        },\n        viewDate: new Date(),\n        mapSettings: {\n            atmosphere: true,\n            starfield: true,\n            names: false,\n            background: 1,\n            overlay:2,\n            dem: true\n        }\n    })\n    \n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app';\nimport reportWebVitals from './reportWebVitals';\nimport {initGlobalStates} from \"./initGlobalStates\"\n\ninitGlobalStates()\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}